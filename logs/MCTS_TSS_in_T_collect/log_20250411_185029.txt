2025-04-11 18:50:51,454 [INFO] Starting pre-MCTS candidate collection.
2025-04-11 18:50:51,464 [INFO] Final candidates: []
2025-04-11 18:50:51,465 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:50:51,475 [INFO] Final candidates: []
2025-04-11 18:50:51,475 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:50:51,475 [INFO] No candidate found in Phase 1 or 2; using full legal moves for MCTS.
2025-04-11 18:50:51,475 [INFO] MCTS: Starting search for 100 iterations.
2025-04-11 18:50:51,475 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(9)), (np.int64(10), np.int64(9)))
2025-04-11 18:50:51,484 [INFO] Final candidates: []
2025-04-11 18:50:51,484 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:50:51,494 [INFO] Final candidates: []
2025-04-11 18:50:51,494 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:50:51,494 [DEBUG] MCTS iteration 0: reached a node with 0 visits.
2025-04-11 18:50:51,494 [INFO] Default policy: Starting random playout.
2025-04-11 18:50:51,626 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:50:51,626 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(8)), (np.int64(8), np.int64(10)))
2025-04-11 18:50:51,634 [INFO] Final candidates: []
2025-04-11 18:50:51,634 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:50:51,642 [INFO] Final candidates: []
2025-04-11 18:50:51,642 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:50:51,643 [INFO] Default policy: Starting random playout.
2025-04-11 18:50:51,833 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:50:51,833 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(10)), (np.int64(10), np.int64(9)))
2025-04-11 18:50:51,841 [INFO] Final candidates: []
2025-04-11 18:50:51,842 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:50:51,850 [INFO] Final candidates: []
2025-04-11 18:50:51,850 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:50:51,850 [INFO] Default policy: Starting random playout.
2025-04-11 18:50:52,109 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:50:52,109 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(8)), (np.int64(7), np.int64(9)))
2025-04-11 18:50:52,117 [INFO] Final candidates: []
2025-04-11 18:50:52,117 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:50:52,126 [INFO] Final candidates: []
2025-04-11 18:50:52,126 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:50:52,126 [INFO] Default policy: Starting random playout.
2025-04-11 18:50:52,273 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:50:52,274 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(10)), (np.int64(8), np.int64(9)))
2025-04-11 18:50:52,282 [INFO] Final candidates: []
2025-04-11 18:50:52,282 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:50:52,289 [INFO] Final candidates: []
2025-04-11 18:50:52,289 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:50:52,290 [INFO] Default policy: Starting random playout.
2025-04-11 18:50:52,572 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:50:52,572 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(10)), (np.int64(8), np.int64(8)))
2025-04-11 18:50:52,580 [INFO] Final candidates: []
2025-04-11 18:50:52,581 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:50:52,589 [INFO] Final candidates: []
2025-04-11 18:50:52,589 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:50:52,589 [INFO] Default policy: Starting random playout.
2025-04-11 18:50:52,620 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:50:52,620 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(9)), (np.int64(9), np.int64(11)))
2025-04-11 18:50:52,629 [INFO] Final candidates: []
2025-04-11 18:50:52,629 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:50:52,637 [INFO] Final candidates: []
2025-04-11 18:50:52,637 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:50:52,637 [INFO] Default policy: Starting random playout.
2025-04-11 18:50:52,840 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:50:52,840 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(10)), (np.int64(11), np.int64(9)))
2025-04-11 18:50:52,848 [INFO] Final candidates: []
2025-04-11 18:50:52,848 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:50:52,856 [INFO] Final candidates: []
2025-04-11 18:50:52,856 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:50:52,856 [INFO] Default policy: Starting random playout.
2025-04-11 18:50:52,938 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:50:52,938 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(8)), (np.int64(11), np.int64(9)))
2025-04-11 18:50:52,946 [INFO] Final candidates: []
2025-04-11 18:50:52,946 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:50:52,954 [INFO] Final candidates: []
2025-04-11 18:50:52,954 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:50:52,954 [INFO] Default policy: Starting random playout.
2025-04-11 18:50:53,205 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:50:53,205 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(9)), (np.int64(9), np.int64(7)))
2025-04-11 18:50:53,213 [INFO] Final candidates: []
2025-04-11 18:50:53,213 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:50:53,221 [INFO] Final candidates: []
2025-04-11 18:50:53,221 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:50:53,221 [INFO] Default policy: Starting random playout.
2025-04-11 18:50:53,376 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:50:53,376 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(10)), (np.int64(9), np.int64(11)))
2025-04-11 18:50:53,386 [INFO] Final candidates: []
2025-04-11 18:50:53,386 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:50:53,394 [INFO] Final candidates: []
2025-04-11 18:50:53,394 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:50:53,395 [INFO] Default policy: Starting random playout.
2025-04-11 18:50:53,527 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:50:53,527 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(9)), (np.int64(8), np.int64(9)))
2025-04-11 18:50:53,542 [INFO] Final candidates: []
2025-04-11 18:50:53,542 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:50:53,552 [INFO] Final candidates: []
2025-04-11 18:50:53,552 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:50:53,553 [INFO] Default policy: Starting random playout.
2025-04-11 18:50:53,688 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:50:53,688 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(10)), (np.int64(9), np.int64(8)))
2025-04-11 18:50:53,700 [INFO] Final candidates: []
2025-04-11 18:50:53,700 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:50:53,708 [INFO] Final candidates: []
2025-04-11 18:50:53,708 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:50:53,709 [INFO] Default policy: Starting random playout.
2025-04-11 18:50:53,860 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:50:53,860 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(10)), (np.int64(9), np.int64(11)))
2025-04-11 18:50:53,869 [INFO] Final candidates: []
2025-04-11 18:50:53,869 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:50:53,885 [INFO] Final candidates: []
2025-04-11 18:50:53,885 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:50:53,885 [INFO] Default policy: Starting random playout.
2025-04-11 18:50:54,023 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:50:54,023 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(8)), (np.int64(10), np.int64(9)))
2025-04-11 18:50:54,033 [INFO] Final candidates: []
2025-04-11 18:50:54,033 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:50:54,041 [INFO] Final candidates: []
2025-04-11 18:50:54,041 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:50:54,041 [INFO] Default policy: Starting random playout.
2025-04-11 18:50:54,089 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:50:54,089 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(8)), (np.int64(10), np.int64(9)))
2025-04-11 18:50:54,097 [INFO] Final candidates: []
2025-04-11 18:50:54,097 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:50:54,106 [INFO] Final candidates: []
2025-04-11 18:50:54,106 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:50:54,106 [INFO] Default policy: Starting random playout.
2025-04-11 18:50:54,331 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:50:54,331 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(9)), (np.int64(9), np.int64(7)))
2025-04-11 18:50:54,339 [INFO] Final candidates: []
2025-04-11 18:50:54,339 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:50:54,347 [INFO] Final candidates: []
2025-04-11 18:50:54,347 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:50:54,347 [INFO] Default policy: Starting random playout.
2025-04-11 18:50:54,410 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:50:54,410 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(10)), (np.int64(10), np.int64(10)))
2025-04-11 18:50:54,418 [INFO] Final candidates: []
2025-04-11 18:50:54,418 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:50:54,426 [INFO] Final candidates: []
2025-04-11 18:50:54,426 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:50:54,427 [INFO] Default policy: Starting random playout.
2025-04-11 18:50:54,446 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:50:54,446 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(10)), (np.int64(10), np.int64(9)))
2025-04-11 18:50:54,454 [INFO] Final candidates: []
2025-04-11 18:50:54,454 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:50:54,469 [INFO] Final candidates: []
2025-04-11 18:50:54,471 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:50:54,471 [INFO] Default policy: Starting random playout.
2025-04-11 18:50:54,494 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:50:54,495 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(10)), (np.int64(9), np.int64(7)))
2025-04-11 18:50:54,504 [INFO] Final candidates: []
2025-04-11 18:50:54,504 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:50:54,512 [INFO] Final candidates: []
2025-04-11 18:50:54,512 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:50:54,512 [INFO] Default policy: Starting random playout.
2025-04-11 18:50:54,529 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:50:54,529 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(8)), (np.int64(9), np.int64(11)))
2025-04-11 18:50:54,538 [INFO] Final candidates: []
2025-04-11 18:50:54,538 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:50:54,547 [INFO] Final candidates: []
2025-04-11 18:50:54,547 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:50:54,547 [INFO] Default policy: Starting random playout.
2025-04-11 18:50:54,597 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:50:54,598 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(11)), (np.int64(9), np.int64(7)))
2025-04-11 18:50:54,606 [INFO] Final candidates: []
2025-04-11 18:50:54,606 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:50:54,615 [INFO] Final candidates: []
2025-04-11 18:50:54,615 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:50:54,616 [INFO] Default policy: Starting random playout.
2025-04-11 18:50:54,724 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:50:54,724 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(8)), (np.int64(9), np.int64(11)))
2025-04-11 18:50:54,732 [INFO] Final candidates: []
2025-04-11 18:50:54,732 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:50:54,741 [INFO] Final candidates: []
2025-04-11 18:50:54,741 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:50:54,741 [INFO] Default policy: Starting random playout.
2025-04-11 18:50:54,837 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:50:54,837 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(9)), (np.int64(9), np.int64(8)))
2025-04-11 18:50:54,845 [INFO] Final candidates: []
2025-04-11 18:50:54,845 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:50:54,853 [INFO] Final candidates: []
2025-04-11 18:50:54,853 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:50:54,853 [INFO] Default policy: Starting random playout.
2025-04-11 18:50:54,949 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:50:54,950 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(10)), (np.int64(7), np.int64(9)))
2025-04-11 18:50:54,958 [INFO] Final candidates: []
2025-04-11 18:50:54,958 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:50:54,965 [INFO] Final candidates: []
2025-04-11 18:50:54,965 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:50:54,966 [INFO] Default policy: Starting random playout.
2025-04-11 18:50:55,117 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:50:55,117 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(9)), (np.int64(7), np.int64(9)))
2025-04-11 18:50:55,126 [INFO] Final candidates: []
2025-04-11 18:50:55,126 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:50:55,134 [INFO] Final candidates: []
2025-04-11 18:50:55,134 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:50:55,134 [INFO] Default policy: Starting random playout.
2025-04-11 18:50:55,295 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:50:55,295 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(9)), (np.int64(10), np.int64(9)))
2025-04-11 18:50:55,303 [INFO] Final candidates: []
2025-04-11 18:50:55,303 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:50:55,311 [INFO] Final candidates: []
2025-04-11 18:50:55,311 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:50:55,311 [INFO] Default policy: Starting random playout.
2025-04-11 18:50:55,438 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:50:55,438 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(8)), (np.int64(8), np.int64(9)))
2025-04-11 18:50:55,446 [INFO] Final candidates: []
2025-04-11 18:50:55,446 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:50:55,455 [INFO] Final candidates: []
2025-04-11 18:50:55,455 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:50:55,455 [INFO] Default policy: Starting random playout.
2025-04-11 18:50:55,832 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:50:55,832 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(9)), (np.int64(9), np.int64(8)))
2025-04-11 18:50:55,840 [INFO] Final candidates: []
2025-04-11 18:50:55,840 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:50:55,848 [INFO] Final candidates: []
2025-04-11 18:50:55,848 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:50:55,848 [INFO] Default policy: Starting random playout.
2025-04-11 18:50:55,995 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:50:55,995 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(10)), (np.int64(8), np.int64(9)))
2025-04-11 18:50:56,003 [INFO] Final candidates: []
2025-04-11 18:50:56,003 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:50:56,011 [INFO] Final candidates: []
2025-04-11 18:50:56,011 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:50:56,012 [INFO] Default policy: Starting random playout.
2025-04-11 18:50:56,177 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:50:56,177 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(9)), (np.int64(9), np.int64(11)))
2025-04-11 18:50:56,185 [INFO] Final candidates: []
2025-04-11 18:50:56,185 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:50:56,193 [INFO] Final candidates: []
2025-04-11 18:50:56,193 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:50:56,193 [INFO] Default policy: Starting random playout.
2025-04-11 18:50:56,240 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:50:56,240 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(10)), (np.int64(10), np.int64(10)))
2025-04-11 18:50:56,248 [INFO] Final candidates: []
2025-04-11 18:50:56,248 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:50:56,256 [INFO] Final candidates: []
2025-04-11 18:50:56,256 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:50:56,256 [INFO] Default policy: Starting random playout.
2025-04-11 18:50:56,471 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:50:56,472 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(9)), (np.int64(9), np.int64(7)))
2025-04-11 18:50:56,480 [INFO] Final candidates: []
2025-04-11 18:50:56,480 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:50:56,488 [INFO] Final candidates: []
2025-04-11 18:50:56,488 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:50:56,489 [INFO] Default policy: Starting random playout.
2025-04-11 18:50:56,519 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:50:56,519 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(10)), (np.int64(9), np.int64(7)))
2025-04-11 18:50:56,528 [INFO] Final candidates: []
2025-04-11 18:50:56,528 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:50:56,535 [INFO] Final candidates: []
2025-04-11 18:50:56,535 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:50:56,536 [INFO] Default policy: Starting random playout.
2025-04-11 18:50:56,575 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:50:56,575 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(9)), (np.int64(9), np.int64(11)))
2025-04-11 18:50:56,585 [INFO] Final candidates: []
2025-04-11 18:50:56,585 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:50:56,593 [INFO] Final candidates: []
2025-04-11 18:50:56,593 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:50:56,593 [INFO] Default policy: Starting random playout.
2025-04-11 18:50:56,786 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:50:56,786 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(9)), (np.int64(9), np.int64(11)))
2025-04-11 18:50:56,794 [INFO] Final candidates: []
2025-04-11 18:50:56,794 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:50:56,802 [INFO] Final candidates: []
2025-04-11 18:50:56,802 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:50:56,802 [INFO] Default policy: Starting random playout.
2025-04-11 18:50:56,964 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:50:56,965 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(9)), (np.int64(10), np.int64(10)))
2025-04-11 18:50:56,972 [INFO] Final candidates: []
2025-04-11 18:50:56,973 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:50:56,980 [INFO] Final candidates: []
2025-04-11 18:50:56,980 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:50:56,980 [INFO] Default policy: Starting random playout.
2025-04-11 18:50:57,167 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:50:57,167 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(8)), (np.int64(10), np.int64(8)))
2025-04-11 18:50:57,175 [INFO] Final candidates: []
2025-04-11 18:50:57,175 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:50:57,183 [INFO] Final candidates: []
2025-04-11 18:50:57,183 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:50:57,183 [INFO] Default policy: Starting random playout.
2025-04-11 18:50:57,532 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:50:57,532 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(10)), (np.int64(8), np.int64(10)))
2025-04-11 18:50:57,540 [INFO] Final candidates: []
2025-04-11 18:50:57,540 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:50:57,548 [INFO] Final candidates: []
2025-04-11 18:50:57,548 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:50:57,548 [INFO] Default policy: Starting random playout.
2025-04-11 18:50:57,604 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:50:57,604 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(10)), (np.int64(9), np.int64(7)))
2025-04-11 18:50:57,612 [INFO] Final candidates: []
2025-04-11 18:50:57,612 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:50:57,620 [INFO] Final candidates: []
2025-04-11 18:50:57,620 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:50:57,620 [INFO] Default policy: Starting random playout.
2025-04-11 18:50:57,854 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:50:57,854 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(10)), (np.int64(9), np.int64(8)))
2025-04-11 18:50:57,862 [INFO] Final candidates: []
2025-04-11 18:50:57,862 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:50:57,870 [INFO] Final candidates: []
2025-04-11 18:50:57,870 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:50:57,870 [INFO] Default policy: Starting random playout.
2025-04-11 18:50:57,991 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:50:57,991 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(8)), (np.int64(10), np.int64(10)))
2025-04-11 18:50:57,999 [INFO] Final candidates: []
2025-04-11 18:50:58,000 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:50:58,007 [INFO] Final candidates: []
2025-04-11 18:50:58,008 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:50:58,008 [INFO] Default policy: Starting random playout.
2025-04-11 18:50:58,147 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:50:58,147 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(10)), (np.int64(7), np.int64(9)))
2025-04-11 18:50:58,155 [INFO] Final candidates: []
2025-04-11 18:50:58,155 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:50:58,163 [INFO] Final candidates: []
2025-04-11 18:50:58,163 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:50:58,163 [INFO] Default policy: Starting random playout.
2025-04-11 18:50:58,276 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:50:58,277 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(9)), (np.int64(8), np.int64(9)))
2025-04-11 18:50:58,285 [INFO] Final candidates: []
2025-04-11 18:50:58,285 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:50:58,292 [INFO] Final candidates: []
2025-04-11 18:50:58,292 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:50:58,293 [INFO] Default policy: Starting random playout.
2025-04-11 18:50:58,450 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:50:58,450 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(9)), (np.int64(10), np.int64(10)))
2025-04-11 18:50:58,458 [INFO] Final candidates: []
2025-04-11 18:50:58,458 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:50:58,466 [INFO] Final candidates: []
2025-04-11 18:50:58,466 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:50:58,466 [INFO] Default policy: Starting random playout.
2025-04-11 18:50:58,814 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:50:58,815 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(8)), (np.int64(8), np.int64(9)))
2025-04-11 18:50:58,823 [INFO] Final candidates: []
2025-04-11 18:50:58,823 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:50:58,831 [INFO] Final candidates: []
2025-04-11 18:50:58,831 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:50:58,831 [INFO] Default policy: Starting random playout.
2025-04-11 18:50:58,899 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:50:58,899 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(10)), (np.int64(11), np.int64(9)))
2025-04-11 18:50:58,907 [INFO] Final candidates: []
2025-04-11 18:50:58,907 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:50:58,916 [INFO] Final candidates: []
2025-04-11 18:50:58,916 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:50:58,916 [INFO] Default policy: Starting random playout.
2025-04-11 18:50:59,001 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:50:59,001 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(9)), (np.int64(9), np.int64(7)))
2025-04-11 18:50:59,010 [INFO] Final candidates: []
2025-04-11 18:50:59,010 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:50:59,019 [INFO] Final candidates: []
2025-04-11 18:50:59,019 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:50:59,019 [INFO] Default policy: Starting random playout.
2025-04-11 18:50:59,141 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:50:59,141 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(8)), (np.int64(10), np.int64(9)))
2025-04-11 18:50:59,149 [INFO] Final candidates: []
2025-04-11 18:50:59,149 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:50:59,157 [INFO] Final candidates: []
2025-04-11 18:50:59,157 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:50:59,157 [INFO] Default policy: Starting random playout.
2025-04-11 18:50:59,204 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:50:59,204 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(8)), (np.int64(9), np.int64(7)))
2025-04-11 18:50:59,212 [INFO] Final candidates: []
2025-04-11 18:50:59,212 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:50:59,220 [INFO] Final candidates: []
2025-04-11 18:50:59,220 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:50:59,220 [INFO] Default policy: Starting random playout.
2025-04-11 18:50:59,290 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:50:59,290 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(8)), (np.int64(11), np.int64(9)))
2025-04-11 18:50:59,298 [INFO] Final candidates: []
2025-04-11 18:50:59,298 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:50:59,306 [INFO] Final candidates: []
2025-04-11 18:50:59,306 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:50:59,306 [DEBUG] MCTS iteration 50: reached a node with 0 visits.
2025-04-11 18:50:59,306 [INFO] Default policy: Starting random playout.
2025-04-11 18:50:59,491 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:50:59,491 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(10)), (np.int64(8), np.int64(9)))
2025-04-11 18:50:59,499 [INFO] Final candidates: []
2025-04-11 18:50:59,499 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:50:59,507 [INFO] Final candidates: []
2025-04-11 18:50:59,507 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:50:59,507 [INFO] Default policy: Starting random playout.
2025-04-11 18:50:59,717 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:50:59,717 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(8)), (np.int64(9), np.int64(11)))
2025-04-11 18:50:59,727 [INFO] Final candidates: []
2025-04-11 18:50:59,727 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:50:59,735 [INFO] Final candidates: []
2025-04-11 18:50:59,735 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:50:59,735 [INFO] Default policy: Starting random playout.
2025-04-11 18:50:59,795 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:50:59,796 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(10)), (np.int64(9), np.int64(11)))
2025-04-11 18:50:59,804 [INFO] Final candidates: []
2025-04-11 18:50:59,804 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:50:59,812 [INFO] Final candidates: []
2025-04-11 18:50:59,812 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:50:59,812 [INFO] Default policy: Starting random playout.
2025-04-11 18:50:59,927 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:50:59,928 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(8)), (np.int64(9), np.int64(8)))
2025-04-11 18:50:59,936 [INFO] Final candidates: []
2025-04-11 18:50:59,936 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:50:59,944 [INFO] Final candidates: []
2025-04-11 18:50:59,944 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:50:59,944 [INFO] Default policy: Starting random playout.
2025-04-11 18:50:59,996 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:50:59,996 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(9)), (np.int64(10), np.int64(9)))
2025-04-11 18:51:00,004 [INFO] Final candidates: []
2025-04-11 18:51:00,004 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:00,012 [INFO] Final candidates: []
2025-04-11 18:51:00,012 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:00,012 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:00,085 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:51:00,085 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(8)), (np.int64(9), np.int64(7)))
2025-04-11 18:51:00,093 [INFO] Final candidates: []
2025-04-11 18:51:00,093 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:00,101 [INFO] Final candidates: []
2025-04-11 18:51:00,101 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:00,101 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:00,176 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:51:00,177 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(8)), (np.int64(9), np.int64(8)))
2025-04-11 18:51:00,185 [INFO] Final candidates: []
2025-04-11 18:51:00,185 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:00,193 [INFO] Final candidates: []
2025-04-11 18:51:00,193 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:00,193 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:00,359 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:00,360 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(10)), (np.int64(9), np.int64(8)))
2025-04-11 18:51:00,368 [INFO] Final candidates: []
2025-04-11 18:51:00,368 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:00,375 [INFO] Final candidates: []
2025-04-11 18:51:00,375 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:00,376 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:00,429 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:00,429 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(8)), (np.int64(7), np.int64(9)))
2025-04-11 18:51:00,437 [INFO] Final candidates: []
2025-04-11 18:51:00,437 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:00,445 [INFO] Final candidates: []
2025-04-11 18:51:00,445 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:00,445 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:00,707 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:51:00,707 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(8)), (np.int64(9), np.int64(7)))
2025-04-11 18:51:00,715 [INFO] Final candidates: []
2025-04-11 18:51:00,716 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:00,723 [INFO] Final candidates: []
2025-04-11 18:51:00,723 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:00,724 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:00,743 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:51:00,743 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(8)), (np.int64(10), np.int64(10)))
2025-04-11 18:51:00,751 [INFO] Final candidates: []
2025-04-11 18:51:00,751 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:00,759 [INFO] Final candidates: []
2025-04-11 18:51:00,759 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:00,759 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:00,842 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:51:00,842 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(9)), (np.int64(9), np.int64(8)))
2025-04-11 18:51:00,850 [INFO] Final candidates: []
2025-04-11 18:51:00,850 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:00,858 [INFO] Final candidates: []
2025-04-11 18:51:00,858 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:00,858 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:01,019 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:01,019 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(10)), (np.int64(10), np.int64(9)))
2025-04-11 18:51:01,027 [INFO] Final candidates: []
2025-04-11 18:51:01,028 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:01,035 [INFO] Final candidates: []
2025-04-11 18:51:01,035 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:01,035 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:01,176 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:01,176 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(10)), (np.int64(10), np.int64(8)))
2025-04-11 18:51:01,184 [INFO] Final candidates: []
2025-04-11 18:51:01,184 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:01,192 [INFO] Final candidates: []
2025-04-11 18:51:01,192 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:01,192 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:01,384 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:01,384 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(8)), (np.int64(8), np.int64(10)))
2025-04-11 18:51:01,392 [INFO] Final candidates: []
2025-04-11 18:51:01,392 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:01,400 [INFO] Final candidates: []
2025-04-11 18:51:01,400 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:01,400 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:01,485 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:01,485 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:01,486 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(11)), (np.int64(11), np.int64(9)))
2025-04-11 18:51:01,493 [INFO] Final candidates: []
2025-04-11 18:51:01,493 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:01,501 [INFO] Final candidates: []
2025-04-11 18:51:01,501 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:01,501 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:01,684 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:01,684 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:01,685 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(11)), (np.int64(8), np.int64(11)))
2025-04-11 18:51:01,692 [INFO] Final candidates: []
2025-04-11 18:51:01,692 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:01,700 [INFO] Final candidates: []
2025-04-11 18:51:01,700 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:01,700 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:01,947 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:01,947 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:01,947 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(8)), (np.int64(11), np.int64(10)))
2025-04-11 18:51:01,968 [INFO] Final candidates: []
2025-04-11 18:51:01,968 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:01,987 [INFO] Final candidates: []
2025-04-11 18:51:01,987 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:01,987 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:02,055 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:51:02,056 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:02,056 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(9)), (np.int64(11), np.int64(10)))
2025-04-11 18:51:02,063 [INFO] Final candidates: []
2025-04-11 18:51:02,063 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:02,071 [INFO] Final candidates: []
2025-04-11 18:51:02,071 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:02,071 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:02,232 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:02,232 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:02,232 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(5)), (np.int64(10), np.int64(6)))
2025-04-11 18:51:02,248 [INFO] Final candidates: []
2025-04-11 18:51:02,248 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:02,256 [INFO] Final candidates: []
2025-04-11 18:51:02,256 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:02,256 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:02,304 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:51:02,305 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:02,305 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(11)), (np.int64(6), np.int64(10)))
2025-04-11 18:51:02,312 [INFO] Final candidates: []
2025-04-11 18:51:02,312 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:02,320 [INFO] Final candidates: []
2025-04-11 18:51:02,320 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:02,320 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:02,401 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:51:02,401 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:02,401 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(11)), (np.int64(8), np.int64(7)))
2025-04-11 18:51:02,409 [INFO] Final candidates: []
2025-04-11 18:51:02,409 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:02,417 [INFO] Final candidates: []
2025-04-11 18:51:02,417 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:02,417 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:02,551 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:02,552 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:02,552 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(9)), (np.int64(11), np.int64(9)))
2025-04-11 18:51:02,560 [INFO] Final candidates: []
2025-04-11 18:51:02,560 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:02,568 [INFO] Final candidates: []
2025-04-11 18:51:02,568 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:02,568 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:02,840 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:02,840 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:02,840 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(10)), (np.int64(7), np.int64(9)))
2025-04-11 18:51:02,848 [INFO] Final candidates: []
2025-04-11 18:51:02,848 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:02,856 [INFO] Final candidates: []
2025-04-11 18:51:02,856 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:02,856 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:02,923 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:51:02,923 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:02,923 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(9)), (np.int64(10), np.int64(8)))
2025-04-11 18:51:02,931 [INFO] Final candidates: []
2025-04-11 18:51:02,931 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:02,939 [INFO] Final candidates: []
2025-04-11 18:51:02,939 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:02,939 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:02,995 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:51:02,995 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:02,995 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(9)), (np.int64(8), np.int64(6)))
2025-04-11 18:51:03,003 [INFO] Final candidates: []
2025-04-11 18:51:03,003 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:03,011 [INFO] Final candidates: []
2025-04-11 18:51:03,011 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:03,011 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:03,040 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:03,040 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:03,040 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(8)), (np.int64(10), np.int64(8)))
2025-04-11 18:51:03,048 [INFO] Final candidates: []
2025-04-11 18:51:03,048 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:03,055 [INFO] Final candidates: []
2025-04-11 18:51:03,055 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:03,055 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:03,134 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:51:03,134 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:03,134 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(5)), (np.int64(10), np.int64(10)))
2025-04-11 18:51:03,142 [INFO] Final candidates: []
2025-04-11 18:51:03,142 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:03,150 [INFO] Final candidates: []
2025-04-11 18:51:03,150 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:03,150 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:03,464 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:51:03,464 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:03,464 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(10)), (np.int64(10), np.int64(10)))
2025-04-11 18:51:03,472 [INFO] Final candidates: []
2025-04-11 18:51:03,472 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:03,480 [INFO] Final candidates: []
2025-04-11 18:51:03,480 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:03,480 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:03,739 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:03,740 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:03,740 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(9)), (np.int64(9), np.int64(7)))
2025-04-11 18:51:03,749 [INFO] Final candidates: []
2025-04-11 18:51:03,749 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:03,757 [INFO] Final candidates: []
2025-04-11 18:51:03,757 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:03,757 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:03,995 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:03,995 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:03,995 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(11)), (np.int64(8), np.int64(10)))
2025-04-11 18:51:04,003 [INFO] Final candidates: []
2025-04-11 18:51:04,003 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:04,011 [INFO] Final candidates: []
2025-04-11 18:51:04,011 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:04,011 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:04,171 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:04,171 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:04,171 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(11)), (np.int64(6), np.int64(9)))
2025-04-11 18:51:04,179 [INFO] Final candidates: []
2025-04-11 18:51:04,179 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:04,187 [INFO] Final candidates: []
2025-04-11 18:51:04,187 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:04,187 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:04,302 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:04,302 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:04,302 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(9)), (np.int64(10), np.int64(10)))
2025-04-11 18:51:04,310 [INFO] Final candidates: []
2025-04-11 18:51:04,310 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:04,318 [INFO] Final candidates: []
2025-04-11 18:51:04,318 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:04,318 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:04,390 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:04,390 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:04,390 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(12)), (np.int64(10), np.int64(8)))
2025-04-11 18:51:04,400 [INFO] Final candidates: []
2025-04-11 18:51:04,400 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:04,407 [INFO] Final candidates: []
2025-04-11 18:51:04,407 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:04,408 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:04,472 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:51:04,472 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:04,472 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(9)), (np.int64(9), np.int64(10)))
2025-04-11 18:51:04,480 [INFO] Final candidates: []
2025-04-11 18:51:04,480 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:04,488 [INFO] Final candidates: []
2025-04-11 18:51:04,488 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:04,488 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:04,678 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:51:04,679 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:04,679 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(12)), (np.int64(10), np.int64(8)))
2025-04-11 18:51:04,687 [INFO] Final candidates: []
2025-04-11 18:51:04,687 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:04,694 [INFO] Final candidates: []
2025-04-11 18:51:04,694 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:04,694 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:04,839 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:04,840 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:04,840 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(12)), (np.int64(11), np.int64(11)))
2025-04-11 18:51:04,848 [INFO] Final candidates: []
2025-04-11 18:51:04,848 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:04,856 [INFO] Final candidates: []
2025-04-11 18:51:04,856 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:04,857 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:05,133 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:05,133 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:05,133 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(6)), (np.int64(10), np.int64(9)))
2025-04-11 18:51:05,141 [INFO] Final candidates: []
2025-04-11 18:51:05,141 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:05,149 [INFO] Final candidates: []
2025-04-11 18:51:05,149 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:05,149 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:05,322 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:51:05,322 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:05,323 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(6)), (np.int64(11), np.int64(7)))
2025-04-11 18:51:05,331 [INFO] Final candidates: []
2025-04-11 18:51:05,331 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:05,338 [INFO] Final candidates: []
2025-04-11 18:51:05,338 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:05,338 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:05,505 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:05,505 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:05,506 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(9)), (np.int64(6), np.int64(9)))
2025-04-11 18:51:05,513 [INFO] Final candidates: []
2025-04-11 18:51:05,513 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:05,521 [INFO] Final candidates: []
2025-04-11 18:51:05,521 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:05,521 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:05,580 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:51:05,580 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:05,580 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(9)), (np.int64(8), np.int64(11)))
2025-04-11 18:51:05,588 [INFO] Final candidates: []
2025-04-11 18:51:05,588 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:05,596 [INFO] Final candidates: []
2025-04-11 18:51:05,597 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:05,597 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:05,656 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:51:05,656 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:05,656 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(10)), (np.int64(7), np.int64(8)))
2025-04-11 18:51:05,664 [INFO] Final candidates: []
2025-04-11 18:51:05,664 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:05,672 [INFO] Final candidates: []
2025-04-11 18:51:05,672 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:05,672 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:05,753 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:05,753 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:05,753 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(11)), (np.int64(9), np.int64(7)))
2025-04-11 18:51:05,761 [INFO] Final candidates: []
2025-04-11 18:51:05,761 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:05,769 [INFO] Final candidates: []
2025-04-11 18:51:05,769 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:05,769 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:05,785 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:05,786 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:05,786 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(5)), (np.int64(11), np.int64(7)))
2025-04-11 18:51:05,793 [INFO] Final candidates: []
2025-04-11 18:51:05,793 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:05,801 [INFO] Final candidates: []
2025-04-11 18:51:05,801 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:05,801 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:05,813 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:05,813 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:05,813 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(9)), (np.int64(9), np.int64(7)))
2025-04-11 18:51:05,821 [INFO] Final candidates: []
2025-04-11 18:51:05,821 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:05,829 [INFO] Final candidates: []
2025-04-11 18:51:05,829 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:05,829 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:05,957 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:05,957 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:05,957 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(8)), (np.int64(11), np.int64(9)))
2025-04-11 18:51:05,965 [INFO] Final candidates: []
2025-04-11 18:51:05,965 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:05,974 [INFO] Final candidates: []
2025-04-11 18:51:05,974 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:05,974 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:05,995 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:05,996 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:05,996 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(9)), (np.int64(9), np.int64(11)))
2025-04-11 18:51:06,004 [INFO] Final candidates: []
2025-04-11 18:51:06,004 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:06,011 [INFO] Final candidates: []
2025-04-11 18:51:06,011 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:06,012 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:06,093 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:51:06,093 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:06,093 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(8)), (np.int64(7), np.int64(8)))
2025-04-11 18:51:06,101 [INFO] Final candidates: []
2025-04-11 18:51:06,101 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:06,109 [INFO] Final candidates: []
2025-04-11 18:51:06,109 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:06,109 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:06,258 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:06,258 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:06,258 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(8)), (np.int64(9), np.int64(7)))
2025-04-11 18:51:06,266 [INFO] Final candidates: []
2025-04-11 18:51:06,266 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:06,274 [INFO] Final candidates: []
2025-04-11 18:51:06,274 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:06,274 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:06,357 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:06,357 [INFO] MCTS: Search finished. Best move selected with 2 visits.
2025-04-11 18:51:06,357 [INFO] MCTS selected move: K9,K11
2025-04-11 18:51:06,357 [INFO] ===============NEW MOVE================
2025-04-11 18:51:10,082 [INFO] Starting pre-MCTS candidate collection.
2025-04-11 18:51:10,091 [INFO] Final candidates: []
2025-04-11 18:51:10,091 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:10,099 [INFO] Final candidates: []
2025-04-11 18:51:10,099 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:10,099 [INFO] No candidate found in Phase 1 or 2; using full legal moves for MCTS.
2025-04-11 18:51:10,100 [INFO] MCTS: Starting search for 100 iterations.
2025-04-11 18:51:10,100 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(8)), (np.int64(9), np.int64(6)))
2025-04-11 18:51:10,100 [DEBUG] board coords: [(9, 5), (9, 6), (9, 7), (9, 8), (9, 9), (9, 10)]
2025-04-11 18:51:10,100 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 18:51:10,100 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 5), (9, 7)]
2025-04-11 18:51:10,100 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 0 1 1 1] with coords [(9, 5), (9, 6), (9, 7), (9, 8), (9, 9), (9, 10)] triggers candidate.
2025-04-11 18:51:10,100 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 18:51:10,101 [DEBUG] board values[np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 18:51:10,101 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 7), (9, 11)]
2025-04-11 18:51:10,101 [DEBUG] check_window_intermediate_custom: For L=6, window [1 0 1 1 1 0] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 18:51:10,108 [INFO] Final candidates: [(9, 5), (9, 11), (9, 7)]
2025-04-11 18:51:10,108 [INFO] Phase win: Collected 3unique candidate(s):[((9, 5), (9, 7)), ((9, 11), (9, 7)), ((9, 5), (9, 11))]
2025-04-11 18:51:10,108 [INFO] Phase 1 (immediate win): 3 candidate(s) found.
2025-04-11 18:51:10,116 [INFO] Final candidates: []
2025-04-11 18:51:10,116 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:10,116 [DEBUG] MCTS iteration 0: reached a node with 0 visits.
2025-04-11 18:51:10,117 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:10,346 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:51:10,346 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(10)), (np.int64(8), np.int64(11)))
2025-04-11 18:51:10,354 [INFO] Final candidates: []
2025-04-11 18:51:10,354 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:10,361 [INFO] Final candidates: []
2025-04-11 18:51:10,362 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:10,362 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:10,448 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:10,448 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(9)), (np.int64(6), np.int64(9)))
2025-04-11 18:51:10,456 [INFO] Final candidates: []
2025-04-11 18:51:10,456 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:10,464 [INFO] Final candidates: []
2025-04-11 18:51:10,464 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:10,464 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:10,551 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:10,552 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(8)), (np.int64(9), np.int64(6)))
2025-04-11 18:51:10,552 [DEBUG] board coords: [(9, 5), (9, 6), (9, 7), (9, 8), (9, 9), (9, 10)]
2025-04-11 18:51:10,552 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 18:51:10,552 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 5), (9, 7)]
2025-04-11 18:51:10,552 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 0 1 1 1] with coords [(9, 5), (9, 6), (9, 7), (9, 8), (9, 9), (9, 10)] triggers candidate.
2025-04-11 18:51:10,553 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 18:51:10,553 [DEBUG] board values[np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 18:51:10,553 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 7), (9, 11)]
2025-04-11 18:51:10,553 [DEBUG] check_window_intermediate_custom: For L=6, window [1 0 1 1 1 0] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 18:51:10,560 [INFO] Final candidates: [(9, 5), (9, 11), (9, 7)]
2025-04-11 18:51:10,560 [INFO] Phase win: Collected 3unique candidate(s):[((9, 5), (9, 7)), ((9, 11), (9, 7)), ((9, 5), (9, 11))]
2025-04-11 18:51:10,560 [INFO] Phase 1 (immediate win): 3 candidate(s) found.
2025-04-11 18:51:10,567 [INFO] Final candidates: []
2025-04-11 18:51:10,567 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:10,568 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:10,569 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:10,569 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(10)), (np.int64(10), np.int64(7)))
2025-04-11 18:51:10,577 [INFO] Final candidates: []
2025-04-11 18:51:10,577 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:10,585 [INFO] Final candidates: []
2025-04-11 18:51:10,585 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:10,585 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:10,744 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:10,744 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(7)), (np.int64(6), np.int64(9)))
2025-04-11 18:51:10,745 [DEBUG] board coords: [(9, 5), (9, 6), (9, 7), (9, 8), (9, 9), (9, 10)]
2025-04-11 18:51:10,745 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 18:51:10,745 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 5), (9, 6)]
2025-04-11 18:51:10,745 [DEBUG] check_window_intermediate_custom (only one inserted(9, 6)): For L=6, window [0 0 1 1 1 1] with coords [(9, 5), (9, 6), (9, 7), (9, 8), (9, 9), (9, 10)] triggers candidate.
2025-04-11 18:51:10,745 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 18:51:10,745 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 18:51:10,745 [DEBUG] board coords: [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 18:51:10,745 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 18:51:10,745 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 11), (9, 12)]
2025-04-11 18:51:10,745 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [1 1 1 1 0 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 18:51:10,752 [INFO] Final candidates: [(9, 11), (9, 6)]
2025-04-11 18:51:10,753 [INFO] Phase win: Collected 1unique candidate(s):[((9, 11), (9, 6))]
2025-04-11 18:51:10,753 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 18:51:10,760 [INFO] Final candidates: []
2025-04-11 18:51:10,760 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:10,760 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:10,807 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:51:10,808 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(8)), (np.int64(10), np.int64(7)))
2025-04-11 18:51:10,815 [INFO] Final candidates: []
2025-04-11 18:51:10,816 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:10,823 [INFO] Final candidates: []
2025-04-11 18:51:10,823 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:10,823 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:11,095 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:11,095 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(11)), (np.int64(6), np.int64(9)))
2025-04-11 18:51:11,103 [INFO] Final candidates: []
2025-04-11 18:51:11,103 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:11,111 [INFO] Final candidates: []
2025-04-11 18:51:11,111 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:11,111 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:11,249 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:51:11,251 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(9)), (np.int64(8), np.int64(7)))
2025-04-11 18:51:11,258 [INFO] Final candidates: []
2025-04-11 18:51:11,259 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:11,266 [INFO] Final candidates: []
2025-04-11 18:51:11,266 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:11,266 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:11,380 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:51:11,381 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(12)), (np.int64(7), np.int64(8)))
2025-04-11 18:51:11,381 [DEBUG] board coords: [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 18:51:11,381 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1)]
2025-04-11 18:51:11,381 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 7), (9, 11)]
2025-04-11 18:51:11,381 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 1 1 0 1] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 18:51:11,381 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)]
2025-04-11 18:51:11,381 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(0)]
2025-04-11 18:51:11,381 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 11), (9, 13)]
2025-04-11 18:51:11,382 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 1 0 1 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 18:51:11,394 [INFO] Final candidates: [(9, 11), (9, 13), (9, 7)]
2025-04-11 18:51:11,394 [INFO] Phase win: Collected 3unique candidate(s):[((9, 13), (9, 7)), ((9, 11), (9, 13)), ((9, 11), (9, 7))]
2025-04-11 18:51:11,394 [INFO] Phase 1 (immediate win): 3 candidate(s) found.
2025-04-11 18:51:11,402 [INFO] Final candidates: []
2025-04-11 18:51:11,402 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:11,402 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:11,405 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:11,405 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(7)), (np.int64(11), np.int64(9)))
2025-04-11 18:51:11,406 [DEBUG] board coords: [(9, 5), (9, 6), (9, 7), (9, 8), (9, 9), (9, 10)]
2025-04-11 18:51:11,406 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 18:51:11,406 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 5), (9, 6)]
2025-04-11 18:51:11,406 [DEBUG] check_window_intermediate_custom (only one inserted(9, 6)): For L=6, window [0 0 1 1 1 1] with coords [(9, 5), (9, 6), (9, 7), (9, 8), (9, 9), (9, 10)] triggers candidate.
2025-04-11 18:51:11,406 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 18:51:11,406 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 18:51:11,406 [DEBUG] board coords: [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 18:51:11,406 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 18:51:11,406 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 11), (9, 12)]
2025-04-11 18:51:11,406 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [1 1 1 1 0 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 18:51:11,413 [INFO] Final candidates: [(9, 11), (9, 6)]
2025-04-11 18:51:11,413 [INFO] Phase win: Collected 1unique candidate(s):[((9, 11), (9, 6))]
2025-04-11 18:51:11,413 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 18:51:11,421 [INFO] Final candidates: []
2025-04-11 18:51:11,421 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:11,421 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:11,438 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:51:11,438 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(9)), (np.int64(10), np.int64(10)))
2025-04-11 18:51:11,446 [INFO] Final candidates: []
2025-04-11 18:51:11,446 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:11,453 [INFO] Final candidates: []
2025-04-11 18:51:11,453 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:11,454 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:11,630 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:11,630 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(7)), (np.int64(9), np.int64(6)))
2025-04-11 18:51:11,631 [DEBUG] board coords: [(9, 4), (9, 5), (9, 6), (9, 7), (9, 8), (9, 9)]
2025-04-11 18:51:11,632 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 18:51:11,632 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 4), (9, 5)]
2025-04-11 18:51:11,632 [DEBUG] check_window_intermediate_custom (only one inserted(9, 5)): For L=6, window [0 0 1 1 1 1] with coords [(9, 4), (9, 5), (9, 6), (9, 7), (9, 8), (9, 9)] triggers candidate.
2025-04-11 18:51:11,632 [DEBUG] board coords: [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 18:51:11,632 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 18:51:11,632 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 11), (9, 12)]
2025-04-11 18:51:11,632 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [1 1 1 1 0 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 18:51:11,633 [DEBUG] check_window_margin_custom: For L=7, window [0 1 1 1 1 1 0] with coords [(9, 5), (9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 18:51:11,639 [INFO] Final candidates: [(9, 5), (9, 11)]
2025-04-11 18:51:11,639 [INFO] Phase win: Collected 1unique candidate(s):[((9, 5), (9, 11))]
2025-04-11 18:51:11,639 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 18:51:11,647 [INFO] Final candidates: []
2025-04-11 18:51:11,647 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:11,648 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:11,674 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:51:11,675 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(11)), (np.int64(6), np.int64(9)))
2025-04-11 18:51:11,675 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 18:51:11,675 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 18:51:11,675 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 18:51:11,675 [DEBUG] check_window_intermediate_custom (only one inserted(9, 7)): For L=6, window [0 0 1 1 1 1] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 18:51:11,675 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 18:51:11,675 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 18:51:11,675 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)]
2025-04-11 18:51:11,675 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 18:51:11,675 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 12), (9, 13)]
2025-04-11 18:51:11,676 [DEBUG] check_window_intermediate_custom (only one inserted(9, 12)): For L=6, window [1 1 1 1 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 18:51:11,683 [INFO] Final candidates: [(9, 12), (9, 7)]
2025-04-11 18:51:11,683 [INFO] Phase win: Collected 1unique candidate(s):[((9, 12), (9, 7))]
2025-04-11 18:51:11,683 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 18:51:11,690 [INFO] Final candidates: []
2025-04-11 18:51:11,690 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:11,691 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:11,791 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:11,791 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(10)), (np.int64(7), np.int64(8)))
2025-04-11 18:51:11,799 [INFO] Final candidates: []
2025-04-11 18:51:11,799 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:11,806 [INFO] Final candidates: []
2025-04-11 18:51:11,806 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:11,806 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:12,010 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:12,010 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(11)), (np.int64(10), np.int64(10)))
2025-04-11 18:51:12,011 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 18:51:12,011 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 18:51:12,011 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 18:51:12,011 [DEBUG] check_window_intermediate_custom (only one inserted(9, 7)): For L=6, window [0 0 1 1 1 1] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 18:51:12,011 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 18:51:12,011 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 18:51:12,011 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)]
2025-04-11 18:51:12,011 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 18:51:12,011 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 12), (9, 13)]
2025-04-11 18:51:12,011 [DEBUG] check_window_intermediate_custom (only one inserted(9, 12)): For L=6, window [1 1 1 1 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 18:51:12,018 [INFO] Final candidates: [(9, 12), (9, 7)]
2025-04-11 18:51:12,018 [INFO] Phase win: Collected 1unique candidate(s):[((9, 12), (9, 7))]
2025-04-11 18:51:12,018 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 18:51:12,026 [INFO] Final candidates: []
2025-04-11 18:51:12,026 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:12,026 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:12,214 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:12,214 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(10)), (np.int64(10), np.int64(10)))
2025-04-11 18:51:12,222 [INFO] Final candidates: []
2025-04-11 18:51:12,222 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:12,230 [INFO] Final candidates: []
2025-04-11 18:51:12,230 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:12,230 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:12,269 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:12,269 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(9)), (np.int64(8), np.int64(11)))
2025-04-11 18:51:12,279 [INFO] Final candidates: []
2025-04-11 18:51:12,279 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:12,294 [INFO] Final candidates: []
2025-04-11 18:51:12,294 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:12,294 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:12,341 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:12,341 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(8)), (np.int64(10), np.int64(11)))
2025-04-11 18:51:12,349 [INFO] Final candidates: []
2025-04-11 18:51:12,349 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:12,356 [INFO] Final candidates: []
2025-04-11 18:51:12,356 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:12,356 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:12,427 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:51:12,427 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(7)), (np.int64(8), np.int64(7)))
2025-04-11 18:51:12,428 [DEBUG] board coords: [(9, 5), (9, 6), (9, 7), (9, 8), (9, 9), (9, 10)]
2025-04-11 18:51:12,428 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 18:51:12,428 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 5), (9, 6)]
2025-04-11 18:51:12,428 [DEBUG] check_window_intermediate_custom (only one inserted(9, 6)): For L=6, window [0 0 1 1 1 1] with coords [(9, 5), (9, 6), (9, 7), (9, 8), (9, 9), (9, 10)] triggers candidate.
2025-04-11 18:51:12,428 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 18:51:12,428 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 18:51:12,428 [DEBUG] board coords: [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 18:51:12,428 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 18:51:12,428 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 11), (9, 12)]
2025-04-11 18:51:12,428 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [1 1 1 1 0 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 18:51:12,435 [INFO] Final candidates: [(9, 11), (9, 6)]
2025-04-11 18:51:12,435 [INFO] Phase win: Collected 1unique candidate(s):[((9, 11), (9, 6))]
2025-04-11 18:51:12,435 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 18:51:12,443 [INFO] Final candidates: []
2025-04-11 18:51:12,443 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:12,443 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:12,464 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:12,464 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(9)), (np.int64(9), np.int64(6)))
2025-04-11 18:51:12,465 [DEBUG] board coords: [(9, 5), (9, 6), (9, 7), (9, 8), (9, 9), (9, 10)]
2025-04-11 18:51:12,465 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 18:51:12,465 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 5), (9, 7)]
2025-04-11 18:51:12,465 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 0 1 1 1] with coords [(9, 5), (9, 6), (9, 7), (9, 8), (9, 9), (9, 10)] triggers candidate.
2025-04-11 18:51:12,465 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 18:51:12,465 [DEBUG] board values[np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 18:51:12,465 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 7), (9, 11)]
2025-04-11 18:51:12,465 [DEBUG] check_window_intermediate_custom: For L=6, window [1 0 1 1 1 0] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 18:51:12,472 [INFO] Final candidates: [(9, 5), (9, 11), (9, 7)]
2025-04-11 18:51:12,472 [INFO] Phase win: Collected 3unique candidate(s):[((9, 5), (9, 7)), ((9, 11), (9, 7)), ((9, 5), (9, 11))]
2025-04-11 18:51:12,472 [INFO] Phase 1 (immediate win): 3 candidate(s) found.
2025-04-11 18:51:12,480 [INFO] Final candidates: []
2025-04-11 18:51:12,480 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:12,480 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:12,600 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:51:12,600 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(11)), (np.int64(8), np.int64(10)))
2025-04-11 18:51:12,608 [INFO] Final candidates: []
2025-04-11 18:51:12,608 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:12,616 [INFO] Final candidates: []
2025-04-11 18:51:12,616 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:12,617 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:12,666 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:12,666 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(10)), (np.int64(10), np.int64(7)))
2025-04-11 18:51:12,674 [INFO] Final candidates: []
2025-04-11 18:51:12,674 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:12,682 [INFO] Final candidates: []
2025-04-11 18:51:12,682 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:12,682 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:12,709 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:51:12,710 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(11)), (np.int64(11), np.int64(10)))
2025-04-11 18:51:12,717 [INFO] Final candidates: []
2025-04-11 18:51:12,717 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:12,725 [INFO] Final candidates: []
2025-04-11 18:51:12,725 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:12,725 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:12,795 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:51:12,795 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(9)), (np.int64(10), np.int64(7)))
2025-04-11 18:51:12,803 [INFO] Final candidates: []
2025-04-11 18:51:12,803 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:12,810 [INFO] Final candidates: []
2025-04-11 18:51:12,810 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:12,811 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:12,918 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:51:12,918 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(11)), (np.int64(9), np.int64(12)))
2025-04-11 18:51:12,919 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 18:51:12,919 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 18:51:12,919 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 18:51:12,919 [DEBUG] check_window_intermediate_custom (only one inserted(9, 7)): For L=6, window [0 0 1 1 1 1] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 18:51:12,919 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 18:51:12,919 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 18:51:12,919 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 18:51:12,919 [DEBUG] check_window_intermediate_custom (only one inserted(9, 13)): For L=6, window [1 1 1 1 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 18:51:12,920 [DEBUG] check_window_margin_custom: For L=7, window [0 1 1 1 1 1 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 18:51:12,927 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 18:51:12,927 [INFO] Phase win: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 18:51:12,927 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 18:51:12,934 [INFO] Final candidates: []
2025-04-11 18:51:12,934 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:12,935 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:12,946 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:12,946 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(11)), (np.int64(12), np.int64(9)))
2025-04-11 18:51:12,947 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 18:51:12,947 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 18:51:12,947 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 18:51:12,947 [DEBUG] check_window_intermediate_custom (only one inserted(9, 7)): For L=6, window [0 0 1 1 1 1] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 18:51:12,947 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 18:51:12,947 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 18:51:12,947 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)]
2025-04-11 18:51:12,947 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 18:51:12,947 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 12), (9, 13)]
2025-04-11 18:51:12,947 [DEBUG] check_window_intermediate_custom (only one inserted(9, 12)): For L=6, window [1 1 1 1 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 18:51:12,955 [INFO] Final candidates: [(9, 12), (9, 7)]
2025-04-11 18:51:12,955 [INFO] Phase win: Collected 1unique candidate(s):[((9, 12), (9, 7))]
2025-04-11 18:51:12,955 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 18:51:12,962 [INFO] Final candidates: []
2025-04-11 18:51:12,962 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:12,962 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:13,067 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:13,068 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(7)), (np.int64(7), np.int64(8)))
2025-04-11 18:51:13,076 [INFO] Final candidates: []
2025-04-11 18:51:13,076 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:13,084 [INFO] Final candidates: []
2025-04-11 18:51:13,084 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:13,084 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:13,362 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:13,362 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(8)), (np.int64(6), np.int64(9)))
2025-04-11 18:51:13,370 [INFO] Final candidates: []
2025-04-11 18:51:13,370 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:13,378 [INFO] Final candidates: []
2025-04-11 18:51:13,378 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:13,378 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:13,476 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:13,476 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(9)), (np.int64(8), np.int64(8)))
2025-04-11 18:51:13,484 [INFO] Final candidates: []
2025-04-11 18:51:13,484 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:13,492 [INFO] Final candidates: []
2025-04-11 18:51:13,492 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:13,492 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:13,589 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:51:13,589 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(8)), (np.int64(10), np.int64(10)))
2025-04-11 18:51:13,597 [INFO] Final candidates: []
2025-04-11 18:51:13,597 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:13,605 [INFO] Final candidates: []
2025-04-11 18:51:13,605 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:13,605 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:13,844 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:13,844 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(8)), (np.int64(7), np.int64(9)))
2025-04-11 18:51:13,854 [INFO] Final candidates: []
2025-04-11 18:51:13,854 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:13,874 [INFO] Final candidates: []
2025-04-11 18:51:13,874 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:13,875 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:13,897 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:13,897 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(10)), (np.int64(7), np.int64(9)))
2025-04-11 18:51:13,905 [INFO] Final candidates: []
2025-04-11 18:51:13,905 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:13,912 [INFO] Final candidates: []
2025-04-11 18:51:13,912 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:13,913 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:13,962 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:51:13,962 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(6)), (np.int64(6), np.int64(9)))
2025-04-11 18:51:13,963 [DEBUG] board coords: [(9, 5), (9, 6), (9, 7), (9, 8), (9, 9), (9, 10)]
2025-04-11 18:51:13,963 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 18:51:13,963 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 5), (9, 7)]
2025-04-11 18:51:13,963 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 0 1 1 1] with coords [(9, 5), (9, 6), (9, 7), (9, 8), (9, 9), (9, 10)] triggers candidate.
2025-04-11 18:51:13,963 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 18:51:13,963 [DEBUG] board values[np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 18:51:13,963 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 7), (9, 11)]
2025-04-11 18:51:13,963 [DEBUG] check_window_intermediate_custom: For L=6, window [1 0 1 1 1 0] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 18:51:13,970 [INFO] Final candidates: [(9, 5), (9, 11), (9, 7)]
2025-04-11 18:51:13,970 [INFO] Phase win: Collected 3unique candidate(s):[((9, 5), (9, 7)), ((9, 11), (9, 7)), ((9, 5), (9, 11))]
2025-04-11 18:51:13,970 [INFO] Phase 1 (immediate win): 3 candidate(s) found.
2025-04-11 18:51:13,978 [INFO] Final candidates: []
2025-04-11 18:51:13,978 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:13,978 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:14,059 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:14,059 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(11)), (np.int64(8), np.int64(7)))
2025-04-11 18:51:14,067 [INFO] Final candidates: []
2025-04-11 18:51:14,067 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:14,075 [INFO] Final candidates: []
2025-04-11 18:51:14,075 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:14,075 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:14,133 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:51:14,133 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(9)), (np.int64(10), np.int64(10)))
2025-04-11 18:51:14,150 [INFO] Final candidates: []
2025-04-11 18:51:14,150 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:14,158 [INFO] Final candidates: []
2025-04-11 18:51:14,158 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:14,158 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:14,347 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:14,347 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(8)), (np.int64(7), np.int64(8)))
2025-04-11 18:51:14,355 [INFO] Final candidates: []
2025-04-11 18:51:14,355 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:14,363 [INFO] Final candidates: []
2025-04-11 18:51:14,363 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:14,363 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:14,448 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:51:14,448 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(10)), (np.int64(7), np.int64(8)))
2025-04-11 18:51:14,456 [INFO] Final candidates: []
2025-04-11 18:51:14,456 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:14,464 [INFO] Final candidates: []
2025-04-11 18:51:14,464 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:14,464 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:14,620 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:14,620 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(11)), (np.int64(7), np.int64(8)))
2025-04-11 18:51:14,628 [INFO] Final candidates: []
2025-04-11 18:51:14,628 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:14,636 [INFO] Final candidates: []
2025-04-11 18:51:14,636 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:14,636 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:14,763 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:14,764 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(8)), (np.int64(11), np.int64(9)))
2025-04-11 18:51:14,771 [INFO] Final candidates: []
2025-04-11 18:51:14,771 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:14,779 [INFO] Final candidates: []
2025-04-11 18:51:14,779 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:14,779 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:15,010 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:15,010 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(8)), (np.int64(8), np.int64(7)))
2025-04-11 18:51:15,018 [INFO] Final candidates: []
2025-04-11 18:51:15,018 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:15,026 [INFO] Final candidates: []
2025-04-11 18:51:15,026 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:15,026 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:15,120 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:15,121 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(11)), (np.int64(6), np.int64(9)))
2025-04-11 18:51:15,131 [INFO] Final candidates: []
2025-04-11 18:51:15,131 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:15,140 [INFO] Final candidates: []
2025-04-11 18:51:15,140 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:15,141 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:15,208 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:51:15,208 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(10)), (np.int64(6), np.int64(9)))
2025-04-11 18:51:15,216 [INFO] Final candidates: []
2025-04-11 18:51:15,216 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:15,223 [INFO] Final candidates: []
2025-04-11 18:51:15,224 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:15,224 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:15,383 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:51:15,383 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(6)), (np.int64(7), np.int64(8)))
2025-04-11 18:51:15,384 [DEBUG] board coords: [(9, 5), (9, 6), (9, 7), (9, 8), (9, 9), (9, 10)]
2025-04-11 18:51:15,384 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 18:51:15,384 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 5), (9, 7)]
2025-04-11 18:51:15,384 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 0 1 1 1] with coords [(9, 5), (9, 6), (9, 7), (9, 8), (9, 9), (9, 10)] triggers candidate.
2025-04-11 18:51:15,384 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 18:51:15,384 [DEBUG] board values[np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 18:51:15,384 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 7), (9, 11)]
2025-04-11 18:51:15,384 [DEBUG] check_window_intermediate_custom: For L=6, window [1 0 1 1 1 0] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 18:51:15,391 [INFO] Final candidates: [(9, 5), (9, 11), (9, 7)]
2025-04-11 18:51:15,391 [INFO] Phase win: Collected 3unique candidate(s):[((9, 5), (9, 7)), ((9, 11), (9, 7)), ((9, 5), (9, 11))]
2025-04-11 18:51:15,391 [INFO] Phase 1 (immediate win): 3 candidate(s) found.
2025-04-11 18:51:15,403 [INFO] Final candidates: []
2025-04-11 18:51:15,403 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:15,404 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:15,412 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:15,412 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(10)), (np.int64(10), np.int64(8)))
2025-04-11 18:51:15,432 [INFO] Final candidates: []
2025-04-11 18:51:15,432 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:15,452 [INFO] Final candidates: []
2025-04-11 18:51:15,452 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:15,452 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:15,583 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:15,583 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(9)), (np.int64(6), np.int64(9)))
2025-04-11 18:51:15,591 [INFO] Final candidates: []
2025-04-11 18:51:15,591 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:15,599 [INFO] Final candidates: []
2025-04-11 18:51:15,599 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:15,599 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:15,643 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:51:15,643 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(10)), (np.int64(8), np.int64(8)))
2025-04-11 18:51:15,651 [INFO] Final candidates: []
2025-04-11 18:51:15,651 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:15,658 [INFO] Final candidates: []
2025-04-11 18:51:15,658 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:15,659 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:15,706 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:15,706 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(8)), (np.int64(7), np.int64(8)))
2025-04-11 18:51:15,714 [INFO] Final candidates: []
2025-04-11 18:51:15,714 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:15,722 [INFO] Final candidates: []
2025-04-11 18:51:15,722 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:15,722 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:15,873 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:51:15,874 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(11)), (np.int64(9), np.int64(6)))
2025-04-11 18:51:15,874 [DEBUG] board coords: [(9, 5), (9, 6), (9, 7), (9, 8), (9, 9), (9, 10)]
2025-04-11 18:51:15,874 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 18:51:15,874 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 5), (9, 7)]
2025-04-11 18:51:15,875 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 0 1 1 1] with coords [(9, 5), (9, 6), (9, 7), (9, 8), (9, 9), (9, 10)] triggers candidate.
2025-04-11 18:51:15,875 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 18:51:15,875 [DEBUG] board values[np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 18:51:15,875 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 7), (9, 11)]
2025-04-11 18:51:15,875 [DEBUG] check_window_intermediate_custom: For L=6, window [1 0 1 1 1 0] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 18:51:15,882 [INFO] Final candidates: [(9, 5), (9, 11), (9, 7)]
2025-04-11 18:51:15,882 [INFO] Phase win: Collected 3unique candidate(s):[((9, 5), (9, 7)), ((9, 11), (9, 7)), ((9, 5), (9, 11))]
2025-04-11 18:51:15,882 [INFO] Phase 1 (immediate win): 3 candidate(s) found.
2025-04-11 18:51:15,889 [INFO] Final candidates: []
2025-04-11 18:51:15,890 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:15,890 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:15,892 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:15,892 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(8)), (np.int64(6), np.int64(9)))
2025-04-11 18:51:15,902 [INFO] Final candidates: []
2025-04-11 18:51:15,902 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:15,909 [INFO] Final candidates: []
2025-04-11 18:51:15,909 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:15,909 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:16,160 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:51:16,160 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(9)), (np.int64(9), np.int64(7)))
2025-04-11 18:51:16,160 [DEBUG] board coords: [(9, 5), (9, 6), (9, 7), (9, 8), (9, 9), (9, 10)]
2025-04-11 18:51:16,160 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 18:51:16,160 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 5), (9, 6)]
2025-04-11 18:51:16,161 [DEBUG] check_window_intermediate_custom (only one inserted(9, 6)): For L=6, window [0 0 1 1 1 1] with coords [(9, 5), (9, 6), (9, 7), (9, 8), (9, 9), (9, 10)] triggers candidate.
2025-04-11 18:51:16,161 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 18:51:16,161 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 18:51:16,161 [DEBUG] board coords: [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 18:51:16,161 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 18:51:16,161 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 11), (9, 12)]
2025-04-11 18:51:16,161 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [1 1 1 1 0 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 18:51:16,168 [INFO] Final candidates: [(9, 11), (9, 6)]
2025-04-11 18:51:16,168 [INFO] Phase win: Collected 1unique candidate(s):[((9, 11), (9, 6))]
2025-04-11 18:51:16,168 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 18:51:16,175 [INFO] Final candidates: []
2025-04-11 18:51:16,175 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:16,176 [DEBUG] MCTS iteration 50: reached a node with 0 visits.
2025-04-11 18:51:16,176 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:16,419 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:51:16,419 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(10)), (np.int64(10), np.int64(10)))
2025-04-11 18:51:16,427 [INFO] Final candidates: []
2025-04-11 18:51:16,427 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:16,435 [INFO] Final candidates: []
2025-04-11 18:51:16,435 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:16,435 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:16,573 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:16,573 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(11)), (np.int64(10), np.int64(10)))
2025-04-11 18:51:16,581 [INFO] Final candidates: []
2025-04-11 18:51:16,581 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:16,589 [INFO] Final candidates: []
2025-04-11 18:51:16,589 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:16,589 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:16,844 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:16,844 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(12)), (np.int64(8), np.int64(10)))
2025-04-11 18:51:16,845 [DEBUG] board coords: [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 18:51:16,845 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1)]
2025-04-11 18:51:16,845 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 7), (9, 11)]
2025-04-11 18:51:16,845 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 1 1 0 1] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 18:51:16,845 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)]
2025-04-11 18:51:16,845 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(0)]
2025-04-11 18:51:16,845 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 11), (9, 13)]
2025-04-11 18:51:16,845 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 1 0 1 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 18:51:16,852 [INFO] Final candidates: [(9, 11), (9, 13), (9, 7)]
2025-04-11 18:51:16,852 [INFO] Phase win: Collected 3unique candidate(s):[((9, 13), (9, 7)), ((9, 11), (9, 13)), ((9, 11), (9, 7))]
2025-04-11 18:51:16,852 [INFO] Phase 1 (immediate win): 3 candidate(s) found.
2025-04-11 18:51:16,860 [INFO] Final candidates: []
2025-04-11 18:51:16,860 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:16,860 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:16,861 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:16,861 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(8)), (np.int64(8), np.int64(8)))
2025-04-11 18:51:16,869 [INFO] Final candidates: []
2025-04-11 18:51:16,869 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:16,877 [INFO] Final candidates: []
2025-04-11 18:51:16,877 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:16,877 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:17,015 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:17,015 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(9)), (np.int64(10), np.int64(8)))
2025-04-11 18:51:17,023 [INFO] Final candidates: []
2025-04-11 18:51:17,023 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:17,031 [INFO] Final candidates: []
2025-04-11 18:51:17,031 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:17,031 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:17,239 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:17,240 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(10)), (np.int64(10), np.int64(11)))
2025-04-11 18:51:17,248 [INFO] Final candidates: []
2025-04-11 18:51:17,248 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:17,255 [INFO] Final candidates: []
2025-04-11 18:51:17,255 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:17,255 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:17,318 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:51:17,318 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(7)), (np.int64(7), np.int64(9)))
2025-04-11 18:51:17,319 [DEBUG] board coords: [(9, 5), (9, 6), (9, 7), (9, 8), (9, 9), (9, 10)]
2025-04-11 18:51:17,319 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 18:51:17,319 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 5), (9, 6)]
2025-04-11 18:51:17,319 [DEBUG] check_window_intermediate_custom (only one inserted(9, 6)): For L=6, window [0 0 1 1 1 1] with coords [(9, 5), (9, 6), (9, 7), (9, 8), (9, 9), (9, 10)] triggers candidate.
2025-04-11 18:51:17,319 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 18:51:17,319 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 18:51:17,319 [DEBUG] board coords: [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 18:51:17,319 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 18:51:17,319 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 11), (9, 12)]
2025-04-11 18:51:17,319 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [1 1 1 1 0 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 18:51:17,326 [INFO] Final candidates: [(9, 11), (9, 6)]
2025-04-11 18:51:17,326 [INFO] Phase win: Collected 1unique candidate(s):[((9, 11), (9, 6))]
2025-04-11 18:51:17,326 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 18:51:17,334 [INFO] Final candidates: []
2025-04-11 18:51:17,334 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:17,334 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:17,337 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:17,337 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(8)), (np.int64(8), np.int64(11)))
2025-04-11 18:51:17,345 [INFO] Final candidates: []
2025-04-11 18:51:17,345 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:17,353 [INFO] Final candidates: []
2025-04-11 18:51:17,353 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:17,354 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:17,398 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:17,399 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(8)), (np.int64(9), np.int64(12)))
2025-04-11 18:51:17,399 [DEBUG] board coords: [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 18:51:17,399 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1)]
2025-04-11 18:51:17,399 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 7), (9, 11)]
2025-04-11 18:51:17,399 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 1 1 0 1] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 18:51:17,399 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)]
2025-04-11 18:51:17,399 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(0)]
2025-04-11 18:51:17,400 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 11), (9, 13)]
2025-04-11 18:51:17,400 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 1 0 1 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 18:51:17,407 [INFO] Final candidates: [(9, 11), (9, 13), (9, 7)]
2025-04-11 18:51:17,407 [INFO] Phase win: Collected 3unique candidate(s):[((9, 13), (9, 7)), ((9, 11), (9, 13)), ((9, 11), (9, 7))]
2025-04-11 18:51:17,407 [INFO] Phase 1 (immediate win): 3 candidate(s) found.
2025-04-11 18:51:17,414 [INFO] Final candidates: []
2025-04-11 18:51:17,414 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:17,414 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:17,544 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:17,544 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(8)), (np.int64(7), np.int64(9)))
2025-04-11 18:51:17,553 [INFO] Final candidates: []
2025-04-11 18:51:17,553 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:17,571 [INFO] Final candidates: []
2025-04-11 18:51:17,571 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:17,571 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:17,769 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:51:17,769 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(10)), (np.int64(7), np.int64(8)))
2025-04-11 18:51:17,777 [INFO] Final candidates: []
2025-04-11 18:51:17,777 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:17,785 [INFO] Final candidates: []
2025-04-11 18:51:17,785 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:17,785 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:17,802 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:17,802 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(7)), (np.int64(8), np.int64(8)))
2025-04-11 18:51:17,802 [DEBUG] board coords: [(9, 5), (9, 6), (9, 7), (9, 8), (9, 9), (9, 10)]
2025-04-11 18:51:17,802 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 18:51:17,802 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 5), (9, 6)]
2025-04-11 18:51:17,803 [DEBUG] check_window_intermediate_custom (only one inserted(9, 6)): For L=6, window [0 0 1 1 1 1] with coords [(9, 5), (9, 6), (9, 7), (9, 8), (9, 9), (9, 10)] triggers candidate.
2025-04-11 18:51:17,803 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 18:51:17,803 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 18:51:17,803 [DEBUG] board coords: [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 18:51:17,803 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 18:51:17,803 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 11), (9, 12)]
2025-04-11 18:51:17,803 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [1 1 1 1 0 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 18:51:17,810 [INFO] Final candidates: [(9, 11), (9, 6)]
2025-04-11 18:51:17,810 [INFO] Phase win: Collected 1unique candidate(s):[((9, 11), (9, 6))]
2025-04-11 18:51:17,810 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 18:51:17,818 [INFO] Final candidates: []
2025-04-11 18:51:17,818 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:17,818 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:17,818 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:17,819 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(7)), (np.int64(9), np.int64(6)))
2025-04-11 18:51:17,819 [DEBUG] board coords: [(9, 5), (9, 6), (9, 7), (9, 8), (9, 9), (9, 10)]
2025-04-11 18:51:17,819 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 18:51:17,819 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 5), (9, 7)]
2025-04-11 18:51:17,819 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 0 1 1 1] with coords [(9, 5), (9, 6), (9, 7), (9, 8), (9, 9), (9, 10)] triggers candidate.
2025-04-11 18:51:17,819 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 18:51:17,819 [DEBUG] board values[np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 18:51:17,819 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 7), (9, 11)]
2025-04-11 18:51:17,819 [DEBUG] check_window_intermediate_custom: For L=6, window [1 0 1 1 1 0] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 18:51:17,827 [INFO] Final candidates: [(9, 5), (9, 11), (9, 7)]
2025-04-11 18:51:17,827 [INFO] Phase win: Collected 3unique candidate(s):[((9, 5), (9, 7)), ((9, 11), (9, 7)), ((9, 5), (9, 11))]
2025-04-11 18:51:17,827 [INFO] Phase 1 (immediate win): 3 candidate(s) found.
2025-04-11 18:51:17,834 [INFO] Final candidates: []
2025-04-11 18:51:17,834 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:17,834 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:17,953 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:51:17,953 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(10)), (np.int64(11), np.int64(10)))
2025-04-11 18:51:17,961 [INFO] Final candidates: []
2025-04-11 18:51:17,961 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:17,969 [INFO] Final candidates: []
2025-04-11 18:51:17,969 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:17,969 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:18,089 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:18,089 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(9)), (np.int64(7), np.int64(8)))
2025-04-11 18:51:18,097 [INFO] Final candidates: []
2025-04-11 18:51:18,097 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:18,104 [INFO] Final candidates: []
2025-04-11 18:51:18,104 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:18,105 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:18,319 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:18,319 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(11)), (np.int64(9), np.int64(12)))
2025-04-11 18:51:18,320 [DEBUG] board coords: [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 18:51:18,320 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1)]
2025-04-11 18:51:18,320 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 7), (9, 11)]
2025-04-11 18:51:18,320 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 1 1 0 1] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 18:51:18,320 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)]
2025-04-11 18:51:18,320 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(0)]
2025-04-11 18:51:18,320 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 11), (9, 13)]
2025-04-11 18:51:18,320 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 1 0 1 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 18:51:18,327 [INFO] Final candidates: [(9, 11), (9, 13), (9, 7)]
2025-04-11 18:51:18,327 [INFO] Phase win: Collected 3unique candidate(s):[((9, 13), (9, 7)), ((9, 11), (9, 13)), ((9, 11), (9, 7))]
2025-04-11 18:51:18,327 [INFO] Phase 1 (immediate win): 3 candidate(s) found.
2025-04-11 18:51:18,334 [INFO] Final candidates: []
2025-04-11 18:51:18,335 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:18,335 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:18,490 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:51:18,490 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(8)), (np.int64(9), np.int64(12)))
2025-04-11 18:51:18,491 [DEBUG] board coords: [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 18:51:18,491 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1)]
2025-04-11 18:51:18,491 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 7), (9, 11)]
2025-04-11 18:51:18,491 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 1 1 0 1] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 18:51:18,491 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)]
2025-04-11 18:51:18,491 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(0)]
2025-04-11 18:51:18,491 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 11), (9, 13)]
2025-04-11 18:51:18,491 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 1 0 1 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 18:51:18,499 [INFO] Final candidates: [(9, 11), (9, 13), (9, 7)]
2025-04-11 18:51:18,499 [INFO] Phase win: Collected 3unique candidate(s):[((9, 13), (9, 7)), ((9, 11), (9, 13)), ((9, 11), (9, 7))]
2025-04-11 18:51:18,499 [INFO] Phase 1 (immediate win): 3 candidate(s) found.
2025-04-11 18:51:18,506 [INFO] Final candidates: []
2025-04-11 18:51:18,506 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:18,507 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:18,521 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:18,521 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(11)), (np.int64(9), np.int64(12)))
2025-04-11 18:51:18,522 [DEBUG] board coords: [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 18:51:18,522 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1)]
2025-04-11 18:51:18,522 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 7), (9, 11)]
2025-04-11 18:51:18,522 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 1 1 0 1] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 18:51:18,522 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)]
2025-04-11 18:51:18,522 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(0)]
2025-04-11 18:51:18,522 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 11), (9, 13)]
2025-04-11 18:51:18,522 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 1 0 1 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 18:51:18,529 [INFO] Final candidates: [(9, 11), (9, 13), (9, 7)]
2025-04-11 18:51:18,529 [INFO] Phase win: Collected 3unique candidate(s):[((9, 13), (9, 7)), ((9, 11), (9, 13)), ((9, 11), (9, 7))]
2025-04-11 18:51:18,529 [INFO] Phase 1 (immediate win): 3 candidate(s) found.
2025-04-11 18:51:18,537 [INFO] Final candidates: []
2025-04-11 18:51:18,537 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:18,537 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:18,718 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:51:18,718 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(8)), (np.int64(8), np.int64(10)))
2025-04-11 18:51:18,726 [INFO] Final candidates: []
2025-04-11 18:51:18,726 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:18,733 [INFO] Final candidates: []
2025-04-11 18:51:18,733 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:18,733 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:18,840 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:51:18,840 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(9)), (np.int64(10), np.int64(7)))
2025-04-11 18:51:18,848 [INFO] Final candidates: []
2025-04-11 18:51:18,848 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:18,855 [INFO] Final candidates: []
2025-04-11 18:51:18,855 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:18,856 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:19,052 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:51:19,052 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(10)), (np.int64(6), np.int64(9)))
2025-04-11 18:51:19,060 [INFO] Final candidates: []
2025-04-11 18:51:19,060 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:19,068 [INFO] Final candidates: []
2025-04-11 18:51:19,068 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:19,068 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:19,127 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:51:19,127 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(10)), (np.int64(8), np.int64(10)))
2025-04-11 18:51:19,136 [INFO] Final candidates: []
2025-04-11 18:51:19,136 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:19,143 [INFO] Final candidates: []
2025-04-11 18:51:19,143 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:19,144 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:19,159 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:19,159 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(10)), (np.int64(9), np.int64(7)))
2025-04-11 18:51:19,160 [DEBUG] board coords: [(9, 5), (9, 6), (9, 7), (9, 8), (9, 9), (9, 10)]
2025-04-11 18:51:19,160 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 18:51:19,160 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 5), (9, 6)]
2025-04-11 18:51:19,160 [DEBUG] check_window_intermediate_custom (only one inserted(9, 6)): For L=6, window [0 0 1 1 1 1] with coords [(9, 5), (9, 6), (9, 7), (9, 8), (9, 9), (9, 10)] triggers candidate.
2025-04-11 18:51:19,160 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 18:51:19,160 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 18:51:19,160 [DEBUG] board coords: [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 18:51:19,160 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 18:51:19,160 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 11), (9, 12)]
2025-04-11 18:51:19,160 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [1 1 1 1 0 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 18:51:19,168 [INFO] Final candidates: [(9, 11), (9, 6)]
2025-04-11 18:51:19,169 [INFO] Phase win: Collected 1unique candidate(s):[((9, 11), (9, 6))]
2025-04-11 18:51:19,169 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 18:51:19,176 [INFO] Final candidates: []
2025-04-11 18:51:19,176 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:19,176 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:19,216 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:19,216 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(8)), (np.int64(10), np.int64(11)))
2025-04-11 18:51:19,224 [INFO] Final candidates: []
2025-04-11 18:51:19,224 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:19,231 [INFO] Final candidates: []
2025-04-11 18:51:19,231 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:19,231 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:19,328 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:19,329 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(10)), (np.int64(11), np.int64(9)))
2025-04-11 18:51:19,337 [INFO] Final candidates: []
2025-04-11 18:51:19,337 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:19,344 [INFO] Final candidates: []
2025-04-11 18:51:19,344 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:19,344 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:19,466 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:51:19,467 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(8)), (np.int64(7), np.int64(10)))
2025-04-11 18:51:19,474 [INFO] Final candidates: []
2025-04-11 18:51:19,475 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:19,482 [INFO] Final candidates: []
2025-04-11 18:51:19,482 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:19,482 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:19,678 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:51:19,679 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(11)), (np.int64(11), np.int64(9)))
2025-04-11 18:51:19,679 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 18:51:19,679 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 18:51:19,679 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 18:51:19,679 [DEBUG] check_window_intermediate_custom (only one inserted(9, 7)): For L=6, window [0 0 1 1 1 1] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 18:51:19,679 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 18:51:19,679 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 18:51:19,680 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)]
2025-04-11 18:51:19,680 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 18:51:19,680 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 12), (9, 13)]
2025-04-11 18:51:19,680 [DEBUG] check_window_intermediate_custom (only one inserted(9, 12)): For L=6, window [1 1 1 1 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 18:51:19,687 [INFO] Final candidates: [(9, 12), (9, 7)]
2025-04-11 18:51:19,687 [INFO] Phase win: Collected 1unique candidate(s):[((9, 12), (9, 7))]
2025-04-11 18:51:19,687 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 18:51:19,695 [INFO] Final candidates: []
2025-04-11 18:51:19,695 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:19,695 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:19,954 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:19,955 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(10)), (np.int64(10), np.int64(7)))
2025-04-11 18:51:19,962 [INFO] Final candidates: []
2025-04-11 18:51:19,962 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:19,970 [INFO] Final candidates: []
2025-04-11 18:51:19,970 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:19,971 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:19,993 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:19,993 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(11)), (np.int64(8), np.int64(10)))
2025-04-11 18:51:19,994 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 18:51:19,994 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 18:51:19,994 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 18:51:19,994 [DEBUG] check_window_intermediate_custom (only one inserted(9, 7)): For L=6, window [0 0 1 1 1 1] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 18:51:19,994 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 18:51:19,994 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 18:51:19,994 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)]
2025-04-11 18:51:19,994 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 18:51:19,994 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 12), (9, 13)]
2025-04-11 18:51:19,994 [DEBUG] check_window_intermediate_custom (only one inserted(9, 12)): For L=6, window [1 1 1 1 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 18:51:20,002 [INFO] Final candidates: [(9, 12), (9, 7)]
2025-04-11 18:51:20,002 [INFO] Phase win: Collected 1unique candidate(s):[((9, 12), (9, 7))]
2025-04-11 18:51:20,002 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 18:51:20,009 [INFO] Final candidates: []
2025-04-11 18:51:20,009 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:20,009 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:20,148 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:20,148 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(6)), (np.int64(10), np.int64(7)))
2025-04-11 18:51:20,149 [DEBUG] board coords: [(9, 5), (9, 6), (9, 7), (9, 8), (9, 9), (9, 10)]
2025-04-11 18:51:20,149 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 18:51:20,149 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 5), (9, 7)]
2025-04-11 18:51:20,149 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 0 1 1 1] with coords [(9, 5), (9, 6), (9, 7), (9, 8), (9, 9), (9, 10)] triggers candidate.
2025-04-11 18:51:20,149 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 18:51:20,149 [DEBUG] board values[np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 18:51:20,149 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 7), (9, 11)]
2025-04-11 18:51:20,149 [DEBUG] check_window_intermediate_custom: For L=6, window [1 0 1 1 1 0] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 18:51:20,157 [INFO] Final candidates: [(9, 5), (9, 11), (9, 7)]
2025-04-11 18:51:20,157 [INFO] Phase win: Collected 3unique candidate(s):[((9, 5), (9, 7)), ((9, 11), (9, 7)), ((9, 5), (9, 11))]
2025-04-11 18:51:20,157 [INFO] Phase 1 (immediate win): 3 candidate(s) found.
2025-04-11 18:51:20,164 [INFO] Final candidates: []
2025-04-11 18:51:20,164 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:20,164 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:20,272 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:20,272 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(10)), (np.int64(9), np.int64(6)))
2025-04-11 18:51:20,273 [DEBUG] board coords: [(9, 5), (9, 6), (9, 7), (9, 8), (9, 9), (9, 10)]
2025-04-11 18:51:20,273 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 18:51:20,273 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 5), (9, 7)]
2025-04-11 18:51:20,273 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 0 1 1 1] with coords [(9, 5), (9, 6), (9, 7), (9, 8), (9, 9), (9, 10)] triggers candidate.
2025-04-11 18:51:20,273 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 18:51:20,273 [DEBUG] board values[np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 18:51:20,273 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 7), (9, 11)]
2025-04-11 18:51:20,273 [DEBUG] check_window_intermediate_custom: For L=6, window [1 0 1 1 1 0] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 18:51:20,281 [INFO] Final candidates: [(9, 5), (9, 11), (9, 7)]
2025-04-11 18:51:20,281 [INFO] Phase win: Collected 3unique candidate(s):[((9, 5), (9, 7)), ((9, 11), (9, 7)), ((9, 5), (9, 11))]
2025-04-11 18:51:20,281 [INFO] Phase 1 (immediate win): 3 candidate(s) found.
2025-04-11 18:51:20,288 [INFO] Final candidates: []
2025-04-11 18:51:20,288 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:20,289 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:20,483 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:20,483 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(10)), (np.int64(12), np.int64(9)))
2025-04-11 18:51:20,491 [INFO] Final candidates: []
2025-04-11 18:51:20,491 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:20,500 [INFO] Final candidates: []
2025-04-11 18:51:20,500 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:20,501 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:20,565 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:20,565 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(8)), (np.int64(7), np.int64(9)))
2025-04-11 18:51:20,573 [INFO] Final candidates: []
2025-04-11 18:51:20,573 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:20,581 [INFO] Final candidates: []
2025-04-11 18:51:20,581 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:20,581 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:20,796 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:20,796 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(11)), (np.int64(8), np.int64(7)))
2025-04-11 18:51:20,797 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 18:51:20,797 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 18:51:20,797 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 18:51:20,797 [DEBUG] check_window_intermediate_custom (only one inserted(9, 7)): For L=6, window [0 0 1 1 1 1] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 18:51:20,797 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 18:51:20,797 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 18:51:20,797 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)]
2025-04-11 18:51:20,797 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 18:51:20,797 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 12), (9, 13)]
2025-04-11 18:51:20,797 [DEBUG] check_window_intermediate_custom (only one inserted(9, 12)): For L=6, window [1 1 1 1 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 18:51:20,804 [INFO] Final candidates: [(9, 12), (9, 7)]
2025-04-11 18:51:20,804 [INFO] Phase win: Collected 1unique candidate(s):[((9, 12), (9, 7))]
2025-04-11 18:51:20,804 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 18:51:20,812 [INFO] Final candidates: []
2025-04-11 18:51:20,812 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:20,813 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:21,014 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:21,014 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(6)), (np.int64(8), np.int64(10)))
2025-04-11 18:51:21,015 [DEBUG] board coords: [(9, 5), (9, 6), (9, 7), (9, 8), (9, 9), (9, 10)]
2025-04-11 18:51:21,015 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 18:51:21,015 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 5), (9, 7)]
2025-04-11 18:51:21,015 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 0 1 1 1] with coords [(9, 5), (9, 6), (9, 7), (9, 8), (9, 9), (9, 10)] triggers candidate.
2025-04-11 18:51:21,015 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 18:51:21,015 [DEBUG] board values[np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 18:51:21,015 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 7), (9, 11)]
2025-04-11 18:51:21,015 [DEBUG] check_window_intermediate_custom: For L=6, window [1 0 1 1 1 0] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 18:51:21,022 [INFO] Final candidates: [(9, 5), (9, 11), (9, 7)]
2025-04-11 18:51:21,022 [INFO] Phase win: Collected 3unique candidate(s):[((9, 5), (9, 7)), ((9, 11), (9, 7)), ((9, 5), (9, 11))]
2025-04-11 18:51:21,022 [INFO] Phase 1 (immediate win): 3 candidate(s) found.
2025-04-11 18:51:21,030 [INFO] Final candidates: []
2025-04-11 18:51:21,030 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:21,030 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:21,089 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:21,089 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(7)), (np.int64(11), np.int64(9)))
2025-04-11 18:51:21,097 [INFO] Final candidates: []
2025-04-11 18:51:21,097 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:21,104 [INFO] Final candidates: []
2025-04-11 18:51:21,104 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:21,105 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:21,166 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:21,166 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(11)), (np.int64(11), np.int64(8)))
2025-04-11 18:51:21,167 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 18:51:21,167 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 18:51:21,167 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 18:51:21,167 [DEBUG] check_window_intermediate_custom (only one inserted(9, 7)): For L=6, window [0 0 1 1 1 1] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 18:51:21,167 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 18:51:21,167 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 18:51:21,167 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)]
2025-04-11 18:51:21,167 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 18:51:21,167 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 12), (9, 13)]
2025-04-11 18:51:21,167 [DEBUG] check_window_intermediate_custom (only one inserted(9, 12)): For L=6, window [1 1 1 1 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 18:51:21,175 [INFO] Final candidates: [(9, 12), (9, 7)]
2025-04-11 18:51:21,175 [INFO] Phase win: Collected 1unique candidate(s):[((9, 12), (9, 7))]
2025-04-11 18:51:21,175 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 18:51:21,183 [INFO] Final candidates: []
2025-04-11 18:51:21,183 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:21,183 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:21,231 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:21,232 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(7)), (np.int64(6), np.int64(9)))
2025-04-11 18:51:21,252 [INFO] Final candidates: []
2025-04-11 18:51:21,252 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:21,271 [INFO] Final candidates: []
2025-04-11 18:51:21,271 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:21,272 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:21,418 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:21,418 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(10)), (np.int64(8), np.int64(7)))
2025-04-11 18:51:21,426 [INFO] Final candidates: []
2025-04-11 18:51:21,426 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:21,434 [INFO] Final candidates: []
2025-04-11 18:51:21,434 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:21,434 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:21,681 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:51:21,682 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(8)), (np.int64(8), np.int64(10)))
2025-04-11 18:51:21,689 [INFO] Final candidates: []
2025-04-11 18:51:21,689 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:21,697 [INFO] Final candidates: []
2025-04-11 18:51:21,697 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:21,698 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:21,831 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:21,831 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(11)), (np.int64(8), np.int64(10)))
2025-04-11 18:51:21,839 [INFO] Final candidates: []
2025-04-11 18:51:21,839 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:21,847 [INFO] Final candidates: []
2025-04-11 18:51:21,847 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:21,847 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:21,978 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:51:21,979 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(11)), (np.int64(8), np.int64(8)))
2025-04-11 18:51:21,986 [INFO] Final candidates: []
2025-04-11 18:51:21,986 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:21,994 [INFO] Final candidates: []
2025-04-11 18:51:21,994 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:21,994 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:22,116 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:22,116 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(9)), (np.int64(7), np.int64(9)))
2025-04-11 18:51:22,125 [INFO] Final candidates: []
2025-04-11 18:51:22,125 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:22,134 [INFO] Final candidates: []
2025-04-11 18:51:22,134 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:22,134 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:22,185 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:51:22,185 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(7)), (np.int64(7), np.int64(8)))
2025-04-11 18:51:22,194 [INFO] Final candidates: []
2025-04-11 18:51:22,194 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:22,202 [INFO] Final candidates: []
2025-04-11 18:51:22,202 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:22,202 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:22,218 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:22,218 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(10)), (np.int64(8), np.int64(10)))
2025-04-11 18:51:22,226 [INFO] Final candidates: []
2025-04-11 18:51:22,226 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:22,233 [INFO] Final candidates: []
2025-04-11 18:51:22,233 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:22,233 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:22,324 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:51:22,324 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(12)), (np.int64(10), np.int64(7)))
2025-04-11 18:51:22,325 [DEBUG] board coords: [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 18:51:22,325 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1)]
2025-04-11 18:51:22,325 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 7), (9, 11)]
2025-04-11 18:51:22,325 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 1 1 0 1] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 18:51:22,325 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)]
2025-04-11 18:51:22,325 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(0)]
2025-04-11 18:51:22,325 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 11), (9, 13)]
2025-04-11 18:51:22,325 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 1 0 1 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 18:51:22,333 [INFO] Final candidates: [(9, 11), (9, 13), (9, 7)]
2025-04-11 18:51:22,334 [INFO] Phase win: Collected 3unique candidate(s):[((9, 13), (9, 7)), ((9, 11), (9, 13)), ((9, 11), (9, 7))]
2025-04-11 18:51:22,334 [INFO] Phase 1 (immediate win): 3 candidate(s) found.
2025-04-11 18:51:22,342 [INFO] Final candidates: []
2025-04-11 18:51:22,342 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:22,342 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:22,484 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:22,484 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(10)), (np.int64(10), np.int64(8)))
2025-04-11 18:51:22,492 [INFO] Final candidates: []
2025-04-11 18:51:22,492 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:22,499 [INFO] Final candidates: []
2025-04-11 18:51:22,499 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:22,499 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:22,591 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:22,592 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(7)), (np.int64(8), np.int64(10)))
2025-04-11 18:51:22,592 [DEBUG] board coords: [(9, 5), (9, 6), (9, 7), (9, 8), (9, 9), (9, 10)]
2025-04-11 18:51:22,592 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 18:51:22,592 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 5), (9, 6)]
2025-04-11 18:51:22,592 [DEBUG] check_window_intermediate_custom (only one inserted(9, 6)): For L=6, window [0 0 1 1 1 1] with coords [(9, 5), (9, 6), (9, 7), (9, 8), (9, 9), (9, 10)] triggers candidate.
2025-04-11 18:51:22,592 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 18:51:22,592 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 18:51:22,592 [DEBUG] board coords: [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 18:51:22,592 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 18:51:22,592 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 11), (9, 12)]
2025-04-11 18:51:22,592 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [1 1 1 1 0 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 18:51:22,600 [INFO] Final candidates: [(9, 11), (9, 6)]
2025-04-11 18:51:22,600 [INFO] Phase win: Collected 1unique candidate(s):[((9, 11), (9, 6))]
2025-04-11 18:51:22,600 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 18:51:22,607 [INFO] Final candidates: []
2025-04-11 18:51:22,607 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:22,607 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:22,780 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:22,780 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(11)), (np.int64(9), np.int64(6)))
2025-04-11 18:51:22,781 [DEBUG] board coords: [(9, 5), (9, 6), (9, 7), (9, 8), (9, 9), (9, 10)]
2025-04-11 18:51:22,781 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 18:51:22,781 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 5), (9, 7)]
2025-04-11 18:51:22,781 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 0 1 1 1] with coords [(9, 5), (9, 6), (9, 7), (9, 8), (9, 9), (9, 10)] triggers candidate.
2025-04-11 18:51:22,781 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 18:51:22,781 [DEBUG] board values[np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 18:51:22,781 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 7), (9, 11)]
2025-04-11 18:51:22,781 [DEBUG] check_window_intermediate_custom: For L=6, window [1 0 1 1 1 0] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 18:51:22,788 [INFO] Final candidates: [(9, 5), (9, 11), (9, 7)]
2025-04-11 18:51:22,788 [INFO] Phase win: Collected 3unique candidate(s):[((9, 5), (9, 7)), ((9, 11), (9, 7)), ((9, 5), (9, 11))]
2025-04-11 18:51:22,788 [INFO] Phase 1 (immediate win): 3 candidate(s) found.
2025-04-11 18:51:22,795 [INFO] Final candidates: []
2025-04-11 18:51:22,795 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:22,796 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:22,984 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:51:22,984 [INFO] MCTS: Search finished. Best move selected with 1 visits.
2025-04-11 18:51:22,984 [INFO] MCTS selected move: J9,G10
2025-04-11 18:51:22,984 [INFO] ===============NEW MOVE================
2025-04-11 18:51:31,485 [INFO] Starting pre-MCTS candidate collection.
2025-04-11 18:51:31,492 [INFO] Final candidates: []
2025-04-11 18:51:31,492 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:31,493 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 18:51:31,493 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 18:51:31,493 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 18:51:31,493 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(0)]
2025-04-11 18:51:31,493 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 12), (9, 14)]
2025-04-11 18:51:31,493 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 1 0 1 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 18:51:31,500 [INFO] Final candidates: [(9, 12), (9, 7), (9, 14)]
2025-04-11 18:51:31,500 [INFO] Phase defense: Collected 3unique candidate(s):[((9, 12), (9, 14)), ((9, 12), (9, 7)), ((9, 7), (9, 14))]
2025-04-11 18:51:31,500 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:51:31,500 [INFO] MCTS: Starting search for 100 iterations.
2025-04-11 18:51:31,500 [DEBUG] Tree_policy iteration 1: Expanding move ((9, 12), (9, 7))
2025-04-11 18:51:31,508 [INFO] Final candidates: []
2025-04-11 18:51:31,508 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:31,515 [INFO] Final candidates: []
2025-04-11 18:51:31,515 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:31,515 [DEBUG] MCTS iteration 0: reached a node with 0 visits.
2025-04-11 18:51:31,515 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:31,638 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:31,638 [DEBUG] Tree_policy iteration 1: Expanding move ((9, 12), (9, 14))
2025-04-11 18:51:31,647 [INFO] Final candidates: []
2025-04-11 18:51:31,647 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:31,655 [INFO] Final candidates: []
2025-04-11 18:51:31,655 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:31,655 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:31,711 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:51:31,712 [DEBUG] Tree_policy iteration 1: Expanding move ((9, 7), (9, 14))
2025-04-11 18:51:31,719 [INFO] Final candidates: []
2025-04-11 18:51:31,719 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:31,726 [INFO] Final candidates: [(9, 12)]
2025-04-11 18:51:31,726 [INFO] Phase defense: Found only one candidate: (9, 12)
2025-04-11 18:51:31,726 [INFO] Phase defense: Collected 8unique candidate(s):[((9, 12), (np.int64(10), np.int64(12))), ((9, 12), (np.int64(8), np.int64(13))), ((9, 12), (np.int64(10), np.int64(11))), ((9, 12), (np.int64(10), np.int64(13))), ((9, 12), (np.int64(11), np.int64(12))), ((9, 12), (np.int64(8), np.int64(12))), ((9, 12), (np.int64(8), np.int64(11))), ((9, 12), (np.int64(7), np.int64(12)))]
2025-04-11 18:51:31,727 [INFO] Phase 2 (defense): 8 candidate(s) found.
2025-04-11 18:51:31,727 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:31,798 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:51:31,799 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:31,799 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(7)), (np.int64(6), np.int64(8)))
2025-04-11 18:51:31,806 [INFO] Final candidates: []
2025-04-11 18:51:31,806 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:31,813 [INFO] Final candidates: []
2025-04-11 18:51:31,813 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:31,814 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:31,858 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:51:31,858 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:31,858 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(10)), (np.int64(7), np.int64(14)))
2025-04-11 18:51:31,865 [INFO] Final candidates: []
2025-04-11 18:51:31,865 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:31,873 [INFO] Final candidates: []
2025-04-11 18:51:31,873 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:31,873 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:32,209 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:51:32,209 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:32,209 [DEBUG] Tree_policy iteration 2: Expanding move ((9, 12), (np.int64(8), np.int64(13)))
2025-04-11 18:51:32,217 [INFO] Final candidates: []
2025-04-11 18:51:32,217 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:32,225 [INFO] Final candidates: []
2025-04-11 18:51:32,225 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:32,225 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:32,225 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:32,225 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:32,225 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(11)), (np.int64(10), np.int64(14)))
2025-04-11 18:51:32,233 [INFO] Final candidates: []
2025-04-11 18:51:32,233 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:32,240 [INFO] Final candidates: []
2025-04-11 18:51:32,240 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:32,240 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:32,310 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:32,311 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:32,311 [DEBUG] Tree_policy iteration 2: Expanding move ((9, 12), (np.int64(10), np.int64(13)))
2025-04-11 18:51:32,318 [INFO] Final candidates: []
2025-04-11 18:51:32,318 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:32,325 [INFO] Final candidates: []
2025-04-11 18:51:32,325 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:32,326 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:32,326 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:32,326 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:32,326 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(9)), (np.int64(7), np.int64(11)))
2025-04-11 18:51:32,333 [INFO] Final candidates: []
2025-04-11 18:51:32,334 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:32,341 [INFO] Final candidates: []
2025-04-11 18:51:32,341 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:32,341 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:32,451 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:32,452 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:32,452 [DEBUG] Tree_policy iteration 2: Expanding move ((9, 12), (np.int64(7), np.int64(12)))
2025-04-11 18:51:32,461 [INFO] Final candidates: []
2025-04-11 18:51:32,461 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:32,469 [INFO] Final candidates: []
2025-04-11 18:51:32,469 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:32,469 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:32,469 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:32,469 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:32,469 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(8)), (np.int64(7), np.int64(11)))
2025-04-11 18:51:32,477 [INFO] Final candidates: []
2025-04-11 18:51:32,477 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:32,486 [INFO] Final candidates: []
2025-04-11 18:51:32,486 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:32,487 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:32,629 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:32,629 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:32,630 [DEBUG] Tree_policy iteration 2: Expanding move ((9, 12), (np.int64(10), np.int64(11)))
2025-04-11 18:51:32,637 [INFO] Final candidates: []
2025-04-11 18:51:32,637 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:32,644 [INFO] Final candidates: []
2025-04-11 18:51:32,644 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:32,645 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:32,645 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:32,645 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:32,645 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(6)), (np.int64(7), np.int64(10)))
2025-04-11 18:51:32,652 [INFO] Final candidates: []
2025-04-11 18:51:32,652 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:32,659 [INFO] Final candidates: []
2025-04-11 18:51:32,659 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:32,660 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:32,786 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:51:32,787 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:32,787 [DEBUG] Tree_policy iteration 2: Expanding move ((9, 12), (np.int64(8), np.int64(11)))
2025-04-11 18:51:32,794 [INFO] Final candidates: []
2025-04-11 18:51:32,794 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:32,803 [INFO] Final candidates: []
2025-04-11 18:51:32,803 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:32,803 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:32,804 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:32,804 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:32,804 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(12)), (np.int64(9), np.int64(4)))
2025-04-11 18:51:32,811 [INFO] Final candidates: []
2025-04-11 18:51:32,811 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:32,818 [INFO] Final candidates: []
2025-04-11 18:51:32,818 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:32,819 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:33,001 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:33,001 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:33,001 [DEBUG] Tree_policy iteration 2: Expanding move ((9, 12), (np.int64(11), np.int64(12)))
2025-04-11 18:51:33,009 [INFO] Final candidates: []
2025-04-11 18:51:33,009 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:33,016 [INFO] Final candidates: []
2025-04-11 18:51:33,016 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:33,016 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:33,016 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:33,016 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:33,017 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(5)), (np.int64(8), np.int64(13)))
2025-04-11 18:51:33,024 [INFO] Final candidates: []
2025-04-11 18:51:33,024 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:33,031 [INFO] Final candidates: []
2025-04-11 18:51:33,031 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:33,032 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:33,195 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:51:33,195 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:33,195 [DEBUG] Tree_policy iteration 2: Expanding move ((9, 12), (np.int64(10), np.int64(12)))
2025-04-11 18:51:33,205 [INFO] Final candidates: []
2025-04-11 18:51:33,205 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:33,212 [INFO] Final candidates: []
2025-04-11 18:51:33,212 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:33,213 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:33,213 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:33,213 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:33,213 [DEBUG] Tree_policy iteration 2: Expanding move ((9, 12), (np.int64(8), np.int64(12)))
2025-04-11 18:51:33,220 [INFO] Final candidates: []
2025-04-11 18:51:33,221 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:33,228 [INFO] Final candidates: []
2025-04-11 18:51:33,228 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:33,228 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:33,228 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:33,228 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:33,228 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(14)), (np.int64(7), np.int64(7)))
2025-04-11 18:51:33,236 [INFO] Final candidates: []
2025-04-11 18:51:33,236 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:33,243 [INFO] Final candidates: []
2025-04-11 18:51:33,243 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:33,243 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:33,312 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:51:33,312 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:33,312 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:33,312 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 18:51:33,312 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:33,312 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:33,312 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:33,312 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:33,312 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 18:51:33,312 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:33,312 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:33,312 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:33,313 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:33,313 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 18:51:33,313 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:33,313 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:33,313 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:33,313 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:33,313 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 18:51:33,313 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:33,313 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:33,313 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:33,313 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(11)), (np.int64(10), np.int64(13)))
2025-04-11 18:51:33,320 [INFO] Final candidates: []
2025-04-11 18:51:33,320 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:33,327 [INFO] Final candidates: []
2025-04-11 18:51:33,327 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:33,328 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:33,447 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:33,447 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:33,447 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(8)), (np.int64(11), np.int64(6)))
2025-04-11 18:51:33,457 [INFO] Final candidates: []
2025-04-11 18:51:33,457 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:33,464 [INFO] Final candidates: []
2025-04-11 18:51:33,464 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:33,465 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:33,554 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:33,555 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:33,555 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:33,555 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 18:51:33,555 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:33,555 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:33,555 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:33,555 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(8)), (np.int64(6), np.int64(9)))
2025-04-11 18:51:33,562 [INFO] Final candidates: []
2025-04-11 18:51:33,562 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:33,569 [INFO] Final candidates: []
2025-04-11 18:51:33,569 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:33,570 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:33,653 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:33,653 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:33,653 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(13)), (np.int64(11), np.int64(6)))
2025-04-11 18:51:33,661 [INFO] Final candidates: []
2025-04-11 18:51:33,661 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:33,668 [INFO] Final candidates: []
2025-04-11 18:51:33,668 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:33,669 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:33,835 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:51:33,835 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:33,835 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(16)), (np.int64(10), np.int64(7)))
2025-04-11 18:51:33,843 [INFO] Final candidates: []
2025-04-11 18:51:33,843 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:33,850 [INFO] Final candidates: []
2025-04-11 18:51:33,850 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:33,850 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:33,932 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:33,932 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:33,933 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:33,933 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 18:51:33,933 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:33,933 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:33,933 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:33,933 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(12)), (np.int64(7), np.int64(12)))
2025-04-11 18:51:33,941 [INFO] Final candidates: []
2025-04-11 18:51:33,942 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:33,951 [INFO] Final candidates: []
2025-04-11 18:51:33,952 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:33,952 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:34,046 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:51:34,046 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:34,046 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:34,046 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 18:51:34,046 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:34,046 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:34,046 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:34,046 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:34,046 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 18:51:34,046 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:34,046 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:34,047 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:34,047 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:34,047 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 18:51:34,047 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:34,047 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:34,047 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:34,047 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:34,047 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 18:51:34,047 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:34,047 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:34,047 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:34,047 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:34,047 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 18:51:34,047 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:34,047 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:34,047 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:34,047 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:34,047 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 18:51:34,047 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:34,047 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:34,048 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:34,048 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(11)), (np.int64(7), np.int64(10)))
2025-04-11 18:51:34,055 [INFO] Final candidates: []
2025-04-11 18:51:34,055 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:34,062 [INFO] Final candidates: []
2025-04-11 18:51:34,062 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:34,063 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:34,353 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:51:34,353 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:34,353 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:34,353 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 18:51:34,353 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:34,353 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:34,353 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:34,353 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(15)), (np.int64(11), np.int64(11)))
2025-04-11 18:51:34,360 [INFO] Final candidates: []
2025-04-11 18:51:34,360 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:34,368 [INFO] Final candidates: []
2025-04-11 18:51:34,368 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:34,369 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:34,443 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:51:34,443 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:34,444 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:34,444 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 18:51:34,444 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:34,444 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:34,444 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:34,444 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:34,444 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 18:51:34,444 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:34,444 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:34,444 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:34,444 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:34,444 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 18:51:34,444 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:34,444 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:34,444 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:34,444 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:34,444 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 18:51:34,444 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:34,444 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:34,445 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:34,445 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:34,445 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 18:51:34,445 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:34,445 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:34,445 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:34,445 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:34,445 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 18:51:34,445 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:34,445 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:34,445 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:34,445 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:34,445 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 18:51:34,445 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:34,445 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:34,445 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:34,445 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:34,445 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 18:51:34,445 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:34,445 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:34,446 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:34,446 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:34,446 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 18:51:34,446 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:34,446 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:34,446 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:34,446 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(11)), (np.int64(8), np.int64(5)))
2025-04-11 18:51:34,454 [INFO] Final candidates: []
2025-04-11 18:51:34,454 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:34,461 [INFO] Final candidates: []
2025-04-11 18:51:34,461 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:34,462 [DEBUG] MCTS iteration 50: reached a node with 0 visits.
2025-04-11 18:51:34,462 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:34,620 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:51:34,620 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:34,620 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(10)), (np.int64(11), np.int64(10)))
2025-04-11 18:51:34,627 [INFO] Final candidates: []
2025-04-11 18:51:34,627 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:34,634 [INFO] Final candidates: []
2025-04-11 18:51:34,635 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:34,635 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:34,684 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:34,684 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:34,684 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(14)), (np.int64(7), np.int64(10)))
2025-04-11 18:51:34,692 [INFO] Final candidates: []
2025-04-11 18:51:34,692 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:34,699 [INFO] Final candidates: []
2025-04-11 18:51:34,699 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:34,700 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:34,938 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:51:34,938 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:34,938 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:34,938 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 18:51:34,938 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:34,938 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:34,938 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:34,938 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:34,938 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 18:51:34,938 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:34,938 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:34,938 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:34,939 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:34,939 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 18:51:34,939 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:34,939 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:34,939 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:34,939 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:34,939 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 18:51:34,939 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:34,939 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:34,939 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:34,939 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:34,939 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 18:51:34,939 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:34,939 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:34,939 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:34,939 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:34,939 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 18:51:34,939 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:34,939 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:34,939 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:34,940 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:34,940 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 18:51:34,940 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:34,940 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:34,940 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:34,940 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:34,940 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 18:51:34,940 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:34,940 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:34,940 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:34,940 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:34,940 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 18:51:34,940 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:34,940 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:34,940 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:34,940 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:34,940 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 18:51:34,940 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:34,940 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:34,940 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:34,940 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:34,941 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 18:51:34,941 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:34,941 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:34,941 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:34,941 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:34,941 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 18:51:34,941 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:34,941 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:34,941 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:34,941 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(9)), (np.int64(7), np.int64(9)))
2025-04-11 18:51:34,950 [INFO] Final candidates: []
2025-04-11 18:51:34,950 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:34,958 [INFO] Final candidates: []
2025-04-11 18:51:34,958 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:34,958 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:35,012 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:51:35,013 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:35,013 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(8)), (np.int64(8), np.int64(13)))
2025-04-11 18:51:35,020 [INFO] Final candidates: []
2025-04-11 18:51:35,020 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:35,027 [INFO] Final candidates: []
2025-04-11 18:51:35,027 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:35,028 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:35,124 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:35,124 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:35,124 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(9)), (np.int64(11), np.int64(12)))
2025-04-11 18:51:35,132 [INFO] Final candidates: []
2025-04-11 18:51:35,132 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:35,139 [INFO] Final candidates: []
2025-04-11 18:51:35,139 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:35,139 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:35,398 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:35,398 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:35,398 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(7)), (np.int64(8), np.int64(10)))
2025-04-11 18:51:35,405 [INFO] Final candidates: []
2025-04-11 18:51:35,406 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:35,413 [INFO] Final candidates: []
2025-04-11 18:51:35,413 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:35,413 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:35,493 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:35,493 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:35,493 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(6)), (np.int64(11), np.int64(11)))
2025-04-11 18:51:35,501 [INFO] Final candidates: []
2025-04-11 18:51:35,501 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:35,508 [INFO] Final candidates: []
2025-04-11 18:51:35,508 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:35,508 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:35,691 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:35,691 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:35,691 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(13)), (np.int64(9), np.int64(15)))
2025-04-11 18:51:35,698 [INFO] Final candidates: []
2025-04-11 18:51:35,698 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:35,706 [INFO] Final candidates: []
2025-04-11 18:51:35,706 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:35,706 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:36,034 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:36,035 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:36,035 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(14)), (np.int64(11), np.int64(13)))
2025-04-11 18:51:36,042 [INFO] Final candidates: []
2025-04-11 18:51:36,042 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:36,049 [INFO] Final candidates: []
2025-04-11 18:51:36,049 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:36,049 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:36,127 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:51:36,127 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:36,127 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:36,127 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 18:51:36,127 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:36,127 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:36,128 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:36,128 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:36,128 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 18:51:36,128 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:36,128 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:36,128 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:36,128 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:36,128 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 18:51:36,128 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:36,128 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:36,128 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:36,128 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:36,128 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 18:51:36,128 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:36,128 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:36,128 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:36,128 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:36,128 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 18:51:36,128 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:36,129 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:36,129 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:36,129 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:36,129 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 18:51:36,129 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:36,129 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:36,129 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:36,129 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:36,129 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 18:51:36,129 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:36,129 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:36,129 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:36,129 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:36,129 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 18:51:36,129 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:36,129 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:36,129 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:36,129 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:36,129 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 18:51:36,129 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:36,129 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:36,131 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:36,131 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:36,131 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 18:51:36,131 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:36,131 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:36,131 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:36,131 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:36,131 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 18:51:36,131 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:36,131 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:36,131 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:36,131 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:36,131 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 18:51:36,131 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:36,131 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:36,131 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:36,132 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(13)), (np.int64(8), np.int64(13)))
2025-04-11 18:51:36,139 [INFO] Final candidates: []
2025-04-11 18:51:36,139 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:36,147 [INFO] Final candidates: []
2025-04-11 18:51:36,147 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:36,147 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:36,319 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:51:36,319 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:36,319 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(5)), (np.int64(6), np.int64(9)))
2025-04-11 18:51:36,327 [INFO] Final candidates: []
2025-04-11 18:51:36,327 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:36,334 [INFO] Final candidates: []
2025-04-11 18:51:36,334 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:36,334 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:36,487 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:36,488 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:36,488 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(15)), (np.int64(7), np.int64(7)))
2025-04-11 18:51:36,495 [INFO] Final candidates: []
2025-04-11 18:51:36,495 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:36,502 [INFO] Final candidates: []
2025-04-11 18:51:36,502 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:36,503 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:36,570 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:36,570 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:36,570 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(6)), (np.int64(11), np.int64(13)))
2025-04-11 18:51:36,578 [INFO] Final candidates: []
2025-04-11 18:51:36,578 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:36,585 [INFO] Final candidates: []
2025-04-11 18:51:36,585 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:36,585 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:36,661 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:36,661 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:36,661 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(14)), (np.int64(6), np.int64(8)))
2025-04-11 18:51:36,669 [INFO] Final candidates: []
2025-04-11 18:51:36,669 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:36,676 [INFO] Final candidates: []
2025-04-11 18:51:36,676 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:36,676 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:36,848 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:36,848 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:36,848 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(13)), (np.int64(10), np.int64(10)))
2025-04-11 18:51:36,857 [INFO] Final candidates: []
2025-04-11 18:51:36,857 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:51:36,864 [INFO] Final candidates: []
2025-04-11 18:51:36,864 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:51:36,864 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:36,982 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:51:36,982 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:36,982 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:36,982 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 18:51:36,982 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:36,982 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:36,983 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:36,983 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:36,983 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 18:51:36,983 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:36,983 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:36,983 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:36,983 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:36,983 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 18:51:36,983 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:36,983 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:36,983 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:36,983 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:36,983 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 18:51:36,983 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:36,983 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:36,983 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:36,983 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:36,983 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 18:51:36,983 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:36,983 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:36,984 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:36,984 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:36,984 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 18:51:36,984 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:36,984 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:36,984 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:36,984 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:36,984 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 18:51:36,984 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:36,984 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:36,984 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:36,984 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:36,984 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 18:51:36,984 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:36,984 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:36,984 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:36,984 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:36,984 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 18:51:36,984 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:36,984 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:36,984 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:36,985 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:51:36,985 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 18:51:36,985 [INFO] Default policy: Starting random playout.
2025-04-11 18:51:36,985 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:51:36,985 [INFO] MCTS: Search finished. Best move selected with 65 visits.
2025-04-11 18:55:18,923 [INFO] Game terminated.
