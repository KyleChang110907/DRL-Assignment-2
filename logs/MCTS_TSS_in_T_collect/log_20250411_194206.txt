2025-04-11 19:42:29,684 [INFO] Starting pre-MCTS candidate collection.
2025-04-11 19:42:29,693 [INFO] Final candidates: []
2025-04-11 19:42:29,693 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:29,703 [INFO] Final candidates: []
2025-04-11 19:42:29,703 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:29,703 [INFO] No candidate found in Phase 1 or 2; using full legal moves for MCTS.
2025-04-11 19:42:29,703 [INFO] MCTS: Starting search for 100 iterations.
2025-04-11 19:42:29,703 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(9)), (np.int64(9), np.int64(11)))
2025-04-11 19:42:29,713 [INFO] Final candidates: []
2025-04-11 19:42:29,713 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:29,724 [INFO] Final candidates: []
2025-04-11 19:42:29,724 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:29,724 [DEBUG] MCTS iteration 0: reached a node with 0 visits.
2025-04-11 19:42:29,724 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:29,832 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:29,832 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(8)), (np.int64(11), np.int64(9)))
2025-04-11 19:42:29,842 [INFO] Final candidates: []
2025-04-11 19:42:29,842 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:29,851 [INFO] Final candidates: []
2025-04-11 19:42:29,851 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:29,851 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:29,889 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:29,890 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(10)), (np.int64(8), np.int64(9)))
2025-04-11 19:42:29,899 [INFO] Final candidates: []
2025-04-11 19:42:29,899 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:29,908 [INFO] Final candidates: []
2025-04-11 19:42:29,908 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:29,908 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:29,965 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:29,966 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(9)), (np.int64(9), np.int64(11)))
2025-04-11 19:42:29,975 [INFO] Final candidates: []
2025-04-11 19:42:29,975 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:29,985 [INFO] Final candidates: []
2025-04-11 19:42:29,985 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:29,985 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:30,164 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:30,164 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(8)), (np.int64(9), np.int64(8)))
2025-04-11 19:42:30,174 [INFO] Final candidates: []
2025-04-11 19:42:30,174 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:30,183 [INFO] Final candidates: []
2025-04-11 19:42:30,183 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:30,183 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:30,199 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:30,200 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(8)), (np.int64(8), np.int64(10)))
2025-04-11 19:42:30,209 [INFO] Final candidates: []
2025-04-11 19:42:30,209 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:30,218 [INFO] Final candidates: []
2025-04-11 19:42:30,218 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:30,218 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:30,334 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:30,335 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(8)), (np.int64(10), np.int64(10)))
2025-04-11 19:42:30,345 [INFO] Final candidates: []
2025-04-11 19:42:30,345 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:30,354 [INFO] Final candidates: []
2025-04-11 19:42:30,354 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:30,355 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:30,534 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:30,534 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(9)), (np.int64(9), np.int64(11)))
2025-04-11 19:42:30,543 [INFO] Final candidates: []
2025-04-11 19:42:30,543 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:30,552 [INFO] Final candidates: []
2025-04-11 19:42:30,552 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:30,552 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:30,767 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:30,768 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(9)), (np.int64(9), np.int64(11)))
2025-04-11 19:42:30,778 [INFO] Final candidates: []
2025-04-11 19:42:30,779 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:30,788 [INFO] Final candidates: []
2025-04-11 19:42:30,788 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:30,788 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:30,843 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:30,844 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(9)), (np.int64(10), np.int64(10)))
2025-04-11 19:42:30,853 [INFO] Final candidates: []
2025-04-11 19:42:30,853 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:30,862 [INFO] Final candidates: []
2025-04-11 19:42:30,862 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:30,862 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:30,925 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:30,926 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(10)), (np.int64(8), np.int64(8)))
2025-04-11 19:42:30,935 [INFO] Final candidates: []
2025-04-11 19:42:30,935 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:30,945 [INFO] Final candidates: []
2025-04-11 19:42:30,945 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:30,945 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:30,996 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:30,997 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(8)), (np.int64(11), np.int64(9)))
2025-04-11 19:42:31,006 [INFO] Final candidates: []
2025-04-11 19:42:31,006 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:31,015 [INFO] Final candidates: []
2025-04-11 19:42:31,015 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:31,015 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:31,105 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:31,106 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(8)), (np.int64(9), np.int64(11)))
2025-04-11 19:42:31,115 [INFO] Final candidates: []
2025-04-11 19:42:31,115 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:31,124 [INFO] Final candidates: []
2025-04-11 19:42:31,124 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:31,124 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:31,379 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:31,380 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(9)), (np.int64(10), np.int64(9)))
2025-04-11 19:42:31,389 [INFO] Final candidates: []
2025-04-11 19:42:31,389 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:31,398 [INFO] Final candidates: []
2025-04-11 19:42:31,398 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:31,398 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:31,554 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:31,554 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(9)), (np.int64(9), np.int64(8)))
2025-04-11 19:42:31,564 [INFO] Final candidates: []
2025-04-11 19:42:31,564 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:31,573 [INFO] Final candidates: []
2025-04-11 19:42:31,573 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:31,573 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:31,947 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:31,948 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(10)), (np.int64(8), np.int64(9)))
2025-04-11 19:42:31,957 [INFO] Final candidates: []
2025-04-11 19:42:31,957 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:31,966 [INFO] Final candidates: []
2025-04-11 19:42:31,966 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:31,966 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:32,128 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:32,128 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(10)), (np.int64(7), np.int64(9)))
2025-04-11 19:42:32,137 [INFO] Final candidates: []
2025-04-11 19:42:32,137 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:32,146 [INFO] Final candidates: []
2025-04-11 19:42:32,146 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:32,146 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:32,256 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:32,256 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(10)), (np.int64(9), np.int64(8)))
2025-04-11 19:42:32,265 [INFO] Final candidates: []
2025-04-11 19:42:32,265 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:32,274 [INFO] Final candidates: []
2025-04-11 19:42:32,274 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:32,274 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:32,426 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:32,426 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(10)), (np.int64(8), np.int64(10)))
2025-04-11 19:42:32,436 [INFO] Final candidates: []
2025-04-11 19:42:32,436 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:32,445 [INFO] Final candidates: []
2025-04-11 19:42:32,445 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:32,446 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:32,481 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:32,482 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(10)), (np.int64(9), np.int64(7)))
2025-04-11 19:42:32,491 [INFO] Final candidates: []
2025-04-11 19:42:32,491 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:32,500 [INFO] Final candidates: []
2025-04-11 19:42:32,500 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:32,500 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:32,600 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:32,601 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(9)), (np.int64(10), np.int64(9)))
2025-04-11 19:42:32,610 [INFO] Final candidates: []
2025-04-11 19:42:32,610 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:32,619 [INFO] Final candidates: []
2025-04-11 19:42:32,619 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:32,620 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:32,785 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:32,963 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(8)), (np.int64(9), np.int64(11)))
2025-04-11 19:42:32,972 [INFO] Final candidates: []
2025-04-11 19:42:32,972 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:32,981 [INFO] Final candidates: []
2025-04-11 19:42:32,981 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:32,981 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:33,001 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:33,001 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(8)), (np.int64(10), np.int64(9)))
2025-04-11 19:42:33,010 [INFO] Final candidates: []
2025-04-11 19:42:33,010 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:33,019 [INFO] Final candidates: []
2025-04-11 19:42:33,019 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:33,019 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:33,222 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:33,222 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(8)), (np.int64(10), np.int64(9)))
2025-04-11 19:42:33,231 [INFO] Final candidates: []
2025-04-11 19:42:33,231 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:33,240 [INFO] Final candidates: []
2025-04-11 19:42:33,240 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:33,240 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:33,551 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:33,551 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(8)), (np.int64(9), np.int64(8)))
2025-04-11 19:42:33,560 [INFO] Final candidates: []
2025-04-11 19:42:33,560 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:33,569 [INFO] Final candidates: []
2025-04-11 19:42:33,569 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:33,569 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:33,818 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:33,818 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(10)), (np.int64(10), np.int64(8)))
2025-04-11 19:42:33,827 [INFO] Final candidates: []
2025-04-11 19:42:33,827 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:33,836 [INFO] Final candidates: []
2025-04-11 19:42:33,836 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:33,836 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:33,852 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:33,852 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(10)), (np.int64(9), np.int64(11)))
2025-04-11 19:42:33,861 [INFO] Final candidates: []
2025-04-11 19:42:33,861 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:33,870 [INFO] Final candidates: []
2025-04-11 19:42:33,870 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:33,870 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:33,962 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:33,962 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(9)), (np.int64(9), np.int64(8)))
2025-04-11 19:42:33,972 [INFO] Final candidates: []
2025-04-11 19:42:33,972 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:33,981 [INFO] Final candidates: []
2025-04-11 19:42:33,981 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:33,981 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:34,073 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:34,073 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(9)), (np.int64(9), np.int64(7)))
2025-04-11 19:42:34,082 [INFO] Final candidates: []
2025-04-11 19:42:34,082 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:34,091 [INFO] Final candidates: []
2025-04-11 19:42:34,091 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:34,091 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:34,163 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:34,163 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(8)), (np.int64(10), np.int64(10)))
2025-04-11 19:42:34,172 [INFO] Final candidates: []
2025-04-11 19:42:34,173 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:34,181 [INFO] Final candidates: []
2025-04-11 19:42:34,181 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:34,182 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:34,237 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:34,237 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(8)), (np.int64(8), np.int64(10)))
2025-04-11 19:42:34,246 [INFO] Final candidates: []
2025-04-11 19:42:34,246 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:34,255 [INFO] Final candidates: []
2025-04-11 19:42:34,255 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:34,255 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:34,356 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:34,357 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(10)), (np.int64(9), np.int64(11)))
2025-04-11 19:42:34,366 [INFO] Final candidates: []
2025-04-11 19:42:34,366 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:34,375 [INFO] Final candidates: []
2025-04-11 19:42:34,375 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:34,375 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:34,597 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:34,597 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(8)), (np.int64(9), np.int64(11)))
2025-04-11 19:42:34,606 [INFO] Final candidates: []
2025-04-11 19:42:34,606 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:34,615 [INFO] Final candidates: []
2025-04-11 19:42:34,615 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:34,615 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:34,622 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:34,622 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(9)), (np.int64(8), np.int64(9)))
2025-04-11 19:42:34,631 [INFO] Final candidates: []
2025-04-11 19:42:34,631 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:34,640 [INFO] Final candidates: []
2025-04-11 19:42:34,640 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:34,640 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:34,703 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:34,703 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(10)), (np.int64(9), np.int64(8)))
2025-04-11 19:42:34,712 [INFO] Final candidates: []
2025-04-11 19:42:34,712 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:34,721 [INFO] Final candidates: []
2025-04-11 19:42:34,721 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:34,722 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:34,912 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:34,912 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(10)), (np.int64(10), np.int64(10)))
2025-04-11 19:42:34,922 [INFO] Final candidates: []
2025-04-11 19:42:34,922 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:34,931 [INFO] Final candidates: []
2025-04-11 19:42:34,931 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:34,931 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:35,085 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:35,086 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(10)), (np.int64(11), np.int64(9)))
2025-04-11 19:42:35,095 [INFO] Final candidates: []
2025-04-11 19:42:35,095 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:35,104 [INFO] Final candidates: []
2025-04-11 19:42:35,104 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:35,104 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:35,209 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:35,209 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(10)), (np.int64(10), np.int64(10)))
2025-04-11 19:42:35,218 [INFO] Final candidates: []
2025-04-11 19:42:35,218 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:35,227 [INFO] Final candidates: []
2025-04-11 19:42:35,227 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:35,227 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:35,292 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:35,293 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(8)), (np.int64(9), np.int64(7)))
2025-04-11 19:42:35,302 [INFO] Final candidates: []
2025-04-11 19:42:35,302 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:35,311 [INFO] Final candidates: []
2025-04-11 19:42:35,311 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:35,311 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:35,361 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:35,361 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(9)), (np.int64(9), np.int64(7)))
2025-04-11 19:42:35,370 [INFO] Final candidates: []
2025-04-11 19:42:35,370 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:35,379 [INFO] Final candidates: []
2025-04-11 19:42:35,379 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:35,380 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:35,471 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:35,471 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(8)), (np.int64(10), np.int64(8)))
2025-04-11 19:42:35,480 [INFO] Final candidates: []
2025-04-11 19:42:35,480 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:35,489 [INFO] Final candidates: []
2025-04-11 19:42:35,489 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:35,489 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:35,553 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:35,553 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(8)), (np.int64(8), np.int64(9)))
2025-04-11 19:42:35,562 [INFO] Final candidates: []
2025-04-11 19:42:35,562 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:35,571 [INFO] Final candidates: []
2025-04-11 19:42:35,571 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:35,572 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:35,603 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:35,603 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(9)), (np.int64(7), np.int64(9)))
2025-04-11 19:42:35,612 [INFO] Final candidates: []
2025-04-11 19:42:35,612 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:35,621 [INFO] Final candidates: []
2025-04-11 19:42:35,622 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:35,622 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:35,829 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:35,830 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(10)), (np.int64(9), np.int64(8)))
2025-04-11 19:42:35,839 [INFO] Final candidates: []
2025-04-11 19:42:35,839 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:35,848 [INFO] Final candidates: []
2025-04-11 19:42:35,848 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:35,848 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:36,015 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:36,015 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(10)), (np.int64(8), np.int64(9)))
2025-04-11 19:42:36,024 [INFO] Final candidates: []
2025-04-11 19:42:36,024 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:36,033 [INFO] Final candidates: []
2025-04-11 19:42:36,033 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:36,033 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:36,158 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:36,159 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(10)), (np.int64(10), np.int64(9)))
2025-04-11 19:42:36,168 [INFO] Final candidates: []
2025-04-11 19:42:36,168 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:36,177 [INFO] Final candidates: []
2025-04-11 19:42:36,177 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:36,177 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:36,201 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:36,201 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(10)), (np.int64(9), np.int64(7)))
2025-04-11 19:42:36,210 [INFO] Final candidates: []
2025-04-11 19:42:36,210 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:36,219 [INFO] Final candidates: []
2025-04-11 19:42:36,219 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:36,220 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:36,473 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:36,473 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(10)), (np.int64(11), np.int64(9)))
2025-04-11 19:42:36,482 [INFO] Final candidates: []
2025-04-11 19:42:36,482 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:36,491 [INFO] Final candidates: []
2025-04-11 19:42:36,491 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:36,491 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:36,551 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:36,552 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(9)), (np.int64(8), np.int64(9)))
2025-04-11 19:42:36,561 [INFO] Final candidates: []
2025-04-11 19:42:36,561 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:36,570 [INFO] Final candidates: []
2025-04-11 19:42:36,570 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:36,570 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:36,673 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:36,674 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(9)), (np.int64(10), np.int64(9)))
2025-04-11 19:42:36,683 [INFO] Final candidates: []
2025-04-11 19:42:36,683 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:36,692 [INFO] Final candidates: []
2025-04-11 19:42:36,692 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:36,692 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:36,800 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:36,800 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(8)), (np.int64(7), np.int64(9)))
2025-04-11 19:42:36,810 [INFO] Final candidates: []
2025-04-11 19:42:36,810 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:36,819 [INFO] Final candidates: []
2025-04-11 19:42:36,819 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:36,819 [DEBUG] MCTS iteration 50: reached a node with 0 visits.
2025-04-11 19:42:36,819 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:36,909 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:36,909 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(11)), (np.int64(9), np.int64(7)))
2025-04-11 19:42:36,918 [INFO] Final candidates: []
2025-04-11 19:42:36,918 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:36,927 [INFO] Final candidates: []
2025-04-11 19:42:36,927 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:36,928 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:36,991 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:36,991 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(8)), (np.int64(9), np.int64(7)))
2025-04-11 19:42:37,000 [INFO] Final candidates: []
2025-04-11 19:42:37,000 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:37,009 [INFO] Final candidates: []
2025-04-11 19:42:37,009 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:37,010 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:37,077 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:37,077 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(9)), (np.int64(9), np.int64(7)))
2025-04-11 19:42:37,087 [INFO] Final candidates: []
2025-04-11 19:42:37,087 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:37,096 [INFO] Final candidates: []
2025-04-11 19:42:37,096 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:37,096 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:37,118 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:37,118 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(8)), (np.int64(9), np.int64(7)))
2025-04-11 19:42:37,127 [INFO] Final candidates: []
2025-04-11 19:42:37,127 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:37,137 [INFO] Final candidates: []
2025-04-11 19:42:37,137 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:37,137 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:37,212 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:37,213 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(8)), (np.int64(8), np.int64(9)))
2025-04-11 19:42:37,222 [INFO] Final candidates: []
2025-04-11 19:42:37,222 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:37,232 [INFO] Final candidates: []
2025-04-11 19:42:37,232 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:37,232 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:37,297 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:37,297 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(10)), (np.int64(10), np.int64(9)))
2025-04-11 19:42:37,309 [INFO] Final candidates: []
2025-04-11 19:42:37,309 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:37,318 [INFO] Final candidates: []
2025-04-11 19:42:37,318 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:37,318 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:37,532 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:37,532 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(10)), (np.int64(9), np.int64(11)))
2025-04-11 19:42:37,542 [INFO] Final candidates: []
2025-04-11 19:42:37,542 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:37,551 [INFO] Final candidates: []
2025-04-11 19:42:37,551 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:37,552 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:37,559 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:37,560 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(9)), (np.int64(9), np.int64(7)))
2025-04-11 19:42:37,569 [INFO] Final candidates: []
2025-04-11 19:42:37,569 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:37,578 [INFO] Final candidates: []
2025-04-11 19:42:37,578 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:37,578 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:37,763 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:37,763 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(8)), (np.int64(10), np.int64(9)))
2025-04-11 19:42:37,773 [INFO] Final candidates: []
2025-04-11 19:42:37,773 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:37,783 [INFO] Final candidates: []
2025-04-11 19:42:37,783 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:37,783 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:37,830 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:37,830 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(10)), (np.int64(7), np.int64(9)))
2025-04-11 19:42:37,840 [INFO] Final candidates: []
2025-04-11 19:42:37,840 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:37,849 [INFO] Final candidates: []
2025-04-11 19:42:37,849 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:37,849 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:38,069 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:38,069 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(10)), (np.int64(9), np.int64(7)))
2025-04-11 19:42:38,078 [INFO] Final candidates: []
2025-04-11 19:42:38,079 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:38,087 [INFO] Final candidates: []
2025-04-11 19:42:38,087 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:38,088 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:38,175 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:38,176 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(9)), (np.int64(9), np.int64(8)))
2025-04-11 19:42:38,185 [INFO] Final candidates: []
2025-04-11 19:42:38,185 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:38,194 [INFO] Final candidates: []
2025-04-11 19:42:38,194 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:38,194 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:38,304 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:38,304 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(9)), (np.int64(10), np.int64(10)))
2025-04-11 19:42:38,313 [INFO] Final candidates: []
2025-04-11 19:42:38,313 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:38,322 [INFO] Final candidates: []
2025-04-11 19:42:38,322 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:38,322 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:38,329 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:38,329 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(10)), (np.int64(10), np.int64(9)))
2025-04-11 19:42:38,338 [INFO] Final candidates: []
2025-04-11 19:42:38,338 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:38,347 [INFO] Final candidates: []
2025-04-11 19:42:38,347 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:38,347 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:38,421 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:38,421 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(8)), (np.int64(7), np.int64(9)))
2025-04-11 19:42:38,430 [INFO] Final candidates: []
2025-04-11 19:42:38,430 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:38,440 [INFO] Final candidates: []
2025-04-11 19:42:38,440 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:38,440 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:38,450 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:38,450 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:42:38,451 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(8)), (np.int64(10), np.int64(7)))
2025-04-11 19:42:38,460 [INFO] Final candidates: []
2025-04-11 19:42:38,460 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:38,468 [INFO] Final candidates: []
2025-04-11 19:42:38,468 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:38,469 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:38,633 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:38,633 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:42:38,633 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(10)), (np.int64(8), np.int64(10)))
2025-04-11 19:42:38,642 [INFO] Final candidates: []
2025-04-11 19:42:38,642 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:38,651 [INFO] Final candidates: []
2025-04-11 19:42:38,651 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:38,651 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:38,725 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:38,725 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:42:38,725 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(8)), (np.int64(6), np.int64(9)))
2025-04-11 19:42:38,734 [INFO] Final candidates: []
2025-04-11 19:42:38,734 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:38,743 [INFO] Final candidates: []
2025-04-11 19:42:38,743 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:38,743 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:38,847 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:38,847 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:42:38,847 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(6)), (np.int64(10), np.int64(7)))
2025-04-11 19:42:38,856 [INFO] Final candidates: []
2025-04-11 19:42:38,856 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:38,865 [INFO] Final candidates: []
2025-04-11 19:42:38,865 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:38,865 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:38,890 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:38,890 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:42:38,890 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(8)), (np.int64(7), np.int64(7)))
2025-04-11 19:42:38,899 [INFO] Final candidates: []
2025-04-11 19:42:38,899 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:38,908 [INFO] Final candidates: []
2025-04-11 19:42:38,908 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:38,909 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:39,001 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:39,001 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:42:39,001 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(9)), (np.int64(7), np.int64(7)))
2025-04-11 19:42:39,011 [INFO] Final candidates: []
2025-04-11 19:42:39,011 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:39,020 [INFO] Final candidates: []
2025-04-11 19:42:39,020 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:39,020 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:39,193 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:39,193 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:42:39,193 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(9)), (np.int64(6), np.int64(9)))
2025-04-11 19:42:39,202 [INFO] Final candidates: []
2025-04-11 19:42:39,202 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:39,211 [INFO] Final candidates: []
2025-04-11 19:42:39,211 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:39,211 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:39,234 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:39,234 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:42:39,234 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(10)), (np.int64(9), np.int64(7)))
2025-04-11 19:42:39,244 [INFO] Final candidates: []
2025-04-11 19:42:39,244 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:39,252 [INFO] Final candidates: []
2025-04-11 19:42:39,252 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:39,253 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:39,432 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:39,432 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:42:39,433 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(10)), (np.int64(11), np.int64(9)))
2025-04-11 19:42:39,442 [INFO] Final candidates: []
2025-04-11 19:42:39,442 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:39,451 [INFO] Final candidates: []
2025-04-11 19:42:39,451 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:39,451 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:39,541 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:39,541 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:42:39,541 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(9)), (np.int64(9), np.int64(10)))
2025-04-11 19:42:39,552 [INFO] Final candidates: []
2025-04-11 19:42:39,552 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:39,562 [INFO] Final candidates: []
2025-04-11 19:42:39,562 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:39,563 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:39,700 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:39,700 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:42:39,700 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(9)), (np.int64(11), np.int64(10)))
2025-04-11 19:42:39,709 [INFO] Final candidates: []
2025-04-11 19:42:39,709 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:39,718 [INFO] Final candidates: []
2025-04-11 19:42:39,718 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:39,718 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:39,885 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:39,885 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:42:39,885 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(7)), (np.int64(8), np.int64(10)))
2025-04-11 19:42:39,894 [INFO] Final candidates: []
2025-04-11 19:42:39,894 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:39,903 [INFO] Final candidates: []
2025-04-11 19:42:39,903 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:39,903 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:39,910 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:39,911 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:42:39,911 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(7)), (np.int64(6), np.int64(8)))
2025-04-11 19:42:39,920 [INFO] Final candidates: []
2025-04-11 19:42:39,920 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:39,928 [INFO] Final candidates: []
2025-04-11 19:42:39,929 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:39,929 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:39,969 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:39,969 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:42:39,969 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(8)), (np.int64(7), np.int64(11)))
2025-04-11 19:42:39,978 [INFO] Final candidates: []
2025-04-11 19:42:39,978 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:39,987 [INFO] Final candidates: []
2025-04-11 19:42:39,987 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:39,987 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:40,267 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:40,267 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:42:40,267 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(9)), (np.int64(9), np.int64(6)))
2025-04-11 19:42:40,276 [INFO] Final candidates: []
2025-04-11 19:42:40,276 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:40,285 [INFO] Final candidates: []
2025-04-11 19:42:40,285 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:40,285 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:40,305 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:40,305 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:42:40,305 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(8)), (np.int64(7), np.int64(8)))
2025-04-11 19:42:40,314 [INFO] Final candidates: []
2025-04-11 19:42:40,314 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:40,323 [INFO] Final candidates: []
2025-04-11 19:42:40,323 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:40,323 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:40,514 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:40,515 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:42:40,515 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(8)), (np.int64(8), np.int64(10)))
2025-04-11 19:42:40,524 [INFO] Final candidates: []
2025-04-11 19:42:40,524 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:40,533 [INFO] Final candidates: []
2025-04-11 19:42:40,533 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:40,533 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:40,668 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:40,668 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:42:40,668 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(8)), (np.int64(9), np.int64(10)))
2025-04-11 19:42:40,678 [INFO] Final candidates: []
2025-04-11 19:42:40,679 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:40,687 [INFO] Final candidates: []
2025-04-11 19:42:40,687 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:40,688 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:40,703 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:40,703 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:42:40,703 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(6)), (np.int64(7), np.int64(8)))
2025-04-11 19:42:40,712 [INFO] Final candidates: []
2025-04-11 19:42:40,712 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:40,721 [INFO] Final candidates: []
2025-04-11 19:42:40,721 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:40,721 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:40,780 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:40,780 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:42:40,780 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(11)), (np.int64(10), np.int64(12)))
2025-04-11 19:42:40,789 [INFO] Final candidates: []
2025-04-11 19:42:40,789 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:40,799 [INFO] Final candidates: []
2025-04-11 19:42:40,799 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:40,799 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:40,978 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:40,978 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:42:40,978 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(9)), (np.int64(8), np.int64(11)))
2025-04-11 19:42:40,987 [INFO] Final candidates: []
2025-04-11 19:42:40,987 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:40,996 [INFO] Final candidates: []
2025-04-11 19:42:40,996 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:40,996 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:41,067 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:41,068 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:42:41,068 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(11)), (np.int64(10), np.int64(8)))
2025-04-11 19:42:41,077 [INFO] Final candidates: []
2025-04-11 19:42:41,077 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:41,085 [INFO] Final candidates: []
2025-04-11 19:42:41,085 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:41,086 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:41,179 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:41,179 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:42:41,179 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(8)), (np.int64(13), np.int64(9)))
2025-04-11 19:42:41,191 [INFO] Final candidates: []
2025-04-11 19:42:41,191 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:41,200 [INFO] Final candidates: []
2025-04-11 19:42:41,200 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:41,200 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:41,447 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:41,448 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:42:41,448 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(8)), (np.int64(10), np.int64(11)))
2025-04-11 19:42:41,457 [INFO] Final candidates: []
2025-04-11 19:42:41,457 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:41,466 [INFO] Final candidates: []
2025-04-11 19:42:41,466 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:41,466 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:41,509 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:41,510 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:42:41,510 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(11)), (np.int64(7), np.int64(10)))
2025-04-11 19:42:41,519 [INFO] Final candidates: []
2025-04-11 19:42:41,519 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:41,528 [INFO] Final candidates: []
2025-04-11 19:42:41,528 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:41,529 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:41,625 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:41,625 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:42:41,625 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(9)), (np.int64(9), np.int64(11)))
2025-04-11 19:42:41,634 [INFO] Final candidates: []
2025-04-11 19:42:41,634 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:41,643 [INFO] Final candidates: []
2025-04-11 19:42:41,643 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:41,643 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:41,884 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:41,884 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:42:41,884 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(7)), (np.int64(9), np.int64(11)))
2025-04-11 19:42:41,893 [INFO] Final candidates: []
2025-04-11 19:42:41,893 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:41,902 [INFO] Final candidates: []
2025-04-11 19:42:41,902 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:41,902 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:42,143 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:42,144 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:42:42,144 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(11)), (np.int64(7), np.int64(9)))
2025-04-11 19:42:42,154 [INFO] Final candidates: []
2025-04-11 19:42:42,154 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:42,163 [INFO] Final candidates: []
2025-04-11 19:42:42,163 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:42,163 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:42,196 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:42,196 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:42:42,196 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(9)), (np.int64(9), np.int64(11)))
2025-04-11 19:42:42,205 [INFO] Final candidates: []
2025-04-11 19:42:42,205 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:42,214 [INFO] Final candidates: []
2025-04-11 19:42:42,214 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:42,214 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:42,463 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:42,463 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:42:42,463 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(10)), (np.int64(6), np.int64(9)))
2025-04-11 19:42:42,472 [INFO] Final candidates: []
2025-04-11 19:42:42,472 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:42,481 [INFO] Final candidates: []
2025-04-11 19:42:42,481 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:42,481 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:42,594 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:42,594 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:42:42,595 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(7)), (np.int64(6), np.int64(10)))
2025-04-11 19:42:42,604 [INFO] Final candidates: []
2025-04-11 19:42:42,604 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:42,612 [INFO] Final candidates: []
2025-04-11 19:42:42,612 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:42,613 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:42,893 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:42,893 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:42:42,893 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(9)), (np.int64(8), np.int64(9)))
2025-04-11 19:42:42,902 [INFO] Final candidates: []
2025-04-11 19:42:42,903 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:42,911 [INFO] Final candidates: []
2025-04-11 19:42:42,912 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:42,912 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:43,029 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:43,029 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:42:43,029 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(11)), (np.int64(7), np.int64(9)))
2025-04-11 19:42:43,038 [INFO] Final candidates: []
2025-04-11 19:42:43,038 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:43,047 [INFO] Final candidates: []
2025-04-11 19:42:43,047 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:43,047 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:43,099 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:43,099 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:42:43,099 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(9)), (np.int64(9), np.int64(7)))
2025-04-11 19:42:43,108 [INFO] Final candidates: []
2025-04-11 19:42:43,108 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:43,117 [INFO] Final candidates: []
2025-04-11 19:42:43,117 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:43,117 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:43,281 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:43,281 [DEBUG] MCTS: BEST ((np.int64(11), np.int64(9)), (np.int64(9), np.int64(11))) with 2 visits.
2025-04-11 19:42:43,281 [INFO] MCTS: Search finished. Best move selected with 2 visits.
2025-04-11 19:42:43,281 [INFO] MCTS selected move: K12,M10
2025-04-11 19:42:43,281 [INFO] ===============NEW MOVE================
2025-04-11 19:42:47,623 [INFO] Starting pre-MCTS candidate collection.
2025-04-11 19:42:47,632 [INFO] Final candidates: []
2025-04-11 19:42:47,632 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:47,641 [INFO] Final candidates: []
2025-04-11 19:42:47,641 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:47,641 [INFO] No candidate found in Phase 1 or 2; using full legal moves for MCTS.
2025-04-11 19:42:47,641 [INFO] MCTS: Starting search for 100 iterations.
2025-04-11 19:42:47,642 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(12)), (np.int64(11), np.int64(12)))
2025-04-11 19:42:47,651 [INFO] Final candidates: []
2025-04-11 19:42:47,651 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:47,659 [INFO] Final candidates: []
2025-04-11 19:42:47,659 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:47,660 [DEBUG] MCTS iteration 0: reached a node with 0 visits.
2025-04-11 19:42:47,660 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:47,724 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:47,725 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(12)), (np.int64(10), np.int64(8)))
2025-04-11 19:42:47,734 [INFO] Final candidates: []
2025-04-11 19:42:47,734 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:47,742 [INFO] Final candidates: []
2025-04-11 19:42:47,742 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:47,743 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:47,745 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:47,745 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(12)), (np.int64(10), np.int64(11)))
2025-04-11 19:42:47,754 [INFO] Final candidates: []
2025-04-11 19:42:47,754 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:47,763 [INFO] Final candidates: []
2025-04-11 19:42:47,763 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:47,763 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:47,860 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:47,860 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(13)), (np.int64(9), np.int64(12)))
2025-04-11 19:42:47,869 [INFO] Final candidates: []
2025-04-11 19:42:47,869 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:47,878 [INFO] Final candidates: []
2025-04-11 19:42:47,878 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:47,878 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:48,096 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:48,096 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(9)), (np.int64(10), np.int64(8)))
2025-04-11 19:42:48,105 [INFO] Final candidates: []
2025-04-11 19:42:48,105 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:48,113 [INFO] Final candidates: []
2025-04-11 19:42:48,113 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:48,114 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:48,157 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:48,157 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(10)), (np.int64(9), np.int64(12)))
2025-04-11 19:42:48,166 [INFO] Final candidates: []
2025-04-11 19:42:48,166 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:48,175 [INFO] Final candidates: []
2025-04-11 19:42:48,175 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:48,175 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:48,340 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:48,340 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(7)), (np.int64(11), np.int64(7)))
2025-04-11 19:42:48,353 [INFO] Final candidates: []
2025-04-11 19:42:48,353 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:48,361 [INFO] Final candidates: []
2025-04-11 19:42:48,362 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:48,362 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:48,461 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:48,462 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(9)), (np.int64(9), np.int64(8)))
2025-04-11 19:42:48,472 [INFO] Final candidates: []
2025-04-11 19:42:48,472 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:48,481 [INFO] Final candidates: []
2025-04-11 19:42:48,481 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:48,481 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:48,700 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:48,701 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(11)), (np.int64(10), np.int64(11)))
2025-04-11 19:42:48,710 [INFO] Final candidates: []
2025-04-11 19:42:48,710 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:48,719 [INFO] Final candidates: []
2025-04-11 19:42:48,719 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:48,719 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:48,950 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:48,951 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(9)), (np.int64(10), np.int64(12)))
2025-04-11 19:42:48,960 [INFO] Final candidates: []
2025-04-11 19:42:48,960 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:48,969 [INFO] Final candidates: []
2025-04-11 19:42:48,969 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:48,969 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:49,196 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:49,197 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(9)), (np.int64(13), np.int64(9)))
2025-04-11 19:42:49,206 [INFO] Final candidates: []
2025-04-11 19:42:49,206 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:49,214 [INFO] Final candidates: []
2025-04-11 19:42:49,214 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:49,214 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:49,261 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:49,261 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(9)), (np.int64(12), np.int64(9)))
2025-04-11 19:42:49,270 [INFO] Final candidates: []
2025-04-11 19:42:49,270 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:49,279 [INFO] Final candidates: []
2025-04-11 19:42:49,279 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:49,280 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:49,373 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:49,373 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(9)), (np.int64(12), np.int64(12)))
2025-04-11 19:42:49,380 [DEBUG] board coords: [(7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12)]
2025-04-11 19:42:49,380 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:42:49,380 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 7), (8, 8)]
2025-04-11 19:42:49,380 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 1 1 1 1] with coords [(7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12)] triggers candidate.
2025-04-11 19:42:49,380 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13)] triggers candidate.
2025-04-11 19:42:49,380 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:42:49,380 [DEBUG] board coords: [(9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14)]
2025-04-11 19:42:49,380 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:42:49,380 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 13), (14, 14)]
2025-04-11 19:42:49,380 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 1 1 0 0] with coords [(9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14)] triggers candidate.
2025-04-11 19:42:49,384 [INFO] Final candidates: [(8, 8), (14, 14), (7, 7), (13, 13)]
2025-04-11 19:42:49,384 [INFO] Phase win: Collected 6unique candidate(s):[((14, 14), (7, 7)), ((8, 8), (13, 13)), ((7, 7), (13, 13)), ((14, 14), (13, 13)), ((8, 8), (14, 14)), ((8, 8), (7, 7))]
2025-04-11 19:42:49,395 [INFO] Final candidates: []
2025-04-11 19:42:49,395 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:49,395 [INFO] Phase 1 (immediate win): 6 candidate(s) found.
2025-04-11 19:42:49,395 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:49,499 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:49,499 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(12)), (np.int64(12), np.int64(8)))
2025-04-11 19:42:49,505 [DEBUG] board coords: [(7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12)]
2025-04-11 19:42:49,505 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:42:49,505 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 7), (8, 8)]
2025-04-11 19:42:49,505 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 1 1 1 1] with coords [(7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12)] triggers candidate.
2025-04-11 19:42:49,505 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13)] triggers candidate.
2025-04-11 19:42:49,505 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:42:49,505 [DEBUG] board coords: [(9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14)]
2025-04-11 19:42:49,505 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:42:49,505 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 13), (14, 14)]
2025-04-11 19:42:49,505 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 1 1 0 0] with coords [(9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14)] triggers candidate.
2025-04-11 19:42:49,509 [INFO] Final candidates: [(8, 8), (14, 14), (7, 7), (13, 13)]
2025-04-11 19:42:49,509 [INFO] Phase win: Collected 6unique candidate(s):[((14, 14), (7, 7)), ((8, 8), (13, 13)), ((7, 7), (13, 13)), ((14, 14), (13, 13)), ((8, 8), (14, 14)), ((8, 8), (7, 7))]
2025-04-11 19:42:49,517 [INFO] Final candidates: []
2025-04-11 19:42:49,518 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:49,518 [INFO] Phase 1 (immediate win): 6 candidate(s) found.
2025-04-11 19:42:49,518 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:49,567 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:49,567 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(9)), (np.int64(8), np.int64(11)))
2025-04-11 19:42:49,576 [INFO] Final candidates: []
2025-04-11 19:42:49,576 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:49,585 [INFO] Final candidates: []
2025-04-11 19:42:49,585 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:49,585 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:49,792 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:49,793 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(9)), (np.int64(11), np.int64(10)))
2025-04-11 19:42:49,802 [INFO] Final candidates: []
2025-04-11 19:42:49,802 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:49,810 [INFO] Final candidates: []
2025-04-11 19:42:49,810 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:49,811 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:49,864 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:49,864 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(9)), (np.int64(10), np.int64(11)))
2025-04-11 19:42:49,873 [INFO] Final candidates: []
2025-04-11 19:42:49,873 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:49,882 [INFO] Final candidates: []
2025-04-11 19:42:49,882 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:49,882 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:50,104 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:50,104 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(11)), (np.int64(8), np.int64(8)))
2025-04-11 19:42:50,110 [DEBUG] board coords: [(6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)]
2025-04-11 19:42:50,110 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:42:50,110 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 6), (7, 7)]
2025-04-11 19:42:50,110 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 1 1 1 1] with coords [(6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)] triggers candidate.
2025-04-11 19:42:50,110 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12)] triggers candidate.
2025-04-11 19:42:50,110 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:42:50,110 [DEBUG] board coords: [(8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13)]
2025-04-11 19:42:50,110 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:42:50,110 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 12), (13, 13)]
2025-04-11 19:42:50,110 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 1 1 0 0] with coords [(8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13)] triggers candidate.
2025-04-11 19:42:50,114 [INFO] Final candidates: [(6, 6), (12, 12), (7, 7), (13, 13)]
2025-04-11 19:42:50,114 [INFO] Phase win: Collected 6unique candidate(s):[((6, 6), (12, 12)), ((12, 12), (13, 13)), ((6, 6), (13, 13)), ((7, 7), (13, 13)), ((6, 6), (7, 7)), ((12, 12), (7, 7))]
2025-04-11 19:42:50,123 [INFO] Final candidates: []
2025-04-11 19:42:50,123 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:50,123 [INFO] Phase 1 (immediate win): 6 candidate(s) found.
2025-04-11 19:42:50,123 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:50,179 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:50,180 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(10)), (np.int64(13), np.int64(11)))
2025-04-11 19:42:50,189 [INFO] Final candidates: []
2025-04-11 19:42:50,189 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:50,197 [INFO] Final candidates: []
2025-04-11 19:42:50,197 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:50,198 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:50,338 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:50,338 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(8)), (np.int64(11), np.int64(10)))
2025-04-11 19:42:50,347 [INFO] Final candidates: []
2025-04-11 19:42:50,347 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:50,356 [INFO] Final candidates: []
2025-04-11 19:42:50,356 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:50,356 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:50,467 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:50,468 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(8)), (np.int64(13), np.int64(9)))
2025-04-11 19:42:50,473 [DEBUG] board coords: [(6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)]
2025-04-11 19:42:50,473 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:42:50,473 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 6), (7, 7)]
2025-04-11 19:42:50,473 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 1 1 1 1] with coords [(6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)] triggers candidate.
2025-04-11 19:42:50,473 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12)] triggers candidate.
2025-04-11 19:42:50,473 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:42:50,474 [DEBUG] board coords: [(8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13)]
2025-04-11 19:42:50,474 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:42:50,474 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 12), (13, 13)]
2025-04-11 19:42:50,474 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 1 1 0 0] with coords [(8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13)] triggers candidate.
2025-04-11 19:42:50,477 [INFO] Final candidates: [(6, 6), (12, 12), (7, 7), (13, 13)]
2025-04-11 19:42:50,477 [INFO] Phase win: Collected 6unique candidate(s):[((6, 6), (12, 12)), ((12, 12), (13, 13)), ((6, 6), (13, 13)), ((7, 7), (13, 13)), ((6, 6), (7, 7)), ((12, 12), (7, 7))]
2025-04-11 19:42:50,486 [INFO] Final candidates: []
2025-04-11 19:42:50,486 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:50,486 [INFO] Phase 1 (immediate win): 6 candidate(s) found.
2025-04-11 19:42:50,486 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:50,556 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:50,557 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(12)), (np.int64(10), np.int64(11)))
2025-04-11 19:42:50,566 [INFO] Final candidates: []
2025-04-11 19:42:50,566 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:50,575 [INFO] Final candidates: []
2025-04-11 19:42:50,575 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:50,575 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:50,589 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:50,589 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(10)), (np.int64(10), np.int64(12)))
2025-04-11 19:42:50,599 [INFO] Final candidates: []
2025-04-11 19:42:50,599 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:50,607 [INFO] Final candidates: []
2025-04-11 19:42:50,607 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:50,607 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:50,689 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:50,689 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(9)), (np.int64(11), np.int64(7)))
2025-04-11 19:42:50,698 [INFO] Final candidates: []
2025-04-11 19:42:50,698 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:50,707 [INFO] Final candidates: []
2025-04-11 19:42:50,707 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:50,707 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:50,906 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:50,907 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(9)), (np.int64(10), np.int64(11)))
2025-04-11 19:42:50,916 [INFO] Final candidates: []
2025-04-11 19:42:50,916 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:50,924 [INFO] Final candidates: []
2025-04-11 19:42:50,924 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:50,925 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:50,976 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:50,976 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(9)), (np.int64(13), np.int64(11)))
2025-04-11 19:42:50,985 [INFO] Final candidates: []
2025-04-11 19:42:50,985 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:50,994 [INFO] Final candidates: []
2025-04-11 19:42:50,994 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:50,994 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:51,043 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:51,043 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(7)), (np.int64(10), np.int64(8)))
2025-04-11 19:42:51,056 [INFO] Final candidates: []
2025-04-11 19:42:51,056 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:51,066 [INFO] Final candidates: []
2025-04-11 19:42:51,066 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:51,066 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:51,135 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:51,135 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(13)), (np.int64(11), np.int64(12)))
2025-04-11 19:42:51,144 [INFO] Final candidates: []
2025-04-11 19:42:51,144 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:51,153 [INFO] Final candidates: []
2025-04-11 19:42:51,153 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:51,153 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:51,169 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:51,169 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(8)), (np.int64(11), np.int64(13)))
2025-04-11 19:42:51,175 [DEBUG] board coords: [(6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)]
2025-04-11 19:42:51,175 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:42:51,175 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 6), (7, 7)]
2025-04-11 19:42:51,175 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 1 1 1 1] with coords [(6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)] triggers candidate.
2025-04-11 19:42:51,175 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12)] triggers candidate.
2025-04-11 19:42:51,175 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:42:51,175 [DEBUG] board coords: [(8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13)]
2025-04-11 19:42:51,175 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:42:51,175 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 12), (13, 13)]
2025-04-11 19:42:51,175 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 1 1 0 0] with coords [(8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13)] triggers candidate.
2025-04-11 19:42:51,179 [INFO] Final candidates: [(6, 6), (12, 12), (7, 7), (13, 13)]
2025-04-11 19:42:51,179 [INFO] Phase win: Collected 6unique candidate(s):[((6, 6), (12, 12)), ((12, 12), (13, 13)), ((6, 6), (13, 13)), ((7, 7), (13, 13)), ((6, 6), (7, 7)), ((12, 12), (7, 7))]
2025-04-11 19:42:51,187 [INFO] Final candidates: []
2025-04-11 19:42:51,188 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:51,188 [INFO] Phase 1 (immediate win): 6 candidate(s) found.
2025-04-11 19:42:51,188 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:51,205 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:51,205 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(9)), (np.int64(7), np.int64(9)))
2025-04-11 19:42:51,214 [INFO] Final candidates: []
2025-04-11 19:42:51,214 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:51,223 [INFO] Final candidates: []
2025-04-11 19:42:51,223 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:51,223 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:51,382 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:51,382 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(12)), (np.int64(9), np.int64(13)))
2025-04-11 19:42:51,394 [INFO] Final candidates: []
2025-04-11 19:42:51,394 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:51,404 [INFO] Final candidates: []
2025-04-11 19:42:51,404 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:51,404 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:51,526 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:51,526 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(8)), (np.int64(11), np.int64(12)))
2025-04-11 19:42:51,535 [INFO] Final candidates: []
2025-04-11 19:42:51,535 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:51,544 [INFO] Final candidates: []
2025-04-11 19:42:51,544 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:51,544 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:51,737 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:51,737 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(12)), (np.int64(9), np.int64(7)))
2025-04-11 19:42:51,747 [INFO] Final candidates: []
2025-04-11 19:42:51,747 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:51,755 [INFO] Final candidates: []
2025-04-11 19:42:51,755 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:51,756 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:51,984 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:51,984 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(10)), (np.int64(11), np.int64(12)))
2025-04-11 19:42:51,993 [INFO] Final candidates: []
2025-04-11 19:42:51,993 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:52,002 [INFO] Final candidates: []
2025-04-11 19:42:52,002 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:52,002 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:52,068 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:52,069 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(13)), (np.int64(12), np.int64(8)))
2025-04-11 19:42:52,078 [INFO] Final candidates: []
2025-04-11 19:42:52,078 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:52,087 [INFO] Final candidates: []
2025-04-11 19:42:52,087 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:52,087 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:52,245 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:52,246 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(10)), (np.int64(11), np.int64(12)))
2025-04-11 19:42:52,255 [INFO] Final candidates: []
2025-04-11 19:42:52,255 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:52,263 [INFO] Final candidates: []
2025-04-11 19:42:52,263 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:52,264 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:52,301 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:52,301 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(8)), (np.int64(7), np.int64(11)))
2025-04-11 19:42:52,307 [DEBUG] board coords: [(6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)]
2025-04-11 19:42:52,307 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:42:52,307 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 6), (7, 7)]
2025-04-11 19:42:52,307 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 1 1 1 1] with coords [(6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)] triggers candidate.
2025-04-11 19:42:52,307 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12)] triggers candidate.
2025-04-11 19:42:52,307 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:42:52,307 [DEBUG] board coords: [(8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13)]
2025-04-11 19:42:52,307 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:42:52,307 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 12), (13, 13)]
2025-04-11 19:42:52,307 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 1 1 0 0] with coords [(8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13)] triggers candidate.
2025-04-11 19:42:52,311 [INFO] Final candidates: [(6, 6), (12, 12), (7, 7), (13, 13)]
2025-04-11 19:42:52,311 [INFO] Phase win: Collected 6unique candidate(s):[((6, 6), (12, 12)), ((12, 12), (13, 13)), ((6, 6), (13, 13)), ((7, 7), (13, 13)), ((6, 6), (7, 7)), ((12, 12), (7, 7))]
2025-04-11 19:42:52,319 [INFO] Final candidates: []
2025-04-11 19:42:52,319 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:52,319 [INFO] Phase 1 (immediate win): 6 candidate(s) found.
2025-04-11 19:42:52,319 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:52,435 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:52,436 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(11)), (np.int64(10), np.int64(8)))
2025-04-11 19:42:52,445 [INFO] Final candidates: []
2025-04-11 19:42:52,445 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:52,454 [INFO] Final candidates: []
2025-04-11 19:42:52,455 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:52,455 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:52,659 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:52,659 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(10)), (np.int64(7), np.int64(9)))
2025-04-11 19:42:52,668 [INFO] Final candidates: []
2025-04-11 19:42:52,668 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:52,677 [INFO] Final candidates: []
2025-04-11 19:42:52,677 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:52,677 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:52,724 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:52,724 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(8)), (np.int64(10), np.int64(9)))
2025-04-11 19:42:52,733 [INFO] Final candidates: []
2025-04-11 19:42:52,733 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:52,742 [INFO] Final candidates: []
2025-04-11 19:42:52,742 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:52,742 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:52,875 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:52,875 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(8)), (np.int64(12), np.int64(11)))
2025-04-11 19:42:52,884 [INFO] Final candidates: []
2025-04-11 19:42:52,884 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:52,893 [INFO] Final candidates: []
2025-04-11 19:42:52,893 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:52,893 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:52,957 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:52,957 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(11)), (np.int64(13), np.int64(9)))
2025-04-11 19:42:52,968 [INFO] Final candidates: []
2025-04-11 19:42:52,968 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:52,978 [INFO] Final candidates: []
2025-04-11 19:42:52,978 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:52,978 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:53,061 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:53,061 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(8)), (np.int64(12), np.int64(8)))
2025-04-11 19:42:53,070 [INFO] Final candidates: []
2025-04-11 19:42:53,070 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:53,079 [INFO] Final candidates: []
2025-04-11 19:42:53,079 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:53,079 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:53,189 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:53,190 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(11)), (np.int64(11), np.int64(10)))
2025-04-11 19:42:53,199 [INFO] Final candidates: []
2025-04-11 19:42:53,199 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:53,207 [INFO] Final candidates: []
2025-04-11 19:42:53,207 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:53,207 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:53,460 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:53,460 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(12)), (np.int64(12), np.int64(8)))
2025-04-11 19:42:53,469 [INFO] Final candidates: []
2025-04-11 19:42:53,469 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:53,478 [INFO] Final candidates: []
2025-04-11 19:42:53,479 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:53,479 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:53,556 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:53,556 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(12)), (np.int64(11), np.int64(13)))
2025-04-11 19:42:53,565 [INFO] Final candidates: []
2025-04-11 19:42:53,565 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:53,574 [INFO] Final candidates: []
2025-04-11 19:42:53,574 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:53,574 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:53,701 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:53,701 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(10)), (np.int64(10), np.int64(11)))
2025-04-11 19:42:53,710 [INFO] Final candidates: []
2025-04-11 19:42:53,710 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:53,719 [INFO] Final candidates: []
2025-04-11 19:42:53,719 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:53,719 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:53,873 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:53,874 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(12)), (np.int64(8), np.int64(8)))
2025-04-11 19:42:53,879 [DEBUG] board coords: [(6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)]
2025-04-11 19:42:53,879 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:42:53,879 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 6), (7, 7)]
2025-04-11 19:42:53,880 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 1 1 1 1] with coords [(6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)] triggers candidate.
2025-04-11 19:42:53,880 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12)] triggers candidate.
2025-04-11 19:42:53,880 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:42:53,880 [DEBUG] board coords: [(8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13)]
2025-04-11 19:42:53,880 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:42:53,880 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 12), (13, 13)]
2025-04-11 19:42:53,880 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 1 1 0 0] with coords [(8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13)] triggers candidate.
2025-04-11 19:42:53,883 [INFO] Final candidates: [(6, 6), (12, 12), (7, 7), (13, 13)]
2025-04-11 19:42:53,883 [INFO] Phase win: Collected 6unique candidate(s):[((6, 6), (12, 12)), ((12, 12), (13, 13)), ((6, 6), (13, 13)), ((7, 7), (13, 13)), ((6, 6), (7, 7)), ((12, 12), (7, 7))]
2025-04-11 19:42:53,892 [INFO] Final candidates: []
2025-04-11 19:42:53,892 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:53,892 [INFO] Phase 1 (immediate win): 6 candidate(s) found.
2025-04-11 19:42:53,892 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:53,932 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:53,932 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(10)), (np.int64(9), np.int64(12)))
2025-04-11 19:42:53,942 [INFO] Final candidates: []
2025-04-11 19:42:53,942 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:53,950 [INFO] Final candidates: []
2025-04-11 19:42:53,950 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:53,950 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:54,036 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:54,036 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(9)), (np.int64(11), np.int64(10)))
2025-04-11 19:42:54,045 [INFO] Final candidates: []
2025-04-11 19:42:54,045 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:54,053 [INFO] Final candidates: []
2025-04-11 19:42:54,053 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:54,054 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:54,293 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:54,293 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(11)), (np.int64(12), np.int64(8)))
2025-04-11 19:42:54,303 [INFO] Final candidates: []
2025-04-11 19:42:54,303 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:54,311 [INFO] Final candidates: []
2025-04-11 19:42:54,311 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:54,311 [DEBUG] MCTS iteration 50: reached a node with 0 visits.
2025-04-11 19:42:54,311 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:54,533 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:54,533 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(12)), (np.int64(9), np.int64(7)))
2025-04-11 19:42:54,542 [INFO] Final candidates: []
2025-04-11 19:42:54,542 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:54,551 [INFO] Final candidates: []
2025-04-11 19:42:54,551 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:54,551 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:54,597 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:54,597 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(12)), (np.int64(7), np.int64(9)))
2025-04-11 19:42:54,606 [INFO] Final candidates: []
2025-04-11 19:42:54,606 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:54,615 [INFO] Final candidates: []
2025-04-11 19:42:54,615 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:54,615 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:54,763 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:54,763 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(8)), (np.int64(11), np.int64(10)))
2025-04-11 19:42:54,772 [INFO] Final candidates: []
2025-04-11 19:42:54,772 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:54,781 [INFO] Final candidates: []
2025-04-11 19:42:54,781 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:54,781 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:54,913 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:54,914 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(10)), (np.int64(12), np.int64(11)))
2025-04-11 19:42:54,923 [INFO] Final candidates: []
2025-04-11 19:42:54,923 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:54,931 [INFO] Final candidates: []
2025-04-11 19:42:54,931 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:54,932 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:54,942 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:54,942 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(11)), (np.int64(11), np.int64(13)))
2025-04-11 19:42:54,951 [INFO] Final candidates: []
2025-04-11 19:42:54,951 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:54,959 [INFO] Final candidates: []
2025-04-11 19:42:54,959 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:54,960 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:55,148 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:55,148 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(11)), (np.int64(12), np.int64(11)))
2025-04-11 19:42:55,158 [INFO] Final candidates: []
2025-04-11 19:42:55,158 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:55,167 [INFO] Final candidates: []
2025-04-11 19:42:55,167 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:55,167 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:55,410 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:55,411 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(8)), (np.int64(10), np.int64(11)))
2025-04-11 19:42:55,420 [INFO] Final candidates: []
2025-04-11 19:42:55,420 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:55,428 [INFO] Final candidates: []
2025-04-11 19:42:55,428 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:55,429 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:55,494 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:55,494 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(9)), (np.int64(7), np.int64(11)))
2025-04-11 19:42:55,503 [INFO] Final candidates: []
2025-04-11 19:42:55,503 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:55,512 [INFO] Final candidates: []
2025-04-11 19:42:55,512 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:55,512 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:55,672 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:55,672 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(9)), (np.int64(7), np.int64(11)))
2025-04-11 19:42:55,681 [INFO] Final candidates: []
2025-04-11 19:42:55,681 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:55,690 [INFO] Final candidates: []
2025-04-11 19:42:55,690 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:55,690 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:55,801 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:55,801 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(7)), (np.int64(8), np.int64(11)))
2025-04-11 19:42:55,810 [INFO] Final candidates: []
2025-04-11 19:42:55,810 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:55,819 [INFO] Final candidates: []
2025-04-11 19:42:55,819 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:55,819 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:55,885 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:55,886 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(12)), (np.int64(10), np.int64(9)))
2025-04-11 19:42:55,895 [INFO] Final candidates: []
2025-04-11 19:42:55,895 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:55,904 [INFO] Final candidates: []
2025-04-11 19:42:55,904 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:55,904 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:56,006 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:56,006 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(12)), (np.int64(11), np.int64(13)))
2025-04-11 19:42:56,011 [DEBUG] board coords: [(7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12)]
2025-04-11 19:42:56,011 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:42:56,012 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 7), (8, 8)]
2025-04-11 19:42:56,012 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 1 1 1 1] with coords [(7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12)] triggers candidate.
2025-04-11 19:42:56,012 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13)] triggers candidate.
2025-04-11 19:42:56,012 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:42:56,012 [DEBUG] board coords: [(9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14)]
2025-04-11 19:42:56,012 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:42:56,012 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 13), (14, 14)]
2025-04-11 19:42:56,012 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 1 1 0 0] with coords [(9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14)] triggers candidate.
2025-04-11 19:42:56,015 [INFO] Final candidates: [(8, 8), (14, 14), (7, 7), (13, 13)]
2025-04-11 19:42:56,015 [INFO] Phase win: Collected 6unique candidate(s):[((14, 14), (7, 7)), ((8, 8), (13, 13)), ((7, 7), (13, 13)), ((14, 14), (13, 13)), ((8, 8), (14, 14)), ((8, 8), (7, 7))]
2025-04-11 19:42:56,024 [INFO] Final candidates: []
2025-04-11 19:42:56,024 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:56,025 [INFO] Phase 1 (immediate win): 6 candidate(s) found.
2025-04-11 19:42:56,025 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:56,111 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:56,111 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(9)), (np.int64(13), np.int64(11)))
2025-04-11 19:42:56,120 [INFO] Final candidates: []
2025-04-11 19:42:56,120 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:56,128 [INFO] Final candidates: []
2025-04-11 19:42:56,128 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:56,129 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:56,169 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:56,170 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(9)), (np.int64(8), np.int64(10)))
2025-04-11 19:42:56,179 [INFO] Final candidates: []
2025-04-11 19:42:56,179 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:56,187 [INFO] Final candidates: []
2025-04-11 19:42:56,187 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:56,188 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:56,268 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:56,268 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(10)), (np.int64(7), np.int64(9)))
2025-04-11 19:42:56,277 [INFO] Final candidates: []
2025-04-11 19:42:56,277 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:56,286 [INFO] Final candidates: []
2025-04-11 19:42:56,286 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:56,286 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:56,299 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:56,299 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(12)), (np.int64(12), np.int64(11)))
2025-04-11 19:42:56,308 [INFO] Final candidates: []
2025-04-11 19:42:56,308 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:56,317 [INFO] Final candidates: []
2025-04-11 19:42:56,317 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:56,317 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:56,607 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:56,607 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(8)), (np.int64(9), np.int64(13)))
2025-04-11 19:42:56,616 [INFO] Final candidates: []
2025-04-11 19:42:56,616 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:56,626 [INFO] Final candidates: []
2025-04-11 19:42:56,626 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:56,626 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:56,800 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:56,800 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(9)), (np.int64(12), np.int64(8)))
2025-04-11 19:42:56,809 [INFO] Final candidates: []
2025-04-11 19:42:56,809 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:56,818 [INFO] Final candidates: []
2025-04-11 19:42:56,818 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:56,818 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:56,850 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:56,850 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(8)), (np.int64(12), np.int64(11)))
2025-04-11 19:42:56,859 [INFO] Final candidates: []
2025-04-11 19:42:56,859 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:56,872 [INFO] Final candidates: []
2025-04-11 19:42:56,872 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:56,872 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:56,890 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:56,890 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(12)), (np.int64(12), np.int64(9)))
2025-04-11 19:42:56,899 [INFO] Final candidates: []
2025-04-11 19:42:56,899 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:56,909 [INFO] Final candidates: []
2025-04-11 19:42:56,909 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:56,909 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:57,187 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:57,188 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(9)), (np.int64(11), np.int64(12)))
2025-04-11 19:42:57,197 [INFO] Final candidates: []
2025-04-11 19:42:57,197 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:57,205 [INFO] Final candidates: []
2025-04-11 19:42:57,205 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:57,205 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:57,277 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:57,277 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(10)), (np.int64(11), np.int64(12)))
2025-04-11 19:42:57,287 [INFO] Final candidates: []
2025-04-11 19:42:57,287 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:57,295 [INFO] Final candidates: []
2025-04-11 19:42:57,295 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:57,295 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:57,473 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:57,473 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(8)), (np.int64(8), np.int64(10)))
2025-04-11 19:42:57,482 [INFO] Final candidates: []
2025-04-11 19:42:57,482 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:57,493 [INFO] Final candidates: []
2025-04-11 19:42:57,493 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:57,494 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:57,591 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:57,591 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(8)), (np.int64(8), np.int64(11)))
2025-04-11 19:42:57,600 [INFO] Final candidates: []
2025-04-11 19:42:57,600 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:57,609 [INFO] Final candidates: []
2025-04-11 19:42:57,609 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:57,609 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:57,756 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:57,756 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(11)), (np.int64(7), np.int64(11)))
2025-04-11 19:42:57,765 [INFO] Final candidates: []
2025-04-11 19:42:57,765 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:57,774 [INFO] Final candidates: []
2025-04-11 19:42:57,774 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:57,774 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:57,947 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:57,948 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(11)), (np.int64(8), np.int64(10)))
2025-04-11 19:42:57,957 [INFO] Final candidates: []
2025-04-11 19:42:57,957 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:57,965 [INFO] Final candidates: []
2025-04-11 19:42:57,965 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:57,966 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:58,045 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:58,045 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(7)), (np.int64(9), np.int64(13)))
2025-04-11 19:42:58,054 [INFO] Final candidates: []
2025-04-11 19:42:58,055 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:58,063 [INFO] Final candidates: []
2025-04-11 19:42:58,063 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:58,064 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:58,100 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:58,100 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(13)), (np.int64(13), np.int64(9)))
2025-04-11 19:42:58,109 [INFO] Final candidates: []
2025-04-11 19:42:58,109 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:58,118 [INFO] Final candidates: []
2025-04-11 19:42:58,118 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:58,118 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:58,271 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:58,271 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(12)), (np.int64(8), np.int64(11)))
2025-04-11 19:42:58,277 [DEBUG] board coords: [(7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12)]
2025-04-11 19:42:58,277 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:42:58,277 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 7), (8, 8)]
2025-04-11 19:42:58,277 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 1 1 1 1] with coords [(7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12)] triggers candidate.
2025-04-11 19:42:58,277 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13)] triggers candidate.
2025-04-11 19:42:58,277 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:42:58,277 [DEBUG] board coords: [(9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14)]
2025-04-11 19:42:58,277 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:42:58,277 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 13), (14, 14)]
2025-04-11 19:42:58,277 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 1 1 0 0] with coords [(9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14)] triggers candidate.
2025-04-11 19:42:58,281 [INFO] Final candidates: [(8, 8), (14, 14), (7, 7), (13, 13)]
2025-04-11 19:42:58,281 [INFO] Phase win: Collected 6unique candidate(s):[((14, 14), (7, 7)), ((8, 8), (13, 13)), ((7, 7), (13, 13)), ((14, 14), (13, 13)), ((8, 8), (14, 14)), ((8, 8), (7, 7))]
2025-04-11 19:42:58,289 [INFO] Final candidates: []
2025-04-11 19:42:58,289 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:58,289 [INFO] Phase 1 (immediate win): 6 candidate(s) found.
2025-04-11 19:42:58,289 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:58,361 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:58,361 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(8)), (np.int64(10), np.int64(8)))
2025-04-11 19:42:58,370 [INFO] Final candidates: []
2025-04-11 19:42:58,370 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:58,379 [INFO] Final candidates: []
2025-04-11 19:42:58,379 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:58,379 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:58,561 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:58,562 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(10)), (np.int64(9), np.int64(13)))
2025-04-11 19:42:58,571 [INFO] Final candidates: []
2025-04-11 19:42:58,571 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:58,580 [INFO] Final candidates: []
2025-04-11 19:42:58,580 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:58,580 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:58,710 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:58,711 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(9)), (np.int64(8), np.int64(8)))
2025-04-11 19:42:58,716 [DEBUG] board coords: [(6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)]
2025-04-11 19:42:58,716 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:42:58,716 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 6), (7, 7)]
2025-04-11 19:42:58,716 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 1 1 1 1] with coords [(6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)] triggers candidate.
2025-04-11 19:42:58,716 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12)] triggers candidate.
2025-04-11 19:42:58,716 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:42:58,716 [DEBUG] board coords: [(8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13)]
2025-04-11 19:42:58,716 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:42:58,716 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 12), (13, 13)]
2025-04-11 19:42:58,717 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 1 1 0 0] with coords [(8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13)] triggers candidate.
2025-04-11 19:42:58,720 [INFO] Final candidates: [(6, 6), (12, 12), (7, 7), (13, 13)]
2025-04-11 19:42:58,720 [INFO] Phase win: Collected 6unique candidate(s):[((6, 6), (12, 12)), ((12, 12), (13, 13)), ((6, 6), (13, 13)), ((7, 7), (13, 13)), ((6, 6), (7, 7)), ((12, 12), (7, 7))]
2025-04-11 19:42:58,729 [INFO] Final candidates: []
2025-04-11 19:42:58,729 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:58,729 [INFO] Phase 1 (immediate win): 6 candidate(s) found.
2025-04-11 19:42:58,729 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:58,785 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:58,785 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(11)), (np.int64(11), np.int64(13)))
2025-04-11 19:42:58,794 [INFO] Final candidates: []
2025-04-11 19:42:58,794 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:58,803 [INFO] Final candidates: []
2025-04-11 19:42:58,803 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:58,803 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:58,900 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:58,900 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(7)), (np.int64(13), np.int64(9)))
2025-04-11 19:42:58,910 [INFO] Final candidates: []
2025-04-11 19:42:58,910 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:58,919 [INFO] Final candidates: []
2025-04-11 19:42:58,919 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:58,919 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:59,096 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:59,096 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(12)), (np.int64(11), np.int64(7)))
2025-04-11 19:42:59,102 [DEBUG] board coords: [(7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12)]
2025-04-11 19:42:59,102 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:42:59,102 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 7), (8, 8)]
2025-04-11 19:42:59,102 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 1 1 1 1] with coords [(7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12)] triggers candidate.
2025-04-11 19:42:59,102 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13)] triggers candidate.
2025-04-11 19:42:59,102 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:42:59,102 [DEBUG] board coords: [(9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14)]
2025-04-11 19:42:59,102 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:42:59,102 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 13), (14, 14)]
2025-04-11 19:42:59,102 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 1 1 0 0] with coords [(9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14)] triggers candidate.
2025-04-11 19:42:59,105 [INFO] Final candidates: [(8, 8), (14, 14), (7, 7), (13, 13)]
2025-04-11 19:42:59,105 [INFO] Phase win: Collected 6unique candidate(s):[((14, 14), (7, 7)), ((8, 8), (13, 13)), ((7, 7), (13, 13)), ((14, 14), (13, 13)), ((8, 8), (14, 14)), ((8, 8), (7, 7))]
2025-04-11 19:42:59,114 [INFO] Final candidates: []
2025-04-11 19:42:59,114 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:59,114 [INFO] Phase 1 (immediate win): 6 candidate(s) found.
2025-04-11 19:42:59,114 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:59,252 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:59,254 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(7)), (np.int64(12), np.int64(8)))
2025-04-11 19:42:59,263 [INFO] Final candidates: []
2025-04-11 19:42:59,263 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:59,272 [INFO] Final candidates: []
2025-04-11 19:42:59,272 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:59,272 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:59,425 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:59,426 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(10)), (np.int64(13), np.int64(9)))
2025-04-11 19:42:59,436 [INFO] Final candidates: []
2025-04-11 19:42:59,436 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:59,445 [INFO] Final candidates: []
2025-04-11 19:42:59,445 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:59,445 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:59,510 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:42:59,510 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(12)), (np.int64(9), np.int64(12)))
2025-04-11 19:42:59,519 [INFO] Final candidates: []
2025-04-11 19:42:59,519 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:59,527 [INFO] Final candidates: []
2025-04-11 19:42:59,527 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:59,528 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:59,757 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:59,758 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(7)), (np.int64(12), np.int64(8)))
2025-04-11 19:42:59,767 [INFO] Final candidates: []
2025-04-11 19:42:59,767 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:42:59,775 [INFO] Final candidates: []
2025-04-11 19:42:59,775 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:59,775 [INFO] Default policy: Starting random playout.
2025-04-11 19:42:59,924 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:42:59,924 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(11)), (np.int64(8), np.int64(8)))
2025-04-11 19:42:59,930 [DEBUG] board coords: [(6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)]
2025-04-11 19:42:59,930 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:42:59,930 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 6), (7, 7)]
2025-04-11 19:42:59,930 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 1 1 1 1] with coords [(6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)] triggers candidate.
2025-04-11 19:42:59,930 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12)] triggers candidate.
2025-04-11 19:42:59,930 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:42:59,930 [DEBUG] board coords: [(8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13)]
2025-04-11 19:42:59,930 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:42:59,930 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 12), (13, 13)]
2025-04-11 19:42:59,930 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 1 1 0 0] with coords [(8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13)] triggers candidate.
2025-04-11 19:42:59,934 [INFO] Final candidates: [(6, 6), (12, 12), (7, 7), (13, 13)]
2025-04-11 19:42:59,934 [INFO] Phase win: Collected 6unique candidate(s):[((6, 6), (12, 12)), ((12, 12), (13, 13)), ((6, 6), (13, 13)), ((7, 7), (13, 13)), ((6, 6), (7, 7)), ((12, 12), (7, 7))]
2025-04-11 19:42:59,942 [INFO] Final candidates: []
2025-04-11 19:42:59,942 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:42:59,942 [INFO] Phase 1 (immediate win): 6 candidate(s) found.
2025-04-11 19:42:59,942 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:00,041 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:43:00,041 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(13)), (np.int64(12), np.int64(8)))
2025-04-11 19:43:00,050 [INFO] Final candidates: []
2025-04-11 19:43:00,051 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:00,059 [INFO] Final candidates: []
2025-04-11 19:43:00,059 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:00,059 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:00,296 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:43:00,296 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(10)), (np.int64(8), np.int64(10)))
2025-04-11 19:43:00,305 [INFO] Final candidates: []
2025-04-11 19:43:00,305 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:00,314 [INFO] Final candidates: []
2025-04-11 19:43:00,314 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:00,314 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:00,352 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:43:00,352 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(9)), (np.int64(12), np.int64(12)))
2025-04-11 19:43:00,358 [DEBUG] board coords: [(7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12)]
2025-04-11 19:43:00,358 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:43:00,358 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 7), (8, 8)]
2025-04-11 19:43:00,358 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 1 1 1 1] with coords [(7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12)] triggers candidate.
2025-04-11 19:43:00,358 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13)] triggers candidate.
2025-04-11 19:43:00,358 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:43:00,358 [DEBUG] board coords: [(9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14)]
2025-04-11 19:43:00,358 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:43:00,358 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 13), (14, 14)]
2025-04-11 19:43:00,358 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 1 1 0 0] with coords [(9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14)] triggers candidate.
2025-04-11 19:43:00,362 [INFO] Final candidates: [(8, 8), (14, 14), (7, 7), (13, 13)]
2025-04-11 19:43:00,362 [INFO] Phase win: Collected 6unique candidate(s):[((14, 14), (7, 7)), ((8, 8), (13, 13)), ((7, 7), (13, 13)), ((14, 14), (13, 13)), ((8, 8), (14, 14)), ((8, 8), (7, 7))]
2025-04-11 19:43:00,370 [INFO] Final candidates: []
2025-04-11 19:43:00,370 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:00,370 [INFO] Phase 1 (immediate win): 6 candidate(s) found.
2025-04-11 19:43:00,370 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:00,530 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:43:00,530 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(8)), (np.int64(10), np.int64(12)))
2025-04-11 19:43:00,539 [INFO] Final candidates: []
2025-04-11 19:43:00,539 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:00,547 [INFO] Final candidates: []
2025-04-11 19:43:00,547 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:00,548 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:00,569 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:43:00,569 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(7)), (np.int64(11), np.int64(12)))
2025-04-11 19:43:00,578 [INFO] Final candidates: []
2025-04-11 19:43:00,578 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:00,587 [INFO] Final candidates: []
2025-04-11 19:43:00,587 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:00,587 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:00,891 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:43:00,891 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(8)), (np.int64(9), np.int64(12)))
2025-04-11 19:43:00,900 [INFO] Final candidates: []
2025-04-11 19:43:00,900 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:00,908 [INFO] Final candidates: []
2025-04-11 19:43:00,909 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:00,909 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:00,926 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:43:00,926 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(9)), (np.int64(7), np.int64(11)))
2025-04-11 19:43:00,936 [INFO] Final candidates: []
2025-04-11 19:43:00,936 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:00,944 [INFO] Final candidates: []
2025-04-11 19:43:00,944 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:00,945 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:01,039 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:43:01,039 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(11)), (np.int64(13), np.int64(9)))
2025-04-11 19:43:01,048 [INFO] Final candidates: []
2025-04-11 19:43:01,048 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:01,056 [INFO] Final candidates: []
2025-04-11 19:43:01,057 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:01,057 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:01,283 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:43:01,283 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(11)), (np.int64(9), np.int64(13)))
2025-04-11 19:43:01,292 [INFO] Final candidates: []
2025-04-11 19:43:01,292 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:01,301 [INFO] Final candidates: []
2025-04-11 19:43:01,301 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:01,301 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:01,366 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:43:01,367 [DEBUG] MCTS: BEST ((np.int64(10), np.int64(12)), (np.int64(11), np.int64(12))) with 1 visits.
2025-04-11 19:43:01,367 [INFO] MCTS: Search finished. Best move selected with 1 visits.
2025-04-11 19:43:01,367 [INFO] MCTS selected move: N11,N12
2025-04-11 19:43:01,367 [INFO] ===============NEW MOVE================
2025-04-11 19:43:06,232 [INFO] Starting pre-MCTS candidate collection.
2025-04-11 19:43:06,240 [INFO] Final candidates: []
2025-04-11 19:43:06,241 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:06,246 [DEBUG] board coords: [(7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12)]
2025-04-11 19:43:06,246 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:43:06,246 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 7), (8, 8)]
2025-04-11 19:43:06,246 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 1 1 1 1] with coords [(7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12)] triggers candidate.
2025-04-11 19:43:06,246 [DEBUG] check_window_intermediate_custom: valid_move=[(8, 8)]
2025-04-11 19:43:06,246 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13)] triggers candidate.
2025-04-11 19:43:06,246 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:43:06,246 [DEBUG] board coords: [(10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15)]
2025-04-11 19:43:06,246 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(0)]
2025-04-11 19:43:06,246 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 13), (15, 15)]
2025-04-11 19:43:06,246 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 1 0 1 0] with coords [(10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15)] triggers candidate.
2025-04-11 19:43:06,246 [DEBUG] check_window_intermediate_custom: valid_move=[(13, 13)]
2025-04-11 19:43:06,247 [DEBUG] board coords: [(8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14)]
2025-04-11 19:43:06,247 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1)]
2025-04-11 19:43:06,247 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 8), (13, 13)]
2025-04-11 19:43:06,247 [DEBUG] check_window_intermediate_custom: For L=7, window [0 1 1 1 1 0 1] with coords [(8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14)] triggers candidate.
2025-04-11 19:43:06,248 [DEBUG] check_window_intermediate_custom: valid_move=[(13, 13)]
2025-04-11 19:43:06,248 [DEBUG] board coords: [(9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15)]
2025-04-11 19:43:06,248 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(0)]
2025-04-11 19:43:06,248 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 13), (15, 15)]
2025-04-11 19:43:06,248 [DEBUG] check_window_intermediate_custom: For L=7, window [1 1 1 1 0 1 0] with coords [(9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15)] triggers candidate.
2025-04-11 19:43:06,248 [DEBUG] check_window_intermediate_custom: valid_move=[(13, 13)]
2025-04-11 19:43:06,250 [INFO] Final candidates: [(8, 8), (13, 13)]
2025-04-11 19:43:06,250 [INFO] Phase defense: Collected 1unique candidate(s):[((8, 8), (13, 13))]
2025-04-11 19:43:06,250 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:43:06,250 [INFO] MCTS: Starting search for 100 iterations.
2025-04-11 19:43:06,250 [DEBUG] Tree_policy iteration 1: Expanding move ((8, 8), (13, 13))
2025-04-11 19:43:06,259 [INFO] Final candidates: []
2025-04-11 19:43:06,259 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:06,267 [INFO] Final candidates: []
2025-04-11 19:43:06,267 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:06,268 [DEBUG] MCTS iteration 0: reached a node with 0 visits.
2025-04-11 19:43:06,268 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:06,554 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:43:06,554 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:06,554 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(8)), (np.int64(15), np.int64(15)))
2025-04-11 19:43:06,563 [INFO] Final candidates: []
2025-04-11 19:43:06,563 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:06,571 [INFO] Final candidates: []
2025-04-11 19:43:06,571 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:06,572 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:06,644 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:43:06,644 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:06,644 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(12)), (np.int64(9), np.int64(13)))
2025-04-11 19:43:06,653 [INFO] Final candidates: []
2025-04-11 19:43:06,653 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:06,661 [INFO] Final candidates: []
2025-04-11 19:43:06,661 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:06,661 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:06,760 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:43:06,760 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:06,760 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(13)), (np.int64(11), np.int64(10)))
2025-04-11 19:43:06,769 [INFO] Final candidates: []
2025-04-11 19:43:06,769 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:06,777 [INFO] Final candidates: []
2025-04-11 19:43:06,777 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:06,778 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:06,976 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:43:06,977 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:06,977 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(14)), (np.int64(9), np.int64(13)))
2025-04-11 19:43:06,985 [INFO] Final candidates: []
2025-04-11 19:43:06,985 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:06,994 [INFO] Final candidates: []
2025-04-11 19:43:06,994 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:06,994 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:07,101 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:43:07,101 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:07,101 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(12)), (np.int64(7), np.int64(8)))
2025-04-11 19:43:07,112 [INFO] Final candidates: []
2025-04-11 19:43:07,112 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:07,121 [INFO] Final candidates: []
2025-04-11 19:43:07,121 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:07,121 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:07,201 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:43:07,202 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:07,202 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(15)), (np.int64(10), np.int64(11)))
2025-04-11 19:43:07,210 [INFO] Final candidates: []
2025-04-11 19:43:07,210 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:07,219 [INFO] Final candidates: []
2025-04-11 19:43:07,219 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:07,219 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:07,476 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:43:07,477 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:07,477 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(11)), (np.int64(12), np.int64(14)))
2025-04-11 19:43:07,485 [INFO] Final candidates: []
2025-04-11 19:43:07,485 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:07,494 [INFO] Final candidates: []
2025-04-11 19:43:07,494 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:07,494 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:07,588 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:43:07,588 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:07,588 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(9)), (np.int64(13), np.int64(15)))
2025-04-11 19:43:07,597 [INFO] Final candidates: []
2025-04-11 19:43:07,597 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:07,606 [INFO] Final candidates: []
2025-04-11 19:43:07,606 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:07,606 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:07,731 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:43:07,731 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:07,732 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(8)), (np.int64(7), np.int64(11)))
2025-04-11 19:43:07,740 [INFO] Final candidates: []
2025-04-11 19:43:07,740 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:07,748 [INFO] Final candidates: []
2025-04-11 19:43:07,749 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:07,749 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:07,818 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:43:07,818 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:07,818 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(13)), (np.int64(8), np.int64(7)))
2025-04-11 19:43:07,827 [INFO] Final candidates: []
2025-04-11 19:43:07,827 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:07,835 [INFO] Final candidates: []
2025-04-11 19:43:07,835 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:07,835 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:08,090 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:43:08,090 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:08,090 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(6)), (np.int64(9), np.int64(10)))
2025-04-11 19:43:08,099 [INFO] Final candidates: []
2025-04-11 19:43:08,099 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:08,107 [INFO] Final candidates: []
2025-04-11 19:43:08,107 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:08,107 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:08,236 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:43:08,236 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:08,236 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(10)), (np.int64(15), np.int64(14)))
2025-04-11 19:43:08,245 [INFO] Final candidates: []
2025-04-11 19:43:08,245 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:08,253 [INFO] Final candidates: []
2025-04-11 19:43:08,253 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:08,254 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:08,374 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:43:08,374 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:08,374 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(11)), (np.int64(12), np.int64(8)))
2025-04-11 19:43:08,383 [INFO] Final candidates: []
2025-04-11 19:43:08,383 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:08,391 [INFO] Final candidates: []
2025-04-11 19:43:08,391 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:08,391 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:08,457 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:43:08,457 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:08,457 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(14)), (np.int64(12), np.int64(11)))
2025-04-11 19:43:08,465 [INFO] Final candidates: []
2025-04-11 19:43:08,465 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:08,474 [INFO] Final candidates: []
2025-04-11 19:43:08,474 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:08,474 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:08,550 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:43:08,551 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:08,551 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(10)), (np.int64(15), np.int64(15)))
2025-04-11 19:43:08,559 [INFO] Final candidates: []
2025-04-11 19:43:08,559 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:08,568 [INFO] Final candidates: []
2025-04-11 19:43:08,568 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:08,568 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:08,609 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:43:08,609 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:08,609 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(13)), (np.int64(11), np.int64(7)))
2025-04-11 19:43:08,618 [INFO] Final candidates: []
2025-04-11 19:43:08,618 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:08,626 [INFO] Final candidates: []
2025-04-11 19:43:08,626 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:08,627 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:08,712 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:43:08,712 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:08,712 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(8)), (np.int64(9), np.int64(13)))
2025-04-11 19:43:08,721 [INFO] Final candidates: []
2025-04-11 19:43:08,721 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:08,729 [INFO] Final candidates: []
2025-04-11 19:43:08,729 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:08,730 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:08,990 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:43:08,990 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:08,991 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(11)), (np.int64(6), np.int64(8)))
2025-04-11 19:43:08,999 [INFO] Final candidates: []
2025-04-11 19:43:08,999 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:09,007 [INFO] Final candidates: []
2025-04-11 19:43:09,007 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:09,008 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:09,236 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:43:09,236 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:09,237 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(9)), (np.int64(7), np.int64(11)))
2025-04-11 19:43:09,245 [INFO] Final candidates: []
2025-04-11 19:43:09,245 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:09,253 [INFO] Final candidates: []
2025-04-11 19:43:09,253 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:09,254 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:09,285 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:43:09,285 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:09,285 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(16)), (np.int64(15), np.int64(14)))
2025-04-11 19:43:09,294 [INFO] Final candidates: []
2025-04-11 19:43:09,294 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:09,302 [INFO] Final candidates: []
2025-04-11 19:43:09,302 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:09,303 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:09,382 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:43:09,382 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:09,382 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(8)), (np.int64(10), np.int64(13)))
2025-04-11 19:43:09,391 [INFO] Final candidates: []
2025-04-11 19:43:09,391 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:09,399 [INFO] Final candidates: []
2025-04-11 19:43:09,399 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:09,399 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:09,522 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:43:09,522 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:09,522 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(6)), (np.int64(7), np.int64(8)))
2025-04-11 19:43:09,530 [INFO] Final candidates: []
2025-04-11 19:43:09,530 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:09,539 [INFO] Final candidates: []
2025-04-11 19:43:09,539 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:09,539 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:09,758 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:43:09,759 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:09,759 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(6)), (np.int64(8), np.int64(11)))
2025-04-11 19:43:09,768 [INFO] Final candidates: []
2025-04-11 19:43:09,768 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:09,776 [INFO] Final candidates: []
2025-04-11 19:43:09,776 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:09,776 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:09,803 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:43:09,803 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:09,803 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(8)), (np.int64(11), np.int64(13)))
2025-04-11 19:43:09,811 [INFO] Final candidates: []
2025-04-11 19:43:09,811 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:09,820 [INFO] Final candidates: []
2025-04-11 19:43:09,820 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:09,820 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:09,941 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:43:09,941 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:09,941 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(8)), (np.int64(9), np.int64(7)))
2025-04-11 19:43:09,951 [INFO] Final candidates: []
2025-04-11 19:43:09,951 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:09,959 [INFO] Final candidates: []
2025-04-11 19:43:09,959 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:09,960 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:10,103 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:43:10,103 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:10,103 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(14)), (np.int64(9), np.int64(7)))
2025-04-11 19:43:10,114 [INFO] Final candidates: []
2025-04-11 19:43:10,114 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:10,124 [INFO] Final candidates: []
2025-04-11 19:43:10,124 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:10,125 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:10,266 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:43:10,266 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:10,266 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(11)), (np.int64(7), np.int64(11)))
2025-04-11 19:43:10,275 [INFO] Final candidates: []
2025-04-11 19:43:10,275 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:10,283 [INFO] Final candidates: []
2025-04-11 19:43:10,283 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:10,284 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:10,397 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:43:10,397 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:10,397 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(14)), (np.int64(13), np.int64(9)))
2025-04-11 19:43:10,406 [INFO] Final candidates: []
2025-04-11 19:43:10,406 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:10,414 [INFO] Final candidates: []
2025-04-11 19:43:10,414 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:10,414 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:10,609 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:43:10,609 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:10,609 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(11)), (np.int64(10), np.int64(11)))
2025-04-11 19:43:10,617 [INFO] Final candidates: []
2025-04-11 19:43:10,617 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:10,626 [INFO] Final candidates: []
2025-04-11 19:43:10,626 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:10,626 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:10,769 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:43:10,769 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:10,769 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(10)), (np.int64(13), np.int64(15)))
2025-04-11 19:43:10,777 [INFO] Final candidates: []
2025-04-11 19:43:10,777 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:10,786 [INFO] Final candidates: []
2025-04-11 19:43:10,786 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:10,786 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:10,897 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:43:10,897 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:10,897 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(14)), (np.int64(13), np.int64(9)))
2025-04-11 19:43:10,906 [INFO] Final candidates: []
2025-04-11 19:43:10,906 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:10,914 [INFO] Final candidates: []
2025-04-11 19:43:10,914 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:10,915 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:11,059 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:43:11,060 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:11,060 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(15)), (np.int64(12), np.int64(14)))
2025-04-11 19:43:11,068 [INFO] Final candidates: []
2025-04-11 19:43:11,068 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:11,079 [INFO] Final candidates: []
2025-04-11 19:43:11,079 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:11,079 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:11,198 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:43:11,199 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:11,199 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(14)), (np.int64(10), np.int64(8)))
2025-04-11 19:43:11,207 [INFO] Final candidates: []
2025-04-11 19:43:11,207 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:11,216 [INFO] Final candidates: []
2025-04-11 19:43:11,216 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:11,217 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:11,343 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:43:11,343 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:11,343 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(13)), (np.int64(13), np.int64(15)))
2025-04-11 19:43:11,351 [INFO] Final candidates: []
2025-04-11 19:43:11,351 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:11,362 [INFO] Final candidates: []
2025-04-11 19:43:11,362 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:11,362 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:11,398 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:43:11,398 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:11,398 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(7)), (np.int64(10), np.int64(14)))
2025-04-11 19:43:11,408 [INFO] Final candidates: []
2025-04-11 19:43:11,408 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:11,416 [INFO] Final candidates: []
2025-04-11 19:43:11,416 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:11,416 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:11,565 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:43:11,566 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:11,566 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(8)), (np.int64(13), np.int64(9)))
2025-04-11 19:43:11,574 [INFO] Final candidates: []
2025-04-11 19:43:11,574 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:11,582 [INFO] Final candidates: []
2025-04-11 19:43:11,583 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:11,583 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:11,718 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:43:11,718 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:11,718 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(10)), (np.int64(12), np.int64(13)))
2025-04-11 19:43:11,727 [INFO] Final candidates: []
2025-04-11 19:43:11,727 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:11,735 [INFO] Final candidates: []
2025-04-11 19:43:11,736 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:11,736 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:11,776 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:43:11,776 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:11,776 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(7)), (np.int64(13), np.int64(15)))
2025-04-11 19:43:11,785 [INFO] Final candidates: []
2025-04-11 19:43:11,785 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:11,796 [INFO] Final candidates: []
2025-04-11 19:43:11,796 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:11,797 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:11,831 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:43:11,831 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:11,831 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(14)), (np.int64(10), np.int64(8)))
2025-04-11 19:43:11,840 [INFO] Final candidates: []
2025-04-11 19:43:11,840 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:11,848 [INFO] Final candidates: []
2025-04-11 19:43:11,848 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:11,848 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:12,131 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:43:12,131 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:12,131 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(16)), (np.int64(9), np.int64(10)))
2025-04-11 19:43:12,140 [INFO] Final candidates: []
2025-04-11 19:43:12,140 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:12,148 [INFO] Final candidates: []
2025-04-11 19:43:12,148 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:12,149 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:12,208 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:43:12,209 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:12,209 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(12)), (np.int64(12), np.int64(8)))
2025-04-11 19:43:12,217 [INFO] Final candidates: []
2025-04-11 19:43:12,217 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:12,225 [INFO] Final candidates: []
2025-04-11 19:43:12,225 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:12,226 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:12,267 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:43:12,267 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:12,267 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(12)), (np.int64(12), np.int64(11)))
2025-04-11 19:43:12,278 [INFO] Final candidates: []
2025-04-11 19:43:12,278 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:12,287 [INFO] Final candidates: []
2025-04-11 19:43:12,287 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:12,287 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:12,396 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:43:12,396 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:12,396 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(10)), (np.int64(12), np.int64(9)))
2025-04-11 19:43:12,405 [INFO] Final candidates: []
2025-04-11 19:43:12,405 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:12,413 [INFO] Final candidates: []
2025-04-11 19:43:12,413 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:12,414 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:12,482 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:43:12,483 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:12,483 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(13)), (np.int64(13), np.int64(11)))
2025-04-11 19:43:12,491 [INFO] Final candidates: []
2025-04-11 19:43:12,491 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:12,499 [INFO] Final candidates: []
2025-04-11 19:43:12,499 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:12,500 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:12,784 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:43:12,785 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:12,785 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(14)), (np.int64(11), np.int64(7)))
2025-04-11 19:43:12,793 [INFO] Final candidates: []
2025-04-11 19:43:12,793 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:12,801 [INFO] Final candidates: []
2025-04-11 19:43:12,801 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:12,802 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:12,979 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:43:12,980 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:12,980 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(9)), (np.int64(8), np.int64(7)))
2025-04-11 19:43:12,988 [INFO] Final candidates: []
2025-04-11 19:43:12,989 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:12,997 [INFO] Final candidates: []
2025-04-11 19:43:12,997 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:12,997 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:13,315 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:43:13,316 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:13,316 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(8)), (np.int64(11), np.int64(10)))
2025-04-11 19:43:13,324 [INFO] Final candidates: []
2025-04-11 19:43:13,324 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:13,333 [INFO] Final candidates: []
2025-04-11 19:43:13,333 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:13,333 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:13,410 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:43:13,411 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:13,411 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(9)), (np.int64(12), np.int64(11)))
2025-04-11 19:43:13,419 [INFO] Final candidates: []
2025-04-11 19:43:13,419 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:13,428 [INFO] Final candidates: []
2025-04-11 19:43:13,428 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:13,428 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:13,554 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:43:13,554 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:13,555 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(12)), (np.int64(15), np.int64(15)))
2025-04-11 19:43:13,563 [INFO] Final candidates: []
2025-04-11 19:43:13,563 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:13,572 [INFO] Final candidates: []
2025-04-11 19:43:13,572 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:13,572 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:13,795 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:43:13,795 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:13,795 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(8)), (np.int64(7), np.int64(7)))
2025-04-11 19:43:13,804 [INFO] Final candidates: []
2025-04-11 19:43:13,804 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:13,812 [INFO] Final candidates: []
2025-04-11 19:43:13,812 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:13,812 [DEBUG] MCTS iteration 50: reached a node with 0 visits.
2025-04-11 19:43:13,813 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:14,057 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:43:14,057 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:14,057 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(8)), (np.int64(13), np.int64(12)))
2025-04-11 19:43:14,065 [INFO] Final candidates: []
2025-04-11 19:43:14,065 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:14,074 [INFO] Final candidates: []
2025-04-11 19:43:14,074 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:14,074 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:14,178 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:43:14,178 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:14,178 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(9)), (np.int64(14), np.int64(12)))
2025-04-11 19:43:14,187 [INFO] Final candidates: []
2025-04-11 19:43:14,187 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:14,195 [INFO] Final candidates: []
2025-04-11 19:43:14,195 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:14,196 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:14,348 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:43:14,348 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:14,349 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(7)), (np.int64(12), np.int64(11)))
2025-04-11 19:43:14,357 [INFO] Final candidates: []
2025-04-11 19:43:14,357 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:14,365 [INFO] Final candidates: []
2025-04-11 19:43:14,365 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:14,366 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:14,511 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:43:14,511 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:14,511 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(15)), (np.int64(9), np.int64(13)))
2025-04-11 19:43:14,520 [INFO] Final candidates: []
2025-04-11 19:43:14,520 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:14,530 [INFO] Final candidates: []
2025-04-11 19:43:14,530 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:14,531 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:14,643 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:43:14,643 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:14,643 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(14)), (np.int64(15), np.int64(15)))
2025-04-11 19:43:14,652 [INFO] Final candidates: []
2025-04-11 19:43:14,652 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:14,660 [INFO] Final candidates: []
2025-04-11 19:43:14,660 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:14,661 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:14,725 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:43:14,725 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:14,725 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(11)), (np.int64(7), np.int64(11)))
2025-04-11 19:43:14,734 [INFO] Final candidates: []
2025-04-11 19:43:14,734 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:14,742 [INFO] Final candidates: []
2025-04-11 19:43:14,742 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:14,743 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:14,787 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:43:14,787 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:14,787 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(7)), (np.int64(10), np.int64(11)))
2025-04-11 19:43:14,796 [INFO] Final candidates: []
2025-04-11 19:43:14,796 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:14,804 [INFO] Final candidates: []
2025-04-11 19:43:14,804 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:14,805 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:14,858 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:43:14,859 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:14,859 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(11)), (np.int64(13), np.int64(15)))
2025-04-11 19:43:14,867 [INFO] Final candidates: []
2025-04-11 19:43:14,867 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:14,876 [INFO] Final candidates: []
2025-04-11 19:43:14,876 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:14,876 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:14,987 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:43:14,987 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:14,987 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(14)), (np.int64(12), np.int64(9)))
2025-04-11 19:43:14,996 [INFO] Final candidates: []
2025-04-11 19:43:14,996 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:15,004 [INFO] Final candidates: []
2025-04-11 19:43:15,005 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:15,005 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:15,084 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:43:15,084 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:15,084 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(8)), (np.int64(10), np.int64(9)))
2025-04-11 19:43:15,093 [INFO] Final candidates: []
2025-04-11 19:43:15,093 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:15,102 [INFO] Final candidates: []
2025-04-11 19:43:15,102 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:15,102 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:15,310 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:43:15,310 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:15,310 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(8)), (np.int64(11), np.int64(7)))
2025-04-11 19:43:15,319 [INFO] Final candidates: []
2025-04-11 19:43:15,319 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:15,327 [INFO] Final candidates: []
2025-04-11 19:43:15,327 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:15,327 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:15,454 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:43:15,454 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:15,454 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(10)), (np.int64(9), np.int64(7)))
2025-04-11 19:43:15,462 [INFO] Final candidates: []
2025-04-11 19:43:15,462 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:15,471 [INFO] Final candidates: []
2025-04-11 19:43:15,471 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:15,471 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:15,681 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:43:15,681 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:15,681 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(14)), (np.int64(14), np.int64(12)))
2025-04-11 19:43:15,692 [INFO] Final candidates: []
2025-04-11 19:43:15,692 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:15,701 [INFO] Final candidates: []
2025-04-11 19:43:15,701 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:15,702 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:15,907 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:43:15,907 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:15,908 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(8)), (np.int64(8), np.int64(10)))
2025-04-11 19:43:15,916 [INFO] Final candidates: []
2025-04-11 19:43:15,916 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:15,925 [INFO] Final candidates: []
2025-04-11 19:43:15,925 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:15,925 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:15,982 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:43:15,982 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:15,982 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(14)), (np.int64(7), np.int64(11)))
2025-04-11 19:43:15,991 [INFO] Final candidates: []
2025-04-11 19:43:15,991 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:15,999 [INFO] Final candidates: []
2025-04-11 19:43:15,999 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:16,000 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:16,115 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:43:16,115 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:16,115 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(13)), (np.int64(8), np.int64(10)))
2025-04-11 19:43:16,125 [INFO] Final candidates: []
2025-04-11 19:43:16,125 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:16,134 [INFO] Final candidates: []
2025-04-11 19:43:16,134 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:16,135 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:16,211 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:43:16,212 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:16,212 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(9)), (np.int64(7), np.int64(8)))
2025-04-11 19:43:16,220 [INFO] Final candidates: []
2025-04-11 19:43:16,220 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:16,229 [INFO] Final candidates: []
2025-04-11 19:43:16,229 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:16,229 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:16,369 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:43:16,369 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:16,369 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(11)), (np.int64(13), np.int64(9)))
2025-04-11 19:43:16,377 [INFO] Final candidates: []
2025-04-11 19:43:16,377 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:16,386 [INFO] Final candidates: []
2025-04-11 19:43:16,386 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:16,386 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:16,508 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:43:16,508 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:16,508 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(13)), (np.int64(7), np.int64(9)))
2025-04-11 19:43:16,519 [INFO] Final candidates: []
2025-04-11 19:43:16,519 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:16,527 [INFO] Final candidates: []
2025-04-11 19:43:16,527 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:16,528 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:16,641 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:43:16,641 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:16,641 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(16)), (np.int64(15), np.int64(15)))
2025-04-11 19:43:16,650 [INFO] Final candidates: []
2025-04-11 19:43:16,650 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:16,659 [INFO] Final candidates: []
2025-04-11 19:43:16,659 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:16,659 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:16,689 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:43:16,689 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:16,689 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(12)), (np.int64(13), np.int64(15)))
2025-04-11 19:43:16,697 [INFO] Final candidates: []
2025-04-11 19:43:16,697 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:16,706 [INFO] Final candidates: []
2025-04-11 19:43:16,706 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:16,706 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:16,789 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:43:16,789 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:16,789 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(9)), (np.int64(10), np.int64(11)))
2025-04-11 19:43:16,798 [INFO] Final candidates: []
2025-04-11 19:43:16,798 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:16,807 [INFO] Final candidates: []
2025-04-11 19:43:16,807 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:16,807 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:16,839 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:43:16,840 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:16,840 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(8)), (np.int64(12), np.int64(9)))
2025-04-11 19:43:16,848 [INFO] Final candidates: []
2025-04-11 19:43:16,848 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:16,856 [INFO] Final candidates: []
2025-04-11 19:43:16,856 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:16,857 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:16,939 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:43:16,940 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:16,940 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(15)), (np.int64(11), np.int64(10)))
2025-04-11 19:43:16,949 [INFO] Final candidates: []
2025-04-11 19:43:16,949 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:16,958 [INFO] Final candidates: []
2025-04-11 19:43:16,958 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:16,958 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:17,035 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:43:17,036 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:17,036 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(12)), (np.int64(11), np.int64(7)))
2025-04-11 19:43:17,044 [INFO] Final candidates: []
2025-04-11 19:43:17,045 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:17,053 [INFO] Final candidates: []
2025-04-11 19:43:17,053 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:17,054 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:17,221 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:43:17,221 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:17,221 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(12)), (np.int64(8), np.int64(7)))
2025-04-11 19:43:17,230 [INFO] Final candidates: []
2025-04-11 19:43:17,230 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:17,239 [INFO] Final candidates: []
2025-04-11 19:43:17,239 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:17,240 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:17,274 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:43:17,275 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:17,275 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(8)), (np.int64(7), np.int64(8)))
2025-04-11 19:43:17,283 [INFO] Final candidates: []
2025-04-11 19:43:17,283 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:17,292 [INFO] Final candidates: []
2025-04-11 19:43:17,292 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:17,292 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:17,606 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:43:17,606 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:17,606 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(8)), (np.int64(10), np.int64(14)))
2025-04-11 19:43:17,615 [INFO] Final candidates: []
2025-04-11 19:43:17,615 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:17,623 [INFO] Final candidates: []
2025-04-11 19:43:17,623 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:17,624 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:17,718 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:43:17,718 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:17,718 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(14)), (np.int64(13), np.int64(9)))
2025-04-11 19:43:17,726 [INFO] Final candidates: []
2025-04-11 19:43:17,726 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:17,735 [INFO] Final candidates: []
2025-04-11 19:43:17,735 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:17,735 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:17,948 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:43:17,948 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:17,949 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(10)), (np.int64(12), np.int64(14)))
2025-04-11 19:43:17,957 [INFO] Final candidates: []
2025-04-11 19:43:17,957 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:17,966 [INFO] Final candidates: []
2025-04-11 19:43:17,966 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:17,966 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:18,049 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:43:18,049 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:18,049 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(14)), (np.int64(15), np.int64(14)))
2025-04-11 19:43:18,060 [INFO] Final candidates: []
2025-04-11 19:43:18,060 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:18,068 [INFO] Final candidates: []
2025-04-11 19:43:18,068 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:18,069 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:18,195 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:43:18,195 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:18,195 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(13)), (np.int64(13), np.int64(9)))
2025-04-11 19:43:18,203 [INFO] Final candidates: []
2025-04-11 19:43:18,203 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:18,212 [INFO] Final candidates: []
2025-04-11 19:43:18,212 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:18,212 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:18,297 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:43:18,297 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:18,297 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(14)), (np.int64(6), np.int64(8)))
2025-04-11 19:43:18,306 [INFO] Final candidates: []
2025-04-11 19:43:18,306 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:18,315 [INFO] Final candidates: []
2025-04-11 19:43:18,315 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:18,315 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:18,359 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:43:18,359 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:18,359 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(14)), (np.int64(7), np.int64(8)))
2025-04-11 19:43:18,368 [INFO] Final candidates: []
2025-04-11 19:43:18,368 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:18,376 [INFO] Final candidates: []
2025-04-11 19:43:18,376 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:18,377 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:18,428 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:43:18,428 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:18,428 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(8)), (np.int64(12), np.int64(8)))
2025-04-11 19:43:18,436 [INFO] Final candidates: []
2025-04-11 19:43:18,436 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:18,446 [INFO] Final candidates: []
2025-04-11 19:43:18,446 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:18,447 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:18,582 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:43:18,582 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:18,582 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(14)), (np.int64(12), np.int64(11)))
2025-04-11 19:43:18,591 [INFO] Final candidates: []
2025-04-11 19:43:18,591 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:18,599 [INFO] Final candidates: []
2025-04-11 19:43:18,599 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:18,600 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:18,778 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:43:18,778 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:18,778 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(11)), (np.int64(13), np.int64(15)))
2025-04-11 19:43:18,787 [INFO] Final candidates: []
2025-04-11 19:43:18,787 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:18,795 [INFO] Final candidates: []
2025-04-11 19:43:18,795 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:18,796 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:19,107 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:43:19,107 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:19,107 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(11)), (np.int64(8), np.int64(10)))
2025-04-11 19:43:19,115 [INFO] Final candidates: []
2025-04-11 19:43:19,116 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:19,124 [INFO] Final candidates: []
2025-04-11 19:43:19,124 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:19,124 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:19,248 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:43:19,249 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:19,249 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(13)), (np.int64(12), np.int64(8)))
2025-04-11 19:43:19,257 [INFO] Final candidates: []
2025-04-11 19:43:19,257 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:19,266 [INFO] Final candidates: []
2025-04-11 19:43:19,266 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:19,266 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:19,409 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:43:19,409 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:19,409 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(11)), (np.int64(13), np.int64(9)))
2025-04-11 19:43:19,418 [INFO] Final candidates: []
2025-04-11 19:43:19,418 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:19,427 [INFO] Final candidates: []
2025-04-11 19:43:19,427 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:19,427 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:19,568 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:43:19,569 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:19,569 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(15)), (np.int64(7), np.int64(8)))
2025-04-11 19:43:19,577 [INFO] Final candidates: []
2025-04-11 19:43:19,577 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:19,585 [INFO] Final candidates: []
2025-04-11 19:43:19,586 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:19,586 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:19,803 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:43:19,803 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:19,804 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(11)), (np.int64(11), np.int64(13)))
2025-04-11 19:43:19,812 [INFO] Final candidates: []
2025-04-11 19:43:19,812 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:19,820 [INFO] Final candidates: []
2025-04-11 19:43:19,820 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:19,821 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:20,022 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:43:20,023 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:20,023 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(11)), (np.int64(8), np.int64(7)))
2025-04-11 19:43:20,040 [INFO] Final candidates: []
2025-04-11 19:43:20,040 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:20,049 [INFO] Final candidates: []
2025-04-11 19:43:20,049 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:20,050 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:20,208 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:43:20,208 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:20,208 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(9)), (np.int64(8), np.int64(10)))
2025-04-11 19:43:20,216 [INFO] Final candidates: []
2025-04-11 19:43:20,216 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:20,225 [INFO] Final candidates: []
2025-04-11 19:43:20,225 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:20,226 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:20,370 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:43:20,370 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:20,371 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(9)), (np.int64(8), np.int64(10)))
2025-04-11 19:43:20,379 [INFO] Final candidates: []
2025-04-11 19:43:20,379 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:20,387 [INFO] Final candidates: []
2025-04-11 19:43:20,387 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:20,388 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:20,516 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:43:20,516 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:20,516 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(9)), (np.int64(10), np.int64(8)))
2025-04-11 19:43:20,525 [INFO] Final candidates: []
2025-04-11 19:43:20,525 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:20,533 [INFO] Final candidates: []
2025-04-11 19:43:20,533 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:20,534 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:20,859 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:43:20,859 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:20,859 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(14)), (np.int64(13), np.int64(15)))
2025-04-11 19:43:20,868 [INFO] Final candidates: []
2025-04-11 19:43:20,868 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:20,878 [INFO] Final candidates: []
2025-04-11 19:43:20,878 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:20,878 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:20,957 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:43:20,957 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:20,957 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(11)), (np.int64(7), np.int64(9)))
2025-04-11 19:43:20,966 [INFO] Final candidates: []
2025-04-11 19:43:20,966 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:20,974 [INFO] Final candidates: []
2025-04-11 19:43:20,975 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:20,975 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:21,040 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:43:21,040 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:43:21,040 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(12)), (np.int64(13), np.int64(14)))
2025-04-11 19:43:21,049 [INFO] Final candidates: []
2025-04-11 19:43:21,049 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:21,057 [INFO] Final candidates: []
2025-04-11 19:43:21,057 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:21,058 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:21,099 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:43:21,099 [DEBUG] MCTS: BEST ((8, 8), (13, 13)) with 100 visits.
2025-04-11 19:43:21,099 [INFO] MCTS: Search finished. Best move selected with 100 visits.
2025-04-11 19:43:21,099 [INFO] Phase 2 (defense): MCTS selected move: ((8, 8), (13, 13))
2025-04-11 19:43:21,099 [INFO] Phase 2 (defense): MCTS selected move string : J9,O14
2025-04-11 19:43:21,099 [INFO] MCTS (defense candidates) selected move: J9,O14
2025-04-11 19:43:55,239 [INFO] Starting pre-MCTS candidate collection.
2025-04-11 19:43:55,249 [INFO] Final candidates: []
2025-04-11 19:43:55,249 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:55,259 [INFO] Final candidates: []
2025-04-11 19:43:55,259 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:55,259 [INFO] No candidate found in Phase 1 or 2; using full legal moves for MCTS.
2025-04-11 19:43:55,259 [INFO] MCTS: Starting search for 100 iterations.
2025-04-11 19:43:55,259 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(13)), (np.int64(12), np.int64(14)))
2025-04-11 19:43:55,268 [INFO] Final candidates: []
2025-04-11 19:43:55,268 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:55,276 [INFO] Final candidates: []
2025-04-11 19:43:55,276 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:55,277 [DEBUG] MCTS iteration 0: reached a node with 0 visits.
2025-04-11 19:43:55,277 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:55,403 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:43:55,403 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(9)), (np.int64(13), np.int64(9)))
2025-04-11 19:43:55,412 [INFO] Final candidates: []
2025-04-11 19:43:55,412 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:55,420 [INFO] Final candidates: []
2025-04-11 19:43:55,420 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:55,421 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:55,686 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:43:55,687 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(11)), (np.int64(12), np.int64(11)))
2025-04-11 19:43:55,695 [INFO] Final candidates: []
2025-04-11 19:43:55,695 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:55,703 [INFO] Final candidates: []
2025-04-11 19:43:55,703 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:55,704 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:55,798 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:43:55,798 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(9)), (np.int64(12), np.int64(9)))
2025-04-11 19:43:55,806 [INFO] Final candidates: []
2025-04-11 19:43:55,806 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:55,814 [INFO] Final candidates: []
2025-04-11 19:43:55,815 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:55,815 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:55,927 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:43:55,927 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(11)), (np.int64(7), np.int64(8)))
2025-04-11 19:43:55,935 [INFO] Final candidates: []
2025-04-11 19:43:55,935 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:55,943 [INFO] Final candidates: []
2025-04-11 19:43:55,944 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:55,944 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:56,064 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:43:56,064 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(14)), (np.int64(9), np.int64(12)))
2025-04-11 19:43:56,072 [INFO] Final candidates: []
2025-04-11 19:43:56,072 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:56,081 [INFO] Final candidates: []
2025-04-11 19:43:56,081 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:56,081 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:56,157 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:43:56,157 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(12)), (np.int64(7), np.int64(8)))
2025-04-11 19:43:56,166 [INFO] Final candidates: []
2025-04-11 19:43:56,166 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:56,174 [INFO] Final candidates: []
2025-04-11 19:43:56,174 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:56,174 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:56,278 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:43:56,278 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(14)), (np.int64(13), np.int64(12)))
2025-04-11 19:43:56,286 [INFO] Final candidates: []
2025-04-11 19:43:56,286 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:56,295 [INFO] Final candidates: []
2025-04-11 19:43:56,295 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:56,296 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:56,508 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:43:56,508 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(11)), (np.int64(14), np.int64(12)))
2025-04-11 19:43:56,516 [INFO] Final candidates: []
2025-04-11 19:43:56,516 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:56,525 [INFO] Final candidates: []
2025-04-11 19:43:56,525 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:56,525 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:56,579 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:43:56,579 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(14)), (np.int64(7), np.int64(7)))
2025-04-11 19:43:56,588 [INFO] Final candidates: []
2025-04-11 19:43:56,588 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:56,596 [INFO] Final candidates: []
2025-04-11 19:43:56,596 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:56,596 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:56,739 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:43:56,739 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(16)), (np.int64(9), np.int64(13)))
2025-04-11 19:43:56,747 [INFO] Final candidates: []
2025-04-11 19:43:56,747 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:56,756 [INFO] Final candidates: []
2025-04-11 19:43:56,756 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:56,756 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:56,899 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:43:56,899 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(10)), (np.int64(12), np.int64(8)))
2025-04-11 19:43:56,902 [DEBUG] board coords: [(5, 10), (6, 10), (7, 10), (8, 10), (9, 10), (10, 10)]
2025-04-11 19:43:56,902 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:43:56,902 [DEBUG] check_window_intermediate_custom: empty_cells=[(5, 10), (6, 10)]
2025-04-11 19:43:56,902 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 1 1 1 1] with coords [(5, 10), (6, 10), (7, 10), (8, 10), (9, 10), (10, 10)] triggers candidate.
2025-04-11 19:43:56,902 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10)] triggers candidate.
2025-04-11 19:43:56,902 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:43:56,902 [DEBUG] board coords: [(7, 10), (8, 10), (9, 10), (10, 10), (11, 10), (12, 10)]
2025-04-11 19:43:56,902 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:43:56,902 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 10), (12, 10)]
2025-04-11 19:43:56,902 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 1 1 0 0] with coords [(7, 10), (8, 10), (9, 10), (10, 10), (11, 10), (12, 10)] triggers candidate.
2025-04-11 19:43:56,908 [INFO] Final candidates: [(11, 10), (12, 10), (5, 10), (6, 10)]
2025-04-11 19:43:56,908 [INFO] Phase win: Collected 6unique candidate(s):[((12, 10), (5, 10)), ((12, 10), (6, 10)), ((11, 10), (6, 10)), ((5, 10), (6, 10)), ((11, 10), (5, 10)), ((11, 10), (12, 10))]
2025-04-11 19:43:56,916 [INFO] Final candidates: []
2025-04-11 19:43:56,916 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:56,916 [INFO] Phase 1 (immediate win): 6 candidate(s) found.
2025-04-11 19:43:56,916 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:57,012 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:43:57,013 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(14)), (np.int64(13), np.int64(11)))
2025-04-11 19:43:57,021 [INFO] Final candidates: []
2025-04-11 19:43:57,021 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:57,029 [INFO] Final candidates: []
2025-04-11 19:43:57,030 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:57,030 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:57,157 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:43:57,158 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(11)), (np.int64(10), np.int64(14)))
2025-04-11 19:43:57,166 [INFO] Final candidates: []
2025-04-11 19:43:57,166 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:57,174 [INFO] Final candidates: []
2025-04-11 19:43:57,174 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:57,175 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:57,438 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:43:57,438 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(13)), (np.int64(13), np.int64(12)))
2025-04-11 19:43:57,446 [INFO] Final candidates: []
2025-04-11 19:43:57,446 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:57,455 [INFO] Final candidates: []
2025-04-11 19:43:57,455 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:57,455 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:57,469 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:43:57,469 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(8)), (np.int64(9), np.int64(12)))
2025-04-11 19:43:57,478 [INFO] Final candidates: []
2025-04-11 19:43:57,478 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:57,486 [INFO] Final candidates: []
2025-04-11 19:43:57,486 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:57,487 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:57,558 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:43:57,558 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(9)), (np.int64(12), np.int64(11)))
2025-04-11 19:43:57,567 [INFO] Final candidates: []
2025-04-11 19:43:57,567 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:57,575 [INFO] Final candidates: []
2025-04-11 19:43:57,575 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:57,575 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:57,649 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:43:57,649 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(7)), (np.int64(12), np.int64(8)))
2025-04-11 19:43:57,658 [INFO] Final candidates: []
2025-04-11 19:43:57,658 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:57,666 [INFO] Final candidates: []
2025-04-11 19:43:57,666 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:57,666 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:57,825 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:43:57,825 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(8)), (np.int64(9), np.int64(12)))
2025-04-11 19:43:57,834 [INFO] Final candidates: []
2025-04-11 19:43:57,834 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:57,842 [INFO] Final candidates: []
2025-04-11 19:43:57,842 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:57,842 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:58,006 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:43:58,006 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(14)), (np.int64(8), np.int64(7)))
2025-04-11 19:43:58,015 [INFO] Final candidates: []
2025-04-11 19:43:58,015 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:58,023 [INFO] Final candidates: []
2025-04-11 19:43:58,023 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:58,023 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:58,199 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:43:58,199 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(14)), (np.int64(14), np.int64(12)))
2025-04-11 19:43:58,208 [INFO] Final candidates: []
2025-04-11 19:43:58,208 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:58,216 [INFO] Final candidates: []
2025-04-11 19:43:58,216 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:58,216 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:58,326 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:43:58,326 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(12)), (np.int64(7), np.int64(11)))
2025-04-11 19:43:58,335 [INFO] Final candidates: []
2025-04-11 19:43:58,335 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:58,343 [INFO] Final candidates: []
2025-04-11 19:43:58,343 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:58,344 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:58,622 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:43:58,622 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(7)), (np.int64(8), np.int64(7)))
2025-04-11 19:43:58,631 [INFO] Final candidates: []
2025-04-11 19:43:58,631 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:58,639 [INFO] Final candidates: []
2025-04-11 19:43:58,639 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:58,640 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:58,750 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:43:58,751 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(6)), (np.int64(7), np.int64(7)))
2025-04-11 19:43:58,759 [INFO] Final candidates: []
2025-04-11 19:43:58,759 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:58,767 [INFO] Final candidates: []
2025-04-11 19:43:58,767 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:58,768 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:58,837 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:43:58,838 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(13)), (np.int64(13), np.int64(9)))
2025-04-11 19:43:58,846 [INFO] Final candidates: []
2025-04-11 19:43:58,846 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:58,857 [INFO] Final candidates: []
2025-04-11 19:43:58,857 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:58,858 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:59,000 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:43:59,000 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(11)), (np.int64(12), np.int64(14)))
2025-04-11 19:43:59,009 [INFO] Final candidates: []
2025-04-11 19:43:59,009 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:59,017 [INFO] Final candidates: []
2025-04-11 19:43:59,017 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:59,017 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:59,155 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:43:59,155 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(16)), (np.int64(11), np.int64(8)))
2025-04-11 19:43:59,164 [INFO] Final candidates: []
2025-04-11 19:43:59,164 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:59,172 [INFO] Final candidates: []
2025-04-11 19:43:59,172 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:59,173 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:59,284 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:43:59,284 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(13)), (np.int64(7), np.int64(8)))
2025-04-11 19:43:59,293 [INFO] Final candidates: []
2025-04-11 19:43:59,293 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:59,301 [INFO] Final candidates: []
2025-04-11 19:43:59,301 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:59,301 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:59,459 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:43:59,460 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(11)), (np.int64(6), np.int64(10)))
2025-04-11 19:43:59,462 [DEBUG] board coords: [(5, 10), (6, 10), (7, 10), (8, 10), (9, 10), (10, 10)]
2025-04-11 19:43:59,463 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:43:59,463 [DEBUG] check_window_intermediate_custom: empty_cells=[(5, 10), (7, 10)]
2025-04-11 19:43:59,463 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 0 1 1 1] with coords [(5, 10), (6, 10), (7, 10), (8, 10), (9, 10), (10, 10)] triggers candidate.
2025-04-11 19:43:59,463 [DEBUG] board coords: [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10)]
2025-04-11 19:43:59,463 [DEBUG] board values[np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 19:43:59,463 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 10), (11, 10)]
2025-04-11 19:43:59,463 [DEBUG] check_window_intermediate_custom: For L=6, window [1 0 1 1 1 0] with coords [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10)] triggers candidate.
2025-04-11 19:43:59,468 [INFO] Final candidates: [(7, 10), (5, 10), (11, 10)]
2025-04-11 19:43:59,468 [INFO] Phase win: Collected 3unique candidate(s):[((7, 10), (11, 10)), ((7, 10), (5, 10)), ((5, 10), (11, 10))]
2025-04-11 19:43:59,477 [INFO] Final candidates: []
2025-04-11 19:43:59,477 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:59,477 [INFO] Phase 1 (immediate win): 3 candidate(s) found.
2025-04-11 19:43:59,477 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:59,528 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:43:59,528 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(9)), (np.int64(15), np.int64(15)))
2025-04-11 19:43:59,537 [INFO] Final candidates: []
2025-04-11 19:43:59,537 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:59,545 [INFO] Final candidates: []
2025-04-11 19:43:59,545 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:59,545 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:59,719 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:43:59,719 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(13)), (np.int64(13), np.int64(9)))
2025-04-11 19:43:59,728 [INFO] Final candidates: []
2025-04-11 19:43:59,728 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:59,736 [INFO] Final candidates: []
2025-04-11 19:43:59,736 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:59,736 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:59,870 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:43:59,870 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(13)), (np.int64(8), np.int64(7)))
2025-04-11 19:43:59,879 [INFO] Final candidates: []
2025-04-11 19:43:59,879 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:59,887 [INFO] Final candidates: []
2025-04-11 19:43:59,887 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:59,887 [INFO] Default policy: Starting random playout.
2025-04-11 19:43:59,963 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:43:59,963 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(8)), (np.int64(12), np.int64(9)))
2025-04-11 19:43:59,971 [INFO] Final candidates: []
2025-04-11 19:43:59,971 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:43:59,979 [INFO] Final candidates: []
2025-04-11 19:43:59,979 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:43:59,980 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:00,149 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:00,149 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(13)), (np.int64(13), np.int64(12)))
2025-04-11 19:44:00,158 [INFO] Final candidates: []
2025-04-11 19:44:00,158 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:00,166 [INFO] Final candidates: []
2025-04-11 19:44:00,166 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:00,167 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:00,204 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:00,204 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(8)), (np.int64(16), np.int64(14)))
2025-04-11 19:44:00,212 [INFO] Final candidates: []
2025-04-11 19:44:00,212 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:00,221 [INFO] Final candidates: []
2025-04-11 19:44:00,221 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:00,221 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:00,331 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:00,331 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(13)), (np.int64(8), np.int64(11)))
2025-04-11 19:44:00,340 [INFO] Final candidates: []
2025-04-11 19:44:00,340 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:00,349 [INFO] Final candidates: []
2025-04-11 19:44:00,349 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:00,349 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:00,412 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:00,412 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(13)), (np.int64(15), np.int64(15)))
2025-04-11 19:44:00,420 [INFO] Final candidates: []
2025-04-11 19:44:00,420 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:00,428 [INFO] Final candidates: []
2025-04-11 19:44:00,428 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:00,429 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:00,533 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:00,533 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(6)), (np.int64(7), np.int64(9)))
2025-04-11 19:44:00,541 [INFO] Final candidates: []
2025-04-11 19:44:00,541 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:00,551 [INFO] Final candidates: []
2025-04-11 19:44:00,551 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:00,552 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:00,667 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:00,667 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(10)), (np.int64(9), np.int64(12)))
2025-04-11 19:44:00,670 [DEBUG] board coords: [(5, 10), (6, 10), (7, 10), (8, 10), (9, 10), (10, 10)]
2025-04-11 19:44:00,670 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:44:00,670 [DEBUG] check_window_intermediate_custom: empty_cells=[(5, 10), (7, 10)]
2025-04-11 19:44:00,671 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 0 1 1 1] with coords [(5, 10), (6, 10), (7, 10), (8, 10), (9, 10), (10, 10)] triggers candidate.
2025-04-11 19:44:00,671 [DEBUG] board coords: [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10)]
2025-04-11 19:44:00,671 [DEBUG] board values[np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 19:44:00,671 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 10), (11, 10)]
2025-04-11 19:44:00,671 [DEBUG] check_window_intermediate_custom: For L=6, window [1 0 1 1 1 0] with coords [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10)] triggers candidate.
2025-04-11 19:44:00,676 [INFO] Final candidates: [(7, 10), (5, 10), (11, 10)]
2025-04-11 19:44:00,676 [INFO] Phase win: Collected 3unique candidate(s):[((7, 10), (11, 10)), ((7, 10), (5, 10)), ((5, 10), (11, 10))]
2025-04-11 19:44:00,686 [INFO] Final candidates: []
2025-04-11 19:44:00,686 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:00,686 [INFO] Phase 1 (immediate win): 3 candidate(s) found.
2025-04-11 19:44:00,686 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:00,758 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:00,758 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(8)), (np.int64(10), np.int64(8)))
2025-04-11 19:44:00,766 [INFO] Final candidates: []
2025-04-11 19:44:00,766 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:00,774 [INFO] Final candidates: []
2025-04-11 19:44:00,775 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:00,775 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:00,817 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:00,817 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(8)), (np.int64(7), np.int64(11)))
2025-04-11 19:44:00,824 [DEBUG] board coords: [(5, 13), (6, 12), (7, 11), (8, 10), (9, 9), (10, 8)]
2025-04-11 19:44:00,824 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:44:00,824 [DEBUG] check_window_intermediate_custom: empty_cells=[(5, 13), (6, 12)]
2025-04-11 19:44:00,824 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 1 1 1 1] with coords [(5, 13), (6, 12), (7, 11), (8, 10), (9, 9), (10, 8)] triggers candidate.
2025-04-11 19:44:00,824 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(6, 12), (7, 11), (8, 10), (9, 9), (10, 8), (11, 7)] triggers candidate.
2025-04-11 19:44:00,824 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:44:00,824 [DEBUG] board coords: [(7, 11), (8, 10), (9, 9), (10, 8), (11, 7), (12, 6)]
2025-04-11 19:44:00,824 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:44:00,824 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 7), (12, 6)]
2025-04-11 19:44:00,824 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 1 1 0 0] with coords [(7, 11), (8, 10), (9, 9), (10, 8), (11, 7), (12, 6)] triggers candidate.
2025-04-11 19:44:00,826 [INFO] Final candidates: [(6, 12), (11, 7), (12, 6), (5, 13)]
2025-04-11 19:44:00,826 [INFO] Phase win: Collected 6unique candidate(s):[((6, 12), (12, 6)), ((12, 6), (5, 13)), ((11, 7), (5, 13)), ((11, 7), (12, 6)), ((6, 12), (11, 7)), ((6, 12), (5, 13))]
2025-04-11 19:44:00,834 [INFO] Final candidates: []
2025-04-11 19:44:00,834 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:00,834 [INFO] Phase 1 (immediate win): 6 candidate(s) found.
2025-04-11 19:44:00,834 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:01,006 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:01,007 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(13)), (np.int64(15), np.int64(15)))
2025-04-11 19:44:01,015 [INFO] Final candidates: []
2025-04-11 19:44:01,015 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:01,023 [INFO] Final candidates: []
2025-04-11 19:44:01,023 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:01,024 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:01,213 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:01,213 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(8)), (np.int64(10), np.int64(14)))
2025-04-11 19:44:01,222 [INFO] Final candidates: []
2025-04-11 19:44:01,222 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:01,230 [INFO] Final candidates: []
2025-04-11 19:44:01,230 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:01,231 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:01,292 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:01,292 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(13)), (np.int64(12), np.int64(9)))
2025-04-11 19:44:01,301 [INFO] Final candidates: []
2025-04-11 19:44:01,301 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:01,309 [INFO] Final candidates: []
2025-04-11 19:44:01,309 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:01,309 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:01,352 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:01,352 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(13)), (np.int64(10), np.int64(14)))
2025-04-11 19:44:01,361 [INFO] Final candidates: []
2025-04-11 19:44:01,361 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:01,369 [INFO] Final candidates: []
2025-04-11 19:44:01,369 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:01,369 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:01,424 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:01,424 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(11)), (np.int64(6), np.int64(10)))
2025-04-11 19:44:01,427 [DEBUG] board coords: [(5, 10), (6, 10), (7, 10), (8, 10), (9, 10), (10, 10)]
2025-04-11 19:44:01,427 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:44:01,427 [DEBUG] check_window_intermediate_custom: empty_cells=[(5, 10), (7, 10)]
2025-04-11 19:44:01,427 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 0 1 1 1] with coords [(5, 10), (6, 10), (7, 10), (8, 10), (9, 10), (10, 10)] triggers candidate.
2025-04-11 19:44:01,427 [DEBUG] board coords: [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10)]
2025-04-11 19:44:01,427 [DEBUG] board values[np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 19:44:01,427 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 10), (11, 10)]
2025-04-11 19:44:01,427 [DEBUG] check_window_intermediate_custom: For L=6, window [1 0 1 1 1 0] with coords [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10)] triggers candidate.
2025-04-11 19:44:01,433 [INFO] Final candidates: [(7, 10), (5, 10), (11, 10)]
2025-04-11 19:44:01,433 [INFO] Phase win: Collected 3unique candidate(s):[((7, 10), (11, 10)), ((7, 10), (5, 10)), ((5, 10), (11, 10))]
2025-04-11 19:44:01,441 [INFO] Final candidates: []
2025-04-11 19:44:01,441 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:01,441 [INFO] Phase 1 (immediate win): 3 candidate(s) found.
2025-04-11 19:44:01,441 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:01,679 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:01,679 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(13)), (np.int64(13), np.int64(9)))
2025-04-11 19:44:01,687 [INFO] Final candidates: []
2025-04-11 19:44:01,688 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:01,696 [INFO] Final candidates: []
2025-04-11 19:44:01,696 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:01,696 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:01,720 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:01,720 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(8)), (np.int64(11), np.int64(7)))
2025-04-11 19:44:01,729 [INFO] Final candidates: []
2025-04-11 19:44:01,729 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:01,737 [INFO] Final candidates: []
2025-04-11 19:44:01,737 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:01,737 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:01,948 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:01,948 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(11)), (np.int64(10), np.int64(14)))
2025-04-11 19:44:01,957 [INFO] Final candidates: []
2025-04-11 19:44:01,957 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:01,965 [INFO] Final candidates: []
2025-04-11 19:44:01,965 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:01,965 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:02,098 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:02,098 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(7)), (np.int64(12), np.int64(14)))
2025-04-11 19:44:02,106 [INFO] Final candidates: []
2025-04-11 19:44:02,107 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:02,115 [INFO] Final candidates: []
2025-04-11 19:44:02,115 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:02,115 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:02,176 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:02,176 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(10)), (np.int64(8), np.int64(7)))
2025-04-11 19:44:02,179 [DEBUG] board coords: [(5, 10), (6, 10), (7, 10), (8, 10), (9, 10), (10, 10)]
2025-04-11 19:44:02,179 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:44:02,179 [DEBUG] check_window_intermediate_custom: empty_cells=[(5, 10), (6, 10)]
2025-04-11 19:44:02,179 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 1 1 1 1] with coords [(5, 10), (6, 10), (7, 10), (8, 10), (9, 10), (10, 10)] triggers candidate.
2025-04-11 19:44:02,179 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10)] triggers candidate.
2025-04-11 19:44:02,179 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:44:02,179 [DEBUG] board coords: [(7, 10), (8, 10), (9, 10), (10, 10), (11, 10), (12, 10)]
2025-04-11 19:44:02,179 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:44:02,179 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 10), (12, 10)]
2025-04-11 19:44:02,179 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 1 1 0 0] with coords [(7, 10), (8, 10), (9, 10), (10, 10), (11, 10), (12, 10)] triggers candidate.
2025-04-11 19:44:02,185 [INFO] Final candidates: [(11, 10), (12, 10), (5, 10), (6, 10)]
2025-04-11 19:44:02,185 [INFO] Phase win: Collected 6unique candidate(s):[((12, 10), (5, 10)), ((12, 10), (6, 10)), ((11, 10), (6, 10)), ((5, 10), (6, 10)), ((11, 10), (5, 10)), ((11, 10), (12, 10))]
2025-04-11 19:44:02,193 [INFO] Final candidates: []
2025-04-11 19:44:02,193 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:02,193 [INFO] Phase 1 (immediate win): 6 candidate(s) found.
2025-04-11 19:44:02,193 [DEBUG] MCTS iteration 50: reached a node with 0 visits.
2025-04-11 19:44:02,193 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:02,231 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:02,231 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(15)), (np.int64(15), np.int64(15)))
2025-04-11 19:44:02,239 [INFO] Final candidates: []
2025-04-11 19:44:02,239 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:02,248 [INFO] Final candidates: []
2025-04-11 19:44:02,248 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:02,248 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:02,299 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:02,299 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(14)), (np.int64(13), np.int64(15)))
2025-04-11 19:44:02,307 [INFO] Final candidates: []
2025-04-11 19:44:02,308 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:02,316 [INFO] Final candidates: []
2025-04-11 19:44:02,316 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:02,316 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:02,427 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:02,428 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(15)), (np.int64(7), np.int64(11)))
2025-04-11 19:44:02,436 [INFO] Final candidates: []
2025-04-11 19:44:02,436 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:02,444 [INFO] Final candidates: []
2025-04-11 19:44:02,444 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:02,446 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:02,594 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:02,595 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(14)), (np.int64(15), np.int64(13)))
2025-04-11 19:44:02,603 [INFO] Final candidates: []
2025-04-11 19:44:02,603 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:02,611 [INFO] Final candidates: []
2025-04-11 19:44:02,612 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:02,612 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:02,617 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:02,617 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(14)), (np.int64(12), np.int64(14)))
2025-04-11 19:44:02,626 [INFO] Final candidates: []
2025-04-11 19:44:02,626 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:02,634 [INFO] Final candidates: []
2025-04-11 19:44:02,634 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:02,634 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:02,708 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:02,708 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(14)), (np.int64(6), np.int64(8)))
2025-04-11 19:44:02,717 [INFO] Final candidates: []
2025-04-11 19:44:02,717 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:02,725 [INFO] Final candidates: []
2025-04-11 19:44:02,725 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:02,725 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:02,781 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:02,781 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(12)), (np.int64(6), np.int64(10)))
2025-04-11 19:44:02,784 [DEBUG] board coords: [(5, 10), (6, 10), (7, 10), (8, 10), (9, 10), (10, 10)]
2025-04-11 19:44:02,784 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:44:02,784 [DEBUG] check_window_intermediate_custom: empty_cells=[(5, 10), (7, 10)]
2025-04-11 19:44:02,784 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 0 1 1 1] with coords [(5, 10), (6, 10), (7, 10), (8, 10), (9, 10), (10, 10)] triggers candidate.
2025-04-11 19:44:02,784 [DEBUG] board coords: [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10)]
2025-04-11 19:44:02,784 [DEBUG] board values[np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 19:44:02,784 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 10), (11, 10)]
2025-04-11 19:44:02,784 [DEBUG] check_window_intermediate_custom: For L=6, window [1 0 1 1 1 0] with coords [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10)] triggers candidate.
2025-04-11 19:44:02,792 [INFO] Final candidates: [(7, 10), (5, 10), (11, 10)]
2025-04-11 19:44:02,792 [INFO] Phase win: Collected 3unique candidate(s):[((7, 10), (11, 10)), ((7, 10), (5, 10)), ((5, 10), (11, 10))]
2025-04-11 19:44:02,800 [INFO] Final candidates: []
2025-04-11 19:44:02,800 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:02,800 [INFO] Phase 1 (immediate win): 3 candidate(s) found.
2025-04-11 19:44:02,800 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:02,926 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:02,926 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(11)), (np.int64(9), np.int64(13)))
2025-04-11 19:44:02,937 [INFO] Final candidates: []
2025-04-11 19:44:02,937 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:02,945 [INFO] Final candidates: []
2025-04-11 19:44:02,945 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:02,946 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:03,018 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:03,018 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(10)), (np.int64(7), np.int64(8)))
2025-04-11 19:44:03,021 [DEBUG] board coords: [(5, 10), (6, 10), (7, 10), (8, 10), (9, 10), (10, 10)]
2025-04-11 19:44:03,021 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:44:03,021 [DEBUG] check_window_intermediate_custom: empty_cells=[(5, 10), (7, 10)]
2025-04-11 19:44:03,021 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 0 1 1 1] with coords [(5, 10), (6, 10), (7, 10), (8, 10), (9, 10), (10, 10)] triggers candidate.
2025-04-11 19:44:03,021 [DEBUG] board coords: [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10)]
2025-04-11 19:44:03,021 [DEBUG] board values[np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 19:44:03,021 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 10), (11, 10)]
2025-04-11 19:44:03,021 [DEBUG] check_window_intermediate_custom: For L=6, window [1 0 1 1 1 0] with coords [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10)] triggers candidate.
2025-04-11 19:44:03,027 [INFO] Final candidates: [(7, 10), (5, 10), (11, 10)]
2025-04-11 19:44:03,027 [INFO] Phase win: Collected 3unique candidate(s):[((7, 10), (11, 10)), ((7, 10), (5, 10)), ((5, 10), (11, 10))]
2025-04-11 19:44:03,035 [INFO] Final candidates: []
2025-04-11 19:44:03,035 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:03,035 [INFO] Phase 1 (immediate win): 3 candidate(s) found.
2025-04-11 19:44:03,035 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:03,136 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:03,136 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(7)), (np.int64(7), np.int64(11)))
2025-04-11 19:44:03,144 [INFO] Final candidates: []
2025-04-11 19:44:03,145 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:03,153 [INFO] Final candidates: []
2025-04-11 19:44:03,153 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:03,153 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:03,300 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:03,300 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(13)), (np.int64(13), np.int64(15)))
2025-04-11 19:44:03,309 [INFO] Final candidates: []
2025-04-11 19:44:03,309 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:03,317 [INFO] Final candidates: []
2025-04-11 19:44:03,318 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:03,318 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:03,446 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:03,447 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(9)), (np.int64(13), np.int64(12)))
2025-04-11 19:44:03,455 [INFO] Final candidates: []
2025-04-11 19:44:03,455 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:03,463 [INFO] Final candidates: []
2025-04-11 19:44:03,463 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:03,464 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:03,536 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:03,536 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(14)), (np.int64(13), np.int64(11)))
2025-04-11 19:44:03,545 [INFO] Final candidates: []
2025-04-11 19:44:03,545 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:03,553 [INFO] Final candidates: []
2025-04-11 19:44:03,553 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:03,553 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:03,581 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:03,582 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(14)), (np.int64(13), np.int64(9)))
2025-04-11 19:44:03,590 [INFO] Final candidates: []
2025-04-11 19:44:03,590 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:03,599 [INFO] Final candidates: []
2025-04-11 19:44:03,599 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:03,599 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:03,754 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:03,755 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(11)), (np.int64(6), np.int64(10)))
2025-04-11 19:44:03,758 [DEBUG] board coords: [(5, 10), (6, 10), (7, 10), (8, 10), (9, 10), (10, 10)]
2025-04-11 19:44:03,758 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:44:03,758 [DEBUG] check_window_intermediate_custom: empty_cells=[(5, 10), (7, 10)]
2025-04-11 19:44:03,758 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 0 1 1 1] with coords [(5, 10), (6, 10), (7, 10), (8, 10), (9, 10), (10, 10)] triggers candidate.
2025-04-11 19:44:03,758 [DEBUG] board coords: [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10)]
2025-04-11 19:44:03,758 [DEBUG] board values[np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 19:44:03,758 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 10), (11, 10)]
2025-04-11 19:44:03,758 [DEBUG] check_window_intermediate_custom: For L=6, window [1 0 1 1 1 0] with coords [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10)] triggers candidate.
2025-04-11 19:44:03,763 [INFO] Final candidates: [(7, 10), (5, 10), (11, 10)]
2025-04-11 19:44:03,763 [INFO] Phase win: Collected 3unique candidate(s):[((7, 10), (11, 10)), ((7, 10), (5, 10)), ((5, 10), (11, 10))]
2025-04-11 19:44:03,771 [INFO] Final candidates: []
2025-04-11 19:44:03,771 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:03,771 [INFO] Phase 1 (immediate win): 3 candidate(s) found.
2025-04-11 19:44:03,772 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:03,798 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:03,799 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(14)), (np.int64(8), np.int64(7)))
2025-04-11 19:44:03,807 [INFO] Final candidates: []
2025-04-11 19:44:03,807 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:03,815 [INFO] Final candidates: []
2025-04-11 19:44:03,815 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:03,815 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:03,917 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:03,917 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(9)), (np.int64(10), np.int64(13)))
2025-04-11 19:44:03,925 [INFO] Final candidates: []
2025-04-11 19:44:03,925 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:03,933 [INFO] Final candidates: []
2025-04-11 19:44:03,933 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:03,934 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:04,082 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:04,082 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(13)), (np.int64(13), np.int64(15)))
2025-04-11 19:44:04,090 [INFO] Final candidates: []
2025-04-11 19:44:04,090 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:04,099 [INFO] Final candidates: []
2025-04-11 19:44:04,099 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:04,099 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:04,198 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:04,198 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(8)), (np.int64(12), np.int64(9)))
2025-04-11 19:44:04,206 [INFO] Final candidates: []
2025-04-11 19:44:04,206 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:04,214 [INFO] Final candidates: []
2025-04-11 19:44:04,215 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:04,215 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:04,241 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:04,242 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(13)), (np.int64(11), np.int64(14)))
2025-04-11 19:44:04,250 [INFO] Final candidates: []
2025-04-11 19:44:04,250 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:04,258 [INFO] Final candidates: []
2025-04-11 19:44:04,258 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:04,259 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:04,279 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:04,279 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(14)), (np.int64(11), np.int64(7)))
2025-04-11 19:44:04,288 [INFO] Final candidates: []
2025-04-11 19:44:04,288 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:04,296 [INFO] Final candidates: []
2025-04-11 19:44:04,296 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:04,296 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:04,467 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:04,467 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(10)), (np.int64(12), np.int64(11)))
2025-04-11 19:44:04,470 [DEBUG] board coords: [(5, 10), (6, 10), (7, 10), (8, 10), (9, 10), (10, 10)]
2025-04-11 19:44:04,470 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:44:04,470 [DEBUG] check_window_intermediate_custom: empty_cells=[(5, 10), (7, 10)]
2025-04-11 19:44:04,471 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 0 1 1 1] with coords [(5, 10), (6, 10), (7, 10), (8, 10), (9, 10), (10, 10)] triggers candidate.
2025-04-11 19:44:04,471 [DEBUG] board coords: [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10)]
2025-04-11 19:44:04,471 [DEBUG] board values[np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 19:44:04,471 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 10), (11, 10)]
2025-04-11 19:44:04,471 [DEBUG] check_window_intermediate_custom: For L=6, window [1 0 1 1 1 0] with coords [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10)] triggers candidate.
2025-04-11 19:44:04,476 [INFO] Final candidates: [(7, 10), (5, 10), (11, 10)]
2025-04-11 19:44:04,477 [INFO] Phase win: Collected 3unique candidate(s):[((7, 10), (11, 10)), ((7, 10), (5, 10)), ((5, 10), (11, 10))]
2025-04-11 19:44:04,485 [INFO] Final candidates: []
2025-04-11 19:44:04,485 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:04,485 [INFO] Phase 1 (immediate win): 3 candidate(s) found.
2025-04-11 19:44:04,485 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:04,568 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:04,568 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(10)), (np.int64(7), np.int64(11)))
2025-04-11 19:44:04,571 [DEBUG] board coords: [(5, 10), (6, 10), (7, 10), (8, 10), (9, 10), (10, 10)]
2025-04-11 19:44:04,571 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:44:04,571 [DEBUG] check_window_intermediate_custom: empty_cells=[(5, 10), (7, 10)]
2025-04-11 19:44:04,571 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 0 1 1 1] with coords [(5, 10), (6, 10), (7, 10), (8, 10), (9, 10), (10, 10)] triggers candidate.
2025-04-11 19:44:04,571 [DEBUG] board coords: [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10)]
2025-04-11 19:44:04,571 [DEBUG] board values[np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 19:44:04,571 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 10), (11, 10)]
2025-04-11 19:44:04,571 [DEBUG] check_window_intermediate_custom: For L=6, window [1 0 1 1 1 0] with coords [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10)] triggers candidate.
2025-04-11 19:44:04,577 [INFO] Final candidates: [(7, 10), (5, 10), (11, 10)]
2025-04-11 19:44:04,577 [INFO] Phase win: Collected 3unique candidate(s):[((7, 10), (11, 10)), ((7, 10), (5, 10)), ((5, 10), (11, 10))]
2025-04-11 19:44:04,585 [INFO] Final candidates: []
2025-04-11 19:44:04,585 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:04,585 [INFO] Phase 1 (immediate win): 3 candidate(s) found.
2025-04-11 19:44:04,585 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:04,832 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:04,832 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(14)), (np.int64(7), np.int64(11)))
2025-04-11 19:44:04,841 [INFO] Final candidates: []
2025-04-11 19:44:04,841 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:04,849 [INFO] Final candidates: []
2025-04-11 19:44:04,849 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:04,849 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:04,933 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:04,933 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(14)), (np.int64(6), np.int64(10)))
2025-04-11 19:44:04,936 [DEBUG] board coords: [(5, 10), (6, 10), (7, 10), (8, 10), (9, 10), (10, 10)]
2025-04-11 19:44:04,936 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:44:04,936 [DEBUG] check_window_intermediate_custom: empty_cells=[(5, 10), (7, 10)]
2025-04-11 19:44:04,936 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 0 1 1 1] with coords [(5, 10), (6, 10), (7, 10), (8, 10), (9, 10), (10, 10)] triggers candidate.
2025-04-11 19:44:04,937 [DEBUG] board coords: [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10)]
2025-04-11 19:44:04,937 [DEBUG] board values[np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 19:44:04,937 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 10), (11, 10)]
2025-04-11 19:44:04,937 [DEBUG] check_window_intermediate_custom: For L=6, window [1 0 1 1 1 0] with coords [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10)] triggers candidate.
2025-04-11 19:44:04,942 [INFO] Final candidates: [(7, 10), (5, 10), (11, 10)]
2025-04-11 19:44:04,942 [INFO] Phase win: Collected 3unique candidate(s):[((7, 10), (11, 10)), ((7, 10), (5, 10)), ((5, 10), (11, 10))]
2025-04-11 19:44:04,951 [INFO] Final candidates: []
2025-04-11 19:44:04,951 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:04,951 [INFO] Phase 1 (immediate win): 3 candidate(s) found.
2025-04-11 19:44:04,951 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:05,008 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:05,008 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(16)), (np.int64(12), np.int64(9)))
2025-04-11 19:44:05,016 [INFO] Final candidates: []
2025-04-11 19:44:05,017 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:05,025 [INFO] Final candidates: []
2025-04-11 19:44:05,025 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:05,025 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:05,139 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:05,139 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(14)), (np.int64(9), np.int64(12)))
2025-04-11 19:44:05,147 [INFO] Final candidates: []
2025-04-11 19:44:05,147 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:05,155 [INFO] Final candidates: []
2025-04-11 19:44:05,155 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:05,156 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:05,302 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:05,303 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(10)), (np.int64(10), np.int64(14)))
2025-04-11 19:44:05,306 [DEBUG] board coords: [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10)]
2025-04-11 19:44:05,306 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:44:05,306 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 10)]
2025-04-11 19:44:05,306 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 1 1 1 1] with coords [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10)] triggers candidate.
2025-04-11 19:44:05,306 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(7, 10), (8, 10), (9, 10), (10, 10), (11, 10), (12, 10)] triggers candidate.
2025-04-11 19:44:05,306 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:44:05,306 [DEBUG] board coords: [(8, 10), (9, 10), (10, 10), (11, 10), (12, 10), (13, 10)]
2025-04-11 19:44:05,306 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:44:05,306 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 10), (13, 10)]
2025-04-11 19:44:05,306 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 1 1 0 0] with coords [(8, 10), (9, 10), (10, 10), (11, 10), (12, 10), (13, 10)] triggers candidate.
2025-04-11 19:44:05,311 [INFO] Final candidates: [(12, 10), (7, 10), (13, 10), (6, 10)]
2025-04-11 19:44:05,311 [INFO] Phase win: Collected 6unique candidate(s):[((12, 10), (13, 10)), ((12, 10), (6, 10)), ((7, 10), (13, 10)), ((12, 10), (7, 10)), ((13, 10), (6, 10)), ((7, 10), (6, 10))]
2025-04-11 19:44:05,320 [INFO] Final candidates: []
2025-04-11 19:44:05,320 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:05,320 [INFO] Phase 1 (immediate win): 6 candidate(s) found.
2025-04-11 19:44:05,320 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:05,567 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:05,567 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(13)), (np.int64(10), np.int64(13)))
2025-04-11 19:44:05,575 [INFO] Final candidates: []
2025-04-11 19:44:05,575 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:05,583 [INFO] Final candidates: []
2025-04-11 19:44:05,584 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:05,584 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:05,598 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:05,598 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(13)), (np.int64(10), np.int64(11)))
2025-04-11 19:44:05,606 [INFO] Final candidates: []
2025-04-11 19:44:05,606 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:05,615 [INFO] Final candidates: []
2025-04-11 19:44:05,616 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:05,616 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:05,644 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:05,645 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(14)), (np.int64(15), np.int64(14)))
2025-04-11 19:44:05,653 [INFO] Final candidates: []
2025-04-11 19:44:05,653 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:05,662 [INFO] Final candidates: []
2025-04-11 19:44:05,662 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:05,662 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:05,752 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:05,752 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(9)), (np.int64(10), np.int64(11)))
2025-04-11 19:44:05,761 [INFO] Final candidates: []
2025-04-11 19:44:05,761 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:05,769 [INFO] Final candidates: []
2025-04-11 19:44:05,769 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:05,769 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:05,848 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:05,848 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(7)), (np.int64(9), np.int64(12)))
2025-04-11 19:44:05,857 [INFO] Final candidates: []
2025-04-11 19:44:05,857 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:05,865 [INFO] Final candidates: []
2025-04-11 19:44:05,865 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:05,865 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:06,068 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:06,068 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(16)), (np.int64(13), np.int64(15)))
2025-04-11 19:44:06,077 [INFO] Final candidates: []
2025-04-11 19:44:06,077 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:06,085 [INFO] Final candidates: []
2025-04-11 19:44:06,085 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:06,085 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:06,121 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:06,121 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(14)), (np.int64(9), np.int64(7)))
2025-04-11 19:44:06,129 [INFO] Final candidates: []
2025-04-11 19:44:06,129 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:06,137 [INFO] Final candidates: []
2025-04-11 19:44:06,137 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:06,138 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:06,196 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:06,196 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(14)), (np.int64(12), np.int64(9)))
2025-04-11 19:44:06,205 [INFO] Final candidates: []
2025-04-11 19:44:06,205 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:06,213 [INFO] Final candidates: []
2025-04-11 19:44:06,213 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:06,213 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:06,392 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:06,392 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(14)), (np.int64(13), np.int64(15)))
2025-04-11 19:44:06,401 [INFO] Final candidates: []
2025-04-11 19:44:06,401 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:06,409 [INFO] Final candidates: []
2025-04-11 19:44:06,409 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:06,410 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:06,433 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:06,434 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(7)), (np.int64(15), np.int64(15)))
2025-04-11 19:44:06,442 [INFO] Final candidates: []
2025-04-11 19:44:06,442 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:06,450 [INFO] Final candidates: []
2025-04-11 19:44:06,450 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:06,451 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:06,522 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:06,522 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(16)), (np.int64(10), np.int64(9)))
2025-04-11 19:44:06,531 [INFO] Final candidates: []
2025-04-11 19:44:06,531 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:06,539 [INFO] Final candidates: []
2025-04-11 19:44:06,539 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:06,539 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:06,756 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:06,756 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(10)), (np.int64(11), np.int64(13)))
2025-04-11 19:44:06,759 [DEBUG] board coords: [(7, 10), (8, 10), (9, 10), (10, 10), (11, 10), (12, 10)]
2025-04-11 19:44:06,759 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1)]
2025-04-11 19:44:06,759 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 10), (11, 10)]
2025-04-11 19:44:06,759 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 1 1 0 1] with coords [(7, 10), (8, 10), (9, 10), (10, 10), (11, 10), (12, 10)] triggers candidate.
2025-04-11 19:44:06,759 [DEBUG] board coords: [(8, 10), (9, 10), (10, 10), (11, 10), (12, 10), (13, 10)]
2025-04-11 19:44:06,760 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(0)]
2025-04-11 19:44:06,760 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 10), (13, 10)]
2025-04-11 19:44:06,760 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 1 0 1 0] with coords [(8, 10), (9, 10), (10, 10), (11, 10), (12, 10), (13, 10)] triggers candidate.
2025-04-11 19:44:06,765 [INFO] Final candidates: [(7, 10), (13, 10), (11, 10)]
2025-04-11 19:44:06,765 [INFO] Phase win: Collected 3unique candidate(s):[((7, 10), (11, 10)), ((13, 10), (11, 10)), ((7, 10), (13, 10))]
2025-04-11 19:44:06,774 [INFO] Final candidates: []
2025-04-11 19:44:06,774 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:06,774 [INFO] Phase 1 (immediate win): 3 candidate(s) found.
2025-04-11 19:44:06,774 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:06,893 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:06,893 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(8)), (np.int64(9), np.int64(13)))
2025-04-11 19:44:06,901 [INFO] Final candidates: []
2025-04-11 19:44:06,901 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:06,910 [INFO] Final candidates: []
2025-04-11 19:44:06,910 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:06,910 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:07,142 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:07,142 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(12)), (np.int64(13), np.int64(9)))
2025-04-11 19:44:07,150 [INFO] Final candidates: []
2025-04-11 19:44:07,151 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:07,159 [INFO] Final candidates: []
2025-04-11 19:44:07,159 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:07,159 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:07,444 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:07,444 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(9)), (np.int64(12), np.int64(8)))
2025-04-11 19:44:07,452 [INFO] Final candidates: []
2025-04-11 19:44:07,452 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:07,461 [INFO] Final candidates: []
2025-04-11 19:44:07,461 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:07,461 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:07,614 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:07,615 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(8)), (np.int64(9), np.int64(12)))
2025-04-11 19:44:07,624 [INFO] Final candidates: []
2025-04-11 19:44:07,624 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:07,632 [INFO] Final candidates: []
2025-04-11 19:44:07,632 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:07,632 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:07,884 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:07,885 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(13)), (np.int64(7), np.int64(7)))
2025-04-11 19:44:07,893 [INFO] Final candidates: []
2025-04-11 19:44:07,893 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:07,902 [INFO] Final candidates: []
2025-04-11 19:44:07,902 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:07,902 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:08,094 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:08,095 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(14)), (np.int64(6), np.int64(8)))
2025-04-11 19:44:08,103 [INFO] Final candidates: []
2025-04-11 19:44:08,103 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:08,111 [INFO] Final candidates: []
2025-04-11 19:44:08,111 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:08,112 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:08,232 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:08,232 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(13)), (np.int64(6), np.int64(10)))
2025-04-11 19:44:08,235 [DEBUG] board coords: [(5, 10), (6, 10), (7, 10), (8, 10), (9, 10), (10, 10)]
2025-04-11 19:44:08,235 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:44:08,235 [DEBUG] check_window_intermediate_custom: empty_cells=[(5, 10), (7, 10)]
2025-04-11 19:44:08,236 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 0 1 1 1] with coords [(5, 10), (6, 10), (7, 10), (8, 10), (9, 10), (10, 10)] triggers candidate.
2025-04-11 19:44:08,236 [DEBUG] board coords: [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10)]
2025-04-11 19:44:08,236 [DEBUG] board values[np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 19:44:08,236 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 10), (11, 10)]
2025-04-11 19:44:08,236 [DEBUG] check_window_intermediate_custom: For L=6, window [1 0 1 1 1 0] with coords [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10)] triggers candidate.
2025-04-11 19:44:08,241 [INFO] Final candidates: [(7, 10), (5, 10), (11, 10)]
2025-04-11 19:44:08,241 [INFO] Phase win: Collected 3unique candidate(s):[((7, 10), (11, 10)), ((7, 10), (5, 10)), ((5, 10), (11, 10))]
2025-04-11 19:44:08,249 [INFO] Final candidates: []
2025-04-11 19:44:08,249 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:08,249 [INFO] Phase 1 (immediate win): 3 candidate(s) found.
2025-04-11 19:44:08,249 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:08,432 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:08,432 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(14)), (np.int64(9), np.int64(7)))
2025-04-11 19:44:08,440 [INFO] Final candidates: []
2025-04-11 19:44:08,440 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:08,449 [INFO] Final candidates: []
2025-04-11 19:44:08,449 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:08,449 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:08,592 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:08,592 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(10)), (np.int64(13), np.int64(9)))
2025-04-11 19:44:08,595 [DEBUG] board coords: [(7, 10), (8, 10), (9, 10), (10, 10), (11, 10), (12, 10)]
2025-04-11 19:44:08,595 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1)]
2025-04-11 19:44:08,595 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 10), (11, 10)]
2025-04-11 19:44:08,595 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 1 1 0 1] with coords [(7, 10), (8, 10), (9, 10), (10, 10), (11, 10), (12, 10)] triggers candidate.
2025-04-11 19:44:08,595 [DEBUG] board coords: [(8, 10), (9, 10), (10, 10), (11, 10), (12, 10), (13, 10)]
2025-04-11 19:44:08,595 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(0)]
2025-04-11 19:44:08,595 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 10), (13, 10)]
2025-04-11 19:44:08,595 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 1 0 1 0] with coords [(8, 10), (9, 10), (10, 10), (11, 10), (12, 10), (13, 10)] triggers candidate.
2025-04-11 19:44:08,601 [INFO] Final candidates: [(7, 10), (13, 10), (11, 10)]
2025-04-11 19:44:08,601 [INFO] Phase win: Collected 3unique candidate(s):[((7, 10), (11, 10)), ((13, 10), (11, 10)), ((7, 10), (13, 10))]
2025-04-11 19:44:08,609 [INFO] Final candidates: []
2025-04-11 19:44:08,609 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:08,609 [INFO] Phase 1 (immediate win): 3 candidate(s) found.
2025-04-11 19:44:08,609 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:08,612 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:08,612 [DEBUG] MCTS: BEST ((np.int64(9), np.int64(13)), (np.int64(12), np.int64(14))) with 1 visits.
2025-04-11 19:44:08,612 [INFO] MCTS: Search finished. Best move selected with 1 visits.
2025-04-11 19:44:08,612 [INFO] MCTS selected move: O10,P13
2025-04-11 19:44:08,612 [INFO] ===============NEW MOVE================
2025-04-11 19:44:13,477 [INFO] Starting pre-MCTS candidate collection.
2025-04-11 19:44:13,485 [INFO] Final candidates: []
2025-04-11 19:44:13,485 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:13,488 [DEBUG] board coords: [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10)]
2025-04-11 19:44:13,488 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:44:13,488 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 10)]
2025-04-11 19:44:13,488 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 1 1 1 1] with coords [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10)] triggers candidate.
2025-04-11 19:44:13,488 [DEBUG] check_window_intermediate_custom: valid_move=[(7, 10)]
2025-04-11 19:44:13,488 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(7, 10), (8, 10), (9, 10), (10, 10), (11, 10), (12, 10)] triggers candidate.
2025-04-11 19:44:13,488 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:44:13,488 [DEBUG] board coords: [(9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)]
2025-04-11 19:44:13,488 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(0)]
2025-04-11 19:44:13,488 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 10), (14, 10)]
2025-04-11 19:44:13,488 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 1 0 1 0] with coords [(9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)] triggers candidate.
2025-04-11 19:44:13,488 [DEBUG] check_window_intermediate_custom: valid_move=[(12, 10)]
2025-04-11 19:44:13,490 [DEBUG] board coords: [(7, 10), (8, 10), (9, 10), (10, 10), (11, 10), (12, 10), (13, 10)]
2025-04-11 19:44:13,490 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1)]
2025-04-11 19:44:13,490 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 10), (12, 10)]
2025-04-11 19:44:13,490 [DEBUG] check_window_intermediate_custom: For L=7, window [0 1 1 1 1 0 1] with coords [(7, 10), (8, 10), (9, 10), (10, 10), (11, 10), (12, 10), (13, 10)] triggers candidate.
2025-04-11 19:44:13,490 [DEBUG] check_window_intermediate_custom: valid_move=[(12, 10)]
2025-04-11 19:44:13,490 [DEBUG] board coords: [(8, 10), (9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)]
2025-04-11 19:44:13,490 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(0)]
2025-04-11 19:44:13,490 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 10), (14, 10)]
2025-04-11 19:44:13,490 [DEBUG] check_window_intermediate_custom: For L=7, window [1 1 1 1 0 1 0] with coords [(8, 10), (9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)] triggers candidate.
2025-04-11 19:44:13,490 [DEBUG] check_window_intermediate_custom: valid_move=[(12, 10)]
2025-04-11 19:44:13,494 [INFO] Final candidates: [(12, 10), (7, 10)]
2025-04-11 19:44:13,494 [INFO] Phase defense: Collected 1unique candidate(s):[((12, 10), (7, 10))]
2025-04-11 19:44:13,494 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:44:13,494 [INFO] MCTS: Starting search for 100 iterations.
2025-04-11 19:44:13,494 [DEBUG] Tree_policy iteration 1: Expanding move ((12, 10), (7, 10))
2025-04-11 19:44:13,503 [INFO] Final candidates: []
2025-04-11 19:44:13,503 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:13,511 [INFO] Final candidates: []
2025-04-11 19:44:13,511 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:13,511 [DEBUG] MCTS iteration 0: reached a node with 0 visits.
2025-04-11 19:44:13,511 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:13,681 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:13,681 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:13,681 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(16)), (np.int64(13), np.int64(14)))
2025-04-11 19:44:13,689 [INFO] Final candidates: []
2025-04-11 19:44:13,689 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:13,697 [INFO] Final candidates: []
2025-04-11 19:44:13,697 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:13,698 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:13,832 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:13,832 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:13,832 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(6)), (np.int64(8), np.int64(11)))
2025-04-11 19:44:13,840 [INFO] Final candidates: []
2025-04-11 19:44:13,840 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:13,848 [INFO] Final candidates: []
2025-04-11 19:44:13,848 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:13,848 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:14,005 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:14,005 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:14,005 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(13)), (np.int64(12), np.int64(11)))
2025-04-11 19:44:14,013 [INFO] Final candidates: []
2025-04-11 19:44:14,013 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:14,021 [INFO] Final candidates: []
2025-04-11 19:44:14,021 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:14,022 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:14,160 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:14,160 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:14,160 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(8)), (np.int64(15), np.int64(10)))
2025-04-11 19:44:14,168 [INFO] Final candidates: []
2025-04-11 19:44:14,168 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:14,177 [INFO] Final candidates: []
2025-04-11 19:44:14,177 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:14,178 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:14,328 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:14,328 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:14,328 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(9)), (np.int64(15), np.int64(15)))
2025-04-11 19:44:14,336 [INFO] Final candidates: []
2025-04-11 19:44:14,336 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:14,344 [INFO] Final candidates: []
2025-04-11 19:44:14,344 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:14,344 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:14,597 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:14,597 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:14,597 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(11)), (np.int64(9), np.int64(7)))
2025-04-11 19:44:14,605 [INFO] Final candidates: []
2025-04-11 19:44:14,605 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:14,613 [INFO] Final candidates: []
2025-04-11 19:44:14,613 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:14,613 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:14,794 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:14,794 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:14,794 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(13)), (np.int64(14), np.int64(10)))
2025-04-11 19:44:14,802 [INFO] Final candidates: []
2025-04-11 19:44:14,802 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:14,810 [INFO] Final candidates: []
2025-04-11 19:44:14,810 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:14,811 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:14,958 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:14,958 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:14,959 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(6)), (np.int64(12), np.int64(9)))
2025-04-11 19:44:14,966 [INFO] Final candidates: []
2025-04-11 19:44:14,967 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:14,975 [INFO] Final candidates: []
2025-04-11 19:44:14,975 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:14,975 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:15,232 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:15,232 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:15,232 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(14)), (np.int64(7), np.int64(8)))
2025-04-11 19:44:15,240 [INFO] Final candidates: []
2025-04-11 19:44:15,240 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:15,248 [INFO] Final candidates: []
2025-04-11 19:44:15,248 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:15,248 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:15,514 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:15,515 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:15,515 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(7)), (np.int64(11), np.int64(15)))
2025-04-11 19:44:15,523 [INFO] Final candidates: []
2025-04-11 19:44:15,523 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:15,530 [INFO] Final candidates: []
2025-04-11 19:44:15,530 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:15,531 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:15,564 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:15,564 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:15,564 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(14)), (np.int64(10), np.int64(14)))
2025-04-11 19:44:15,572 [INFO] Final candidates: []
2025-04-11 19:44:15,572 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:15,580 [INFO] Final candidates: []
2025-04-11 19:44:15,580 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:15,581 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:15,732 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:15,732 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:15,732 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(9)), (np.int64(12), np.int64(8)))
2025-04-11 19:44:15,741 [INFO] Final candidates: []
2025-04-11 19:44:15,741 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:15,749 [INFO] Final candidates: []
2025-04-11 19:44:15,749 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:15,749 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:15,929 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:15,929 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:15,929 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(10)), (np.int64(12), np.int64(15)))
2025-04-11 19:44:15,937 [INFO] Final candidates: []
2025-04-11 19:44:15,937 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:15,945 [INFO] Final candidates: []
2025-04-11 19:44:15,945 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:15,945 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:16,122 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:16,122 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:16,122 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(13)), (np.int64(8), np.int64(11)))
2025-04-11 19:44:16,130 [INFO] Final candidates: []
2025-04-11 19:44:16,130 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:16,138 [INFO] Final candidates: []
2025-04-11 19:44:16,138 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:16,139 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:16,349 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:16,349 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:16,349 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(13)), (np.int64(13), np.int64(12)))
2025-04-11 19:44:16,357 [INFO] Final candidates: []
2025-04-11 19:44:16,357 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:16,365 [INFO] Final candidates: []
2025-04-11 19:44:16,365 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:16,365 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:16,548 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:16,548 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:16,548 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(9)), (np.int64(13), np.int64(15)))
2025-04-11 19:44:16,556 [INFO] Final candidates: []
2025-04-11 19:44:16,556 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:16,564 [INFO] Final candidates: []
2025-04-11 19:44:16,564 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:16,565 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:16,622 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:16,622 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:16,622 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(9)), (np.int64(8), np.int64(7)))
2025-04-11 19:44:16,630 [INFO] Final candidates: []
2025-04-11 19:44:16,630 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:16,638 [INFO] Final candidates: []
2025-04-11 19:44:16,638 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:16,638 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:16,828 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:16,828 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:16,829 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(16)), (np.int64(8), np.int64(12)))
2025-04-11 19:44:16,837 [INFO] Final candidates: []
2025-04-11 19:44:16,837 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:16,845 [INFO] Final candidates: []
2025-04-11 19:44:16,845 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:16,845 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:16,921 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:16,921 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:16,921 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(15)), (np.int64(13), np.int64(15)))
2025-04-11 19:44:16,929 [INFO] Final candidates: []
2025-04-11 19:44:16,929 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:16,937 [INFO] Final candidates: []
2025-04-11 19:44:16,937 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:16,937 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:17,218 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:17,218 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:17,218 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(9)), (np.int64(7), np.int64(11)))
2025-04-11 19:44:17,226 [INFO] Final candidates: []
2025-04-11 19:44:17,226 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:17,234 [INFO] Final candidates: []
2025-04-11 19:44:17,234 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:17,234 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:17,299 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:17,299 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:17,299 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(6)), (np.int64(9), np.int64(15)))
2025-04-11 19:44:17,307 [INFO] Final candidates: []
2025-04-11 19:44:17,307 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:17,315 [INFO] Final candidates: []
2025-04-11 19:44:17,315 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:17,315 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:17,551 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:17,551 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:17,551 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(13)), (np.int64(15), np.int64(10)))
2025-04-11 19:44:17,559 [INFO] Final candidates: []
2025-04-11 19:44:17,559 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:17,567 [INFO] Final candidates: []
2025-04-11 19:44:17,567 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:17,568 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:17,797 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:17,797 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:17,797 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(10)), (np.int64(9), np.int64(15)))
2025-04-11 19:44:17,805 [INFO] Final candidates: []
2025-04-11 19:44:17,805 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:17,813 [INFO] Final candidates: []
2025-04-11 19:44:17,813 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:17,814 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:17,955 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:17,955 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:17,955 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(10)), (np.int64(8), np.int64(13)))
2025-04-11 19:44:17,963 [INFO] Final candidates: []
2025-04-11 19:44:17,964 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:17,972 [INFO] Final candidates: []
2025-04-11 19:44:17,972 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:17,972 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:18,166 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:18,166 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:18,166 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(10)), (np.int64(15), np.int64(15)))
2025-04-11 19:44:18,174 [INFO] Final candidates: []
2025-04-11 19:44:18,174 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:18,182 [INFO] Final candidates: []
2025-04-11 19:44:18,182 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:18,183 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:18,327 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:18,327 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:18,327 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(14)), (np.int64(9), np.int64(7)))
2025-04-11 19:44:18,335 [INFO] Final candidates: []
2025-04-11 19:44:18,335 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:18,343 [INFO] Final candidates: []
2025-04-11 19:44:18,343 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:18,343 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:18,457 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:18,457 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:18,458 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(9)), (np.int64(15), np.int64(10)))
2025-04-11 19:44:18,466 [INFO] Final candidates: []
2025-04-11 19:44:18,466 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:18,474 [INFO] Final candidates: []
2025-04-11 19:44:18,474 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:18,474 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:18,681 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:18,682 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:18,682 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(13)), (np.int64(13), np.int64(15)))
2025-04-11 19:44:18,690 [INFO] Final candidates: []
2025-04-11 19:44:18,690 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:18,698 [INFO] Final candidates: []
2025-04-11 19:44:18,698 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:18,698 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:18,745 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:18,746 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:18,746 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(8)), (np.int64(9), np.int64(15)))
2025-04-11 19:44:18,754 [INFO] Final candidates: []
2025-04-11 19:44:18,754 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:18,762 [INFO] Final candidates: []
2025-04-11 19:44:18,762 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:18,762 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:18,893 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:18,893 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:18,893 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(10)), (np.int64(15), np.int64(10)))
2025-04-11 19:44:18,901 [INFO] Final candidates: []
2025-04-11 19:44:18,901 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:18,910 [INFO] Final candidates: []
2025-04-11 19:44:18,910 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:18,910 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:18,984 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:18,984 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:18,984 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(15)), (np.int64(10), np.int64(8)))
2025-04-11 19:44:18,992 [INFO] Final candidates: []
2025-04-11 19:44:18,992 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:19,004 [INFO] Final candidates: []
2025-04-11 19:44:19,004 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:19,006 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:19,247 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:19,247 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:19,247 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(11)), (np.int64(12), np.int64(11)))
2025-04-11 19:44:19,255 [INFO] Final candidates: []
2025-04-11 19:44:19,255 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:19,263 [INFO] Final candidates: []
2025-04-11 19:44:19,263 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:19,263 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:19,421 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:19,421 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:19,421 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(15)), (np.int64(8), np.int64(13)))
2025-04-11 19:44:19,429 [INFO] Final candidates: []
2025-04-11 19:44:19,429 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:19,437 [INFO] Final candidates: []
2025-04-11 19:44:19,437 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:19,437 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:19,678 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:19,678 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:19,678 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(13)), (np.int64(10), np.int64(13)))
2025-04-11 19:44:19,686 [INFO] Final candidates: []
2025-04-11 19:44:19,686 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:19,694 [INFO] Final candidates: []
2025-04-11 19:44:19,694 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:19,694 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:19,730 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:19,730 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:19,730 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(13)), (np.int64(7), np.int64(13)))
2025-04-11 19:44:19,738 [INFO] Final candidates: []
2025-04-11 19:44:19,738 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:19,748 [INFO] Final candidates: []
2025-04-11 19:44:19,748 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:19,748 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:19,991 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:19,992 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:19,992 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(9)), (np.int64(13), np.int64(11)))
2025-04-11 19:44:20,000 [INFO] Final candidates: []
2025-04-11 19:44:20,000 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:20,008 [INFO] Final candidates: []
2025-04-11 19:44:20,008 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:20,008 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:20,060 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:20,060 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:20,060 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(8)), (np.int64(15), np.int64(10)))
2025-04-11 19:44:20,068 [INFO] Final candidates: []
2025-04-11 19:44:20,068 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:20,076 [INFO] Final candidates: []
2025-04-11 19:44:20,076 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:20,077 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:20,170 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:20,170 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:20,170 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(14)), (np.int64(15), np.int64(10)))
2025-04-11 19:44:20,178 [INFO] Final candidates: []
2025-04-11 19:44:20,179 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:20,187 [INFO] Final candidates: []
2025-04-11 19:44:20,187 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:20,187 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:20,364 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:20,364 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:20,364 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(14)), (np.int64(6), np.int64(8)))
2025-04-11 19:44:20,372 [INFO] Final candidates: []
2025-04-11 19:44:20,372 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:20,380 [INFO] Final candidates: []
2025-04-11 19:44:20,380 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:20,381 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:20,525 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:20,525 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:20,525 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(15)), (np.int64(10), np.int64(14)))
2025-04-11 19:44:20,533 [INFO] Final candidates: []
2025-04-11 19:44:20,533 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:20,541 [INFO] Final candidates: []
2025-04-11 19:44:20,541 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:20,542 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:20,570 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:20,570 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:20,570 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(8)), (np.int64(8), np.int64(13)))
2025-04-11 19:44:20,578 [INFO] Final candidates: []
2025-04-11 19:44:20,578 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:20,586 [INFO] Final candidates: []
2025-04-11 19:44:20,586 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:20,586 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:20,670 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:20,671 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:20,671 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(11)), (np.int64(10), np.int64(11)))
2025-04-11 19:44:20,679 [INFO] Final candidates: []
2025-04-11 19:44:20,679 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:20,688 [INFO] Final candidates: []
2025-04-11 19:44:20,688 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:20,688 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:20,841 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:20,841 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:20,841 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(14)), (np.int64(12), np.int64(11)))
2025-04-11 19:44:20,849 [INFO] Final candidates: []
2025-04-11 19:44:20,849 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:20,857 [INFO] Final candidates: []
2025-04-11 19:44:20,857 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:20,858 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:21,102 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:21,102 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:21,102 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(11)), (np.int64(9), np.int64(15)))
2025-04-11 19:44:21,110 [INFO] Final candidates: []
2025-04-11 19:44:21,110 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:21,118 [INFO] Final candidates: []
2025-04-11 19:44:21,119 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:21,119 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:21,349 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:21,350 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:21,350 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(6)), (np.int64(15), np.int64(10)))
2025-04-11 19:44:21,358 [INFO] Final candidates: []
2025-04-11 19:44:21,358 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:21,366 [INFO] Final candidates: []
2025-04-11 19:44:21,366 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:21,366 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:21,405 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:21,406 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:21,406 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(11)), (np.int64(11), np.int64(15)))
2025-04-11 19:44:21,414 [INFO] Final candidates: []
2025-04-11 19:44:21,414 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:21,422 [INFO] Final candidates: []
2025-04-11 19:44:21,422 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:21,422 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:21,565 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:21,566 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:21,566 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(13)), (np.int64(11), np.int64(7)))
2025-04-11 19:44:21,574 [INFO] Final candidates: []
2025-04-11 19:44:21,574 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:21,582 [INFO] Final candidates: []
2025-04-11 19:44:21,582 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:21,582 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:21,660 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:21,660 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:21,660 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(14)), (np.int64(7), np.int64(12)))
2025-04-11 19:44:21,668 [INFO] Final candidates: []
2025-04-11 19:44:21,668 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:21,676 [INFO] Final candidates: []
2025-04-11 19:44:21,676 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:21,677 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:21,831 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:21,831 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:21,831 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(13)), (np.int64(10), np.int64(11)))
2025-04-11 19:44:21,839 [INFO] Final candidates: []
2025-04-11 19:44:21,839 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:21,848 [INFO] Final candidates: []
2025-04-11 19:44:21,848 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:21,848 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:21,957 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:21,958 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:21,958 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(11)), (np.int64(10), np.int64(14)))
2025-04-11 19:44:21,966 [INFO] Final candidates: []
2025-04-11 19:44:21,966 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:21,973 [INFO] Final candidates: []
2025-04-11 19:44:21,974 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:21,974 [DEBUG] MCTS iteration 50: reached a node with 0 visits.
2025-04-11 19:44:21,974 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:22,102 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:22,103 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:22,103 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(8)), (np.int64(14), np.int64(12)))
2025-04-11 19:44:22,111 [INFO] Final candidates: []
2025-04-11 19:44:22,111 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:22,119 [INFO] Final candidates: []
2025-04-11 19:44:22,119 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:22,119 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:22,312 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:22,312 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:22,312 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(12)), (np.int64(9), np.int64(12)))
2025-04-11 19:44:22,321 [INFO] Final candidates: []
2025-04-11 19:44:22,321 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:22,329 [INFO] Final candidates: []
2025-04-11 19:44:22,329 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:22,329 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:22,459 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:22,459 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:22,459 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(10)), (np.int64(10), np.int64(9)))
2025-04-11 19:44:22,467 [INFO] Final candidates: []
2025-04-11 19:44:22,468 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:22,476 [INFO] Final candidates: []
2025-04-11 19:44:22,476 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:22,476 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:22,557 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:22,557 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:22,558 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(9)), (np.int64(7), np.int64(11)))
2025-04-11 19:44:22,565 [INFO] Final candidates: []
2025-04-11 19:44:22,566 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:22,573 [INFO] Final candidates: []
2025-04-11 19:44:22,574 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:22,574 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:22,688 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:22,689 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:22,689 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(7)), (np.int64(7), np.int64(8)))
2025-04-11 19:44:22,697 [INFO] Final candidates: []
2025-04-11 19:44:22,697 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:22,705 [INFO] Final candidates: []
2025-04-11 19:44:22,705 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:22,706 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:22,784 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:22,784 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:22,784 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(13)), (np.int64(12), np.int64(8)))
2025-04-11 19:44:22,792 [INFO] Final candidates: []
2025-04-11 19:44:22,792 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:22,800 [INFO] Final candidates: []
2025-04-11 19:44:22,800 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:22,801 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:22,901 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:22,901 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:22,901 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(15)), (np.int64(8), np.int64(13)))
2025-04-11 19:44:22,909 [INFO] Final candidates: []
2025-04-11 19:44:22,909 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:22,917 [INFO] Final candidates: []
2025-04-11 19:44:22,917 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:22,917 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:23,117 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:23,118 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:23,118 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(10)), (np.int64(8), np.int64(12)))
2025-04-11 19:44:23,126 [INFO] Final candidates: []
2025-04-11 19:44:23,126 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:23,134 [INFO] Final candidates: []
2025-04-11 19:44:23,134 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:23,134 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:23,324 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:23,324 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:23,324 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(13)), (np.int64(7), np.int64(12)))
2025-04-11 19:44:23,332 [INFO] Final candidates: []
2025-04-11 19:44:23,332 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:23,340 [INFO] Final candidates: []
2025-04-11 19:44:23,340 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:23,340 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:23,441 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:23,441 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:23,441 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(13)), (np.int64(8), np.int64(13)))
2025-04-11 19:44:23,449 [INFO] Final candidates: []
2025-04-11 19:44:23,449 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:23,457 [INFO] Final candidates: []
2025-04-11 19:44:23,457 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:23,458 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:23,610 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:23,610 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:23,610 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(8)), (np.int64(6), np.int64(9)))
2025-04-11 19:44:23,618 [INFO] Final candidates: []
2025-04-11 19:44:23,618 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:23,627 [INFO] Final candidates: []
2025-04-11 19:44:23,627 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:23,628 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:23,708 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:23,709 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:23,709 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(13)), (np.int64(8), np.int64(13)))
2025-04-11 19:44:23,717 [INFO] Final candidates: []
2025-04-11 19:44:23,717 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:23,726 [INFO] Final candidates: []
2025-04-11 19:44:23,726 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:23,727 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:23,846 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:23,846 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:23,846 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(11)), (np.int64(13), np.int64(9)))
2025-04-11 19:44:23,857 [INFO] Final candidates: []
2025-04-11 19:44:23,857 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:23,865 [INFO] Final candidates: []
2025-04-11 19:44:23,865 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:23,866 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:23,975 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:23,976 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:23,976 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(10)), (np.int64(13), np.int64(12)))
2025-04-11 19:44:23,984 [INFO] Final candidates: []
2025-04-11 19:44:23,984 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:23,992 [INFO] Final candidates: []
2025-04-11 19:44:23,992 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:23,992 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:24,061 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:24,061 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:24,061 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(6)), (np.int64(13), np.int64(15)))
2025-04-11 19:44:24,069 [INFO] Final candidates: []
2025-04-11 19:44:24,069 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:24,077 [INFO] Final candidates: []
2025-04-11 19:44:24,077 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:24,078 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:24,198 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:24,198 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:24,198 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(7)), (np.int64(8), np.int64(14)))
2025-04-11 19:44:24,206 [INFO] Final candidates: []
2025-04-11 19:44:24,206 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:24,214 [INFO] Final candidates: []
2025-04-11 19:44:24,214 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:24,214 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:24,296 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:24,296 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:24,296 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(8)), (np.int64(14), np.int64(11)))
2025-04-11 19:44:24,304 [INFO] Final candidates: []
2025-04-11 19:44:24,304 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:24,313 [INFO] Final candidates: []
2025-04-11 19:44:24,313 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:24,313 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:24,413 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:24,413 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:24,413 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(13)), (np.int64(8), np.int64(14)))
2025-04-11 19:44:24,421 [INFO] Final candidates: []
2025-04-11 19:44:24,421 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:24,429 [INFO] Final candidates: []
2025-04-11 19:44:24,429 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:24,430 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:24,546 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:24,547 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:24,547 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(16)), (np.int64(7), np.int64(8)))
2025-04-11 19:44:24,555 [INFO] Final candidates: []
2025-04-11 19:44:24,555 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:24,563 [INFO] Final candidates: []
2025-04-11 19:44:24,563 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:24,564 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:24,718 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:24,719 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:24,719 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(13)), (np.int64(14), np.int64(9)))
2025-04-11 19:44:24,727 [INFO] Final candidates: []
2025-04-11 19:44:24,727 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:24,734 [INFO] Final candidates: []
2025-04-11 19:44:24,734 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:24,735 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:24,945 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:24,945 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:24,946 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(7)), (np.int64(10), np.int64(13)))
2025-04-11 19:44:24,954 [INFO] Final candidates: []
2025-04-11 19:44:24,954 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:24,962 [INFO] Final candidates: []
2025-04-11 19:44:24,962 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:24,962 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:25,153 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:25,153 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:25,153 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(11)), (np.int64(14), np.int64(11)))
2025-04-11 19:44:25,161 [INFO] Final candidates: []
2025-04-11 19:44:25,161 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:25,169 [INFO] Final candidates: []
2025-04-11 19:44:25,169 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:25,169 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:25,293 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:25,294 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:25,294 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(9)), (np.int64(11), np.int64(15)))
2025-04-11 19:44:25,302 [INFO] Final candidates: []
2025-04-11 19:44:25,302 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:25,311 [INFO] Final candidates: []
2025-04-11 19:44:25,311 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:25,312 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:25,430 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:25,430 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:25,431 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(9)), (np.int64(10), np.int64(14)))
2025-04-11 19:44:25,438 [INFO] Final candidates: []
2025-04-11 19:44:25,438 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:25,446 [INFO] Final candidates: []
2025-04-11 19:44:25,447 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:25,447 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:25,682 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:25,682 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:25,682 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(11)), (np.int64(7), np.int64(11)))
2025-04-11 19:44:25,690 [INFO] Final candidates: []
2025-04-11 19:44:25,690 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:25,698 [INFO] Final candidates: []
2025-04-11 19:44:25,698 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:25,699 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:25,782 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:25,782 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:25,782 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(11)), (np.int64(8), np.int64(13)))
2025-04-11 19:44:25,790 [INFO] Final candidates: []
2025-04-11 19:44:25,790 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:25,799 [INFO] Final candidates: []
2025-04-11 19:44:25,799 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:25,799 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:25,826 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:25,826 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:25,826 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(11)), (np.int64(8), np.int64(7)))
2025-04-11 19:44:25,837 [INFO] Final candidates: []
2025-04-11 19:44:25,837 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:25,845 [INFO] Final candidates: []
2025-04-11 19:44:25,845 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:25,845 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:25,869 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:25,869 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:25,870 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(10)), (np.int64(14), np.int64(16)))
2025-04-11 19:44:25,878 [INFO] Final candidates: []
2025-04-11 19:44:25,878 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:25,886 [INFO] Final candidates: []
2025-04-11 19:44:25,886 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:25,887 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:26,046 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:26,046 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:26,047 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(13)), (np.int64(7), np.int64(12)))
2025-04-11 19:44:26,054 [INFO] Final candidates: []
2025-04-11 19:44:26,054 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:26,062 [INFO] Final candidates: []
2025-04-11 19:44:26,062 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:26,063 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:26,185 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:26,185 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:26,185 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(8)), (np.int64(6), np.int64(9)))
2025-04-11 19:44:26,193 [INFO] Final candidates: []
2025-04-11 19:44:26,193 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:26,201 [INFO] Final candidates: []
2025-04-11 19:44:26,201 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:26,201 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:26,274 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:26,274 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:26,274 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(16)), (np.int64(15), np.int64(15)))
2025-04-11 19:44:26,282 [INFO] Final candidates: []
2025-04-11 19:44:26,282 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:26,290 [INFO] Final candidates: []
2025-04-11 19:44:26,290 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:26,290 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:26,451 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:26,451 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:26,451 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(11)), (np.int64(10), np.int64(14)))
2025-04-11 19:44:26,459 [INFO] Final candidates: []
2025-04-11 19:44:26,459 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:26,467 [INFO] Final candidates: []
2025-04-11 19:44:26,467 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:26,468 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:26,529 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:26,529 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:26,529 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(8)), (np.int64(13), np.int64(11)))
2025-04-11 19:44:26,537 [INFO] Final candidates: []
2025-04-11 19:44:26,537 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:26,545 [INFO] Final candidates: []
2025-04-11 19:44:26,545 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:26,546 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:26,626 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:26,626 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:26,626 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(8)), (np.int64(6), np.int64(10)))
2025-04-11 19:44:26,634 [INFO] Final candidates: []
2025-04-11 19:44:26,634 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:26,642 [INFO] Final candidates: []
2025-04-11 19:44:26,642 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:26,642 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:26,679 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:26,679 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:26,679 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(7)), (np.int64(11), np.int64(13)))
2025-04-11 19:44:26,687 [INFO] Final candidates: []
2025-04-11 19:44:26,687 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:26,695 [INFO] Final candidates: []
2025-04-11 19:44:26,695 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:26,695 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:26,829 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:26,829 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:26,829 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(9)), (np.int64(9), np.int64(7)))
2025-04-11 19:44:26,837 [INFO] Final candidates: []
2025-04-11 19:44:26,837 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:26,845 [INFO] Final candidates: []
2025-04-11 19:44:26,845 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:26,846 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:27,089 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:27,090 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:27,090 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(14)), (np.int64(7), np.int64(11)))
2025-04-11 19:44:27,098 [INFO] Final candidates: []
2025-04-11 19:44:27,098 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:27,106 [INFO] Final candidates: []
2025-04-11 19:44:27,106 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:27,106 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:27,219 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:27,220 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:27,220 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(14)), (np.int64(12), np.int64(11)))
2025-04-11 19:44:27,228 [INFO] Final candidates: []
2025-04-11 19:44:27,228 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:27,236 [INFO] Final candidates: []
2025-04-11 19:44:27,236 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:27,237 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:27,335 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:27,335 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:27,335 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(16)), (np.int64(12), np.int64(13)))
2025-04-11 19:44:27,343 [INFO] Final candidates: []
2025-04-11 19:44:27,343 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:27,351 [INFO] Final candidates: []
2025-04-11 19:44:27,351 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:27,351 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:27,503 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:27,503 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:27,503 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(11)), (np.int64(7), np.int64(8)))
2025-04-11 19:44:27,511 [INFO] Final candidates: []
2025-04-11 19:44:27,511 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:27,519 [INFO] Final candidates: []
2025-04-11 19:44:27,519 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:27,520 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:27,574 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:27,574 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:27,574 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(9)), (np.int64(8), np.int64(12)))
2025-04-11 19:44:27,582 [INFO] Final candidates: []
2025-04-11 19:44:27,582 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:27,590 [INFO] Final candidates: []
2025-04-11 19:44:27,590 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:27,590 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:27,759 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:27,760 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:27,760 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(14)), (np.int64(11), np.int64(15)))
2025-04-11 19:44:27,768 [INFO] Final candidates: []
2025-04-11 19:44:27,768 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:27,776 [INFO] Final candidates: []
2025-04-11 19:44:27,776 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:27,776 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:28,037 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:28,037 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:28,037 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(13)), (np.int64(7), np.int64(12)))
2025-04-11 19:44:28,045 [INFO] Final candidates: []
2025-04-11 19:44:28,045 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:28,053 [INFO] Final candidates: []
2025-04-11 19:44:28,053 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:28,054 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:28,101 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:28,101 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:28,101 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(14)), (np.int64(15), np.int64(14)))
2025-04-11 19:44:28,109 [INFO] Final candidates: []
2025-04-11 19:44:28,109 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:28,117 [INFO] Final candidates: []
2025-04-11 19:44:28,117 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:28,118 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:28,225 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:28,226 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:28,226 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(12)), (np.int64(14), np.int64(11)))
2025-04-11 19:44:28,235 [INFO] Final candidates: []
2025-04-11 19:44:28,235 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:28,243 [INFO] Final candidates: []
2025-04-11 19:44:28,243 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:28,244 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:28,492 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:28,493 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:28,493 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(11)), (np.int64(15), np.int64(13)))
2025-04-11 19:44:28,501 [INFO] Final candidates: []
2025-04-11 19:44:28,501 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:28,509 [INFO] Final candidates: []
2025-04-11 19:44:28,509 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:28,509 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:28,724 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:28,724 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:28,724 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(11)), (np.int64(13), np.int64(15)))
2025-04-11 19:44:28,733 [INFO] Final candidates: []
2025-04-11 19:44:28,733 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:28,741 [INFO] Final candidates: []
2025-04-11 19:44:28,741 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:28,741 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:28,845 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:28,845 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:28,845 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(8)), (np.int64(11), np.int64(13)))
2025-04-11 19:44:28,853 [INFO] Final candidates: []
2025-04-11 19:44:28,853 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:28,861 [INFO] Final candidates: []
2025-04-11 19:44:28,861 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:28,861 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:28,922 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:28,923 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:44:28,923 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(8)), (np.int64(8), np.int64(11)))
2025-04-11 19:44:28,931 [INFO] Final candidates: []
2025-04-11 19:44:28,931 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:28,939 [INFO] Final candidates: []
2025-04-11 19:44:28,939 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:28,939 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:28,997 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:28,997 [DEBUG] MCTS: BEST ((12, 10), (7, 10)) with 100 visits.
2025-04-11 19:44:28,997 [INFO] MCTS: Search finished. Best move selected with 100 visits.
2025-04-11 19:44:28,997 [INFO] Phase 2 (defense): MCTS selected move: ((12, 10), (7, 10))
2025-04-11 19:44:28,997 [INFO] Phase 2 (defense): MCTS selected move string : L13,L8
2025-04-11 19:44:28,997 [INFO] MCTS (defense candidates) selected move: L13,L8
2025-04-11 19:44:35,130 [INFO] Starting pre-MCTS candidate collection.
2025-04-11 19:44:35,138 [INFO] Final candidates: []
2025-04-11 19:44:35,138 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:44:35,144 [DEBUG] board coords: [(4, 14), (5, 13), (6, 12), (7, 11), (8, 10), (9, 9)]
2025-04-11 19:44:35,144 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:44:35,144 [DEBUG] check_window_intermediate_custom: empty_cells=[(4, 14), (6, 12)]
2025-04-11 19:44:35,144 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 0 1 1 1] with coords [(4, 14), (5, 13), (6, 12), (7, 11), (8, 10), (9, 9)] triggers candidate.
2025-04-11 19:44:35,144 [DEBUG] check_window_intermediate_custom: valid_move=[(6, 12)]
2025-04-11 19:44:35,144 [DEBUG] board coords: [(5, 13), (6, 12), (7, 11), (8, 10), (9, 9), (10, 8)]
2025-04-11 19:44:35,144 [DEBUG] board values[np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 19:44:35,144 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 12), (10, 8)]
2025-04-11 19:44:35,145 [DEBUG] check_window_intermediate_custom: For L=6, window [1 0 1 1 1 0] with coords [(5, 13), (6, 12), (7, 11), (8, 10), (9, 9), (10, 8)] triggers candidate.
2025-04-11 19:44:35,145 [DEBUG] check_window_intermediate_custom: valid_move=[(6, 12)]
2025-04-11 19:44:35,146 [INFO] Final candidates: [(6, 12)]
2025-04-11 19:44:35,146 [INFO] Phase defense: Found only one candidate: (6, 12)
2025-04-11 19:44:35,146 [INFO] Phase defense: Collected 10unique candidate(s):[((6, 12), (np.int64(6), np.int64(10))), ((6, 12), (np.int64(6), np.int64(14))), ((6, 12), (np.int64(7), np.int64(13))), ((6, 12), (np.int64(4), np.int64(12))), ((6, 12), (np.int64(5), np.int64(12))), ((6, 12), (np.int64(6), np.int64(11))), ((6, 12), (np.int64(6), np.int64(13))), ((6, 12), (np.int64(7), np.int64(12))), ((6, 12), (np.int64(8), np.int64(12))), ((6, 12), (np.int64(5), np.int64(11)))]
2025-04-11 19:44:35,146 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:44:35,146 [INFO] MCTS: Starting search for 100 iterations.
2025-04-11 19:44:35,146 [DEBUG] Tree_policy iteration 1: Expanding move ((6, 12), (np.int64(7), np.int64(13)))
2025-04-11 19:44:35,152 [DEBUG] board coords: [(3, 15), (4, 14), (5, 13), (6, 12), (7, 11), (8, 10)]
2025-04-11 19:44:35,153 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:44:35,153 [DEBUG] check_window_intermediate_custom: empty_cells=[(3, 15), (4, 14)]
2025-04-11 19:44:35,153 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 1 1 1 1] with coords [(3, 15), (4, 14), (5, 13), (6, 12), (7, 11), (8, 10)] triggers candidate.
2025-04-11 19:44:35,153 [DEBUG] board coords: [(6, 12), (7, 11), (8, 10), (9, 9), (10, 8), (11, 7)]
2025-04-11 19:44:35,153 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:44:35,153 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 8), (11, 7)]
2025-04-11 19:44:35,153 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 1 1 0 0] with coords [(6, 12), (7, 11), (8, 10), (9, 9), (10, 8), (11, 7)] triggers candidate.
2025-04-11 19:44:35,154 [DEBUG] board coords: [(3, 15), (4, 14), (5, 13), (6, 12), (7, 11), (8, 10), (9, 9)]
2025-04-11 19:44:35,154 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:44:35,154 [DEBUG] check_window_intermediate_custom: empty_cells=[(3, 15), (4, 14)]
2025-04-11 19:44:35,154 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 1 1 1 1 1] with coords [(3, 15), (4, 14), (5, 13), (6, 12), (7, 11), (8, 10), (9, 9)] triggers candidate.
2025-04-11 19:44:35,154 [DEBUG] check_window_margin_custom: For L=7, window [0 1 1 1 1 1 0] with coords [(4, 14), (5, 13), (6, 12), (7, 11), (8, 10), (9, 9), (10, 8)] triggers candidate.
2025-04-11 19:44:35,154 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:44:35,154 [DEBUG] board coords: [(5, 13), (6, 12), (7, 11), (8, 10), (9, 9), (10, 8), (11, 7)]
2025-04-11 19:44:35,154 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:44:35,154 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 8), (11, 7)]
2025-04-11 19:44:35,154 [DEBUG] check_window_intermediate_custom: For L=7, window [1 1 1 1 1 0 0] with coords [(5, 13), (6, 12), (7, 11), (8, 10), (9, 9), (10, 8), (11, 7)] triggers candidate.
2025-04-11 19:44:35,154 [INFO] Final candidates: [(11, 7), (3, 15), (10, 8), (4, 14)]
2025-04-11 19:44:35,155 [INFO] Phase win: Collected 6unique candidate(s):[((11, 7), (4, 14)), ((3, 15), (4, 14)), ((11, 7), (3, 15)), ((11, 7), (10, 8)), ((10, 8), (4, 14)), ((3, 15), (10, 8))]
2025-04-11 19:44:35,162 [INFO] Final candidates: []
2025-04-11 19:44:35,162 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:35,162 [INFO] Phase 1 (immediate win): 6 candidate(s) found.
2025-04-11 19:44:35,162 [DEBUG] MCTS iteration 0: reached a node with 0 visits.
2025-04-11 19:44:35,162 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:35,237 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:35,237 [DEBUG] Tree_policy iteration 1: Expanding move ((6, 12), (np.int64(6), np.int64(14)))
2025-04-11 19:44:35,243 [DEBUG] board coords: [(3, 15), (4, 14), (5, 13), (6, 12), (7, 11), (8, 10)]
2025-04-11 19:44:35,243 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:44:35,243 [DEBUG] check_window_intermediate_custom: empty_cells=[(3, 15), (4, 14)]
2025-04-11 19:44:35,244 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 1 1 1 1] with coords [(3, 15), (4, 14), (5, 13), (6, 12), (7, 11), (8, 10)] triggers candidate.
2025-04-11 19:44:35,244 [DEBUG] board coords: [(6, 12), (7, 11), (8, 10), (9, 9), (10, 8), (11, 7)]
2025-04-11 19:44:35,244 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:44:35,244 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 8), (11, 7)]
2025-04-11 19:44:35,244 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 1 1 0 0] with coords [(6, 12), (7, 11), (8, 10), (9, 9), (10, 8), (11, 7)] triggers candidate.
2025-04-11 19:44:35,245 [DEBUG] board coords: [(3, 15), (4, 14), (5, 13), (6, 12), (7, 11), (8, 10), (9, 9)]
2025-04-11 19:44:35,245 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:44:35,245 [DEBUG] check_window_intermediate_custom: empty_cells=[(3, 15), (4, 14)]
2025-04-11 19:44:35,245 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 1 1 1 1 1] with coords [(3, 15), (4, 14), (5, 13), (6, 12), (7, 11), (8, 10), (9, 9)] triggers candidate.
2025-04-11 19:44:35,245 [DEBUG] check_window_margin_custom: For L=7, window [0 1 1 1 1 1 0] with coords [(4, 14), (5, 13), (6, 12), (7, 11), (8, 10), (9, 9), (10, 8)] triggers candidate.
2025-04-11 19:44:35,245 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:44:35,245 [DEBUG] board coords: [(5, 13), (6, 12), (7, 11), (8, 10), (9, 9), (10, 8), (11, 7)]
2025-04-11 19:44:35,245 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:44:35,245 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 8), (11, 7)]
2025-04-11 19:44:35,245 [DEBUG] check_window_intermediate_custom: For L=7, window [1 1 1 1 1 0 0] with coords [(5, 13), (6, 12), (7, 11), (8, 10), (9, 9), (10, 8), (11, 7)] triggers candidate.
2025-04-11 19:44:35,246 [INFO] Final candidates: [(11, 7), (3, 15), (10, 8), (4, 14)]
2025-04-11 19:44:35,246 [INFO] Phase win: Collected 6unique candidate(s):[((11, 7), (4, 14)), ((3, 15), (4, 14)), ((11, 7), (3, 15)), ((11, 7), (10, 8)), ((10, 8), (4, 14)), ((3, 15), (10, 8))]
2025-04-11 19:44:35,253 [INFO] Final candidates: []
2025-04-11 19:44:35,253 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:35,253 [INFO] Phase 1 (immediate win): 6 candidate(s) found.
2025-04-11 19:44:35,253 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:35,270 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:35,270 [DEBUG] Tree_policy iteration 1: Expanding move ((6, 12), (np.int64(7), np.int64(12)))
2025-04-11 19:44:35,277 [DEBUG] board coords: [(3, 15), (4, 14), (5, 13), (6, 12), (7, 11), (8, 10)]
2025-04-11 19:44:35,277 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:44:35,277 [DEBUG] check_window_intermediate_custom: empty_cells=[(3, 15), (4, 14)]
2025-04-11 19:44:35,277 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 1 1 1 1] with coords [(3, 15), (4, 14), (5, 13), (6, 12), (7, 11), (8, 10)] triggers candidate.
2025-04-11 19:44:35,277 [DEBUG] board coords: [(6, 12), (7, 11), (8, 10), (9, 9), (10, 8), (11, 7)]
2025-04-11 19:44:35,277 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:44:35,277 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 8), (11, 7)]
2025-04-11 19:44:35,277 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 1 1 0 0] with coords [(6, 12), (7, 11), (8, 10), (9, 9), (10, 8), (11, 7)] triggers candidate.
2025-04-11 19:44:35,278 [DEBUG] board coords: [(3, 15), (4, 14), (5, 13), (6, 12), (7, 11), (8, 10), (9, 9)]
2025-04-11 19:44:35,278 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:44:35,278 [DEBUG] check_window_intermediate_custom: empty_cells=[(3, 15), (4, 14)]
2025-04-11 19:44:35,278 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 1 1 1 1 1] with coords [(3, 15), (4, 14), (5, 13), (6, 12), (7, 11), (8, 10), (9, 9)] triggers candidate.
2025-04-11 19:44:35,278 [DEBUG] check_window_margin_custom: For L=7, window [0 1 1 1 1 1 0] with coords [(4, 14), (5, 13), (6, 12), (7, 11), (8, 10), (9, 9), (10, 8)] triggers candidate.
2025-04-11 19:44:35,278 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:44:35,278 [DEBUG] board coords: [(5, 13), (6, 12), (7, 11), (8, 10), (9, 9), (10, 8), (11, 7)]
2025-04-11 19:44:35,278 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:44:35,278 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 8), (11, 7)]
2025-04-11 19:44:35,278 [DEBUG] check_window_intermediate_custom: For L=7, window [1 1 1 1 1 0 0] with coords [(5, 13), (6, 12), (7, 11), (8, 10), (9, 9), (10, 8), (11, 7)] triggers candidate.
2025-04-11 19:44:35,279 [INFO] Final candidates: [(11, 7), (3, 15), (10, 8), (4, 14)]
2025-04-11 19:44:35,279 [INFO] Phase win: Collected 6unique candidate(s):[((11, 7), (4, 14)), ((3, 15), (4, 14)), ((11, 7), (3, 15)), ((11, 7), (10, 8)), ((10, 8), (4, 14)), ((3, 15), (10, 8))]
2025-04-11 19:44:35,286 [INFO] Final candidates: []
2025-04-11 19:44:35,286 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:35,286 [INFO] Phase 1 (immediate win): 6 candidate(s) found.
2025-04-11 19:44:35,286 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:35,391 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:35,392 [DEBUG] Tree_policy iteration 1: Expanding move ((6, 12), (np.int64(5), np.int64(11)))
2025-04-11 19:44:35,398 [DEBUG] board coords: [(3, 15), (4, 14), (5, 13), (6, 12), (7, 11), (8, 10)]
2025-04-11 19:44:35,398 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:44:35,398 [DEBUG] check_window_intermediate_custom: empty_cells=[(3, 15), (4, 14)]
2025-04-11 19:44:35,398 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 1 1 1 1] with coords [(3, 15), (4, 14), (5, 13), (6, 12), (7, 11), (8, 10)] triggers candidate.
2025-04-11 19:44:35,398 [DEBUG] board coords: [(6, 12), (7, 11), (8, 10), (9, 9), (10, 8), (11, 7)]
2025-04-11 19:44:35,399 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:44:35,399 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 8), (11, 7)]
2025-04-11 19:44:35,399 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 1 1 0 0] with coords [(6, 12), (7, 11), (8, 10), (9, 9), (10, 8), (11, 7)] triggers candidate.
2025-04-11 19:44:35,399 [DEBUG] board coords: [(3, 15), (4, 14), (5, 13), (6, 12), (7, 11), (8, 10), (9, 9)]
2025-04-11 19:44:35,399 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:44:35,399 [DEBUG] check_window_intermediate_custom: empty_cells=[(3, 15), (4, 14)]
2025-04-11 19:44:35,399 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 1 1 1 1 1] with coords [(3, 15), (4, 14), (5, 13), (6, 12), (7, 11), (8, 10), (9, 9)] triggers candidate.
2025-04-11 19:44:35,400 [DEBUG] check_window_margin_custom: For L=7, window [0 1 1 1 1 1 0] with coords [(4, 14), (5, 13), (6, 12), (7, 11), (8, 10), (9, 9), (10, 8)] triggers candidate.
2025-04-11 19:44:35,400 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:44:35,400 [DEBUG] board coords: [(5, 13), (6, 12), (7, 11), (8, 10), (9, 9), (10, 8), (11, 7)]
2025-04-11 19:44:35,400 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:44:35,400 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 8), (11, 7)]
2025-04-11 19:44:35,400 [DEBUG] check_window_intermediate_custom: For L=7, window [1 1 1 1 1 0 0] with coords [(5, 13), (6, 12), (7, 11), (8, 10), (9, 9), (10, 8), (11, 7)] triggers candidate.
2025-04-11 19:44:35,400 [INFO] Final candidates: [(11, 7), (3, 15), (10, 8), (4, 14)]
2025-04-11 19:44:35,400 [INFO] Phase win: Collected 6unique candidate(s):[((11, 7), (4, 14)), ((3, 15), (4, 14)), ((11, 7), (3, 15)), ((11, 7), (10, 8)), ((10, 8), (4, 14)), ((3, 15), (10, 8))]
2025-04-11 19:44:35,408 [INFO] Final candidates: []
2025-04-11 19:44:35,408 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:35,408 [INFO] Phase 1 (immediate win): 6 candidate(s) found.
2025-04-11 19:44:35,408 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:35,499 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:35,499 [DEBUG] Tree_policy iteration 1: Expanding move ((6, 12), (np.int64(6), np.int64(13)))
2025-04-11 19:44:35,506 [DEBUG] board coords: [(3, 15), (4, 14), (5, 13), (6, 12), (7, 11), (8, 10)]
2025-04-11 19:44:35,506 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:44:35,506 [DEBUG] check_window_intermediate_custom: empty_cells=[(3, 15), (4, 14)]
2025-04-11 19:44:35,506 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 1 1 1 1] with coords [(3, 15), (4, 14), (5, 13), (6, 12), (7, 11), (8, 10)] triggers candidate.
2025-04-11 19:44:35,507 [DEBUG] board coords: [(6, 12), (7, 11), (8, 10), (9, 9), (10, 8), (11, 7)]
2025-04-11 19:44:35,507 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:44:35,507 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 8), (11, 7)]
2025-04-11 19:44:35,507 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 1 1 0 0] with coords [(6, 12), (7, 11), (8, 10), (9, 9), (10, 8), (11, 7)] triggers candidate.
2025-04-11 19:44:35,508 [DEBUG] board coords: [(3, 15), (4, 14), (5, 13), (6, 12), (7, 11), (8, 10), (9, 9)]
2025-04-11 19:44:35,508 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:44:35,508 [DEBUG] check_window_intermediate_custom: empty_cells=[(3, 15), (4, 14)]
2025-04-11 19:44:35,508 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 1 1 1 1 1] with coords [(3, 15), (4, 14), (5, 13), (6, 12), (7, 11), (8, 10), (9, 9)] triggers candidate.
2025-04-11 19:44:35,508 [DEBUG] check_window_margin_custom: For L=7, window [0 1 1 1 1 1 0] with coords [(4, 14), (5, 13), (6, 12), (7, 11), (8, 10), (9, 9), (10, 8)] triggers candidate.
2025-04-11 19:44:35,508 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:44:35,508 [DEBUG] board coords: [(5, 13), (6, 12), (7, 11), (8, 10), (9, 9), (10, 8), (11, 7)]
2025-04-11 19:44:35,508 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:44:35,508 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 8), (11, 7)]
2025-04-11 19:44:35,508 [DEBUG] check_window_intermediate_custom: For L=7, window [1 1 1 1 1 0 0] with coords [(5, 13), (6, 12), (7, 11), (8, 10), (9, 9), (10, 8), (11, 7)] triggers candidate.
2025-04-11 19:44:35,508 [INFO] Final candidates: [(11, 7), (3, 15), (10, 8), (4, 14)]
2025-04-11 19:44:35,508 [INFO] Phase win: Collected 6unique candidate(s):[((11, 7), (4, 14)), ((3, 15), (4, 14)), ((11, 7), (3, 15)), ((11, 7), (10, 8)), ((10, 8), (4, 14)), ((3, 15), (10, 8))]
2025-04-11 19:44:35,516 [INFO] Final candidates: []
2025-04-11 19:44:35,516 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:35,516 [INFO] Phase 1 (immediate win): 6 candidate(s) found.
2025-04-11 19:44:35,516 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:35,519 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:35,519 [DEBUG] Tree_policy iteration 1: Expanding move ((6, 12), (np.int64(8), np.int64(12)))
2025-04-11 19:44:35,525 [DEBUG] board coords: [(3, 15), (4, 14), (5, 13), (6, 12), (7, 11), (8, 10)]
2025-04-11 19:44:35,525 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:44:35,525 [DEBUG] check_window_intermediate_custom: empty_cells=[(3, 15), (4, 14)]
2025-04-11 19:44:35,526 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 1 1 1 1] with coords [(3, 15), (4, 14), (5, 13), (6, 12), (7, 11), (8, 10)] triggers candidate.
2025-04-11 19:44:35,526 [DEBUG] board coords: [(6, 12), (7, 11), (8, 10), (9, 9), (10, 8), (11, 7)]
2025-04-11 19:44:35,526 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:44:35,526 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 8), (11, 7)]
2025-04-11 19:44:35,526 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 1 1 0 0] with coords [(6, 12), (7, 11), (8, 10), (9, 9), (10, 8), (11, 7)] triggers candidate.
2025-04-11 19:44:35,527 [DEBUG] board coords: [(3, 15), (4, 14), (5, 13), (6, 12), (7, 11), (8, 10), (9, 9)]
2025-04-11 19:44:35,527 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:44:35,527 [DEBUG] check_window_intermediate_custom: empty_cells=[(3, 15), (4, 14)]
2025-04-11 19:44:35,527 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 1 1 1 1 1] with coords [(3, 15), (4, 14), (5, 13), (6, 12), (7, 11), (8, 10), (9, 9)] triggers candidate.
2025-04-11 19:44:35,527 [DEBUG] check_window_margin_custom: For L=7, window [0 1 1 1 1 1 0] with coords [(4, 14), (5, 13), (6, 12), (7, 11), (8, 10), (9, 9), (10, 8)] triggers candidate.
2025-04-11 19:44:35,527 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:44:35,527 [DEBUG] board coords: [(5, 13), (6, 12), (7, 11), (8, 10), (9, 9), (10, 8), (11, 7)]
2025-04-11 19:44:35,527 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:44:35,527 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 8), (11, 7)]
2025-04-11 19:44:35,527 [DEBUG] check_window_intermediate_custom: For L=7, window [1 1 1 1 1 0 0] with coords [(5, 13), (6, 12), (7, 11), (8, 10), (9, 9), (10, 8), (11, 7)] triggers candidate.
2025-04-11 19:44:35,527 [INFO] Final candidates: [(11, 7), (3, 15), (10, 8), (4, 14)]
2025-04-11 19:44:35,528 [INFO] Phase win: Collected 6unique candidate(s):[((11, 7), (4, 14)), ((3, 15), (4, 14)), ((11, 7), (3, 15)), ((11, 7), (10, 8)), ((10, 8), (4, 14)), ((3, 15), (10, 8))]
2025-04-11 19:44:35,535 [INFO] Final candidates: []
2025-04-11 19:44:35,535 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:35,535 [INFO] Phase 1 (immediate win): 6 candidate(s) found.
2025-04-11 19:44:35,535 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:35,600 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:35,600 [DEBUG] Tree_policy iteration 1: Expanding move ((6, 12), (np.int64(5), np.int64(12)))
2025-04-11 19:44:35,606 [DEBUG] board coords: [(3, 15), (4, 14), (5, 13), (6, 12), (7, 11), (8, 10)]
2025-04-11 19:44:35,606 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:44:35,607 [DEBUG] check_window_intermediate_custom: empty_cells=[(3, 15), (4, 14)]
2025-04-11 19:44:35,607 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 1 1 1 1] with coords [(3, 15), (4, 14), (5, 13), (6, 12), (7, 11), (8, 10)] triggers candidate.
2025-04-11 19:44:35,607 [DEBUG] board coords: [(6, 12), (7, 11), (8, 10), (9, 9), (10, 8), (11, 7)]
2025-04-11 19:44:35,607 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:44:35,607 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 8), (11, 7)]
2025-04-11 19:44:35,607 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 1 1 0 0] with coords [(6, 12), (7, 11), (8, 10), (9, 9), (10, 8), (11, 7)] triggers candidate.
2025-04-11 19:44:35,608 [DEBUG] board coords: [(3, 15), (4, 14), (5, 13), (6, 12), (7, 11), (8, 10), (9, 9)]
2025-04-11 19:44:35,608 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:44:35,608 [DEBUG] check_window_intermediate_custom: empty_cells=[(3, 15), (4, 14)]
2025-04-11 19:44:35,608 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 1 1 1 1 1] with coords [(3, 15), (4, 14), (5, 13), (6, 12), (7, 11), (8, 10), (9, 9)] triggers candidate.
2025-04-11 19:44:35,608 [DEBUG] check_window_margin_custom: For L=7, window [0 1 1 1 1 1 0] with coords [(4, 14), (5, 13), (6, 12), (7, 11), (8, 10), (9, 9), (10, 8)] triggers candidate.
2025-04-11 19:44:35,608 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:44:35,608 [DEBUG] board coords: [(5, 13), (6, 12), (7, 11), (8, 10), (9, 9), (10, 8), (11, 7)]
2025-04-11 19:44:35,608 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:44:35,608 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 8), (11, 7)]
2025-04-11 19:44:35,608 [DEBUG] check_window_intermediate_custom: For L=7, window [1 1 1 1 1 0 0] with coords [(5, 13), (6, 12), (7, 11), (8, 10), (9, 9), (10, 8), (11, 7)] triggers candidate.
2025-04-11 19:44:35,609 [INFO] Final candidates: [(11, 7), (3, 15), (10, 8), (4, 14)]
2025-04-11 19:44:35,609 [INFO] Phase win: Collected 6unique candidate(s):[((11, 7), (4, 14)), ((3, 15), (4, 14)), ((11, 7), (3, 15)), ((11, 7), (10, 8)), ((10, 8), (4, 14)), ((3, 15), (10, 8))]
2025-04-11 19:44:35,616 [INFO] Final candidates: []
2025-04-11 19:44:35,616 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:35,616 [INFO] Phase 1 (immediate win): 6 candidate(s) found.
2025-04-11 19:44:35,616 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:35,852 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:35,852 [DEBUG] Tree_policy iteration 1: Expanding move ((6, 12), (np.int64(6), np.int64(11)))
2025-04-11 19:44:35,859 [DEBUG] board coords: [(3, 15), (4, 14), (5, 13), (6, 12), (7, 11), (8, 10)]
2025-04-11 19:44:35,859 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:44:35,859 [DEBUG] check_window_intermediate_custom: empty_cells=[(3, 15), (4, 14)]
2025-04-11 19:44:35,859 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 1 1 1 1] with coords [(3, 15), (4, 14), (5, 13), (6, 12), (7, 11), (8, 10)] triggers candidate.
2025-04-11 19:44:35,859 [DEBUG] board coords: [(6, 12), (7, 11), (8, 10), (9, 9), (10, 8), (11, 7)]
2025-04-11 19:44:35,859 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:44:35,859 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 8), (11, 7)]
2025-04-11 19:44:35,859 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 1 1 0 0] with coords [(6, 12), (7, 11), (8, 10), (9, 9), (10, 8), (11, 7)] triggers candidate.
2025-04-11 19:44:35,860 [DEBUG] board coords: [(3, 15), (4, 14), (5, 13), (6, 12), (7, 11), (8, 10), (9, 9)]
2025-04-11 19:44:35,860 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:44:35,860 [DEBUG] check_window_intermediate_custom: empty_cells=[(3, 15), (4, 14)]
2025-04-11 19:44:35,860 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 1 1 1 1 1] with coords [(3, 15), (4, 14), (5, 13), (6, 12), (7, 11), (8, 10), (9, 9)] triggers candidate.
2025-04-11 19:44:35,860 [DEBUG] check_window_margin_custom: For L=7, window [0 1 1 1 1 1 0] with coords [(4, 14), (5, 13), (6, 12), (7, 11), (8, 10), (9, 9), (10, 8)] triggers candidate.
2025-04-11 19:44:35,860 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:44:35,861 [DEBUG] board coords: [(5, 13), (6, 12), (7, 11), (8, 10), (9, 9), (10, 8), (11, 7)]
2025-04-11 19:44:35,861 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:44:35,861 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 8), (11, 7)]
2025-04-11 19:44:35,861 [DEBUG] check_window_intermediate_custom: For L=7, window [1 1 1 1 1 0 0] with coords [(5, 13), (6, 12), (7, 11), (8, 10), (9, 9), (10, 8), (11, 7)] triggers candidate.
2025-04-11 19:44:35,861 [INFO] Final candidates: [(11, 7), (3, 15), (10, 8), (4, 14)]
2025-04-11 19:44:35,861 [INFO] Phase win: Collected 6unique candidate(s):[((11, 7), (4, 14)), ((3, 15), (4, 14)), ((11, 7), (3, 15)), ((11, 7), (10, 8)), ((10, 8), (4, 14)), ((3, 15), (10, 8))]
2025-04-11 19:44:35,869 [INFO] Final candidates: []
2025-04-11 19:44:35,869 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:35,869 [INFO] Phase 1 (immediate win): 6 candidate(s) found.
2025-04-11 19:44:35,869 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:35,918 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:44:35,918 [DEBUG] Tree_policy iteration 1: Expanding move ((6, 12), (np.int64(6), np.int64(10)))
2025-04-11 19:44:35,924 [DEBUG] board coords: [(3, 15), (4, 14), (5, 13), (6, 12), (7, 11), (8, 10)]
2025-04-11 19:44:35,924 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:44:35,925 [DEBUG] check_window_intermediate_custom: empty_cells=[(3, 15), (4, 14)]
2025-04-11 19:44:35,925 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 1 1 1 1] with coords [(3, 15), (4, 14), (5, 13), (6, 12), (7, 11), (8, 10)] triggers candidate.
2025-04-11 19:44:35,925 [DEBUG] board coords: [(6, 12), (7, 11), (8, 10), (9, 9), (10, 8), (11, 7)]
2025-04-11 19:44:35,925 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:44:35,925 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 8), (11, 7)]
2025-04-11 19:44:35,925 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 1 1 0 0] with coords [(6, 12), (7, 11), (8, 10), (9, 9), (10, 8), (11, 7)] triggers candidate.
2025-04-11 19:44:35,926 [DEBUG] board coords: [(3, 15), (4, 14), (5, 13), (6, 12), (7, 11), (8, 10), (9, 9)]
2025-04-11 19:44:35,926 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:44:35,926 [DEBUG] check_window_intermediate_custom: empty_cells=[(3, 15), (4, 14)]
2025-04-11 19:44:35,926 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 1 1 1 1 1] with coords [(3, 15), (4, 14), (5, 13), (6, 12), (7, 11), (8, 10), (9, 9)] triggers candidate.
2025-04-11 19:44:35,926 [DEBUG] check_window_margin_custom: For L=7, window [0 1 1 1 1 1 0] with coords [(4, 14), (5, 13), (6, 12), (7, 11), (8, 10), (9, 9), (10, 8)] triggers candidate.
2025-04-11 19:44:35,926 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:44:35,926 [DEBUG] board coords: [(5, 13), (6, 12), (7, 11), (8, 10), (9, 9), (10, 8), (11, 7)]
2025-04-11 19:44:35,926 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:44:35,926 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 8), (11, 7)]
2025-04-11 19:44:35,926 [DEBUG] check_window_intermediate_custom: For L=7, window [1 1 1 1 1 0 0] with coords [(5, 13), (6, 12), (7, 11), (8, 10), (9, 9), (10, 8), (11, 7)] triggers candidate.
2025-04-11 19:44:35,927 [INFO] Final candidates: [(11, 7), (3, 15), (10, 8), (4, 14)]
2025-04-11 19:44:35,927 [INFO] Phase win: Collected 6unique candidate(s):[((11, 7), (4, 14)), ((3, 15), (4, 14)), ((11, 7), (3, 15)), ((11, 7), (10, 8)), ((10, 8), (4, 14)), ((3, 15), (10, 8))]
2025-04-11 19:44:35,934 [INFO] Final candidates: []
2025-04-11 19:44:35,934 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:35,934 [INFO] Phase 1 (immediate win): 6 candidate(s) found.
2025-04-11 19:44:35,934 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:35,980 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:44:35,980 [DEBUG] Tree_policy iteration 1: Expanding move ((6, 12), (np.int64(4), np.int64(12)))
2025-04-11 19:44:35,987 [DEBUG] board coords: [(3, 15), (4, 14), (5, 13), (6, 12), (7, 11), (8, 10)]
2025-04-11 19:44:35,987 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:44:35,987 [DEBUG] check_window_intermediate_custom: empty_cells=[(3, 15), (4, 14)]
2025-04-11 19:44:35,987 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 1 1 1 1] with coords [(3, 15), (4, 14), (5, 13), (6, 12), (7, 11), (8, 10)] triggers candidate.
2025-04-11 19:44:35,987 [DEBUG] board coords: [(6, 12), (7, 11), (8, 10), (9, 9), (10, 8), (11, 7)]
2025-04-11 19:44:35,987 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:44:35,987 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 8), (11, 7)]
2025-04-11 19:44:35,987 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 1 1 0 0] with coords [(6, 12), (7, 11), (8, 10), (9, 9), (10, 8), (11, 7)] triggers candidate.
2025-04-11 19:44:35,988 [DEBUG] board coords: [(3, 15), (4, 14), (5, 13), (6, 12), (7, 11), (8, 10), (9, 9)]
2025-04-11 19:44:35,988 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:44:35,988 [DEBUG] check_window_intermediate_custom: empty_cells=[(3, 15), (4, 14)]
2025-04-11 19:44:35,988 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 1 1 1 1 1] with coords [(3, 15), (4, 14), (5, 13), (6, 12), (7, 11), (8, 10), (9, 9)] triggers candidate.
2025-04-11 19:44:35,988 [DEBUG] check_window_margin_custom: For L=7, window [0 1 1 1 1 1 0] with coords [(4, 14), (5, 13), (6, 12), (7, 11), (8, 10), (9, 9), (10, 8)] triggers candidate.
2025-04-11 19:44:35,988 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:44:35,988 [DEBUG] board coords: [(5, 13), (6, 12), (7, 11), (8, 10), (9, 9), (10, 8), (11, 7)]
2025-04-11 19:44:35,988 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:44:35,988 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 8), (11, 7)]
2025-04-11 19:44:35,988 [DEBUG] check_window_intermediate_custom: For L=7, window [1 1 1 1 1 0 0] with coords [(5, 13), (6, 12), (7, 11), (8, 10), (9, 9), (10, 8), (11, 7)] triggers candidate.
2025-04-11 19:44:35,989 [INFO] Final candidates: [(11, 7), (3, 15), (10, 8), (4, 14)]
2025-04-11 19:44:35,989 [INFO] Phase win: Collected 6unique candidate(s):[((11, 7), (4, 14)), ((3, 15), (4, 14)), ((11, 7), (3, 15)), ((11, 7), (10, 8)), ((10, 8), (4, 14)), ((3, 15), (10, 8))]
2025-04-11 19:44:35,997 [INFO] Final candidates: []
2025-04-11 19:44:35,997 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:44:35,997 [INFO] Phase 1 (immediate win): 6 candidate(s) found.
2025-04-11 19:44:35,997 [INFO] Default policy: Starting random playout.
2025-04-11 19:44:36,007 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:50:51,825 [INFO] Game terminated.
