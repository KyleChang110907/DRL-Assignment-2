2025-04-11 17:08:53,744 [INFO] Starting pre-MCTS candidate collection.
2025-04-11 17:08:53,754 [INFO] Final candidates: []
2025-04-11 17:08:53,754 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:08:53,764 [INFO] Final candidates: []
2025-04-11 17:08:53,764 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:08:53,764 [INFO] No candidate found in Phase 1 or 2; using full legal moves for MCTS.
2025-04-11 17:08:53,764 [INFO] MCTS: Starting search for 100 iterations.
2025-04-11 17:08:53,773 [INFO] Final candidates: []
2025-04-11 17:08:53,773 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:08:53,783 [INFO] Final candidates: []
2025-04-11 17:08:53,783 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:08:53,785 [DEBUG] Tree_policy iteration 1: Expanding move (11, 0)
2025-04-11 17:08:53,785 [DEBUG] MCTS iteration 0: reached a node with 0 visits.
2025-04-11 17:08:53,785 [INFO] Default policy: Starting random playout.
2025-04-11 17:08:53,858 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:08:53,868 [INFO] Final candidates: []
2025-04-11 17:08:53,868 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:08:53,878 [INFO] Final candidates: []
2025-04-11 17:08:53,878 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:08:53,878 [DEBUG] Tree_policy iteration 1: Expanding move (9, 18)
2025-04-11 17:08:53,878 [INFO] Default policy: Starting random playout.
2025-04-11 17:08:53,971 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:08:53,981 [INFO] Final candidates: []
2025-04-11 17:08:53,981 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:08:53,990 [INFO] Final candidates: []
2025-04-11 17:08:53,990 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:08:53,990 [DEBUG] Tree_policy iteration 1: Expanding move (12, 2)
2025-04-11 17:08:53,991 [INFO] Default policy: Starting random playout.
2025-04-11 17:08:54,038 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:08:54,052 [INFO] Final candidates: []
2025-04-11 17:08:54,052 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:08:54,061 [INFO] Final candidates: []
2025-04-11 17:08:54,061 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:08:54,061 [DEBUG] Tree_policy iteration 1: Expanding move (7, 14)
2025-04-11 17:08:54,062 [INFO] Default policy: Starting random playout.
2025-04-11 17:08:54,140 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:08:54,150 [INFO] Final candidates: []
2025-04-11 17:08:54,150 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:08:54,160 [INFO] Final candidates: []
2025-04-11 17:08:54,160 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:08:54,160 [DEBUG] Tree_policy iteration 1: Expanding move (4, 6)
2025-04-11 17:08:54,160 [INFO] Default policy: Starting random playout.
2025-04-11 17:08:54,214 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:08:54,224 [INFO] Final candidates: []
2025-04-11 17:08:54,224 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:08:54,234 [INFO] Final candidates: []
2025-04-11 17:08:54,234 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:08:54,234 [DEBUG] Tree_policy iteration 1: Expanding move (7, 7)
2025-04-11 17:08:54,234 [INFO] Default policy: Starting random playout.
2025-04-11 17:08:54,259 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:08:54,269 [INFO] Final candidates: []
2025-04-11 17:08:54,269 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:08:54,279 [INFO] Final candidates: []
2025-04-11 17:08:54,279 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:08:54,279 [DEBUG] Tree_policy iteration 1: Expanding move (17, 5)
2025-04-11 17:08:54,279 [INFO] Default policy: Starting random playout.
2025-04-11 17:08:54,325 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:08:54,335 [INFO] Final candidates: []
2025-04-11 17:08:54,335 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:08:54,354 [INFO] Final candidates: []
2025-04-11 17:08:54,355 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:08:54,355 [DEBUG] Tree_policy iteration 1: Expanding move (18, 14)
2025-04-11 17:08:54,355 [INFO] Default policy: Starting random playout.
2025-04-11 17:08:54,361 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:08:54,371 [INFO] Final candidates: []
2025-04-11 17:08:54,371 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:08:54,381 [INFO] Final candidates: []
2025-04-11 17:08:54,381 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:08:54,381 [DEBUG] Tree_policy iteration 1: Expanding move (8, 16)
2025-04-11 17:08:54,381 [INFO] Default policy: Starting random playout.
2025-04-11 17:08:54,572 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:08:54,581 [INFO] Final candidates: []
2025-04-11 17:08:54,582 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:08:54,596 [INFO] Final candidates: []
2025-04-11 17:08:54,596 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:08:54,596 [DEBUG] Tree_policy iteration 1: Expanding move (11, 6)
2025-04-11 17:08:54,596 [INFO] Default policy: Starting random playout.
2025-04-11 17:08:54,693 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:08:54,703 [INFO] Final candidates: []
2025-04-11 17:08:54,703 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:08:54,712 [INFO] Final candidates: []
2025-04-11 17:08:54,712 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:08:54,712 [DEBUG] Tree_policy iteration 1: Expanding move (5, 0)
2025-04-11 17:08:54,712 [INFO] Default policy: Starting random playout.
2025-04-11 17:08:54,751 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:08:54,764 [INFO] Final candidates: []
2025-04-11 17:08:54,764 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:08:54,773 [INFO] Final candidates: []
2025-04-11 17:08:54,773 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:08:54,774 [DEBUG] Tree_policy iteration 1: Expanding move (14, 18)
2025-04-11 17:08:54,774 [INFO] Default policy: Starting random playout.
2025-04-11 17:08:54,778 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:08:54,787 [INFO] Final candidates: []
2025-04-11 17:08:54,787 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:08:54,797 [INFO] Final candidates: []
2025-04-11 17:08:54,797 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:08:54,797 [DEBUG] Tree_policy iteration 1: Expanding move (15, 5)
2025-04-11 17:08:54,797 [INFO] Default policy: Starting random playout.
2025-04-11 17:08:54,929 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:08:54,939 [INFO] Final candidates: []
2025-04-11 17:08:54,939 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:08:54,948 [INFO] Final candidates: []
2025-04-11 17:08:54,948 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:08:54,948 [DEBUG] Tree_policy iteration 1: Expanding move (8, 17)
2025-04-11 17:08:54,948 [INFO] Default policy: Starting random playout.
2025-04-11 17:08:55,078 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:08:55,087 [INFO] Final candidates: []
2025-04-11 17:08:55,087 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:08:55,097 [INFO] Final candidates: []
2025-04-11 17:08:55,097 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:08:55,097 [DEBUG] Tree_policy iteration 1: Expanding move (11, 1)
2025-04-11 17:08:55,097 [INFO] Default policy: Starting random playout.
2025-04-11 17:08:55,148 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:08:55,158 [INFO] Final candidates: []
2025-04-11 17:08:55,158 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:08:55,168 [INFO] Final candidates: []
2025-04-11 17:08:55,168 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:08:55,168 [DEBUG] Tree_policy iteration 1: Expanding move (10, 6)
2025-04-11 17:08:55,168 [INFO] Default policy: Starting random playout.
2025-04-11 17:08:55,191 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:08:55,201 [INFO] Final candidates: []
2025-04-11 17:08:55,201 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:08:55,211 [INFO] Final candidates: []
2025-04-11 17:08:55,211 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:08:55,211 [DEBUG] Tree_policy iteration 1: Expanding move (4, 4)
2025-04-11 17:08:55,211 [INFO] Default policy: Starting random playout.
2025-04-11 17:08:55,250 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:08:55,260 [INFO] Final candidates: []
2025-04-11 17:08:55,260 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:08:55,270 [INFO] Final candidates: []
2025-04-11 17:08:55,270 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:08:55,270 [DEBUG] Tree_policy iteration 1: Expanding move (12, 10)
2025-04-11 17:08:55,270 [INFO] Default policy: Starting random playout.
2025-04-11 17:08:55,410 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:08:55,419 [INFO] Final candidates: []
2025-04-11 17:08:55,419 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:08:55,429 [INFO] Final candidates: []
2025-04-11 17:08:55,429 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:08:55,429 [DEBUG] Tree_policy iteration 1: Expanding move (9, 4)
2025-04-11 17:08:55,429 [INFO] Default policy: Starting random playout.
2025-04-11 17:08:55,485 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:08:55,495 [INFO] Final candidates: []
2025-04-11 17:08:55,495 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:08:55,504 [INFO] Final candidates: []
2025-04-11 17:08:55,504 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:08:55,504 [DEBUG] Tree_policy iteration 1: Expanding move (6, 0)
2025-04-11 17:08:55,504 [INFO] Default policy: Starting random playout.
2025-04-11 17:08:55,559 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:08:55,569 [INFO] Final candidates: []
2025-04-11 17:08:55,569 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:08:55,579 [INFO] Final candidates: []
2025-04-11 17:08:55,579 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:08:55,579 [DEBUG] Tree_policy iteration 1: Expanding move (6, 2)
2025-04-11 17:08:55,579 [INFO] Default policy: Starting random playout.
2025-04-11 17:08:55,591 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:08:55,601 [INFO] Final candidates: []
2025-04-11 17:08:55,601 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:08:55,611 [INFO] Final candidates: []
2025-04-11 17:08:55,611 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:08:55,611 [DEBUG] Tree_policy iteration 1: Expanding move (7, 17)
2025-04-11 17:08:55,612 [INFO] Default policy: Starting random playout.
2025-04-11 17:08:55,723 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:08:55,733 [INFO] Final candidates: []
2025-04-11 17:08:55,733 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:08:55,742 [INFO] Final candidates: []
2025-04-11 17:08:55,742 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:08:55,743 [DEBUG] Tree_policy iteration 1: Expanding move (12, 7)
2025-04-11 17:08:55,743 [INFO] Default policy: Starting random playout.
2025-04-11 17:08:55,986 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:08:55,995 [INFO] Final candidates: []
2025-04-11 17:08:55,995 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:08:56,005 [INFO] Final candidates: []
2025-04-11 17:08:56,005 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:08:56,005 [DEBUG] Tree_policy iteration 1: Expanding move (16, 4)
2025-04-11 17:08:56,006 [INFO] Default policy: Starting random playout.
2025-04-11 17:08:56,185 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:08:56,195 [INFO] Final candidates: []
2025-04-11 17:08:56,195 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:08:56,206 [INFO] Final candidates: []
2025-04-11 17:08:56,206 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:08:56,206 [DEBUG] Tree_policy iteration 1: Expanding move (4, 14)
2025-04-11 17:08:56,206 [INFO] Default policy: Starting random playout.
2025-04-11 17:08:56,279 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:08:56,289 [INFO] Final candidates: []
2025-04-11 17:08:56,289 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:08:56,298 [INFO] Final candidates: []
2025-04-11 17:08:56,298 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:08:56,298 [DEBUG] Tree_policy iteration 1: Expanding move (3, 17)
2025-04-11 17:08:56,299 [INFO] Default policy: Starting random playout.
2025-04-11 17:08:56,419 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:08:56,429 [INFO] Final candidates: []
2025-04-11 17:08:56,429 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:08:56,438 [INFO] Final candidates: []
2025-04-11 17:08:56,438 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:08:56,438 [DEBUG] Tree_policy iteration 1: Expanding move (7, 13)
2025-04-11 17:08:56,438 [INFO] Default policy: Starting random playout.
2025-04-11 17:08:56,568 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:08:56,577 [INFO] Final candidates: []
2025-04-11 17:08:56,577 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:08:56,587 [INFO] Final candidates: []
2025-04-11 17:08:56,587 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:08:56,587 [DEBUG] Tree_policy iteration 1: Expanding move (1, 5)
2025-04-11 17:08:56,588 [INFO] Default policy: Starting random playout.
2025-04-11 17:08:56,645 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:08:56,657 [INFO] Final candidates: []
2025-04-11 17:08:56,657 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:08:56,667 [INFO] Final candidates: []
2025-04-11 17:08:56,667 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:08:56,667 [DEBUG] Tree_policy iteration 1: Expanding move (12, 14)
2025-04-11 17:08:56,667 [INFO] Default policy: Starting random playout.
2025-04-11 17:08:56,700 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:08:56,710 [INFO] Final candidates: []
2025-04-11 17:08:56,710 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:08:56,719 [INFO] Final candidates: []
2025-04-11 17:08:56,719 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:08:56,720 [DEBUG] Tree_policy iteration 1: Expanding move (4, 3)
2025-04-11 17:08:56,720 [INFO] Default policy: Starting random playout.
2025-04-11 17:08:56,748 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:08:56,758 [INFO] Final candidates: []
2025-04-11 17:08:56,758 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:08:56,768 [INFO] Final candidates: []
2025-04-11 17:08:56,768 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:08:56,768 [DEBUG] Tree_policy iteration 1: Expanding move (14, 0)
2025-04-11 17:08:56,768 [INFO] Default policy: Starting random playout.
2025-04-11 17:08:56,784 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:08:56,794 [INFO] Final candidates: []
2025-04-11 17:08:56,794 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:08:56,803 [INFO] Final candidates: []
2025-04-11 17:08:56,804 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:08:56,804 [DEBUG] Tree_policy iteration 1: Expanding move (4, 17)
2025-04-11 17:08:56,804 [INFO] Default policy: Starting random playout.
2025-04-11 17:08:56,908 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:08:56,925 [INFO] Final candidates: []
2025-04-11 17:08:56,925 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:08:56,949 [INFO] Final candidates: []
2025-04-11 17:08:56,949 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:08:56,949 [DEBUG] Tree_policy iteration 1: Expanding move (7, 16)
2025-04-11 17:08:56,950 [INFO] Default policy: Starting random playout.
2025-04-11 17:08:57,001 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:08:57,011 [INFO] Final candidates: []
2025-04-11 17:08:57,011 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:08:57,021 [INFO] Final candidates: []
2025-04-11 17:08:57,021 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:08:57,021 [DEBUG] Tree_policy iteration 1: Expanding move (10, 10)
2025-04-11 17:08:57,021 [INFO] Default policy: Starting random playout.
2025-04-11 17:08:57,067 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:08:57,077 [INFO] Final candidates: []
2025-04-11 17:08:57,077 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:08:57,086 [INFO] Final candidates: []
2025-04-11 17:08:57,086 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:08:57,086 [DEBUG] Tree_policy iteration 1: Expanding move (2, 0)
2025-04-11 17:08:57,086 [INFO] Default policy: Starting random playout.
2025-04-11 17:08:57,200 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:08:57,210 [INFO] Final candidates: []
2025-04-11 17:08:57,210 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:08:57,219 [INFO] Final candidates: []
2025-04-11 17:08:57,219 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:08:57,219 [DEBUG] Tree_policy iteration 1: Expanding move (2, 16)
2025-04-11 17:08:57,220 [INFO] Default policy: Starting random playout.
2025-04-11 17:08:57,270 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:08:57,280 [INFO] Final candidates: []
2025-04-11 17:08:57,280 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:08:57,289 [INFO] Final candidates: []
2025-04-11 17:08:57,289 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:08:57,289 [DEBUG] Tree_policy iteration 1: Expanding move (0, 8)
2025-04-11 17:08:57,290 [INFO] Default policy: Starting random playout.
2025-04-11 17:08:57,308 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:08:57,320 [INFO] Final candidates: []
2025-04-11 17:08:57,320 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:08:57,330 [INFO] Final candidates: []
2025-04-11 17:08:57,330 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:08:57,330 [DEBUG] Tree_policy iteration 1: Expanding move (3, 5)
2025-04-11 17:08:57,330 [INFO] Default policy: Starting random playout.
2025-04-11 17:08:57,341 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:08:57,350 [INFO] Final candidates: []
2025-04-11 17:08:57,350 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:08:57,360 [INFO] Final candidates: []
2025-04-11 17:08:57,360 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:08:57,360 [DEBUG] Tree_policy iteration 1: Expanding move (12, 6)
2025-04-11 17:08:57,360 [INFO] Default policy: Starting random playout.
2025-04-11 17:08:57,456 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:08:57,465 [INFO] Final candidates: []
2025-04-11 17:08:57,465 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:08:57,475 [INFO] Final candidates: []
2025-04-11 17:08:57,475 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:08:57,475 [DEBUG] Tree_policy iteration 1: Expanding move (0, 17)
2025-04-11 17:08:57,475 [INFO] Default policy: Starting random playout.
2025-04-11 17:08:57,593 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:08:57,603 [INFO] Final candidates: []
2025-04-11 17:08:57,603 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:08:57,612 [INFO] Final candidates: []
2025-04-11 17:08:57,612 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:08:57,612 [DEBUG] Tree_policy iteration 1: Expanding move (9, 6)
2025-04-11 17:08:57,612 [INFO] Default policy: Starting random playout.
2025-04-11 17:08:57,725 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:08:57,735 [INFO] Final candidates: []
2025-04-11 17:08:57,735 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:08:57,746 [INFO] Final candidates: []
2025-04-11 17:08:57,746 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:08:57,747 [DEBUG] Tree_policy iteration 1: Expanding move (4, 13)
2025-04-11 17:08:57,747 [INFO] Default policy: Starting random playout.
2025-04-11 17:08:57,809 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:08:57,834 [INFO] Final candidates: []
2025-04-11 17:08:57,834 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:08:57,844 [INFO] Final candidates: []
2025-04-11 17:08:57,845 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:08:57,845 [DEBUG] Tree_policy iteration 1: Expanding move (14, 11)
2025-04-11 17:08:57,845 [INFO] Default policy: Starting random playout.
2025-04-11 17:08:57,917 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:08:57,926 [INFO] Final candidates: []
2025-04-11 17:08:57,926 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:08:57,936 [INFO] Final candidates: []
2025-04-11 17:08:57,936 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:08:57,936 [DEBUG] Tree_policy iteration 1: Expanding move (3, 0)
2025-04-11 17:08:57,936 [INFO] Default policy: Starting random playout.
2025-04-11 17:08:57,990 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:08:58,000 [INFO] Final candidates: []
2025-04-11 17:08:58,000 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:08:58,009 [INFO] Final candidates: []
2025-04-11 17:08:58,009 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:08:58,009 [DEBUG] Tree_policy iteration 1: Expanding move (2, 13)
2025-04-11 17:08:58,009 [INFO] Default policy: Starting random playout.
2025-04-11 17:08:58,094 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:08:58,104 [INFO] Final candidates: []
2025-04-11 17:08:58,104 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:08:58,113 [INFO] Final candidates: []
2025-04-11 17:08:58,114 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:08:58,114 [DEBUG] Tree_policy iteration 1: Expanding move (5, 18)
2025-04-11 17:08:58,114 [INFO] Default policy: Starting random playout.
2025-04-11 17:08:58,325 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:08:58,335 [INFO] Final candidates: []
2025-04-11 17:08:58,335 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:08:58,345 [INFO] Final candidates: []
2025-04-11 17:08:58,345 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:08:58,345 [DEBUG] Tree_policy iteration 1: Expanding move (5, 15)
2025-04-11 17:08:58,345 [INFO] Default policy: Starting random playout.
2025-04-11 17:08:58,401 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:08:58,411 [INFO] Final candidates: []
2025-04-11 17:08:58,411 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:08:58,420 [INFO] Final candidates: []
2025-04-11 17:08:58,420 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:08:58,420 [DEBUG] Tree_policy iteration 1: Expanding move (2, 1)
2025-04-11 17:08:58,420 [INFO] Default policy: Starting random playout.
2025-04-11 17:08:58,455 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:08:58,465 [INFO] Final candidates: []
2025-04-11 17:08:58,465 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:08:58,474 [INFO] Final candidates: []
2025-04-11 17:08:58,474 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:08:58,474 [DEBUG] Tree_policy iteration 1: Expanding move (6, 13)
2025-04-11 17:08:58,475 [INFO] Default policy: Starting random playout.
2025-04-11 17:08:58,608 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:08:58,618 [INFO] Final candidates: []
2025-04-11 17:08:58,618 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:08:58,634 [INFO] Final candidates: []
2025-04-11 17:08:58,634 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:08:58,635 [DEBUG] Tree_policy iteration 1: Expanding move (6, 16)
2025-04-11 17:08:58,635 [INFO] Default policy: Starting random playout.
2025-04-11 17:08:58,708 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:08:58,719 [INFO] Final candidates: []
2025-04-11 17:08:58,719 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:08:58,729 [INFO] Final candidates: []
2025-04-11 17:08:58,729 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:08:58,729 [DEBUG] Tree_policy iteration 1: Expanding move (13, 0)
2025-04-11 17:08:58,729 [DEBUG] MCTS iteration 50: reached a node with 0 visits.
2025-04-11 17:08:58,729 [INFO] Default policy: Starting random playout.
2025-04-11 17:08:58,791 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:08:58,801 [INFO] Final candidates: []
2025-04-11 17:08:58,801 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:08:58,811 [INFO] Final candidates: []
2025-04-11 17:08:58,811 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:08:58,811 [DEBUG] Tree_policy iteration 1: Expanding move (15, 13)
2025-04-11 17:08:58,811 [INFO] Default policy: Starting random playout.
2025-04-11 17:08:59,011 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:08:59,021 [INFO] Final candidates: []
2025-04-11 17:08:59,021 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:08:59,030 [INFO] Final candidates: []
2025-04-11 17:08:59,030 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:08:59,030 [DEBUG] Tree_policy iteration 1: Expanding move (18, 10)
2025-04-11 17:08:59,030 [INFO] Default policy: Starting random playout.
2025-04-11 17:08:59,092 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:08:59,103 [INFO] Final candidates: []
2025-04-11 17:08:59,103 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:08:59,126 [INFO] Final candidates: []
2025-04-11 17:08:59,126 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:08:59,126 [DEBUG] Tree_policy iteration 1: Expanding move (5, 11)
2025-04-11 17:08:59,126 [INFO] Default policy: Starting random playout.
2025-04-11 17:08:59,219 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:08:59,229 [INFO] Final candidates: []
2025-04-11 17:08:59,229 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:08:59,248 [INFO] Final candidates: []
2025-04-11 17:08:59,248 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:08:59,248 [DEBUG] Tree_policy iteration 1: Expanding move (1, 7)
2025-04-11 17:08:59,248 [INFO] Default policy: Starting random playout.
2025-04-11 17:08:59,413 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:08:59,423 [INFO] Final candidates: []
2025-04-11 17:08:59,423 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:08:59,433 [INFO] Final candidates: []
2025-04-11 17:08:59,433 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:08:59,433 [DEBUG] Tree_policy iteration 1: Expanding move (4, 15)
2025-04-11 17:08:59,433 [INFO] Default policy: Starting random playout.
2025-04-11 17:08:59,549 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:08:59,559 [INFO] Final candidates: []
2025-04-11 17:08:59,559 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:08:59,568 [INFO] Final candidates: []
2025-04-11 17:08:59,568 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:08:59,568 [DEBUG] Tree_policy iteration 1: Expanding move (13, 18)
2025-04-11 17:08:59,569 [INFO] Default policy: Starting random playout.
2025-04-11 17:08:59,760 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:08:59,771 [INFO] Final candidates: []
2025-04-11 17:08:59,771 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:08:59,780 [INFO] Final candidates: []
2025-04-11 17:08:59,780 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:08:59,780 [DEBUG] Tree_policy iteration 1: Expanding move (0, 4)
2025-04-11 17:08:59,781 [INFO] Default policy: Starting random playout.
2025-04-11 17:08:59,815 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:08:59,827 [INFO] Final candidates: []
2025-04-11 17:08:59,827 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:08:59,837 [INFO] Final candidates: []
2025-04-11 17:08:59,837 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:08:59,837 [DEBUG] Tree_policy iteration 1: Expanding move (2, 6)
2025-04-11 17:08:59,837 [INFO] Default policy: Starting random playout.
2025-04-11 17:08:59,901 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:08:59,911 [INFO] Final candidates: []
2025-04-11 17:08:59,911 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:08:59,921 [INFO] Final candidates: []
2025-04-11 17:08:59,921 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:08:59,921 [DEBUG] Tree_policy iteration 1: Expanding move (16, 3)
2025-04-11 17:08:59,921 [INFO] Default policy: Starting random playout.
2025-04-11 17:08:59,959 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:08:59,969 [INFO] Final candidates: []
2025-04-11 17:08:59,969 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:08:59,978 [INFO] Final candidates: []
2025-04-11 17:08:59,979 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:08:59,979 [DEBUG] Tree_policy iteration 1: Expanding move (12, 1)
2025-04-11 17:08:59,979 [INFO] Default policy: Starting random playout.
2025-04-11 17:08:59,985 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:00,000 [INFO] Final candidates: []
2025-04-11 17:09:00,000 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:00,010 [INFO] Final candidates: []
2025-04-11 17:09:00,011 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:00,011 [DEBUG] Tree_policy iteration 1: Expanding move (1, 6)
2025-04-11 17:09:00,011 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:00,089 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:00,099 [INFO] Final candidates: []
2025-04-11 17:09:00,099 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:00,108 [INFO] Final candidates: []
2025-04-11 17:09:00,109 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:00,109 [DEBUG] Tree_policy iteration 1: Expanding move (3, 11)
2025-04-11 17:09:00,109 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:00,203 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:00,213 [INFO] Final candidates: []
2025-04-11 17:09:00,213 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:00,222 [INFO] Final candidates: []
2025-04-11 17:09:00,222 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:00,222 [DEBUG] Tree_policy iteration 1: Expanding move (12, 17)
2025-04-11 17:09:00,222 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:00,361 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:00,371 [INFO] Final candidates: []
2025-04-11 17:09:00,371 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:00,381 [INFO] Final candidates: []
2025-04-11 17:09:00,381 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:00,381 [DEBUG] Tree_policy iteration 1: Expanding move (16, 10)
2025-04-11 17:09:00,381 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:00,431 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:00,441 [INFO] Final candidates: []
2025-04-11 17:09:00,441 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:00,450 [INFO] Final candidates: []
2025-04-11 17:09:00,450 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:00,450 [DEBUG] Tree_policy iteration 1: Expanding move (14, 4)
2025-04-11 17:09:00,450 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:00,458 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:00,474 [INFO] Final candidates: []
2025-04-11 17:09:00,474 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:00,486 [INFO] Final candidates: []
2025-04-11 17:09:00,486 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:00,486 [DEBUG] Tree_policy iteration 1: Expanding move (15, 4)
2025-04-11 17:09:00,486 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:00,545 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:00,554 [INFO] Final candidates: []
2025-04-11 17:09:00,555 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:00,564 [INFO] Final candidates: []
2025-04-11 17:09:00,565 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:00,565 [DEBUG] Tree_policy iteration 1: Expanding move (14, 12)
2025-04-11 17:09:00,565 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:00,607 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:00,616 [INFO] Final candidates: []
2025-04-11 17:09:00,617 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:00,626 [INFO] Final candidates: []
2025-04-11 17:09:00,626 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:00,626 [DEBUG] Tree_policy iteration 1: Expanding move (16, 0)
2025-04-11 17:09:00,626 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:00,687 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:00,696 [INFO] Final candidates: []
2025-04-11 17:09:00,696 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:00,706 [INFO] Final candidates: []
2025-04-11 17:09:00,706 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:00,706 [DEBUG] Tree_policy iteration 1: Expanding move (0, 2)
2025-04-11 17:09:00,706 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:00,787 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:00,798 [INFO] Final candidates: []
2025-04-11 17:09:00,798 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:00,808 [INFO] Final candidates: []
2025-04-11 17:09:00,808 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:00,808 [DEBUG] Tree_policy iteration 1: Expanding move (5, 2)
2025-04-11 17:09:00,809 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:00,821 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:00,830 [INFO] Final candidates: []
2025-04-11 17:09:00,830 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:00,840 [INFO] Final candidates: []
2025-04-11 17:09:00,840 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:00,840 [DEBUG] Tree_policy iteration 1: Expanding move (10, 15)
2025-04-11 17:09:00,840 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:00,874 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:00,884 [INFO] Final candidates: []
2025-04-11 17:09:00,884 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:00,897 [INFO] Final candidates: []
2025-04-11 17:09:00,897 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:00,897 [DEBUG] Tree_policy iteration 1: Expanding move (1, 3)
2025-04-11 17:09:00,897 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:00,948 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:00,957 [INFO] Final candidates: []
2025-04-11 17:09:00,957 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:00,967 [INFO] Final candidates: []
2025-04-11 17:09:00,967 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:00,967 [DEBUG] Tree_policy iteration 1: Expanding move (1, 17)
2025-04-11 17:09:00,967 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:00,974 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:00,987 [INFO] Final candidates: []
2025-04-11 17:09:00,988 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:00,997 [INFO] Final candidates: []
2025-04-11 17:09:00,997 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:00,997 [DEBUG] Tree_policy iteration 1: Expanding move (9, 7)
2025-04-11 17:09:00,997 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:01,234 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:01,243 [INFO] Final candidates: []
2025-04-11 17:09:01,243 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:01,253 [INFO] Final candidates: []
2025-04-11 17:09:01,253 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:01,253 [DEBUG] Tree_policy iteration 1: Expanding move (2, 4)
2025-04-11 17:09:01,253 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:01,329 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:01,344 [INFO] Final candidates: []
2025-04-11 17:09:01,344 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:01,354 [INFO] Final candidates: []
2025-04-11 17:09:01,354 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:01,354 [DEBUG] Tree_policy iteration 1: Expanding move (7, 2)
2025-04-11 17:09:01,354 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:01,422 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:01,432 [INFO] Final candidates: []
2025-04-11 17:09:01,432 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:01,442 [INFO] Final candidates: []
2025-04-11 17:09:01,442 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:01,442 [DEBUG] Tree_policy iteration 1: Expanding move (18, 9)
2025-04-11 17:09:01,442 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:01,527 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:01,537 [INFO] Final candidates: []
2025-04-11 17:09:01,537 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:01,547 [INFO] Final candidates: []
2025-04-11 17:09:01,547 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:01,547 [DEBUG] Tree_policy iteration 1: Expanding move (14, 1)
2025-04-11 17:09:01,547 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:01,703 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:01,713 [INFO] Final candidates: []
2025-04-11 17:09:01,713 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:01,722 [INFO] Final candidates: []
2025-04-11 17:09:01,722 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:01,722 [DEBUG] Tree_policy iteration 1: Expanding move (2, 14)
2025-04-11 17:09:01,722 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:01,728 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:01,737 [INFO] Final candidates: []
2025-04-11 17:09:01,737 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:01,747 [INFO] Final candidates: []
2025-04-11 17:09:01,747 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:01,747 [DEBUG] Tree_policy iteration 1: Expanding move (13, 4)
2025-04-11 17:09:01,747 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:01,796 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:01,806 [INFO] Final candidates: []
2025-04-11 17:09:01,806 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:01,816 [INFO] Final candidates: []
2025-04-11 17:09:01,816 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:01,816 [DEBUG] Tree_policy iteration 1: Expanding move (6, 11)
2025-04-11 17:09:01,816 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:01,871 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:01,883 [INFO] Final candidates: []
2025-04-11 17:09:01,883 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:01,894 [INFO] Final candidates: []
2025-04-11 17:09:01,894 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:01,894 [DEBUG] Tree_policy iteration 1: Expanding move (9, 14)
2025-04-11 17:09:01,894 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:02,000 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:02,022 [INFO] Final candidates: []
2025-04-11 17:09:02,022 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:02,031 [INFO] Final candidates: []
2025-04-11 17:09:02,031 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:02,031 [DEBUG] Tree_policy iteration 1: Expanding move (16, 16)
2025-04-11 17:09:02,032 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:02,084 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:02,093 [INFO] Final candidates: []
2025-04-11 17:09:02,093 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:02,103 [INFO] Final candidates: []
2025-04-11 17:09:02,103 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:02,103 [DEBUG] Tree_policy iteration 1: Expanding move (9, 12)
2025-04-11 17:09:02,103 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:02,152 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:02,162 [INFO] Final candidates: []
2025-04-11 17:09:02,162 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:02,171 [INFO] Final candidates: []
2025-04-11 17:09:02,171 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:02,171 [DEBUG] Tree_policy iteration 1: Expanding move (5, 7)
2025-04-11 17:09:02,172 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:02,232 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:02,242 [INFO] Final candidates: []
2025-04-11 17:09:02,242 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:02,252 [INFO] Final candidates: []
2025-04-11 17:09:02,252 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:02,252 [DEBUG] Tree_policy iteration 1: Expanding move (2, 7)
2025-04-11 17:09:02,253 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:02,302 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:02,312 [INFO] Final candidates: []
2025-04-11 17:09:02,312 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:02,321 [INFO] Final candidates: []
2025-04-11 17:09:02,321 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:02,321 [DEBUG] Tree_policy iteration 1: Expanding move (5, 5)
2025-04-11 17:09:02,321 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:02,386 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:02,396 [INFO] Final candidates: []
2025-04-11 17:09:02,396 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:02,406 [INFO] Final candidates: []
2025-04-11 17:09:02,406 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:02,406 [DEBUG] Tree_policy iteration 1: Expanding move (11, 8)
2025-04-11 17:09:02,406 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:02,627 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:02,637 [INFO] Final candidates: []
2025-04-11 17:09:02,637 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:02,647 [INFO] Final candidates: []
2025-04-11 17:09:02,647 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:02,647 [DEBUG] Tree_policy iteration 1: Expanding move (1, 8)
2025-04-11 17:09:02,647 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:02,669 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:02,679 [INFO] Final candidates: []
2025-04-11 17:09:02,679 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:02,688 [INFO] Final candidates: []
2025-04-11 17:09:02,688 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:02,688 [DEBUG] Tree_policy iteration 1: Expanding move (0, 14)
2025-04-11 17:09:02,689 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:02,867 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:02,878 [INFO] Final candidates: []
2025-04-11 17:09:02,878 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:02,903 [INFO] Final candidates: []
2025-04-11 17:09:02,903 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:02,903 [DEBUG] Tree_policy iteration 1: Expanding move (1, 14)
2025-04-11 17:09:02,903 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:02,975 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:02,984 [INFO] Final candidates: []
2025-04-11 17:09:02,984 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:02,994 [INFO] Final candidates: []
2025-04-11 17:09:02,994 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:02,994 [DEBUG] Tree_policy iteration 1: Expanding move (13, 6)
2025-04-11 17:09:02,994 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:03,240 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:03,250 [INFO] Final candidates: []
2025-04-11 17:09:03,250 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:03,259 [INFO] Final candidates: []
2025-04-11 17:09:03,259 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:03,259 [DEBUG] Tree_policy iteration 1: Expanding move (12, 15)
2025-04-11 17:09:03,259 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:03,303 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:03,313 [INFO] Final candidates: []
2025-04-11 17:09:03,313 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:03,323 [INFO] Final candidates: []
2025-04-11 17:09:03,323 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:03,323 [DEBUG] Tree_policy iteration 1: Expanding move (7, 10)
2025-04-11 17:09:03,323 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:03,674 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:03,685 [INFO] Final candidates: []
2025-04-11 17:09:03,685 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:03,695 [INFO] Final candidates: []
2025-04-11 17:09:03,696 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:03,696 [DEBUG] Tree_policy iteration 1: Expanding move (7, 9)
2025-04-11 17:09:03,696 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:03,893 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:03,902 [INFO] Final candidates: []
2025-04-11 17:09:03,902 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:03,912 [INFO] Final candidates: []
2025-04-11 17:09:03,912 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:03,912 [DEBUG] Tree_policy iteration 1: Expanding move (16, 18)
2025-04-11 17:09:03,912 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:03,962 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:03,972 [INFO] Final candidates: []
2025-04-11 17:09:03,972 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:03,982 [INFO] Final candidates: []
2025-04-11 17:09:03,982 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:03,982 [DEBUG] Tree_policy iteration 1: Expanding move (17, 2)
2025-04-11 17:09:03,983 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:04,096 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:04,105 [INFO] Final candidates: []
2025-04-11 17:09:04,105 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:04,116 [INFO] Final candidates: []
2025-04-11 17:09:04,116 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:04,116 [DEBUG] Tree_policy iteration 1: Expanding move (14, 6)
2025-04-11 17:09:04,116 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:04,194 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:04,204 [INFO] Final candidates: []
2025-04-11 17:09:04,204 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:04,213 [INFO] Final candidates: []
2025-04-11 17:09:04,213 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:04,213 [DEBUG] Tree_policy iteration 1: Expanding move (9, 15)
2025-04-11 17:09:04,214 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:04,461 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:04,461 [INFO] MCTS: Search finished. Best move selected with 1 visits.
2025-04-11 17:09:04,461 [INFO] MCTS selected move: A12
2025-04-11 17:09:04,461 [INFO] ===============NEW MOVE================
2025-04-11 17:09:08,190 [INFO] Starting pre-MCTS candidate collection.
2025-04-11 17:09:08,200 [INFO] Final candidates: []
2025-04-11 17:09:08,200 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:08,209 [INFO] Final candidates: []
2025-04-11 17:09:08,209 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:08,209 [INFO] No candidate found in Phase 1 or 2; using full legal moves for MCTS.
2025-04-11 17:09:08,209 [INFO] MCTS: Starting search for 100 iterations.
2025-04-11 17:09:08,219 [INFO] Final candidates: []
2025-04-11 17:09:08,219 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:08,228 [INFO] Final candidates: []
2025-04-11 17:09:08,228 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:08,228 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(10)), (np.int64(10), np.int64(10)))
2025-04-11 17:09:08,229 [DEBUG] MCTS iteration 0: reached a node with 0 visits.
2025-04-11 17:09:08,229 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:08,256 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:08,266 [INFO] Final candidates: []
2025-04-11 17:09:08,266 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:08,276 [INFO] Final candidates: []
2025-04-11 17:09:08,276 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:08,276 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(1)), (np.int64(10), np.int64(8)))
2025-04-11 17:09:08,277 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:08,432 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:08,443 [INFO] Final candidates: []
2025-04-11 17:09:08,443 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:08,452 [INFO] Final candidates: []
2025-04-11 17:09:08,452 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:08,452 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(9)), (np.int64(8), np.int64(11)))
2025-04-11 17:09:08,452 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:08,483 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:08,493 [INFO] Final candidates: []
2025-04-11 17:09:08,493 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:08,502 [INFO] Final candidates: []
2025-04-11 17:09:08,502 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:08,502 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(8)), (np.int64(10), np.int64(9)))
2025-04-11 17:09:08,502 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:08,558 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:08,567 [INFO] Final candidates: []
2025-04-11 17:09:08,567 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:08,577 [INFO] Final candidates: []
2025-04-11 17:09:08,577 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:08,577 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(10)), (np.int64(11), np.int64(9)))
2025-04-11 17:09:08,577 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:08,689 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:08,699 [INFO] Final candidates: []
2025-04-11 17:09:08,699 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:08,708 [INFO] Final candidates: []
2025-04-11 17:09:08,708 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:08,708 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(0)), (np.int64(10), np.int64(8)))
2025-04-11 17:09:08,708 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:08,900 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:08,913 [INFO] Final candidates: []
2025-04-11 17:09:08,913 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:08,922 [INFO] Final candidates: []
2025-04-11 17:09:08,922 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:08,922 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(12)), (np.int64(9), np.int64(10)))
2025-04-11 17:09:08,922 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:09,027 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:09,037 [INFO] Final candidates: []
2025-04-11 17:09:09,037 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:09,046 [INFO] Final candidates: []
2025-04-11 17:09:09,046 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:09,046 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(13)), (np.int64(5), np.int64(11)))
2025-04-11 17:09:09,046 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:09,154 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:09,164 [INFO] Final candidates: []
2025-04-11 17:09:09,164 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:09,173 [INFO] Final candidates: []
2025-04-11 17:09:09,173 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:09,173 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(8)), (np.int64(5), np.int64(11)))
2025-04-11 17:09:09,173 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:09,268 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:09,277 [INFO] Final candidates: []
2025-04-11 17:09:09,277 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:09,286 [INFO] Final candidates: []
2025-04-11 17:09:09,286 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:09,286 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(8)), (np.int64(13), np.int64(0)))
2025-04-11 17:09:09,287 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:09,332 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:09,342 [INFO] Final candidates: []
2025-04-11 17:09:09,342 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:09,351 [INFO] Final candidates: []
2025-04-11 17:09:09,351 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:09,351 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(2)), (np.int64(8), np.int64(9)))
2025-04-11 17:09:09,351 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:09,408 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:09,420 [INFO] Final candidates: []
2025-04-11 17:09:09,420 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:09,429 [INFO] Final candidates: []
2025-04-11 17:09:09,429 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:09,429 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(12)), (np.int64(9), np.int64(0)))
2025-04-11 17:09:09,429 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:09,590 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:09,600 [INFO] Final candidates: []
2025-04-11 17:09:09,600 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:09,610 [INFO] Final candidates: []
2025-04-11 17:09:09,610 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:09,610 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(11)), (np.int64(10), np.int64(8)))
2025-04-11 17:09:09,610 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:09,778 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:09,787 [INFO] Final candidates: []
2025-04-11 17:09:09,788 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:09,798 [INFO] Final candidates: []
2025-04-11 17:09:09,798 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:09,798 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(1)), (np.int64(13), np.int64(0)))
2025-04-11 17:09:09,798 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:09,915 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:09,924 [INFO] Final candidates: []
2025-04-11 17:09:09,924 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:09,933 [INFO] Final candidates: []
2025-04-11 17:09:09,933 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:09,933 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(12)), (np.int64(8), np.int64(9)))
2025-04-11 17:09:09,934 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:10,200 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:10,210 [INFO] Final candidates: []
2025-04-11 17:09:10,210 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:10,219 [INFO] Final candidates: []
2025-04-11 17:09:10,219 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:10,219 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(9)), (np.int64(7), np.int64(10)))
2025-04-11 17:09:10,220 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:10,231 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:10,241 [INFO] Final candidates: []
2025-04-11 17:09:10,241 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:10,250 [INFO] Final candidates: []
2025-04-11 17:09:10,250 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:10,250 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(0)), (np.int64(5), np.int64(11)))
2025-04-11 17:09:10,250 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:10,527 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:10,536 [INFO] Final candidates: []
2025-04-11 17:09:10,536 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:10,545 [INFO] Final candidates: []
2025-04-11 17:09:10,545 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:10,545 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(8)), (np.int64(10), np.int64(10)))
2025-04-11 17:09:10,546 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:10,629 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:10,639 [INFO] Final candidates: []
2025-04-11 17:09:10,639 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:10,648 [INFO] Final candidates: []
2025-04-11 17:09:10,648 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:10,648 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(12)), (np.int64(9), np.int64(11)))
2025-04-11 17:09:10,649 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:10,739 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:10,754 [INFO] Final candidates: []
2025-04-11 17:09:10,754 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:10,763 [INFO] Final candidates: []
2025-04-11 17:09:10,763 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:10,763 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(9)), (np.int64(10), np.int64(10)))
2025-04-11 17:09:10,764 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:10,949 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:10,959 [INFO] Final candidates: []
2025-04-11 17:09:10,959 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:10,968 [INFO] Final candidates: []
2025-04-11 17:09:10,968 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:10,968 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(8)), (np.int64(9), np.int64(0)))
2025-04-11 17:09:10,968 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:11,068 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:11,077 [INFO] Final candidates: []
2025-04-11 17:09:11,077 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:11,086 [INFO] Final candidates: []
2025-04-11 17:09:11,086 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:11,086 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(12)), (np.int64(9), np.int64(11)))
2025-04-11 17:09:11,087 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:11,234 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:11,243 [INFO] Final candidates: []
2025-04-11 17:09:11,244 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:11,252 [INFO] Final candidates: []
2025-04-11 17:09:11,253 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:11,253 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(8)), (np.int64(10), np.int64(10)))
2025-04-11 17:09:11,253 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:11,371 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:11,381 [INFO] Final candidates: []
2025-04-11 17:09:11,381 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:11,390 [INFO] Final candidates: []
2025-04-11 17:09:11,390 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:11,390 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(13)), (np.int64(11), np.int64(9)))
2025-04-11 17:09:11,391 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:11,493 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:11,503 [INFO] Final candidates: []
2025-04-11 17:09:11,503 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:11,512 [INFO] Final candidates: []
2025-04-11 17:09:11,512 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:11,512 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(10)), (np.int64(13), np.int64(0)))
2025-04-11 17:09:11,513 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:11,738 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:11,747 [INFO] Final candidates: []
2025-04-11 17:09:11,748 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:11,757 [INFO] Final candidates: []
2025-04-11 17:09:11,757 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:11,757 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(10)), (np.int64(12), np.int64(0)))
2025-04-11 17:09:11,758 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:11,956 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:11,970 [INFO] Final candidates: []
2025-04-11 17:09:11,971 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:11,993 [INFO] Final candidates: []
2025-04-11 17:09:11,993 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:11,993 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(0)), (np.int64(11), np.int64(1)))
2025-04-11 17:09:11,994 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:12,079 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:12,090 [INFO] Final candidates: []
2025-04-11 17:09:12,090 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:12,100 [INFO] Final candidates: []
2025-04-11 17:09:12,100 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:12,100 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(10)), (np.int64(7), np.int64(9)))
2025-04-11 17:09:12,100 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:12,126 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:12,137 [INFO] Final candidates: []
2025-04-11 17:09:12,137 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:12,146 [INFO] Final candidates: []
2025-04-11 17:09:12,146 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:12,146 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(1)), (np.int64(5), np.int64(11)))
2025-04-11 17:09:12,146 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:12,245 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:12,255 [INFO] Final candidates: []
2025-04-11 17:09:12,255 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:12,264 [INFO] Final candidates: []
2025-04-11 17:09:12,264 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:12,264 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(9)), (np.int64(12), np.int64(0)))
2025-04-11 17:09:12,264 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:12,355 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:12,364 [INFO] Final candidates: []
2025-04-11 17:09:12,364 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:12,373 [INFO] Final candidates: []
2025-04-11 17:09:12,373 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:12,373 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(8)), (np.int64(7), np.int64(12)))
2025-04-11 17:09:12,374 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:12,606 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:12,618 [INFO] Final candidates: []
2025-04-11 17:09:12,618 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:12,627 [INFO] Final candidates: []
2025-04-11 17:09:12,627 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:12,627 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(10)), (np.int64(7), np.int64(13)))
2025-04-11 17:09:12,627 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:12,820 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:12,829 [INFO] Final candidates: []
2025-04-11 17:09:12,829 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:12,848 [INFO] Final candidates: []
2025-04-11 17:09:12,848 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:12,848 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(11)), (np.int64(13), np.int64(0)))
2025-04-11 17:09:12,848 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:13,045 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:13,055 [INFO] Final candidates: []
2025-04-11 17:09:13,055 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:13,064 [INFO] Final candidates: []
2025-04-11 17:09:13,064 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:13,064 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(1)), (np.int64(10), np.int64(0)))
2025-04-11 17:09:13,064 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:13,176 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:13,185 [INFO] Final candidates: []
2025-04-11 17:09:13,185 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:13,194 [INFO] Final candidates: []
2025-04-11 17:09:13,194 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:13,194 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(10)), (np.int64(11), np.int64(9)))
2025-04-11 17:09:13,195 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:13,305 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:13,328 [INFO] Final candidates: []
2025-04-11 17:09:13,328 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:13,345 [INFO] Final candidates: []
2025-04-11 17:09:13,346 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:13,346 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(8)), (np.int64(10), np.int64(10)))
2025-04-11 17:09:13,346 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:13,461 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:13,470 [INFO] Final candidates: []
2025-04-11 17:09:13,471 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:13,480 [INFO] Final candidates: []
2025-04-11 17:09:13,480 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:13,480 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(12)), (np.int64(8), np.int64(11)))
2025-04-11 17:09:13,480 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:13,572 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:13,584 [INFO] Final candidates: []
2025-04-11 17:09:13,584 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:13,593 [INFO] Final candidates: []
2025-04-11 17:09:13,593 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:13,593 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(9)), (np.int64(5), np.int64(11)))
2025-04-11 17:09:13,594 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:13,818 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:13,828 [INFO] Final candidates: []
2025-04-11 17:09:13,828 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:13,837 [INFO] Final candidates: []
2025-04-11 17:09:13,837 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:13,837 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(10)), (np.int64(11), np.int64(1)))
2025-04-11 17:09:13,838 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:14,003 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:14,013 [INFO] Final candidates: []
2025-04-11 17:09:14,013 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:14,022 [INFO] Final candidates: []
2025-04-11 17:09:14,023 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:14,023 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(1)), (np.int64(7), np.int64(12)))
2025-04-11 17:09:14,023 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:14,297 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:14,307 [INFO] Final candidates: []
2025-04-11 17:09:14,307 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:14,317 [INFO] Final candidates: []
2025-04-11 17:09:14,317 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:14,317 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(10)), (np.int64(8), np.int64(10)))
2025-04-11 17:09:14,317 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:14,484 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:14,495 [INFO] Final candidates: []
2025-04-11 17:09:14,495 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:14,504 [INFO] Final candidates: []
2025-04-11 17:09:14,504 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:14,504 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(12)), (np.int64(11), np.int64(9)))
2025-04-11 17:09:14,504 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:14,568 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:14,579 [INFO] Final candidates: []
2025-04-11 17:09:14,579 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:14,588 [INFO] Final candidates: []
2025-04-11 17:09:14,588 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:14,588 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(1)), (np.int64(9), np.int64(0)))
2025-04-11 17:09:14,588 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:14,760 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:14,773 [INFO] Final candidates: []
2025-04-11 17:09:14,773 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:14,782 [INFO] Final candidates: []
2025-04-11 17:09:14,782 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:14,782 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(9)), (np.int64(5), np.int64(11)))
2025-04-11 17:09:14,782 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:14,938 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:14,947 [INFO] Final candidates: []
2025-04-11 17:09:14,947 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:14,956 [INFO] Final candidates: []
2025-04-11 17:09:14,956 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:14,956 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(1)), (np.int64(10), np.int64(8)))
2025-04-11 17:09:14,956 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:15,159 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:15,169 [INFO] Final candidates: []
2025-04-11 17:09:15,169 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:15,178 [INFO] Final candidates: []
2025-04-11 17:09:15,178 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:15,178 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(9)), (np.int64(7), np.int64(13)))
2025-04-11 17:09:15,178 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:15,312 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:15,322 [INFO] Final candidates: []
2025-04-11 17:09:15,322 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:15,331 [INFO] Final candidates: []
2025-04-11 17:09:15,331 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:15,331 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(11)), (np.int64(10), np.int64(10)))
2025-04-11 17:09:15,331 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:15,409 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:15,419 [INFO] Final candidates: []
2025-04-11 17:09:15,419 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:15,428 [INFO] Final candidates: []
2025-04-11 17:09:15,428 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:15,428 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(9)), (np.int64(9), np.int64(10)))
2025-04-11 17:09:15,429 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:15,627 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:15,640 [INFO] Final candidates: []
2025-04-11 17:09:15,640 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:15,651 [INFO] Final candidates: []
2025-04-11 17:09:15,651 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:15,651 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(12)), (np.int64(6), np.int64(10)))
2025-04-11 17:09:15,651 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:15,857 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:15,869 [INFO] Final candidates: []
2025-04-11 17:09:15,869 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:15,884 [INFO] Final candidates: []
2025-04-11 17:09:15,884 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:15,884 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(12)), (np.int64(7), np.int64(13)))
2025-04-11 17:09:15,885 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:16,092 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:16,102 [INFO] Final candidates: []
2025-04-11 17:09:16,102 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:16,111 [INFO] Final candidates: []
2025-04-11 17:09:16,111 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:16,111 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(1)), (np.int64(8), np.int64(10)))
2025-04-11 17:09:16,111 [DEBUG] MCTS iteration 50: reached a node with 0 visits.
2025-04-11 17:09:16,112 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:16,138 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:16,149 [INFO] Final candidates: []
2025-04-11 17:09:16,149 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:16,158 [INFO] Final candidates: []
2025-04-11 17:09:16,158 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:16,158 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(8)), (np.int64(8), np.int64(10)))
2025-04-11 17:09:16,159 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:16,338 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:16,348 [INFO] Final candidates: []
2025-04-11 17:09:16,348 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:16,357 [INFO] Final candidates: []
2025-04-11 17:09:16,357 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:16,357 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(8)), (np.int64(7), np.int64(12)))
2025-04-11 17:09:16,358 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:16,459 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:16,468 [INFO] Final candidates: []
2025-04-11 17:09:16,468 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:16,477 [INFO] Final candidates: []
2025-04-11 17:09:16,477 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:16,477 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(12)), (np.int64(8), np.int64(8)))
2025-04-11 17:09:16,478 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:16,567 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:16,576 [INFO] Final candidates: []
2025-04-11 17:09:16,576 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:16,587 [INFO] Final candidates: []
2025-04-11 17:09:16,587 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:16,587 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(10)), (np.int64(8), np.int64(8)))
2025-04-11 17:09:16,587 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:16,737 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:16,747 [INFO] Final candidates: []
2025-04-11 17:09:16,747 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:16,756 [INFO] Final candidates: []
2025-04-11 17:09:16,756 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:16,756 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(0)), (np.int64(9), np.int64(10)))
2025-04-11 17:09:16,756 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:16,848 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:16,861 [INFO] Final candidates: []
2025-04-11 17:09:16,861 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:16,871 [INFO] Final candidates: []
2025-04-11 17:09:16,871 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:16,871 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(11)), (np.int64(8), np.int64(8)))
2025-04-11 17:09:16,871 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:17,156 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:17,165 [INFO] Final candidates: []
2025-04-11 17:09:17,165 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:17,174 [INFO] Final candidates: []
2025-04-11 17:09:17,174 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:17,174 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(1)), (np.int64(11), np.int64(2)))
2025-04-11 17:09:17,175 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:17,305 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:17,315 [INFO] Final candidates: []
2025-04-11 17:09:17,315 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:17,324 [INFO] Final candidates: []
2025-04-11 17:09:17,324 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:17,324 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(13)), (np.int64(8), np.int64(11)))
2025-04-11 17:09:17,324 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:17,491 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:17,515 [INFO] Final candidates: []
2025-04-11 17:09:17,515 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:17,532 [INFO] Final candidates: []
2025-04-11 17:09:17,532 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:17,532 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(7)), (np.int64(9), np.int64(0)))
2025-04-11 17:09:17,533 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:17,681 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:17,691 [INFO] Final candidates: []
2025-04-11 17:09:17,691 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:17,701 [INFO] Final candidates: []
2025-04-11 17:09:17,701 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:17,701 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(2)), (np.int64(9), np.int64(7)))
2025-04-11 17:09:17,701 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:17,991 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:18,000 [INFO] Final candidates: []
2025-04-11 17:09:18,000 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:18,009 [INFO] Final candidates: []
2025-04-11 17:09:18,009 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:18,009 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(13)), (np.int64(9), np.int64(10)))
2025-04-11 17:09:18,010 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:18,175 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:18,186 [INFO] Final candidates: []
2025-04-11 17:09:18,186 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:18,196 [INFO] Final candidates: []
2025-04-11 17:09:18,196 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:18,196 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(12)), (np.int64(9), np.int64(8)))
2025-04-11 17:09:18,196 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:18,463 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:18,472 [INFO] Final candidates: []
2025-04-11 17:09:18,472 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:18,482 [INFO] Final candidates: []
2025-04-11 17:09:18,482 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:18,482 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(11)), (np.int64(10), np.int64(10)))
2025-04-11 17:09:18,482 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:18,676 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:18,685 [INFO] Final candidates: []
2025-04-11 17:09:18,686 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:18,695 [INFO] Final candidates: []
2025-04-11 17:09:18,695 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:18,695 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(0)), (np.int64(8), np.int64(8)))
2025-04-11 17:09:18,695 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:18,724 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:18,733 [INFO] Final candidates: []
2025-04-11 17:09:18,733 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:18,742 [INFO] Final candidates: []
2025-04-11 17:09:18,742 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:18,742 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(10)), (np.int64(7), np.int64(9)))
2025-04-11 17:09:18,743 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:18,798 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:18,808 [INFO] Final candidates: []
2025-04-11 17:09:18,808 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:18,817 [INFO] Final candidates: []
2025-04-11 17:09:18,817 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:18,817 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(8)), (np.int64(10), np.int64(1)))
2025-04-11 17:09:18,817 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:18,976 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:18,986 [INFO] Final candidates: []
2025-04-11 17:09:18,986 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:18,995 [INFO] Final candidates: []
2025-04-11 17:09:18,995 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:18,996 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(0)), (np.int64(10), np.int64(8)))
2025-04-11 17:09:18,996 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:19,072 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:19,082 [INFO] Final candidates: []
2025-04-11 17:09:19,082 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:19,091 [INFO] Final candidates: []
2025-04-11 17:09:19,091 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:19,091 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(11)), (np.int64(6), np.int64(10)))
2025-04-11 17:09:19,091 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:19,171 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:19,180 [INFO] Final candidates: []
2025-04-11 17:09:19,180 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:19,189 [INFO] Final candidates: []
2025-04-11 17:09:19,189 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:19,189 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(0)), (np.int64(13), np.int64(0)))
2025-04-11 17:09:19,190 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:19,329 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:19,338 [INFO] Final candidates: []
2025-04-11 17:09:19,338 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:19,347 [INFO] Final candidates: []
2025-04-11 17:09:19,347 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:19,347 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(11)), (np.int64(11), np.int64(9)))
2025-04-11 17:09:19,348 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:19,421 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:19,430 [INFO] Final candidates: []
2025-04-11 17:09:19,430 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:19,439 [INFO] Final candidates: []
2025-04-11 17:09:19,439 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:19,439 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(11)), (np.int64(5), np.int64(11)))
2025-04-11 17:09:19,440 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:19,596 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:19,607 [INFO] Final candidates: []
2025-04-11 17:09:19,607 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:19,616 [INFO] Final candidates: []
2025-04-11 17:09:19,616 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:19,617 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(0)), (np.int64(10), np.int64(10)))
2025-04-11 17:09:19,617 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:19,800 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:19,810 [INFO] Final candidates: []
2025-04-11 17:09:19,810 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:19,819 [INFO] Final candidates: []
2025-04-11 17:09:19,819 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:19,819 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(0)), (np.int64(7), np.int64(9)))
2025-04-11 17:09:19,819 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:20,027 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:20,037 [INFO] Final candidates: []
2025-04-11 17:09:20,037 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:20,046 [INFO] Final candidates: []
2025-04-11 17:09:20,046 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:20,046 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(13)), (np.int64(13), np.int64(0)))
2025-04-11 17:09:20,046 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:20,106 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:20,115 [INFO] Final candidates: []
2025-04-11 17:09:20,115 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:20,124 [INFO] Final candidates: []
2025-04-11 17:09:20,124 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:20,124 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(12)), (np.int64(9), np.int64(7)))
2025-04-11 17:09:20,125 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:20,276 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:20,286 [INFO] Final candidates: []
2025-04-11 17:09:20,286 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:20,295 [INFO] Final candidates: []
2025-04-11 17:09:20,295 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:20,295 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(12)), (np.int64(11), np.int64(1)))
2025-04-11 17:09:20,295 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:20,427 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:20,437 [INFO] Final candidates: []
2025-04-11 17:09:20,437 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:20,446 [INFO] Final candidates: []
2025-04-11 17:09:20,446 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:20,446 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(10)), (np.int64(13), np.int64(0)))
2025-04-11 17:09:20,447 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:20,487 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:20,497 [INFO] Final candidates: []
2025-04-11 17:09:20,497 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:20,506 [INFO] Final candidates: []
2025-04-11 17:09:20,506 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:20,506 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(1)), (np.int64(6), np.int64(10)))
2025-04-11 17:09:20,506 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:20,560 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:20,570 [INFO] Final candidates: []
2025-04-11 17:09:20,570 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:20,579 [INFO] Final candidates: []
2025-04-11 17:09:20,579 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:20,579 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(12)), (np.int64(8), np.int64(11)))
2025-04-11 17:09:20,579 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:20,693 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:20,703 [INFO] Final candidates: []
2025-04-11 17:09:20,703 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:20,712 [INFO] Final candidates: []
2025-04-11 17:09:20,712 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:20,712 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(1)), (np.int64(10), np.int64(1)))
2025-04-11 17:09:20,712 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:20,923 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:20,937 [INFO] Final candidates: []
2025-04-11 17:09:20,937 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:20,946 [INFO] Final candidates: []
2025-04-11 17:09:20,946 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:20,946 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(9)), (np.int64(7), np.int64(10)))
2025-04-11 17:09:20,946 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:21,029 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:21,039 [INFO] Final candidates: []
2025-04-11 17:09:21,039 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:21,048 [INFO] Final candidates: []
2025-04-11 17:09:21,048 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:21,048 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(11)), (np.int64(10), np.int64(8)))
2025-04-11 17:09:21,048 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:21,177 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:21,188 [INFO] Final candidates: []
2025-04-11 17:09:21,188 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:21,199 [INFO] Final candidates: []
2025-04-11 17:09:21,199 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:21,199 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(2)), (np.int64(9), np.int64(11)))
2025-04-11 17:09:21,199 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:21,302 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:21,311 [INFO] Final candidates: []
2025-04-11 17:09:21,311 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:21,320 [INFO] Final candidates: []
2025-04-11 17:09:21,320 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:21,320 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(12)), (np.int64(13), np.int64(0)))
2025-04-11 17:09:21,321 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:21,373 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:21,385 [INFO] Final candidates: []
2025-04-11 17:09:21,385 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:21,404 [INFO] Final candidates: []
2025-04-11 17:09:21,404 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:21,404 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(10)), (np.int64(6), np.int64(10)))
2025-04-11 17:09:21,404 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:21,603 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:21,613 [INFO] Final candidates: []
2025-04-11 17:09:21,613 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:21,622 [INFO] Final candidates: []
2025-04-11 17:09:21,622 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:21,622 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(11)), (np.int64(9), np.int64(7)))
2025-04-11 17:09:21,622 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:21,790 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:21,800 [INFO] Final candidates: []
2025-04-11 17:09:21,800 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:21,809 [INFO] Final candidates: []
2025-04-11 17:09:21,809 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:21,809 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(2)), (np.int64(9), np.int64(10)))
2025-04-11 17:09:21,809 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:21,820 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:21,830 [INFO] Final candidates: []
2025-04-11 17:09:21,830 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:21,839 [INFO] Final candidates: []
2025-04-11 17:09:21,839 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:21,839 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(7)), (np.int64(8), np.int64(11)))
2025-04-11 17:09:21,839 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:21,988 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:21,998 [INFO] Final candidates: []
2025-04-11 17:09:21,998 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:22,007 [INFO] Final candidates: []
2025-04-11 17:09:22,007 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:22,007 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(12)), (np.int64(6), np.int64(11)))
2025-04-11 17:09:22,007 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:22,124 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:22,134 [INFO] Final candidates: []
2025-04-11 17:09:22,134 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:22,143 [INFO] Final candidates: []
2025-04-11 17:09:22,143 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:22,143 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(12)), (np.int64(10), np.int64(1)))
2025-04-11 17:09:22,143 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:22,260 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:22,269 [INFO] Final candidates: []
2025-04-11 17:09:22,269 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:22,278 [INFO] Final candidates: []
2025-04-11 17:09:22,278 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:22,279 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(1)), (np.int64(7), np.int64(10)))
2025-04-11 17:09:22,279 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:22,366 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:22,376 [INFO] Final candidates: []
2025-04-11 17:09:22,376 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:22,386 [INFO] Final candidates: []
2025-04-11 17:09:22,386 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:22,386 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(11)), (np.int64(8), np.int64(10)))
2025-04-11 17:09:22,386 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:22,461 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:22,470 [INFO] Final candidates: []
2025-04-11 17:09:22,470 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:22,480 [INFO] Final candidates: []
2025-04-11 17:09:22,480 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:22,480 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(2)), (np.int64(12), np.int64(0)))
2025-04-11 17:09:22,480 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:22,706 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:22,716 [INFO] Final candidates: []
2025-04-11 17:09:22,716 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:22,725 [INFO] Final candidates: []
2025-04-11 17:09:22,725 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:22,725 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(9)), (np.int64(9), np.int64(7)))
2025-04-11 17:09:22,725 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:22,902 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:22,911 [INFO] Final candidates: []
2025-04-11 17:09:22,912 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:22,921 [INFO] Final candidates: []
2025-04-11 17:09:22,921 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:22,921 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(12)), (np.int64(7), np.int64(12)))
2025-04-11 17:09:22,921 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:22,955 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:22,964 [INFO] Final candidates: []
2025-04-11 17:09:22,965 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:22,974 [INFO] Final candidates: []
2025-04-11 17:09:22,974 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:22,974 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(12)), (np.int64(9), np.int64(0)))
2025-04-11 17:09:22,974 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:23,068 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:23,079 [INFO] Final candidates: []
2025-04-11 17:09:23,079 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:23,088 [INFO] Final candidates: []
2025-04-11 17:09:23,088 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:23,088 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(10)), (np.int64(8), np.int64(8)))
2025-04-11 17:09:23,088 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:23,247 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:23,256 [INFO] Final candidates: []
2025-04-11 17:09:23,256 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:23,265 [INFO] Final candidates: []
2025-04-11 17:09:23,266 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:23,266 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(12)), (np.int64(6), np.int64(11)))
2025-04-11 17:09:23,266 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:23,487 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:23,497 [INFO] Final candidates: []
2025-04-11 17:09:23,497 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:23,506 [INFO] Final candidates: []
2025-04-11 17:09:23,506 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:23,506 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(11)), (np.int64(7), np.int64(9)))
2025-04-11 17:09:23,506 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:23,617 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:23,617 [INFO] MCTS: Search finished. Best move selected with 1 visits.
2025-04-11 17:09:23,618 [INFO] MCTS selected move: L10,L11
2025-04-11 17:09:23,618 [INFO] ===============NEW MOVE================
2025-04-11 17:09:31,541 [INFO] Starting pre-MCTS candidate collection.
2025-04-11 17:09:31,552 [INFO] Final candidates: []
2025-04-11 17:09:31,552 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:31,559 [DEBUG] board coords: [(4, 14), (5, 13), (6, 12), (7, 11), (8, 10), (9, 9)]
2025-04-11 17:09:31,559 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(0), np.int64(2)]
2025-04-11 17:09:31,559 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 12), (8, 10)]
2025-04-11 17:09:31,559 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 0 2] with coords [(4, 14), (5, 13), (6, 12), (7, 11), (8, 10), (9, 9)] triggers candidate.
2025-04-11 17:09:31,561 [INFO] Final candidates: [(6, 12), (8, 10)]
2025-04-11 17:09:31,561 [INFO] Phase defense: Collected 1unique candidate(s):[((6, 12), (8, 10))]
2025-04-11 17:09:31,561 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 17:09:31,561 [INFO] MCTS: Starting search for 50 iterations.
2025-04-11 17:09:31,572 [INFO] Final candidates: []
2025-04-11 17:09:31,572 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:31,580 [DEBUG] board coords: [(4, 14), (5, 13), (6, 12), (7, 11), (8, 10), (9, 9)]
2025-04-11 17:09:31,580 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(0), np.int64(2)]
2025-04-11 17:09:31,580 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 12), (8, 10)]
2025-04-11 17:09:31,580 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 0 2] with coords [(4, 14), (5, 13), (6, 12), (7, 11), (8, 10), (9, 9)] triggers candidate.
2025-04-11 17:09:31,583 [INFO] Final candidates: [(6, 12), (8, 10)]
2025-04-11 17:09:31,583 [INFO] Phase defense: Collected 1unique candidate(s):[((6, 12), (8, 10))]
2025-04-11 17:09:31,583 [DEBUG] Tree_policy iteration 1: Expanding move ((6, 12), (8, 10))
2025-04-11 17:09:31,583 [DEBUG] MCTS iteration 0: reached a node with 0 visits.
2025-04-11 17:09:31,583 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:31,735 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:31,735 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:09:31,744 [INFO] Final candidates: []
2025-04-11 17:09:31,744 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:31,753 [INFO] Final candidates: []
2025-04-11 17:09:31,753 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:31,753 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(1)), (np.int64(8), np.int64(11)))
2025-04-11 17:09:31,753 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:31,903 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:31,903 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:09:31,917 [INFO] Final candidates: []
2025-04-11 17:09:31,917 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:31,926 [INFO] Final candidates: []
2025-04-11 17:09:31,926 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:31,926 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(4), np.int64(12)), (np.int64(8), np.int64(12)))
2025-04-11 17:09:31,927 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:31,993 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:31,994 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:09:32,002 [INFO] Final candidates: []
2025-04-11 17:09:32,002 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:32,011 [INFO] Final candidates: []
2025-04-11 17:09:32,011 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:32,011 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(11)), (np.int64(11), np.int64(9)))
2025-04-11 17:09:32,012 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:32,103 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:32,104 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:09:32,112 [INFO] Final candidates: []
2025-04-11 17:09:32,112 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:32,122 [INFO] Final candidates: []
2025-04-11 17:09:32,122 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:32,122 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(15)), (np.int64(10), np.int64(8)))
2025-04-11 17:09:32,122 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:32,336 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:32,336 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:09:32,347 [INFO] Final candidates: []
2025-04-11 17:09:32,347 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:32,356 [INFO] Final candidates: []
2025-04-11 17:09:32,356 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:32,356 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(8)), (np.int64(9), np.int64(0)))
2025-04-11 17:09:32,356 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:32,586 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:32,586 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:09:32,595 [INFO] Final candidates: []
2025-04-11 17:09:32,595 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:32,604 [INFO] Final candidates: []
2025-04-11 17:09:32,604 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:32,604 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(8)), (np.int64(6), np.int64(13)))
2025-04-11 17:09:32,605 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:32,725 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:32,726 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:09:32,734 [INFO] Final candidates: []
2025-04-11 17:09:32,734 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:32,743 [INFO] Final candidates: []
2025-04-11 17:09:32,743 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:32,743 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(9)), (np.int64(3), np.int64(14)))
2025-04-11 17:09:32,744 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:32,800 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:32,801 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:09:32,809 [INFO] Final candidates: []
2025-04-11 17:09:32,809 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:32,819 [INFO] Final candidates: []
2025-04-11 17:09:32,819 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:32,819 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(8)), (np.int64(7), np.int64(12)))
2025-04-11 17:09:32,819 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:32,957 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:32,958 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:09:32,966 [INFO] Final candidates: []
2025-04-11 17:09:32,967 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:32,976 [INFO] Final candidates: []
2025-04-11 17:09:32,976 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:32,976 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(10)), (np.int64(3), np.int64(14)))
2025-04-11 17:09:32,976 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:33,074 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:33,075 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:09:33,083 [INFO] Final candidates: []
2025-04-11 17:09:33,083 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:33,092 [INFO] Final candidates: []
2025-04-11 17:09:33,092 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:33,092 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(11)), (np.int64(9), np.int64(12)))
2025-04-11 17:09:33,093 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:33,156 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:33,156 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:09:33,165 [INFO] Final candidates: []
2025-04-11 17:09:33,165 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:33,174 [INFO] Final candidates: []
2025-04-11 17:09:33,174 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:33,174 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(4), np.int64(12)), (np.int64(4), np.int64(16)))
2025-04-11 17:09:33,174 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:33,409 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:33,409 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:09:33,425 [INFO] Final candidates: []
2025-04-11 17:09:33,425 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:33,434 [INFO] Final candidates: []
2025-04-11 17:09:33,434 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:33,434 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(2)), (np.int64(7), np.int64(10)))
2025-04-11 17:09:33,435 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:33,541 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:33,541 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:09:33,559 [INFO] Final candidates: []
2025-04-11 17:09:33,559 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:33,568 [INFO] Final candidates: []
2025-04-11 17:09:33,568 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:33,568 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(11)), (np.int64(9), np.int64(7)))
2025-04-11 17:09:33,569 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:33,657 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:33,657 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:09:33,666 [INFO] Final candidates: []
2025-04-11 17:09:33,666 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:33,675 [INFO] Final candidates: []
2025-04-11 17:09:33,675 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:33,675 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(8)), (np.int64(11), np.int64(9)))
2025-04-11 17:09:33,675 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:33,890 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:33,890 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:09:33,899 [INFO] Final candidates: []
2025-04-11 17:09:33,899 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:33,908 [INFO] Final candidates: []
2025-04-11 17:09:33,908 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:33,908 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(11)), (np.int64(5), np.int64(14)))
2025-04-11 17:09:33,909 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:33,969 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:33,969 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:09:33,978 [INFO] Final candidates: []
2025-04-11 17:09:33,978 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:33,987 [INFO] Final candidates: []
2025-04-11 17:09:33,987 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:33,987 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(12)), (np.int64(4), np.int64(13)))
2025-04-11 17:09:33,987 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:34,158 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:34,158 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:09:34,167 [INFO] Final candidates: []
2025-04-11 17:09:34,167 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:34,176 [INFO] Final candidates: []
2025-04-11 17:09:34,176 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:34,176 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(10)), (np.int64(6), np.int64(10)))
2025-04-11 17:09:34,176 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:34,196 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:34,196 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:09:34,205 [INFO] Final candidates: []
2025-04-11 17:09:34,205 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:34,214 [INFO] Final candidates: []
2025-04-11 17:09:34,214 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:34,214 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(11)), (np.int64(5), np.int64(12)))
2025-04-11 17:09:34,214 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:34,333 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:34,334 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:09:34,342 [INFO] Final candidates: []
2025-04-11 17:09:34,342 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:34,352 [INFO] Final candidates: []
2025-04-11 17:09:34,352 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:34,352 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(0)), (np.int64(8), np.int64(8)))
2025-04-11 17:09:34,352 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:34,396 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:34,396 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:09:34,405 [INFO] Final candidates: []
2025-04-11 17:09:34,405 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:34,414 [INFO] Final candidates: []
2025-04-11 17:09:34,414 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:34,414 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(8)), (np.int64(3), np.int64(15)))
2025-04-11 17:09:34,414 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:34,557 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:34,557 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:09:34,566 [INFO] Final candidates: []
2025-04-11 17:09:34,566 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:34,575 [INFO] Final candidates: []
2025-04-11 17:09:34,575 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:34,575 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(11)), (np.int64(10), np.int64(12)))
2025-04-11 17:09:34,575 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:34,749 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:34,749 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:09:34,757 [INFO] Final candidates: []
2025-04-11 17:09:34,757 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:34,767 [INFO] Final candidates: []
2025-04-11 17:09:34,767 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:34,767 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(2)), (np.int64(4), np.int64(13)))
2025-04-11 17:09:34,768 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:34,918 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:34,918 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:09:34,927 [INFO] Final candidates: []
2025-04-11 17:09:34,927 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:34,936 [INFO] Final candidates: []
2025-04-11 17:09:34,936 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:34,936 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(12)), (np.int64(6), np.int64(14)))
2025-04-11 17:09:34,936 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:34,956 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:34,956 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:09:34,965 [INFO] Final candidates: []
2025-04-11 17:09:34,965 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:34,974 [INFO] Final candidates: []
2025-04-11 17:09:34,974 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:34,974 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(1)), (np.int64(9), np.int64(0)))
2025-04-11 17:09:34,974 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:35,099 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:35,099 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:09:35,108 [INFO] Final candidates: []
2025-04-11 17:09:35,108 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:35,117 [INFO] Final candidates: []
2025-04-11 17:09:35,117 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:35,117 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(4), np.int64(16)), (np.int64(9), np.int64(12)))
2025-04-11 17:09:35,118 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:35,269 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:35,270 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:09:35,278 [INFO] Final candidates: []
2025-04-11 17:09:35,278 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:35,287 [INFO] Final candidates: []
2025-04-11 17:09:35,287 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:35,287 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(12)), (np.int64(5), np.int64(14)))
2025-04-11 17:09:35,288 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:35,385 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:35,385 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:09:35,400 [INFO] Final candidates: []
2025-04-11 17:09:35,400 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:35,414 [INFO] Final candidates: []
2025-04-11 17:09:35,415 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:35,415 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(10)), (np.int64(6), np.int64(13)))
2025-04-11 17:09:35,415 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:35,646 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:35,646 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:09:35,655 [INFO] Final candidates: []
2025-04-11 17:09:35,655 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:35,664 [INFO] Final candidates: []
2025-04-11 17:09:35,664 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:35,664 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(0)), (np.int64(4), np.int64(16)))
2025-04-11 17:09:35,665 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:35,733 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:35,733 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:09:35,742 [INFO] Final candidates: []
2025-04-11 17:09:35,742 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:35,751 [INFO] Final candidates: []
2025-04-11 17:09:35,751 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:35,751 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(8)), (np.int64(7), np.int64(12)))
2025-04-11 17:09:35,751 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:35,819 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:35,819 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:09:35,828 [INFO] Final candidates: []
2025-04-11 17:09:35,828 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:35,837 [INFO] Final candidates: []
2025-04-11 17:09:35,837 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:35,837 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(9)), (np.int64(3), np.int64(14)))
2025-04-11 17:09:35,837 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:35,975 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:35,975 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:09:35,984 [INFO] Final candidates: []
2025-04-11 17:09:35,984 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:35,993 [INFO] Final candidates: []
2025-04-11 17:09:35,993 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:35,993 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(10)), (np.int64(9), np.int64(12)))
2025-04-11 17:09:35,993 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:36,095 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:36,096 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:09:36,104 [INFO] Final candidates: []
2025-04-11 17:09:36,104 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:36,113 [INFO] Final candidates: []
2025-04-11 17:09:36,114 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:36,114 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(9)), (np.int64(11), np.int64(11)))
2025-04-11 17:09:36,114 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:36,426 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:36,426 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:09:36,440 [INFO] Final candidates: []
2025-04-11 17:09:36,440 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:36,452 [INFO] Final candidates: []
2025-04-11 17:09:36,452 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:36,452 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(13)), (np.int64(3), np.int64(14)))
2025-04-11 17:09:36,453 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:36,537 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:36,537 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:09:36,546 [INFO] Final candidates: []
2025-04-11 17:09:36,546 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:36,555 [INFO] Final candidates: []
2025-04-11 17:09:36,555 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:36,555 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(4), np.int64(12)), (np.int64(5), np.int64(12)))
2025-04-11 17:09:36,555 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:36,601 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:36,601 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:09:36,610 [INFO] Final candidates: []
2025-04-11 17:09:36,610 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:36,619 [INFO] Final candidates: []
2025-04-11 17:09:36,619 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:36,619 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(3), np.int64(15)), (np.int64(5), np.int64(11)))
2025-04-11 17:09:36,620 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:36,794 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:36,794 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:09:36,803 [INFO] Final candidates: []
2025-04-11 17:09:36,803 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:36,811 [INFO] Final candidates: []
2025-04-11 17:09:36,811 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:36,812 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(4), np.int64(13)), (np.int64(13), np.int64(0)))
2025-04-11 17:09:36,812 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:36,977 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:36,977 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:09:36,986 [INFO] Final candidates: []
2025-04-11 17:09:36,986 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:36,995 [INFO] Final candidates: []
2025-04-11 17:09:36,995 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:36,995 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(4), np.int64(12)), (np.int64(3), np.int64(14)))
2025-04-11 17:09:36,997 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:37,243 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:37,244 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:09:37,252 [INFO] Final candidates: []
2025-04-11 17:09:37,252 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:37,261 [INFO] Final candidates: []
2025-04-11 17:09:37,261 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:37,261 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(3), np.int64(13)), (np.int64(10), np.int64(9)))
2025-04-11 17:09:37,262 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:37,345 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:37,346 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:09:37,360 [INFO] Final candidates: []
2025-04-11 17:09:37,360 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:37,377 [INFO] Final candidates: []
2025-04-11 17:09:37,377 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:37,378 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(2)), (np.int64(8), np.int64(9)))
2025-04-11 17:09:37,378 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:37,565 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:37,565 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:09:37,574 [INFO] Final candidates: []
2025-04-11 17:09:37,574 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:37,583 [INFO] Final candidates: []
2025-04-11 17:09:37,583 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:37,583 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(1)), (np.int64(10), np.int64(8)))
2025-04-11 17:09:37,583 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:37,603 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:37,603 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:09:37,612 [INFO] Final candidates: []
2025-04-11 17:09:37,612 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:37,623 [INFO] Final candidates: []
2025-04-11 17:09:37,623 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:37,623 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(11)), (np.int64(5), np.int64(11)))
2025-04-11 17:09:37,623 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:37,841 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:37,842 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:09:37,851 [INFO] Final candidates: []
2025-04-11 17:09:37,851 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:37,860 [INFO] Final candidates: []
2025-04-11 17:09:37,860 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:37,860 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(9)), (np.int64(9), np.int64(0)))
2025-04-11 17:09:37,861 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:37,900 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:37,901 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:09:37,909 [INFO] Final candidates: []
2025-04-11 17:09:37,910 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:37,918 [INFO] Final candidates: []
2025-04-11 17:09:37,918 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:37,918 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(3), np.int64(15)), (np.int64(11), np.int64(1)))
2025-04-11 17:09:37,919 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:38,023 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:38,023 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:09:38,037 [INFO] Final candidates: []
2025-04-11 17:09:38,037 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:38,046 [INFO] Final candidates: []
2025-04-11 17:09:38,046 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:38,046 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(4), np.int64(15)), (np.int64(11), np.int64(11)))
2025-04-11 17:09:38,047 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:38,078 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:38,078 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:09:38,087 [INFO] Final candidates: []
2025-04-11 17:09:38,087 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:38,096 [INFO] Final candidates: []
2025-04-11 17:09:38,096 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:38,096 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(4), np.int64(15)), (np.int64(6), np.int64(10)))
2025-04-11 17:09:38,096 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:38,174 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:38,175 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:09:38,183 [INFO] Final candidates: []
2025-04-11 17:09:38,183 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:38,192 [INFO] Final candidates: []
2025-04-11 17:09:38,192 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:38,192 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(8)), (np.int64(10), np.int64(12)))
2025-04-11 17:09:38,192 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:38,282 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:38,282 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:09:38,291 [INFO] Final candidates: []
2025-04-11 17:09:38,291 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:38,299 [INFO] Final candidates: []
2025-04-11 17:09:38,299 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:38,299 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(12)), (np.int64(11), np.int64(9)))
2025-04-11 17:09:38,300 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:38,468 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:38,468 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:09:38,477 [INFO] Final candidates: []
2025-04-11 17:09:38,477 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:38,496 [INFO] Final candidates: []
2025-04-11 17:09:38,496 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:38,496 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(10)), (np.int64(8), np.int64(11)))
2025-04-11 17:09:38,496 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:38,764 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:38,765 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:09:38,774 [INFO] Final candidates: []
2025-04-11 17:09:38,774 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:38,782 [INFO] Final candidates: []
2025-04-11 17:09:38,783 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:38,783 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(9)), (np.int64(6), np.int64(13)))
2025-04-11 17:09:38,783 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:38,957 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:38,957 [INFO] MCTS: Search finished. Best move selected with 50 visits.
2025-04-11 17:09:38,957 [INFO] MCTS (defense candidates) selected move: N7,L9
2025-04-11 17:09:44,115 [INFO] Starting pre-MCTS candidate collection.
2025-04-11 17:09:44,124 [INFO] Final candidates: []
2025-04-11 17:09:44,124 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:44,132 [INFO] Final candidates: []
2025-04-11 17:09:44,133 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:44,133 [INFO] No candidate found in Phase 1 or 2; using full legal moves for MCTS.
2025-04-11 17:09:44,134 [INFO] MCTS: Starting search for 100 iterations.
2025-04-11 17:09:44,143 [INFO] Final candidates: []
2025-04-11 17:09:44,143 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:44,152 [INFO] Final candidates: []
2025-04-11 17:09:44,152 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:44,152 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(0)), (np.int64(3), np.int64(14)))
2025-04-11 17:09:44,152 [DEBUG] MCTS iteration 0: reached a node with 0 visits.
2025-04-11 17:09:44,152 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:44,274 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:44,283 [INFO] Final candidates: []
2025-04-11 17:09:44,283 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:44,291 [INFO] Final candidates: []
2025-04-11 17:09:44,292 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:44,292 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(9)), (np.int64(10), np.int64(11)))
2025-04-11 17:09:44,292 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:44,372 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:44,381 [INFO] Final candidates: []
2025-04-11 17:09:44,381 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:44,389 [INFO] Final candidates: []
2025-04-11 17:09:44,389 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:44,389 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(12)), (np.int64(6), np.int64(10)))
2025-04-11 17:09:44,390 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:44,518 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:44,529 [INFO] Final candidates: []
2025-04-11 17:09:44,529 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:44,539 [INFO] Final candidates: []
2025-04-11 17:09:44,539 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:44,539 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(8)), (np.int64(5), np.int64(9)))
2025-04-11 17:09:44,539 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:44,669 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:44,678 [INFO] Final candidates: []
2025-04-11 17:09:44,678 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:44,687 [INFO] Final candidates: []
2025-04-11 17:09:44,687 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:44,687 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(3), np.int64(8)), (np.int64(9), np.int64(12)))
2025-04-11 17:09:44,688 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:44,878 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:44,887 [INFO] Final candidates: []
2025-04-11 17:09:44,887 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:44,898 [INFO] Final candidates: []
2025-04-11 17:09:44,898 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:44,898 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(8)), (np.int64(4), np.int64(16)))
2025-04-11 17:09:44,899 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:45,100 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:45,110 [INFO] Final candidates: []
2025-04-11 17:09:45,110 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:45,118 [INFO] Final candidates: []
2025-04-11 17:09:45,118 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:45,118 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(8)), (np.int64(10), np.int64(8)))
2025-04-11 17:09:45,119 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:45,365 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:45,373 [INFO] Final candidates: []
2025-04-11 17:09:45,373 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:45,382 [INFO] Final candidates: []
2025-04-11 17:09:45,382 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:45,382 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(11)), (np.int64(9), np.int64(6)))
2025-04-11 17:09:45,382 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:45,574 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:45,583 [INFO] Final candidates: []
2025-04-11 17:09:45,583 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:45,592 [INFO] Final candidates: []
2025-04-11 17:09:45,592 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:45,592 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(10)), (np.int64(9), np.int64(8)))
2025-04-11 17:09:45,592 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:45,669 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:45,678 [INFO] Final candidates: []
2025-04-11 17:09:45,678 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:45,687 [INFO] Final candidates: []
2025-04-11 17:09:45,687 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:45,687 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(11)), (np.int64(6), np.int64(10)))
2025-04-11 17:09:45,687 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:45,810 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:45,820 [INFO] Final candidates: []
2025-04-11 17:09:45,820 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:45,828 [INFO] Final candidates: []
2025-04-11 17:09:45,829 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:45,829 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(10)), (np.int64(3), np.int64(14)))
2025-04-11 17:09:45,829 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:46,039 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:46,054 [INFO] Final candidates: []
2025-04-11 17:09:46,054 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:46,062 [INFO] Final candidates: []
2025-04-11 17:09:46,062 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:46,062 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(8)), (np.int64(8), np.int64(7)))
2025-04-11 17:09:46,063 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:46,183 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:46,191 [INFO] Final candidates: []
2025-04-11 17:09:46,192 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:46,200 [INFO] Final candidates: []
2025-04-11 17:09:46,200 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:46,200 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(11)), (np.int64(4), np.int64(13)))
2025-04-11 17:09:46,201 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:46,222 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:46,231 [INFO] Final candidates: []
2025-04-11 17:09:46,231 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:46,240 [INFO] Final candidates: []
2025-04-11 17:09:46,240 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:46,240 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(8)), (np.int64(10), np.int64(11)))
2025-04-11 17:09:46,240 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:46,294 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:46,303 [INFO] Final candidates: []
2025-04-11 17:09:46,303 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:46,312 [INFO] Final candidates: []
2025-04-11 17:09:46,312 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:46,312 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(9)), (np.int64(7), np.int64(5)))
2025-04-11 17:09:46,312 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:46,345 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:46,355 [INFO] Final candidates: []
2025-04-11 17:09:46,355 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:46,365 [INFO] Final candidates: []
2025-04-11 17:09:46,365 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:46,365 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(12)), (np.int64(3), np.int64(14)))
2025-04-11 17:09:46,365 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:46,554 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:46,563 [INFO] Final candidates: []
2025-04-11 17:09:46,563 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:46,571 [INFO] Final candidates: []
2025-04-11 17:09:46,571 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:46,571 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(11)), (np.int64(5), np.int64(9)))
2025-04-11 17:09:46,572 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:46,652 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:46,661 [INFO] Final candidates: []
2025-04-11 17:09:46,661 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:46,670 [INFO] Final candidates: []
2025-04-11 17:09:46,670 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:46,670 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(8)), (np.int64(5), np.int64(12)))
2025-04-11 17:09:46,670 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:46,857 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:46,866 [INFO] Final candidates: []
2025-04-11 17:09:46,866 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:46,874 [INFO] Final candidates: []
2025-04-11 17:09:46,874 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:46,874 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(7)), (np.int64(6), np.int64(10)))
2025-04-11 17:09:46,875 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:47,093 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:47,101 [INFO] Final candidates: []
2025-04-11 17:09:47,101 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:47,110 [INFO] Final candidates: []
2025-04-11 17:09:47,110 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:47,110 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(12)), (np.int64(6), np.int64(7)))
2025-04-11 17:09:47,111 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:47,162 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:47,171 [INFO] Final candidates: []
2025-04-11 17:09:47,171 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:47,180 [INFO] Final candidates: []
2025-04-11 17:09:47,180 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:47,180 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(9)), (np.int64(6), np.int64(5)))
2025-04-11 17:09:47,180 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:47,410 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:47,423 [INFO] Final candidates: []
2025-04-11 17:09:47,423 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:47,431 [INFO] Final candidates: []
2025-04-11 17:09:47,431 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:47,431 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(8)), (np.int64(11), np.int64(9)))
2025-04-11 17:09:47,432 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:47,550 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:47,559 [INFO] Final candidates: []
2025-04-11 17:09:47,559 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:47,567 [INFO] Final candidates: []
2025-04-11 17:09:47,567 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:47,567 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(6)), (np.int64(4), np.int64(8)))
2025-04-11 17:09:47,568 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:47,621 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:47,630 [INFO] Final candidates: []
2025-04-11 17:09:47,630 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:47,639 [INFO] Final candidates: []
2025-04-11 17:09:47,639 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:47,639 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(11)), (np.int64(5), np.int64(11)))
2025-04-11 17:09:47,639 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:47,894 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:47,903 [INFO] Final candidates: []
2025-04-11 17:09:47,903 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:47,911 [INFO] Final candidates: []
2025-04-11 17:09:47,911 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:47,911 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(15)), (np.int64(8), np.int64(7)))
2025-04-11 17:09:47,912 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:48,139 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:48,149 [INFO] Final candidates: []
2025-04-11 17:09:48,149 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:48,157 [INFO] Final candidates: []
2025-04-11 17:09:48,157 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:48,157 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(8)), (np.int64(11), np.int64(2)))
2025-04-11 17:09:48,158 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:48,273 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:48,282 [INFO] Final candidates: []
2025-04-11 17:09:48,282 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:48,304 [INFO] Final candidates: []
2025-04-11 17:09:48,304 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:48,304 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(0)), (np.int64(9), np.int64(8)))
2025-04-11 17:09:48,305 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:48,528 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:48,537 [INFO] Final candidates: []
2025-04-11 17:09:48,537 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:48,545 [INFO] Final candidates: []
2025-04-11 17:09:48,545 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:48,545 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(1)), (np.int64(13), np.int64(0)))
2025-04-11 17:09:48,546 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:48,614 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:48,623 [INFO] Final candidates: []
2025-04-11 17:09:48,623 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:48,631 [INFO] Final candidates: []
2025-04-11 17:09:48,631 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:48,631 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(11)), (np.int64(6), np.int64(5)))
2025-04-11 17:09:48,632 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:48,810 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:48,819 [INFO] Final candidates: []
2025-04-11 17:09:48,819 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:48,828 [INFO] Final candidates: []
2025-04-11 17:09:48,828 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:48,828 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(11)), (np.int64(11), np.int64(10)))
2025-04-11 17:09:48,828 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:49,123 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:49,132 [INFO] Final candidates: []
2025-04-11 17:09:49,132 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:49,141 [INFO] Final candidates: []
2025-04-11 17:09:49,141 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:49,141 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(10)), (np.int64(11), np.int64(1)))
2025-04-11 17:09:49,142 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:49,166 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:49,175 [INFO] Final candidates: []
2025-04-11 17:09:49,175 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:49,186 [INFO] Final candidates: []
2025-04-11 17:09:49,186 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:49,186 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(12)), (np.int64(3), np.int64(15)))
2025-04-11 17:09:49,186 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:49,229 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:49,238 [INFO] Final candidates: []
2025-04-11 17:09:49,238 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:49,247 [INFO] Final candidates: []
2025-04-11 17:09:49,247 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:49,247 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(9)), (np.int64(4), np.int64(16)))
2025-04-11 17:09:49,248 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:49,272 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:49,281 [INFO] Final candidates: []
2025-04-11 17:09:49,281 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:49,290 [INFO] Final candidates: []
2025-04-11 17:09:49,290 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:49,290 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(0)), (np.int64(7), np.int64(9)))
2025-04-11 17:09:49,290 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:49,392 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:49,401 [INFO] Final candidates: []
2025-04-11 17:09:49,401 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:49,410 [INFO] Final candidates: []
2025-04-11 17:09:49,410 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:49,410 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(11)), (np.int64(3), np.int64(15)))
2025-04-11 17:09:49,410 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:49,531 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:49,540 [INFO] Final candidates: []
2025-04-11 17:09:49,540 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:49,549 [INFO] Final candidates: []
2025-04-11 17:09:49,549 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:49,549 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(7)), (np.int64(7), np.int64(8)))
2025-04-11 17:09:49,549 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:49,740 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:49,749 [INFO] Final candidates: []
2025-04-11 17:09:49,749 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:49,758 [INFO] Final candidates: []
2025-04-11 17:09:49,758 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:49,758 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(11)), (np.int64(8), np.int64(7)))
2025-04-11 17:09:49,758 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:49,788 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:49,797 [INFO] Final candidates: []
2025-04-11 17:09:49,797 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:49,805 [INFO] Final candidates: []
2025-04-11 17:09:49,805 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:49,805 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(8)), (np.int64(6), np.int64(6)))
2025-04-11 17:09:49,806 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:49,936 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:49,945 [INFO] Final candidates: []
2025-04-11 17:09:49,945 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:49,955 [INFO] Final candidates: []
2025-04-11 17:09:49,955 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:49,955 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(0)), (np.int64(3), np.int64(8)))
2025-04-11 17:09:49,955 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:50,037 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:50,045 [INFO] Final candidates: []
2025-04-11 17:09:50,045 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:50,054 [INFO] Final candidates: []
2025-04-11 17:09:50,054 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:50,054 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(10)), (np.int64(11), np.int64(9)))
2025-04-11 17:09:50,054 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:50,202 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:50,211 [INFO] Final candidates: []
2025-04-11 17:09:50,211 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:50,219 [INFO] Final candidates: []
2025-04-11 17:09:50,219 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:50,219 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(11)), (np.int64(8), np.int64(8)))
2025-04-11 17:09:50,220 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:50,443 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:50,452 [INFO] Final candidates: []
2025-04-11 17:09:50,452 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:50,460 [INFO] Final candidates: []
2025-04-11 17:09:50,460 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:50,460 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(0)), (np.int64(6), np.int64(10)))
2025-04-11 17:09:50,460 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:50,595 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:50,603 [INFO] Final candidates: []
2025-04-11 17:09:50,603 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:50,612 [INFO] Final candidates: []
2025-04-11 17:09:50,612 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:50,612 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(11)), (np.int64(11), np.int64(9)))
2025-04-11 17:09:50,613 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:50,736 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:50,745 [INFO] Final candidates: []
2025-04-11 17:09:50,745 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:50,753 [INFO] Final candidates: []
2025-04-11 17:09:50,753 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:50,754 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(1)), (np.int64(6), np.int64(7)))
2025-04-11 17:09:50,754 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:50,870 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:50,879 [INFO] Final candidates: []
2025-04-11 17:09:50,879 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:50,887 [INFO] Final candidates: []
2025-04-11 17:09:50,887 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:50,887 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(10)), (np.int64(11), np.int64(2)))
2025-04-11 17:09:50,888 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:50,991 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:51,000 [INFO] Final candidates: []
2025-04-11 17:09:51,000 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:51,008 [INFO] Final candidates: []
2025-04-11 17:09:51,008 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:51,008 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(3), np.int64(13)), (np.int64(4), np.int64(16)))
2025-04-11 17:09:51,009 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:51,085 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:51,095 [INFO] Final candidates: []
2025-04-11 17:09:51,095 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:51,105 [INFO] Final candidates: []
2025-04-11 17:09:51,105 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:51,105 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(3), np.int64(15)), (np.int64(8), np.int64(11)))
2025-04-11 17:09:51,106 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:51,306 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:51,315 [INFO] Final candidates: []
2025-04-11 17:09:51,316 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:51,324 [INFO] Final candidates: []
2025-04-11 17:09:51,324 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:51,324 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(9)), (np.int64(10), np.int64(11)))
2025-04-11 17:09:51,325 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:51,532 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:51,540 [INFO] Final candidates: []
2025-04-11 17:09:51,540 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:51,549 [INFO] Final candidates: []
2025-04-11 17:09:51,549 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:51,549 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(8)), (np.int64(9), np.int64(12)))
2025-04-11 17:09:51,549 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:51,624 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:51,632 [INFO] Final candidates: []
2025-04-11 17:09:51,632 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:51,641 [INFO] Final candidates: []
2025-04-11 17:09:51,641 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:51,641 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(7)), (np.int64(9), np.int64(6)))
2025-04-11 17:09:51,641 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:51,875 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:51,884 [INFO] Final candidates: []
2025-04-11 17:09:51,884 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:51,893 [INFO] Final candidates: []
2025-04-11 17:09:51,893 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:51,893 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(16)), (np.int64(3), np.int64(14)))
2025-04-11 17:09:51,893 [DEBUG] MCTS iteration 50: reached a node with 0 visits.
2025-04-11 17:09:51,893 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:52,024 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:52,035 [INFO] Final candidates: []
2025-04-11 17:09:52,035 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:52,043 [INFO] Final candidates: []
2025-04-11 17:09:52,043 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:52,043 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(6)), (np.int64(7), np.int64(8)))
2025-04-11 17:09:52,044 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:52,088 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:52,097 [INFO] Final candidates: []
2025-04-11 17:09:52,097 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:52,106 [INFO] Final candidates: []
2025-04-11 17:09:52,106 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:52,106 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(12)), (np.int64(11), np.int64(10)))
2025-04-11 17:09:52,106 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:52,280 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:52,289 [INFO] Final candidates: []
2025-04-11 17:09:52,289 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:52,297 [INFO] Final candidates: []
2025-04-11 17:09:52,297 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:52,297 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(1)), (np.int64(3), np.int64(13)))
2025-04-11 17:09:52,298 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:52,469 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:52,478 [INFO] Final candidates: []
2025-04-11 17:09:52,478 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:52,486 [INFO] Final candidates: []
2025-04-11 17:09:52,486 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:52,486 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(5)), (np.int64(7), np.int64(12)))
2025-04-11 17:09:52,487 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:52,706 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:52,715 [INFO] Final candidates: []
2025-04-11 17:09:52,716 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:52,724 [INFO] Final candidates: []
2025-04-11 17:09:52,724 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:52,724 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(12)), (np.int64(10), np.int64(8)))
2025-04-11 17:09:52,725 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:52,938 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:52,948 [INFO] Final candidates: []
2025-04-11 17:09:52,948 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:52,956 [INFO] Final candidates: []
2025-04-11 17:09:52,956 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:52,956 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(8)), (np.int64(13), np.int64(0)))
2025-04-11 17:09:52,957 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:53,063 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:53,073 [INFO] Final candidates: []
2025-04-11 17:09:53,073 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:53,082 [INFO] Final candidates: []
2025-04-11 17:09:53,082 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:53,082 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(9)), (np.int64(8), np.int64(8)))
2025-04-11 17:09:53,082 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:53,340 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:53,349 [INFO] Final candidates: []
2025-04-11 17:09:53,349 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:53,358 [INFO] Final candidates: []
2025-04-11 17:09:53,358 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:53,358 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(11)), (np.int64(3), np.int64(8)))
2025-04-11 17:09:53,359 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:53,550 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:53,560 [INFO] Final candidates: []
2025-04-11 17:09:53,560 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:53,569 [INFO] Final candidates: []
2025-04-11 17:09:53,569 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:53,569 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(0)), (np.int64(10), np.int64(12)))
2025-04-11 17:09:53,569 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:53,614 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:53,623 [INFO] Final candidates: []
2025-04-11 17:09:53,623 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:53,635 [INFO] Final candidates: []
2025-04-11 17:09:53,635 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:53,635 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(9)), (np.int64(11), np.int64(10)))
2025-04-11 17:09:53,636 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:53,943 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:53,952 [INFO] Final candidates: []
2025-04-11 17:09:53,952 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:53,960 [INFO] Final candidates: []
2025-04-11 17:09:53,960 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:53,960 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(15)), (np.int64(5), np.int64(10)))
2025-04-11 17:09:53,961 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:54,080 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:54,089 [INFO] Final candidates: []
2025-04-11 17:09:54,089 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:54,098 [INFO] Final candidates: []
2025-04-11 17:09:54,098 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:54,098 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(16)), (np.int64(4), np.int64(13)))
2025-04-11 17:09:54,098 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:54,154 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:54,163 [INFO] Final candidates: []
2025-04-11 17:09:54,163 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:54,171 [INFO] Final candidates: []
2025-04-11 17:09:54,171 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:54,172 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(9)), (np.int64(6), np.int64(7)))
2025-04-11 17:09:54,172 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:54,366 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:54,375 [INFO] Final candidates: []
2025-04-11 17:09:54,375 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:54,383 [INFO] Final candidates: []
2025-04-11 17:09:54,383 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:54,383 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(4)), (np.int64(3), np.int64(8)))
2025-04-11 17:09:54,384 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:54,599 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:54,608 [INFO] Final candidates: []
2025-04-11 17:09:54,608 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:54,618 [INFO] Final candidates: []
2025-04-11 17:09:54,618 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:54,618 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(10)), (np.int64(11), np.int64(2)))
2025-04-11 17:09:54,618 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:54,844 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:54,852 [INFO] Final candidates: []
2025-04-11 17:09:54,853 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:54,861 [INFO] Final candidates: []
2025-04-11 17:09:54,861 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:54,861 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(8)), (np.int64(9), np.int64(0)))
2025-04-11 17:09:54,862 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:55,073 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:55,342 [INFO] Final candidates: []
2025-04-11 17:09:55,342 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:55,358 [INFO] Final candidates: []
2025-04-11 17:09:55,358 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:55,358 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(9)), (np.int64(10), np.int64(9)))
2025-04-11 17:09:55,359 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:55,402 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:55,411 [INFO] Final candidates: []
2025-04-11 17:09:55,411 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:55,420 [INFO] Final candidates: []
2025-04-11 17:09:55,420 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:55,420 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(11)), (np.int64(4), np.int64(7)))
2025-04-11 17:09:55,420 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:55,490 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:55,500 [INFO] Final candidates: []
2025-04-11 17:09:55,500 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:55,508 [INFO] Final candidates: []
2025-04-11 17:09:55,508 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:55,508 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(11)), (np.int64(6), np.int64(7)))
2025-04-11 17:09:55,509 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:55,593 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:55,601 [INFO] Final candidates: []
2025-04-11 17:09:55,601 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:55,610 [INFO] Final candidates: []
2025-04-11 17:09:55,610 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:55,610 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(7)), (np.int64(11), np.int64(9)))
2025-04-11 17:09:55,610 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:55,692 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:55,701 [INFO] Final candidates: []
2025-04-11 17:09:55,701 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:55,710 [INFO] Final candidates: []
2025-04-11 17:09:55,710 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:55,710 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(0)), (np.int64(10), np.int64(8)))
2025-04-11 17:09:55,710 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:55,829 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:55,837 [INFO] Final candidates: []
2025-04-11 17:09:55,837 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:55,846 [INFO] Final candidates: []
2025-04-11 17:09:55,846 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:55,846 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(6)), (np.int64(5), np.int64(12)))
2025-04-11 17:09:55,846 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:55,904 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:55,913 [INFO] Final candidates: []
2025-04-11 17:09:55,913 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:55,921 [INFO] Final candidates: []
2025-04-11 17:09:55,921 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:55,921 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(9)), (np.int64(11), np.int64(1)))
2025-04-11 17:09:55,922 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:55,976 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:55,984 [INFO] Final candidates: []
2025-04-11 17:09:55,985 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:55,993 [INFO] Final candidates: []
2025-04-11 17:09:55,993 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:55,993 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(12)), (np.int64(3), np.int64(14)))
2025-04-11 17:09:55,993 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:56,179 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:56,189 [INFO] Final candidates: []
2025-04-11 17:09:56,190 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:56,200 [INFO] Final candidates: []
2025-04-11 17:09:56,200 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:56,200 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(3), np.int64(14)), (np.int64(6), np.int64(9)))
2025-04-11 17:09:56,201 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:56,378 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:56,388 [INFO] Final candidates: []
2025-04-11 17:09:56,388 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:56,397 [INFO] Final candidates: []
2025-04-11 17:09:56,397 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:56,397 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(7)), (np.int64(8), np.int64(5)))
2025-04-11 17:09:56,398 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:56,722 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:56,731 [INFO] Final candidates: []
2025-04-11 17:09:56,731 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:56,740 [INFO] Final candidates: []
2025-04-11 17:09:56,740 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:56,740 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(7)), (np.int64(7), np.int64(9)))
2025-04-11 17:09:56,740 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:56,755 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:56,764 [INFO] Final candidates: []
2025-04-11 17:09:56,764 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:56,773 [INFO] Final candidates: []
2025-04-11 17:09:56,773 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:56,773 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(10)), (np.int64(9), np.int64(12)))
2025-04-11 17:09:56,773 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:57,037 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:57,046 [INFO] Final candidates: []
2025-04-11 17:09:57,046 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:57,054 [INFO] Final candidates: []
2025-04-11 17:09:57,055 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:57,055 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(12)), (np.int64(10), np.int64(1)))
2025-04-11 17:09:57,055 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:57,202 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:57,212 [INFO] Final candidates: []
2025-04-11 17:09:57,212 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:57,220 [INFO] Final candidates: []
2025-04-11 17:09:57,220 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:57,220 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(10)), (np.int64(8), np.int64(11)))
2025-04-11 17:09:57,221 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:57,310 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:57,319 [INFO] Final candidates: []
2025-04-11 17:09:57,319 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:57,327 [INFO] Final candidates: []
2025-04-11 17:09:57,327 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:57,327 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(10)), (np.int64(2), np.int64(14)))
2025-04-11 17:09:57,328 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:57,475 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:57,484 [INFO] Final candidates: []
2025-04-11 17:09:57,484 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:57,493 [INFO] Final candidates: []
2025-04-11 17:09:57,493 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:57,493 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(8)), (np.int64(5), np.int64(14)))
2025-04-11 17:09:57,494 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:57,574 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:57,583 [INFO] Final candidates: []
2025-04-11 17:09:57,583 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:57,593 [INFO] Final candidates: []
2025-04-11 17:09:57,593 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:57,593 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(10)), (np.int64(4), np.int64(16)))
2025-04-11 17:09:57,593 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:57,672 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:57,682 [INFO] Final candidates: []
2025-04-11 17:09:57,682 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:57,690 [INFO] Final candidates: []
2025-04-11 17:09:57,690 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:57,690 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(0)), (np.int64(8), np.int64(5)))
2025-04-11 17:09:57,691 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:57,814 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:57,824 [INFO] Final candidates: []
2025-04-11 17:09:57,824 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:57,833 [INFO] Final candidates: []
2025-04-11 17:09:57,833 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:57,833 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(9)), (np.int64(6), np.int64(10)))
2025-04-11 17:09:57,834 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:57,971 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:57,980 [INFO] Final candidates: []
2025-04-11 17:09:57,980 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:57,989 [INFO] Final candidates: []
2025-04-11 17:09:57,989 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:57,989 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(7)), (np.int64(4), np.int64(7)))
2025-04-11 17:09:57,989 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:58,097 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:58,107 [INFO] Final candidates: []
2025-04-11 17:09:58,107 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:58,118 [INFO] Final candidates: []
2025-04-11 17:09:58,118 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:58,118 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(9)), (np.int64(6), np.int64(6)))
2025-04-11 17:09:58,118 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:58,398 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:58,410 [INFO] Final candidates: []
2025-04-11 17:09:58,410 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:58,419 [INFO] Final candidates: []
2025-04-11 17:09:58,419 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:58,419 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(15)), (np.int64(10), np.int64(11)))
2025-04-11 17:09:58,419 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:58,520 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:58,529 [INFO] Final candidates: []
2025-04-11 17:09:58,529 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:58,537 [INFO] Final candidates: []
2025-04-11 17:09:58,537 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:58,537 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(5)), (np.int64(5), np.int64(15)))
2025-04-11 17:09:58,538 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:58,697 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:58,706 [INFO] Final candidates: []
2025-04-11 17:09:58,706 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:58,716 [INFO] Final candidates: []
2025-04-11 17:09:58,716 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:58,716 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(0)), (np.int64(11), np.int64(9)))
2025-04-11 17:09:58,716 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:58,779 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:58,788 [INFO] Final candidates: []
2025-04-11 17:09:58,788 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:58,796 [INFO] Final candidates: []
2025-04-11 17:09:58,796 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:58,796 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(6)), (np.int64(3), np.int64(15)))
2025-04-11 17:09:58,797 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:59,056 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:59,064 [INFO] Final candidates: []
2025-04-11 17:09:59,065 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:59,073 [INFO] Final candidates: []
2025-04-11 17:09:59,073 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:59,073 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(8)), (np.int64(3), np.int64(8)))
2025-04-11 17:09:59,074 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:59,206 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:59,215 [INFO] Final candidates: []
2025-04-11 17:09:59,215 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:59,224 [INFO] Final candidates: []
2025-04-11 17:09:59,224 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:59,224 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(3), np.int64(13)), (np.int64(5), np.int64(14)))
2025-04-11 17:09:59,224 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:59,323 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:59,332 [INFO] Final candidates: []
2025-04-11 17:09:59,332 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:59,341 [INFO] Final candidates: []
2025-04-11 17:09:59,341 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:59,341 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(10)), (np.int64(6), np.int64(9)))
2025-04-11 17:09:59,341 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:59,631 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:59,640 [INFO] Final candidates: []
2025-04-11 17:09:59,640 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:59,649 [INFO] Final candidates: []
2025-04-11 17:09:59,649 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:59,649 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(8)), (np.int64(6), np.int64(10)))
2025-04-11 17:09:59,649 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:59,780 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:59,789 [INFO] Final candidates: []
2025-04-11 17:09:59,789 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:59,797 [INFO] Final candidates: []
2025-04-11 17:09:59,797 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:59,797 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(1)), (np.int64(7), np.int64(10)))
2025-04-11 17:09:59,798 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:59,856 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:09:59,865 [INFO] Final candidates: []
2025-04-11 17:09:59,865 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:59,874 [INFO] Final candidates: []
2025-04-11 17:09:59,874 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:59,874 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(9)), (np.int64(4), np.int64(7)))
2025-04-11 17:09:59,874 [INFO] Default policy: Starting random playout.
2025-04-11 17:09:59,911 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:09:59,920 [INFO] Final candidates: []
2025-04-11 17:09:59,920 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:09:59,928 [INFO] Final candidates: []
2025-04-11 17:09:59,928 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:09:59,929 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(11)), (np.int64(7), np.int64(4)))
2025-04-11 17:09:59,929 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:00,084 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:00,108 [INFO] Final candidates: []
2025-04-11 17:10:00,108 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:00,120 [INFO] Final candidates: []
2025-04-11 17:10:00,120 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:00,121 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(3), np.int64(15)), (np.int64(9), np.int64(12)))
2025-04-11 17:10:00,121 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:00,335 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:00,335 [INFO] MCTS: Search finished. Best move selected with 1 visits.
2025-04-11 17:10:00,335 [INFO] MCTS selected move: A11,P4
2025-04-11 17:10:00,335 [INFO] ===============NEW MOVE================
2025-04-11 17:10:07,152 [INFO] Starting pre-MCTS candidate collection.
2025-04-11 17:10:07,162 [INFO] Final candidates: []
2025-04-11 17:10:07,162 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:07,171 [DEBUG] board coords: [(2, 11), (3, 10), (4, 9), (5, 8), (6, 7), (7, 6)]
2025-04-11 17:10:07,171 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(0), np.int64(2)]
2025-04-11 17:10:07,171 [DEBUG] check_window_intermediate_custom: empty_cells=[(4, 9), (6, 7)]
2025-04-11 17:10:07,171 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 0 2] with coords [(2, 11), (3, 10), (4, 9), (5, 8), (6, 7), (7, 6)] triggers candidate.
2025-04-11 17:10:07,173 [INFO] Final candidates: [(4, 9), (6, 7)]
2025-04-11 17:10:07,173 [INFO] Phase defense: Collected 1unique candidate(s):[((4, 9), (6, 7))]
2025-04-11 17:10:07,173 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 17:10:07,173 [INFO] MCTS: Starting search for 50 iterations.
2025-04-11 17:10:07,186 [INFO] Final candidates: []
2025-04-11 17:10:07,186 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:07,192 [DEBUG] board coords: [(2, 11), (3, 10), (4, 9), (5, 8), (6, 7), (7, 6)]
2025-04-11 17:10:07,192 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(0), np.int64(2)]
2025-04-11 17:10:07,193 [DEBUG] check_window_intermediate_custom: empty_cells=[(4, 9), (6, 7)]
2025-04-11 17:10:07,193 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 0 2] with coords [(2, 11), (3, 10), (4, 9), (5, 8), (6, 7), (7, 6)] triggers candidate.
2025-04-11 17:10:07,194 [INFO] Final candidates: [(4, 9), (6, 7)]
2025-04-11 17:10:07,194 [INFO] Phase defense: Collected 1unique candidate(s):[((4, 9), (6, 7))]
2025-04-11 17:10:07,194 [DEBUG] Tree_policy iteration 1: Expanding move ((4, 9), (6, 7))
2025-04-11 17:10:07,195 [DEBUG] MCTS iteration 0: reached a node with 0 visits.
2025-04-11 17:10:07,196 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:07,345 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:07,345 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:07,354 [INFO] Final candidates: []
2025-04-11 17:10:07,354 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:07,362 [INFO] Final candidates: []
2025-04-11 17:10:07,362 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:07,362 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(13)), (np.int64(6), np.int64(9)))
2025-04-11 17:10:07,363 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:07,388 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:07,388 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:07,397 [INFO] Final candidates: []
2025-04-11 17:10:07,397 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:07,405 [INFO] Final candidates: []
2025-04-11 17:10:07,405 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:07,405 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(1)), (np.int64(3), np.int64(8)))
2025-04-11 17:10:07,406 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:07,461 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:07,461 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:07,470 [INFO] Final candidates: []
2025-04-11 17:10:07,470 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:07,478 [INFO] Final candidates: []
2025-04-11 17:10:07,478 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:07,478 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(1), np.int64(12)), (np.int64(6), np.int64(8)))
2025-04-11 17:10:07,479 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:07,549 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:07,549 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:07,558 [INFO] Final candidates: []
2025-04-11 17:10:07,558 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:07,567 [INFO] Final candidates: []
2025-04-11 17:10:07,567 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:07,567 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(13)), (np.int64(4), np.int64(8)))
2025-04-11 17:10:07,568 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:07,839 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:07,839 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:07,848 [INFO] Final candidates: []
2025-04-11 17:10:07,848 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:07,856 [INFO] Final candidates: []
2025-04-11 17:10:07,856 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:07,856 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(13)), (np.int64(11), np.int64(1)))
2025-04-11 17:10:07,857 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:08,190 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:08,190 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:08,198 [INFO] Final candidates: []
2025-04-11 17:10:08,198 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:08,206 [INFO] Final candidates: []
2025-04-11 17:10:08,206 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:08,206 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(10)), (np.int64(11), np.int64(11)))
2025-04-11 17:10:08,207 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:08,334 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:08,334 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:08,342 [INFO] Final candidates: []
2025-04-11 17:10:08,342 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:08,351 [INFO] Final candidates: []
2025-04-11 17:10:08,351 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:08,351 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(4), np.int64(11)), (np.int64(1), np.int64(14)))
2025-04-11 17:10:08,351 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:08,498 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:08,498 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:08,506 [INFO] Final candidates: []
2025-04-11 17:10:08,506 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:08,515 [INFO] Final candidates: []
2025-04-11 17:10:08,515 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:08,515 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(7)), (np.int64(11), np.int64(10)))
2025-04-11 17:10:08,515 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:08,592 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:08,593 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:08,601 [INFO] Final candidates: []
2025-04-11 17:10:08,601 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:08,609 [INFO] Final candidates: []
2025-04-11 17:10:08,609 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:08,609 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(6)), (np.int64(4), np.int64(8)))
2025-04-11 17:10:08,610 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:08,783 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:08,783 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:08,792 [INFO] Final candidates: []
2025-04-11 17:10:08,792 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:08,801 [INFO] Final candidates: []
2025-04-11 17:10:08,801 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:08,801 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(12)), (np.int64(4), np.int64(10)))
2025-04-11 17:10:08,802 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:08,808 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:08,808 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:08,817 [INFO] Final candidates: []
2025-04-11 17:10:08,817 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:08,826 [INFO] Final candidates: []
2025-04-11 17:10:08,826 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:08,826 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(3), np.int64(15)), (np.int64(3), np.int64(12)))
2025-04-11 17:10:08,827 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:08,976 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:08,977 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:08,985 [INFO] Final candidates: []
2025-04-11 17:10:08,985 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:08,994 [INFO] Final candidates: []
2025-04-11 17:10:08,994 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:08,994 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(13)), (np.int64(4), np.int64(10)))
2025-04-11 17:10:08,995 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:09,071 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:09,071 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:09,080 [INFO] Final candidates: []
2025-04-11 17:10:09,080 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:09,088 [INFO] Final candidates: []
2025-04-11 17:10:09,089 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:09,089 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(0)), (np.int64(8), np.int64(12)))
2025-04-11 17:10:09,089 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:09,274 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:09,275 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:09,287 [INFO] Final candidates: []
2025-04-11 17:10:09,287 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:09,296 [INFO] Final candidates: []
2025-04-11 17:10:09,296 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:09,296 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(4), np.int64(7)), (np.int64(7), np.int64(8)))
2025-04-11 17:10:09,296 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:09,317 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:09,317 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:09,325 [INFO] Final candidates: []
2025-04-11 17:10:09,325 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:09,334 [INFO] Final candidates: []
2025-04-11 17:10:09,334 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:09,334 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(0)), (np.int64(3), np.int64(11)))
2025-04-11 17:10:09,334 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:09,500 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:09,501 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:09,521 [INFO] Final candidates: []
2025-04-11 17:10:09,521 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:09,536 [INFO] Final candidates: []
2025-04-11 17:10:09,536 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:09,536 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(4), np.int64(15)), (np.int64(7), np.int64(13)))
2025-04-11 17:10:09,536 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:09,716 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:09,716 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:09,726 [INFO] Final candidates: []
2025-04-11 17:10:09,726 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:09,734 [INFO] Final candidates: []
2025-04-11 17:10:09,734 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:09,734 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(11)), (np.int64(8), np.int64(8)))
2025-04-11 17:10:09,735 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:09,951 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:09,952 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:09,962 [INFO] Final candidates: []
2025-04-11 17:10:09,962 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:09,971 [INFO] Final candidates: []
2025-04-11 17:10:09,971 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:09,971 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(12)), (np.int64(2), np.int64(13)))
2025-04-11 17:10:09,972 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:10,245 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:10,245 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:10,254 [INFO] Final candidates: []
2025-04-11 17:10:10,254 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:10,262 [INFO] Final candidates: []
2025-04-11 17:10:10,262 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:10,262 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(13)), (np.int64(8), np.int64(5)))
2025-04-11 17:10:10,263 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:10,334 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:10,334 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:10,342 [INFO] Final candidates: []
2025-04-11 17:10:10,342 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:10,351 [INFO] Final candidates: []
2025-04-11 17:10:10,351 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:10,351 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(4), np.int64(11)), (np.int64(8), np.int64(12)))
2025-04-11 17:10:10,351 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:10,494 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:10,494 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:10,502 [INFO] Final candidates: []
2025-04-11 17:10:10,502 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:10,511 [INFO] Final candidates: []
2025-04-11 17:10:10,511 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:10,511 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(1)), (np.int64(8), np.int64(7)))
2025-04-11 17:10:10,512 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:10,768 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:10,768 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:10,777 [INFO] Final candidates: []
2025-04-11 17:10:10,777 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:10,785 [INFO] Final candidates: []
2025-04-11 17:10:10,785 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:10,785 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(9)), (np.int64(10), np.int64(12)))
2025-04-11 17:10:10,786 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:10,863 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:10,863 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:10,872 [INFO] Final candidates: []
2025-04-11 17:10:10,872 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:10,880 [INFO] Final candidates: []
2025-04-11 17:10:10,880 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:10,880 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(10)), (np.int64(2), np.int64(12)))
2025-04-11 17:10:10,881 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:11,027 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:11,028 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:11,036 [INFO] Final candidates: []
2025-04-11 17:10:11,036 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:11,045 [INFO] Final candidates: []
2025-04-11 17:10:11,045 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:11,045 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(3), np.int64(15)), (np.int64(1), np.int64(11)))
2025-04-11 17:10:11,046 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:11,278 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:11,278 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:11,286 [INFO] Final candidates: []
2025-04-11 17:10:11,286 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:11,294 [INFO] Final candidates: []
2025-04-11 17:10:11,294 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:11,294 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(2), np.int64(12)), (np.int64(10), np.int64(9)))
2025-04-11 17:10:11,295 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:11,506 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:11,507 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:11,515 [INFO] Final candidates: []
2025-04-11 17:10:11,515 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:11,524 [INFO] Final candidates: []
2025-04-11 17:10:11,524 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:11,524 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(12)), (np.int64(5), np.int64(9)))
2025-04-11 17:10:11,524 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:11,601 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:11,601 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:11,610 [INFO] Final candidates: []
2025-04-11 17:10:11,610 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:11,618 [INFO] Final candidates: []
2025-04-11 17:10:11,618 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:11,618 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(0)), (np.int64(8), np.int64(5)))
2025-04-11 17:10:11,619 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:11,753 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:11,753 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:11,762 [INFO] Final candidates: []
2025-04-11 17:10:11,762 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:11,770 [INFO] Final candidates: []
2025-04-11 17:10:11,770 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:11,770 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(11)), (np.int64(6), np.int64(5)))
2025-04-11 17:10:11,771 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:11,917 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:11,917 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:11,926 [INFO] Final candidates: []
2025-04-11 17:10:11,926 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:11,934 [INFO] Final candidates: []
2025-04-11 17:10:11,934 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:11,934 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(10)), (np.int64(2), np.int64(9)))
2025-04-11 17:10:11,934 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:11,991 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:11,991 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:12,000 [INFO] Final candidates: []
2025-04-11 17:10:12,000 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:12,008 [INFO] Final candidates: []
2025-04-11 17:10:12,008 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:12,008 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(12)), (np.int64(13), np.int64(0)))
2025-04-11 17:10:12,008 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:12,114 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:12,114 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:12,123 [INFO] Final candidates: []
2025-04-11 17:10:12,123 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:12,131 [INFO] Final candidates: []
2025-04-11 17:10:12,131 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:12,131 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(7)), (np.int64(7), np.int64(4)))
2025-04-11 17:10:12,132 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:12,429 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:12,429 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:12,437 [INFO] Final candidates: []
2025-04-11 17:10:12,437 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:12,447 [INFO] Final candidates: []
2025-04-11 17:10:12,447 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:12,447 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(8)), (np.int64(3), np.int64(11)))
2025-04-11 17:10:12,447 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:12,483 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:12,483 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:12,492 [INFO] Final candidates: []
2025-04-11 17:10:12,492 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:12,500 [INFO] Final candidates: []
2025-04-11 17:10:12,500 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:12,500 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(9)), (np.int64(5), np.int64(15)))
2025-04-11 17:10:12,500 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:12,651 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:12,651 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:12,659 [INFO] Final candidates: []
2025-04-11 17:10:12,659 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:12,667 [INFO] Final candidates: []
2025-04-11 17:10:12,667 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:12,668 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(4), np.int64(8)), (np.int64(2), np.int64(9)))
2025-04-11 17:10:12,668 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:12,717 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:12,717 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:12,726 [INFO] Final candidates: []
2025-04-11 17:10:12,726 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:12,734 [INFO] Final candidates: []
2025-04-11 17:10:12,734 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:12,734 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(12)), (np.int64(9), np.int64(12)))
2025-04-11 17:10:12,735 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:12,864 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:12,864 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:12,872 [INFO] Final candidates: []
2025-04-11 17:10:12,872 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:12,880 [INFO] Final candidates: []
2025-04-11 17:10:12,880 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:12,880 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(3), np.int64(11)), (np.int64(4), np.int64(12)))
2025-04-11 17:10:12,881 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:12,989 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:12,989 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:12,997 [INFO] Final candidates: []
2025-04-11 17:10:12,997 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:13,006 [INFO] Final candidates: []
2025-04-11 17:10:13,006 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:13,006 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(12)), (np.int64(11), np.int64(1)))
2025-04-11 17:10:13,006 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:13,054 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:13,054 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:13,063 [INFO] Final candidates: []
2025-04-11 17:10:13,063 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:13,075 [INFO] Final candidates: []
2025-04-11 17:10:13,075 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:13,075 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(12)), (np.int64(2), np.int64(14)))
2025-04-11 17:10:13,076 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:13,128 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:13,128 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:13,138 [INFO] Final candidates: []
2025-04-11 17:10:13,138 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:13,148 [INFO] Final candidates: []
2025-04-11 17:10:13,148 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:13,148 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(6)), (np.int64(6), np.int64(9)))
2025-04-11 17:10:13,148 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:13,295 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:13,295 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:13,304 [INFO] Final candidates: []
2025-04-11 17:10:13,304 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:13,312 [INFO] Final candidates: []
2025-04-11 17:10:13,312 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:13,312 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(5)), (np.int64(7), np.int64(4)))
2025-04-11 17:10:13,313 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:13,440 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:13,440 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:13,449 [INFO] Final candidates: []
2025-04-11 17:10:13,449 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:13,457 [INFO] Final candidates: []
2025-04-11 17:10:13,457 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:13,457 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(7)), (np.int64(5), np.int64(6)))
2025-04-11 17:10:13,458 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:13,535 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:13,535 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:13,544 [INFO] Final candidates: []
2025-04-11 17:10:13,544 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:13,552 [INFO] Final candidates: []
2025-04-11 17:10:13,552 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:13,552 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(3), np.int64(12)), (np.int64(2), np.int64(14)))
2025-04-11 17:10:13,553 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:13,864 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:13,864 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:13,873 [INFO] Final candidates: []
2025-04-11 17:10:13,873 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:13,882 [INFO] Final candidates: []
2025-04-11 17:10:13,882 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:13,883 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(11)), (np.int64(10), np.int64(12)))
2025-04-11 17:10:13,883 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:14,038 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:14,038 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:14,048 [INFO] Final candidates: []
2025-04-11 17:10:14,048 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:14,056 [INFO] Final candidates: []
2025-04-11 17:10:14,056 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:14,056 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(4), np.int64(13)), (np.int64(9), np.int64(11)))
2025-04-11 17:10:14,057 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:14,227 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:14,227 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:14,238 [INFO] Final candidates: []
2025-04-11 17:10:14,238 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:14,246 [INFO] Final candidates: []
2025-04-11 17:10:14,246 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:14,246 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(8)), (np.int64(2), np.int64(14)))
2025-04-11 17:10:14,247 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:14,440 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:14,440 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:14,448 [INFO] Final candidates: []
2025-04-11 17:10:14,448 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:14,457 [INFO] Final candidates: []
2025-04-11 17:10:14,457 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:14,457 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(1)), (np.int64(10), np.int64(2)))
2025-04-11 17:10:14,458 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:14,524 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:14,524 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:14,535 [INFO] Final candidates: []
2025-04-11 17:10:14,535 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:14,543 [INFO] Final candidates: []
2025-04-11 17:10:14,543 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:14,543 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(3), np.int64(12)), (np.int64(3), np.int64(9)))
2025-04-11 17:10:14,544 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:14,826 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:14,826 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:14,835 [INFO] Final candidates: []
2025-04-11 17:10:14,835 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:14,843 [INFO] Final candidates: []
2025-04-11 17:10:14,843 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:14,843 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(2), np.int64(13)), (np.int64(6), np.int64(9)))
2025-04-11 17:10:14,844 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:14,939 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:14,939 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:14,948 [INFO] Final candidates: []
2025-04-11 17:10:14,948 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:14,957 [INFO] Final candidates: []
2025-04-11 17:10:14,957 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:14,957 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(3), np.int64(15)), (np.int64(7), np.int64(5)))
2025-04-11 17:10:14,957 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:15,100 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:15,100 [INFO] MCTS: Search finished. Best move selected with 50 visits.
2025-04-11 17:10:15,100 [INFO] MCTS (defense candidates) selected move: K5,H7
2025-04-11 17:10:23,340 [INFO] Starting pre-MCTS candidate collection.
2025-04-11 17:10:23,348 [INFO] Final candidates: []
2025-04-11 17:10:23,348 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:23,356 [INFO] Final candidates: []
2025-04-11 17:10:23,357 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:23,357 [INFO] No candidate found in Phase 1 or 2; using full legal moves for MCTS.
2025-04-11 17:10:23,357 [INFO] MCTS: Starting search for 100 iterations.
2025-04-11 17:10:23,366 [INFO] Final candidates: []
2025-04-11 17:10:23,366 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:23,377 [INFO] Final candidates: []
2025-04-11 17:10:23,377 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:23,377 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(2), np.int64(13)), (np.int64(12), np.int64(10)))
2025-04-11 17:10:23,378 [DEBUG] MCTS iteration 0: reached a node with 0 visits.
2025-04-11 17:10:23,378 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:23,494 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:23,503 [INFO] Final candidates: []
2025-04-11 17:10:23,503 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:23,511 [INFO] Final candidates: []
2025-04-11 17:10:23,511 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:23,511 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(9)), (np.int64(11), np.int64(1)))
2025-04-11 17:10:23,512 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:23,703 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:23,712 [INFO] Final candidates: []
2025-04-11 17:10:23,712 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:23,720 [INFO] Final candidates: []
2025-04-11 17:10:23,720 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:23,720 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(9)), (np.int64(0), np.int64(11)))
2025-04-11 17:10:23,720 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:23,787 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:23,797 [INFO] Final candidates: []
2025-04-11 17:10:23,797 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:23,806 [INFO] Final candidates: []
2025-04-11 17:10:23,806 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:23,806 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(9)), (np.int64(9), np.int64(0)))
2025-04-11 17:10:23,806 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:23,925 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:23,934 [INFO] Final candidates: []
2025-04-11 17:10:23,934 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:23,942 [INFO] Final candidates: []
2025-04-11 17:10:23,942 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:23,942 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(3), np.int64(12)), (np.int64(8), np.int64(6)))
2025-04-11 17:10:23,943 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:24,024 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:24,033 [INFO] Final candidates: []
2025-04-11 17:10:24,033 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:24,041 [INFO] Final candidates: []
2025-04-11 17:10:24,041 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:24,041 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(1), np.int64(14)), (np.int64(2), np.int64(8)))
2025-04-11 17:10:24,042 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:24,163 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:24,172 [INFO] Final candidates: []
2025-04-11 17:10:24,172 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:24,180 [INFO] Final candidates: []
2025-04-11 17:10:24,180 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:24,180 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(7)), (np.int64(11), np.int64(10)))
2025-04-11 17:10:24,181 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:24,432 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:24,441 [INFO] Final candidates: []
2025-04-11 17:10:24,441 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:24,449 [INFO] Final candidates: []
2025-04-11 17:10:24,449 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:24,449 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(14)), (np.int64(1), np.int64(14)))
2025-04-11 17:10:24,450 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:24,485 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:24,493 [INFO] Final candidates: []
2025-04-11 17:10:24,494 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:24,502 [INFO] Final candidates: []
2025-04-11 17:10:24,502 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:24,502 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(11)), (np.int64(9), np.int64(6)))
2025-04-11 17:10:24,502 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:24,538 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:24,546 [INFO] Final candidates: []
2025-04-11 17:10:24,546 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:24,554 [INFO] Final candidates: []
2025-04-11 17:10:24,554 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:24,554 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(10)), (np.int64(12), np.int64(0)))
2025-04-11 17:10:24,555 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:24,766 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:24,775 [INFO] Final candidates: []
2025-04-11 17:10:24,775 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:24,783 [INFO] Final candidates: []
2025-04-11 17:10:24,784 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:24,784 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(11)), (np.int64(7), np.int64(13)))
2025-04-11 17:10:24,784 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:24,975 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:24,983 [INFO] Final candidates: []
2025-04-11 17:10:24,983 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:24,991 [INFO] Final candidates: []
2025-04-11 17:10:24,991 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:24,991 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(13)), (np.int64(7), np.int64(9)))
2025-04-11 17:10:24,992 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:25,017 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:25,025 [INFO] Final candidates: []
2025-04-11 17:10:25,025 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:25,034 [INFO] Final candidates: []
2025-04-11 17:10:25,034 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:25,034 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(8)), (np.int64(1), np.int64(12)))
2025-04-11 17:10:25,034 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:25,275 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:25,286 [INFO] Final candidates: []
2025-04-11 17:10:25,286 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:25,294 [INFO] Final candidates: []
2025-04-11 17:10:25,294 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:25,294 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(10)), (np.int64(10), np.int64(11)))
2025-04-11 17:10:25,295 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:25,412 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:25,420 [INFO] Final candidates: []
2025-04-11 17:10:25,420 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:25,429 [INFO] Final candidates: []
2025-04-11 17:10:25,429 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:25,429 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(8)), (np.int64(12), np.int64(0)))
2025-04-11 17:10:25,429 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:25,610 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:25,618 [INFO] Final candidates: []
2025-04-11 17:10:25,618 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:25,626 [INFO] Final candidates: []
2025-04-11 17:10:25,626 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:25,626 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(6)), (np.int64(4), np.int64(8)))
2025-04-11 17:10:25,627 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:25,827 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:25,835 [INFO] Final candidates: []
2025-04-11 17:10:25,836 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:25,847 [INFO] Final candidates: []
2025-04-11 17:10:25,847 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:25,847 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(8)), (np.int64(5), np.int64(6)))
2025-04-11 17:10:25,848 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:26,115 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:26,124 [INFO] Final candidates: []
2025-04-11 17:10:26,124 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:26,132 [INFO] Final candidates: []
2025-04-11 17:10:26,132 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:26,132 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(7)), (np.int64(4), np.int64(16)))
2025-04-11 17:10:26,133 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:26,394 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:26,403 [INFO] Final candidates: []
2025-04-11 17:10:26,403 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:26,412 [INFO] Final candidates: []
2025-04-11 17:10:26,412 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:26,412 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(11)), (np.int64(7), np.int64(8)))
2025-04-11 17:10:26,412 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:26,552 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:26,561 [INFO] Final candidates: []
2025-04-11 17:10:26,561 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:26,569 [INFO] Final candidates: []
2025-04-11 17:10:26,569 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:26,569 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(3), np.int64(9)), (np.int64(8), np.int64(12)))
2025-04-11 17:10:26,570 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:26,642 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:26,650 [INFO] Final candidates: []
2025-04-11 17:10:26,650 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:26,658 [INFO] Final candidates: []
2025-04-11 17:10:26,658 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:26,658 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(13)), (np.int64(4), np.int64(12)))
2025-04-11 17:10:26,659 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:26,734 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:26,742 [INFO] Final candidates: []
2025-04-11 17:10:26,742 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:26,750 [INFO] Final candidates: []
2025-04-11 17:10:26,750 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:26,750 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(8)), (np.int64(6), np.int64(10)))
2025-04-11 17:10:26,751 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:26,834 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:26,843 [INFO] Final candidates: []
2025-04-11 17:10:26,843 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:26,852 [INFO] Final candidates: []
2025-04-11 17:10:26,853 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:26,853 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(10)), (np.int64(3), np.int64(12)))
2025-04-11 17:10:26,854 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:27,078 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:27,086 [INFO] Final candidates: []
2025-04-11 17:10:27,086 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:27,094 [INFO] Final candidates: []
2025-04-11 17:10:27,095 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:27,095 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(6)), (np.int64(0), np.int64(11)))
2025-04-11 17:10:27,095 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:27,182 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:27,190 [INFO] Final candidates: []
2025-04-11 17:10:27,190 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:27,198 [INFO] Final candidates: []
2025-04-11 17:10:27,198 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:27,198 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(10)), (np.int64(8), np.int64(7)))
2025-04-11 17:10:27,199 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:27,210 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:27,219 [INFO] Final candidates: []
2025-04-11 17:10:27,219 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:27,227 [INFO] Final candidates: []
2025-04-11 17:10:27,227 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:27,227 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(8)), (np.int64(4), np.int64(8)))
2025-04-11 17:10:27,227 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:27,416 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:27,425 [INFO] Final candidates: []
2025-04-11 17:10:27,425 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:27,433 [INFO] Final candidates: []
2025-04-11 17:10:27,433 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:27,433 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(9)), (np.int64(1), np.int64(12)))
2025-04-11 17:10:27,434 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:27,465 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:27,475 [INFO] Final candidates: []
2025-04-11 17:10:27,475 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:27,484 [INFO] Final candidates: []
2025-04-11 17:10:27,484 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:27,484 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(14)), (np.int64(3), np.int64(16)))
2025-04-11 17:10:27,484 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:27,575 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:27,584 [INFO] Final candidates: []
2025-04-11 17:10:27,584 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:27,592 [INFO] Final candidates: []
2025-04-11 17:10:27,592 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:27,592 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(11)), (np.int64(4), np.int64(12)))
2025-04-11 17:10:27,592 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:27,704 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:27,713 [INFO] Final candidates: []
2025-04-11 17:10:27,713 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:27,729 [INFO] Final candidates: []
2025-04-11 17:10:27,729 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:27,729 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(13)), (np.int64(2), np.int64(7)))
2025-04-11 17:10:27,730 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:27,868 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:27,876 [INFO] Final candidates: []
2025-04-11 17:10:27,876 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:27,884 [INFO] Final candidates: []
2025-04-11 17:10:27,884 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:27,884 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(4)), (np.int64(2), np.int64(14)))
2025-04-11 17:10:27,885 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:27,925 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:27,934 [INFO] Final candidates: []
2025-04-11 17:10:27,934 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:27,954 [INFO] Final candidates: []
2025-04-11 17:10:27,954 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:27,954 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(0)), (np.int64(9), np.int64(11)))
2025-04-11 17:10:27,956 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:28,222 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:28,231 [INFO] Final candidates: []
2025-04-11 17:10:28,231 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:28,240 [INFO] Final candidates: []
2025-04-11 17:10:28,240 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:28,240 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(0)), (np.int64(3), np.int64(11)))
2025-04-11 17:10:28,240 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:28,361 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:28,370 [INFO] Final candidates: []
2025-04-11 17:10:28,370 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:28,378 [INFO] Final candidates: []
2025-04-11 17:10:28,378 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:28,378 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(14)), (np.int64(2), np.int64(13)))
2025-04-11 17:10:28,379 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:28,467 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:28,475 [INFO] Final candidates: []
2025-04-11 17:10:28,476 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:28,484 [INFO] Final candidates: []
2025-04-11 17:10:28,484 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:28,484 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(1), np.int64(12)), (np.int64(2), np.int64(12)))
2025-04-11 17:10:28,484 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:28,509 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:28,517 [INFO] Final candidates: []
2025-04-11 17:10:28,517 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:28,525 [INFO] Final candidates: []
2025-04-11 17:10:28,525 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:28,525 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(1)), (np.int64(7), np.int64(8)))
2025-04-11 17:10:28,526 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:28,643 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:28,651 [INFO] Final candidates: []
2025-04-11 17:10:28,651 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:28,660 [INFO] Final candidates: []
2025-04-11 17:10:28,660 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:28,660 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(1)), (np.int64(4), np.int64(10)))
2025-04-11 17:10:28,660 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:28,897 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:28,905 [INFO] Final candidates: []
2025-04-11 17:10:28,905 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:28,913 [INFO] Final candidates: []
2025-04-11 17:10:28,913 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:28,914 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(5)), (np.int64(12), np.int64(10)))
2025-04-11 17:10:28,914 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:29,068 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:29,077 [INFO] Final candidates: []
2025-04-11 17:10:29,077 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:29,085 [INFO] Final candidates: []
2025-04-11 17:10:29,087 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:29,087 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(10)), (np.int64(11), np.int64(9)))
2025-04-11 17:10:29,087 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:29,195 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:29,203 [INFO] Final candidates: []
2025-04-11 17:10:29,203 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:29,211 [INFO] Final candidates: []
2025-04-11 17:10:29,211 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:29,211 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(2), np.int64(10)), (np.int64(10), np.int64(9)))
2025-04-11 17:10:29,212 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:29,425 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:29,433 [INFO] Final candidates: []
2025-04-11 17:10:29,433 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:29,442 [INFO] Final candidates: []
2025-04-11 17:10:29,442 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:29,442 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(7)), (np.int64(10), np.int64(2)))
2025-04-11 17:10:29,442 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:29,613 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:29,621 [INFO] Final candidates: []
2025-04-11 17:10:29,621 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:29,629 [INFO] Final candidates: []
2025-04-11 17:10:29,629 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:29,629 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(10)), (np.int64(6), np.int64(10)))
2025-04-11 17:10:29,630 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:29,884 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:29,893 [INFO] Final candidates: []
2025-04-11 17:10:29,893 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:29,901 [INFO] Final candidates: []
2025-04-11 17:10:29,901 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:29,901 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(10)), (np.int64(12), np.int64(0)))
2025-04-11 17:10:29,902 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:29,955 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:29,964 [INFO] Final candidates: []
2025-04-11 17:10:29,964 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:29,972 [INFO] Final candidates: []
2025-04-11 17:10:29,972 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:29,972 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(5)), (np.int64(7), np.int64(9)))
2025-04-11 17:10:29,973 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:30,058 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:30,067 [INFO] Final candidates: []
2025-04-11 17:10:30,067 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:30,075 [INFO] Final candidates: []
2025-04-11 17:10:30,075 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:30,075 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(8)), (np.int64(10), np.int64(9)))
2025-04-11 17:10:30,075 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:30,346 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:30,355 [INFO] Final candidates: []
2025-04-11 17:10:30,355 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:30,363 [INFO] Final candidates: []
2025-04-11 17:10:30,363 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:30,363 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(1), np.int64(12)), (np.int64(4), np.int64(8)))
2025-04-11 17:10:30,364 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:30,437 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:30,445 [INFO] Final candidates: []
2025-04-11 17:10:30,445 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:30,454 [INFO] Final candidates: []
2025-04-11 17:10:30,454 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:30,454 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(10)), (np.int64(2), np.int64(12)))
2025-04-11 17:10:30,454 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:30,647 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:30,660 [INFO] Final candidates: []
2025-04-11 17:10:30,660 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:30,668 [INFO] Final candidates: []
2025-04-11 17:10:30,668 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:30,668 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(9)), (np.int64(8), np.int64(6)))
2025-04-11 17:10:30,668 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:30,832 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:30,840 [INFO] Final candidates: []
2025-04-11 17:10:30,841 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:30,849 [INFO] Final candidates: []
2025-04-11 17:10:30,849 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:30,849 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(13)), (np.int64(9), np.int64(11)))
2025-04-11 17:10:30,849 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:30,877 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:30,885 [INFO] Final candidates: []
2025-04-11 17:10:30,886 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:30,894 [INFO] Final candidates: []
2025-04-11 17:10:30,894 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:30,894 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(1)), (np.int64(3), np.int64(7)))
2025-04-11 17:10:30,894 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:30,945 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:30,953 [INFO] Final candidates: []
2025-04-11 17:10:30,953 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:30,962 [INFO] Final candidates: []
2025-04-11 17:10:30,962 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:30,962 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(10)), (np.int64(11), np.int64(10)))
2025-04-11 17:10:30,962 [DEBUG] MCTS iteration 50: reached a node with 0 visits.
2025-04-11 17:10:30,962 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:31,068 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:31,076 [INFO] Final candidates: []
2025-04-11 17:10:31,076 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:31,085 [INFO] Final candidates: []
2025-04-11 17:10:31,085 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:31,085 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(0)), (np.int64(2), np.int64(15)))
2025-04-11 17:10:31,085 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:31,205 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:31,214 [INFO] Final candidates: []
2025-04-11 17:10:31,214 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:31,222 [INFO] Final candidates: []
2025-04-11 17:10:31,222 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:31,222 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(1), np.int64(11)), (np.int64(4), np.int64(16)))
2025-04-11 17:10:31,223 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:31,372 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:31,382 [INFO] Final candidates: []
2025-04-11 17:10:31,382 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:31,390 [INFO] Final candidates: []
2025-04-11 17:10:31,390 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:31,390 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(9)), (np.int64(9), np.int64(7)))
2025-04-11 17:10:31,391 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:31,540 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:31,549 [INFO] Final candidates: []
2025-04-11 17:10:31,549 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:31,557 [INFO] Final candidates: []
2025-04-11 17:10:31,557 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:31,557 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(11)), (np.int64(2), np.int64(12)))
2025-04-11 17:10:31,558 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:31,802 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:31,812 [INFO] Final candidates: []
2025-04-11 17:10:31,812 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:31,820 [INFO] Final candidates: []
2025-04-11 17:10:31,820 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:31,820 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(3), np.int64(6)), (np.int64(7), np.int64(5)))
2025-04-11 17:10:31,821 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:31,983 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:31,992 [INFO] Final candidates: []
2025-04-11 17:10:31,992 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:32,000 [INFO] Final candidates: []
2025-04-11 17:10:32,000 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:32,000 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(10)), (np.int64(9), np.int64(12)))
2025-04-11 17:10:32,001 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:32,122 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:32,131 [INFO] Final candidates: []
2025-04-11 17:10:32,131 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:32,139 [INFO] Final candidates: []
2025-04-11 17:10:32,139 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:32,139 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(2), np.int64(15)), (np.int64(5), np.int64(15)))
2025-04-11 17:10:32,140 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:32,279 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:32,287 [INFO] Final candidates: []
2025-04-11 17:10:32,287 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:32,295 [INFO] Final candidates: []
2025-04-11 17:10:32,295 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:32,295 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(12)), (np.int64(8), np.int64(7)))
2025-04-11 17:10:32,296 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:32,513 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:32,523 [INFO] Final candidates: []
2025-04-11 17:10:32,523 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:32,531 [INFO] Final candidates: []
2025-04-11 17:10:32,531 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:32,531 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(5)), (np.int64(6), np.int64(10)))
2025-04-11 17:10:32,532 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:32,692 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:32,701 [INFO] Final candidates: []
2025-04-11 17:10:32,701 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:32,709 [INFO] Final candidates: []
2025-04-11 17:10:32,709 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:32,709 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(2), np.int64(15)), (np.int64(5), np.int64(4)))
2025-04-11 17:10:32,710 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:32,906 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:32,914 [INFO] Final candidates: []
2025-04-11 17:10:32,915 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:32,923 [INFO] Final candidates: []
2025-04-11 17:10:32,923 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:32,923 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(0)), (np.int64(2), np.int64(12)))
2025-04-11 17:10:32,924 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:33,025 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:33,034 [INFO] Final candidates: []
2025-04-11 17:10:33,034 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:33,042 [INFO] Final candidates: []
2025-04-11 17:10:33,042 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:33,042 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(8)), (np.int64(4), np.int64(7)))
2025-04-11 17:10:33,043 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:33,094 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:33,103 [INFO] Final candidates: []
2025-04-11 17:10:33,103 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:33,111 [INFO] Final candidates: []
2025-04-11 17:10:33,111 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:33,111 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(10)), (np.int64(7), np.int64(7)))
2025-04-11 17:10:33,112 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:33,217 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:33,225 [INFO] Final candidates: []
2025-04-11 17:10:33,225 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:33,233 [INFO] Final candidates: []
2025-04-11 17:10:33,233 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:33,233 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(3), np.int64(9)), (np.int64(4), np.int64(8)))
2025-04-11 17:10:33,234 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:33,495 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:33,503 [INFO] Final candidates: []
2025-04-11 17:10:33,504 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:33,512 [INFO] Final candidates: []
2025-04-11 17:10:33,512 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:33,512 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(10)), (np.int64(4), np.int64(12)))
2025-04-11 17:10:33,512 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:33,613 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:33,621 [INFO] Final candidates: []
2025-04-11 17:10:33,621 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:33,629 [INFO] Final candidates: []
2025-04-11 17:10:33,629 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:33,629 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(10)), (np.int64(2), np.int64(7)))
2025-04-11 17:10:33,630 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:33,833 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:33,841 [INFO] Final candidates: []
2025-04-11 17:10:33,841 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:33,849 [INFO] Final candidates: []
2025-04-11 17:10:33,849 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:33,849 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(2), np.int64(8)), (np.int64(2), np.int64(12)))
2025-04-11 17:10:33,850 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:33,941 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:33,950 [INFO] Final candidates: []
2025-04-11 17:10:33,950 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:33,958 [INFO] Final candidates: []
2025-04-11 17:10:33,958 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:33,958 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(15)), (np.int64(10), np.int64(9)))
2025-04-11 17:10:33,959 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:34,110 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:34,119 [INFO] Final candidates: []
2025-04-11 17:10:34,119 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:34,127 [INFO] Final candidates: []
2025-04-11 17:10:34,127 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:34,127 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(1)), (np.int64(9), np.int64(7)))
2025-04-11 17:10:34,127 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:34,177 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:34,185 [INFO] Final candidates: []
2025-04-11 17:10:34,185 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:34,194 [INFO] Final candidates: []
2025-04-11 17:10:34,194 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:34,194 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(14)), (np.int64(8), np.int64(7)))
2025-04-11 17:10:34,195 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:34,422 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:34,441 [INFO] Final candidates: []
2025-04-11 17:10:34,441 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:34,449 [INFO] Final candidates: []
2025-04-11 17:10:34,449 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:34,449 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(6)), (np.int64(9), np.int64(6)))
2025-04-11 17:10:34,450 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:34,529 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:34,538 [INFO] Final candidates: []
2025-04-11 17:10:34,538 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:34,546 [INFO] Final candidates: []
2025-04-11 17:10:34,546 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:34,546 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(7)), (np.int64(2), np.int64(12)))
2025-04-11 17:10:34,546 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:34,655 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:34,663 [INFO] Final candidates: []
2025-04-11 17:10:34,663 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:34,671 [INFO] Final candidates: []
2025-04-11 17:10:34,671 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:34,671 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(5)), (np.int64(12), np.int64(1)))
2025-04-11 17:10:34,672 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:34,806 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:34,815 [INFO] Final candidates: []
2025-04-11 17:10:34,815 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:34,823 [INFO] Final candidates: []
2025-04-11 17:10:34,823 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:34,823 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(9)), (np.int64(5), np.int64(15)))
2025-04-11 17:10:34,824 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:34,882 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:34,890 [INFO] Final candidates: []
2025-04-11 17:10:34,891 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:34,899 [INFO] Final candidates: []
2025-04-11 17:10:34,899 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:34,899 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(2)), (np.int64(4), np.int64(11)))
2025-04-11 17:10:34,899 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:34,912 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:34,920 [INFO] Final candidates: []
2025-04-11 17:10:34,920 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:34,928 [INFO] Final candidates: []
2025-04-11 17:10:34,928 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:34,928 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(4)), (np.int64(5), np.int64(6)))
2025-04-11 17:10:34,929 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:35,022 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:35,030 [INFO] Final candidates: []
2025-04-11 17:10:35,031 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:35,039 [INFO] Final candidates: []
2025-04-11 17:10:35,039 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:35,039 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(13)), (np.int64(4), np.int64(13)))
2025-04-11 17:10:35,039 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:35,112 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:35,121 [INFO] Final candidates: []
2025-04-11 17:10:35,121 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:35,129 [INFO] Final candidates: []
2025-04-11 17:10:35,129 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:35,129 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(12)), (np.int64(5), np.int64(6)))
2025-04-11 17:10:35,129 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:35,300 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:35,308 [INFO] Final candidates: []
2025-04-11 17:10:35,309 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:35,320 [INFO] Final candidates: []
2025-04-11 17:10:35,320 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:35,320 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(12)), (np.int64(0), np.int64(11)))
2025-04-11 17:10:35,320 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:35,466 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:35,476 [INFO] Final candidates: []
2025-04-11 17:10:35,476 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:35,487 [INFO] Final candidates: []
2025-04-11 17:10:35,487 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:35,487 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(3), np.int64(12)), (np.int64(8), np.int64(7)))
2025-04-11 17:10:35,488 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:35,593 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:35,601 [INFO] Final candidates: []
2025-04-11 17:10:35,601 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:35,609 [INFO] Final candidates: []
2025-04-11 17:10:35,609 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:35,609 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(3), np.int64(15)), (np.int64(9), np.int64(12)))
2025-04-11 17:10:35,610 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:35,734 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:35,742 [INFO] Final candidates: []
2025-04-11 17:10:35,742 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:35,750 [INFO] Final candidates: []
2025-04-11 17:10:35,750 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:35,750 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(11)), (np.int64(9), np.int64(11)))
2025-04-11 17:10:35,751 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:35,915 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:35,923 [INFO] Final candidates: []
2025-04-11 17:10:35,923 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:35,931 [INFO] Final candidates: []
2025-04-11 17:10:35,931 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:35,931 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(12)), (np.int64(11), np.int64(9)))
2025-04-11 17:10:35,932 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:36,137 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:36,146 [INFO] Final candidates: []
2025-04-11 17:10:36,146 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:36,154 [INFO] Final candidates: []
2025-04-11 17:10:36,154 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:36,154 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(2)), (np.int64(5), np.int64(11)))
2025-04-11 17:10:36,155 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:36,205 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:36,213 [INFO] Final candidates: []
2025-04-11 17:10:36,214 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:36,222 [INFO] Final candidates: []
2025-04-11 17:10:36,222 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:36,222 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(9)), (np.int64(2), np.int64(9)))
2025-04-11 17:10:36,222 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:36,252 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:36,261 [INFO] Final candidates: []
2025-04-11 17:10:36,261 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:36,269 [INFO] Final candidates: []
2025-04-11 17:10:36,269 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:36,269 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(11)), (np.int64(8), np.int64(7)))
2025-04-11 17:10:36,270 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:36,470 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:36,479 [INFO] Final candidates: []
2025-04-11 17:10:36,479 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:36,487 [INFO] Final candidates: []
2025-04-11 17:10:36,487 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:36,487 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(1), np.int64(12)), (np.int64(2), np.int64(10)))
2025-04-11 17:10:36,488 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:36,562 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:36,572 [INFO] Final candidates: []
2025-04-11 17:10:36,572 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:36,580 [INFO] Final candidates: []
2025-04-11 17:10:36,580 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:36,580 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(10)), (np.int64(10), np.int64(2)))
2025-04-11 17:10:36,580 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:36,815 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:36,833 [INFO] Final candidates: []
2025-04-11 17:10:36,833 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:36,841 [INFO] Final candidates: []
2025-04-11 17:10:36,841 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:36,841 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(11)), (np.int64(5), np.int64(11)))
2025-04-11 17:10:36,841 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:36,961 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:36,969 [INFO] Final candidates: []
2025-04-11 17:10:36,969 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:36,978 [INFO] Final candidates: []
2025-04-11 17:10:36,978 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:36,978 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(9)), (np.int64(6), np.int64(8)))
2025-04-11 17:10:36,979 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:37,099 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:37,108 [INFO] Final candidates: []
2025-04-11 17:10:37,108 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:37,116 [INFO] Final candidates: []
2025-04-11 17:10:37,116 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:37,116 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(2), np.int64(13)), (np.int64(9), np.int64(6)))
2025-04-11 17:10:37,117 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:37,397 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:37,405 [INFO] Final candidates: []
2025-04-11 17:10:37,405 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:37,413 [INFO] Final candidates: []
2025-04-11 17:10:37,413 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:37,413 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(1), np.int64(8)), (np.int64(7), np.int64(5)))
2025-04-11 17:10:37,414 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:37,713 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:37,722 [INFO] Final candidates: []
2025-04-11 17:10:37,722 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:37,730 [INFO] Final candidates: []
2025-04-11 17:10:37,730 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:37,730 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(10)), (np.int64(12), np.int64(0)))
2025-04-11 17:10:37,730 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:37,785 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:37,794 [INFO] Final candidates: []
2025-04-11 17:10:37,794 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:37,802 [INFO] Final candidates: []
2025-04-11 17:10:37,802 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:37,802 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(1), np.int64(8)), (np.int64(6), np.int64(14)))
2025-04-11 17:10:37,802 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:37,879 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:37,889 [INFO] Final candidates: []
2025-04-11 17:10:37,889 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:37,897 [INFO] Final candidates: []
2025-04-11 17:10:37,898 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:37,898 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(0)), (np.int64(12), np.int64(0)))
2025-04-11 17:10:37,898 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:38,062 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:38,070 [INFO] Final candidates: []
2025-04-11 17:10:38,071 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:38,079 [INFO] Final candidates: []
2025-04-11 17:10:38,079 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:38,079 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(13)), (np.int64(3), np.int64(12)))
2025-04-11 17:10:38,079 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:38,123 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:38,132 [INFO] Final candidates: []
2025-04-11 17:10:38,132 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:38,140 [INFO] Final candidates: []
2025-04-11 17:10:38,140 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:38,140 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(2), np.int64(15)), (np.int64(3), np.int64(7)))
2025-04-11 17:10:38,141 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:38,208 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:38,217 [INFO] Final candidates: []
2025-04-11 17:10:38,217 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:38,225 [INFO] Final candidates: []
2025-04-11 17:10:38,225 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:38,225 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(2), np.int64(12)), (np.int64(2), np.int64(9)))
2025-04-11 17:10:38,226 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:38,464 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:38,473 [INFO] Final candidates: []
2025-04-11 17:10:38,473 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:38,481 [INFO] Final candidates: []
2025-04-11 17:10:38,481 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:10:38,481 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(12)), (np.int64(2), np.int64(7)))
2025-04-11 17:10:38,482 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:38,568 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:38,568 [INFO] MCTS: Search finished. Best move selected with 1 visits.
2025-04-11 17:10:38,568 [INFO] MCTS selected move: O3,L13
2025-04-11 17:10:38,568 [INFO] ===============NEW MOVE================
2025-04-11 17:10:43,019 [INFO] Starting pre-MCTS candidate collection.
2025-04-11 17:10:43,022 [DEBUG] board coords: [(7, 10), (8, 10), (9, 10), (10, 10), (11, 10), (12, 10)]
2025-04-11 17:10:43,022 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1)]
2025-04-11 17:10:43,022 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 10), (11, 10)]
2025-04-11 17:10:43,022 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 1 1 0 1] with coords [(7, 10), (8, 10), (9, 10), (10, 10), (11, 10), (12, 10)] triggers candidate.
2025-04-11 17:10:43,022 [DEBUG] board coords: [(8, 10), (9, 10), (10, 10), (11, 10), (12, 10), (13, 10)]
2025-04-11 17:10:43,022 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(0)]
2025-04-11 17:10:43,022 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 10), (13, 10)]
2025-04-11 17:10:43,022 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 1 0 1 0] with coords [(8, 10), (9, 10), (10, 10), (11, 10), (12, 10), (13, 10)] triggers candidate.
2025-04-11 17:10:43,027 [INFO] Final candidates: [(7, 10), (13, 10), (11, 10)]
2025-04-11 17:10:43,027 [INFO] Phase win: Collected 3unique candidate(s):[((7, 10), (11, 10)), ((13, 10), (11, 10)), ((7, 10), (13, 10))]
2025-04-11 17:10:43,027 [INFO] Phase 1 (immediate win): 3 candidate(s) found.
2025-04-11 17:10:43,027 [INFO] MCTS: Starting search for 50 iterations.
2025-04-11 17:10:43,030 [DEBUG] board coords: [(7, 10), (8, 10), (9, 10), (10, 10), (11, 10), (12, 10)]
2025-04-11 17:10:43,030 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1)]
2025-04-11 17:10:43,030 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 10), (11, 10)]
2025-04-11 17:10:43,031 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 1 1 0 1] with coords [(7, 10), (8, 10), (9, 10), (10, 10), (11, 10), (12, 10)] triggers candidate.
2025-04-11 17:10:43,031 [DEBUG] board coords: [(8, 10), (9, 10), (10, 10), (11, 10), (12, 10), (13, 10)]
2025-04-11 17:10:43,031 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(0)]
2025-04-11 17:10:43,031 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 10), (13, 10)]
2025-04-11 17:10:43,031 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 1 0 1 0] with coords [(8, 10), (9, 10), (10, 10), (11, 10), (12, 10), (13, 10)] triggers candidate.
2025-04-11 17:10:43,036 [INFO] Final candidates: [(7, 10), (13, 10), (11, 10)]
2025-04-11 17:10:43,036 [INFO] Phase win: Collected 3unique candidate(s):[((7, 10), (11, 10)), ((13, 10), (11, 10)), ((7, 10), (13, 10))]
2025-04-11 17:10:43,036 [DEBUG] Tree_policy iteration 1: Expanding move ((7, 10), (13, 10))
2025-04-11 17:10:43,037 [DEBUG] MCTS iteration 0: reached a node with 0 visits.
2025-04-11 17:10:43,037 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:43,309 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:43,311 [DEBUG] board coords: [(7, 10), (8, 10), (9, 10), (10, 10), (11, 10), (12, 10)]
2025-04-11 17:10:43,312 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1)]
2025-04-11 17:10:43,312 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 10), (11, 10)]
2025-04-11 17:10:43,312 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 1 1 0 1] with coords [(7, 10), (8, 10), (9, 10), (10, 10), (11, 10), (12, 10)] triggers candidate.
2025-04-11 17:10:43,312 [DEBUG] board coords: [(8, 10), (9, 10), (10, 10), (11, 10), (12, 10), (13, 10)]
2025-04-11 17:10:43,312 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(0)]
2025-04-11 17:10:43,312 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 10), (13, 10)]
2025-04-11 17:10:43,312 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 1 0 1 0] with coords [(8, 10), (9, 10), (10, 10), (11, 10), (12, 10), (13, 10)] triggers candidate.
2025-04-11 17:10:43,317 [INFO] Final candidates: [(7, 10), (13, 10), (11, 10)]
2025-04-11 17:10:43,317 [INFO] Phase win: Collected 3unique candidate(s):[((7, 10), (11, 10)), ((13, 10), (11, 10)), ((7, 10), (13, 10))]
2025-04-11 17:10:43,317 [DEBUG] Tree_policy iteration 1: Expanding move ((7, 10), (11, 10))
2025-04-11 17:10:43,318 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:43,318 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:43,321 [DEBUG] board coords: [(7, 10), (8, 10), (9, 10), (10, 10), (11, 10), (12, 10)]
2025-04-11 17:10:43,321 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1)]
2025-04-11 17:10:43,321 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 10), (11, 10)]
2025-04-11 17:10:43,321 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 1 1 0 1] with coords [(7, 10), (8, 10), (9, 10), (10, 10), (11, 10), (12, 10)] triggers candidate.
2025-04-11 17:10:43,321 [DEBUG] board coords: [(8, 10), (9, 10), (10, 10), (11, 10), (12, 10), (13, 10)]
2025-04-11 17:10:43,321 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(0)]
2025-04-11 17:10:43,321 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 10), (13, 10)]
2025-04-11 17:10:43,321 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 1 0 1 0] with coords [(8, 10), (9, 10), (10, 10), (11, 10), (12, 10), (13, 10)] triggers candidate.
2025-04-11 17:10:43,326 [INFO] Final candidates: [(7, 10), (13, 10), (11, 10)]
2025-04-11 17:10:43,326 [INFO] Phase win: Collected 3unique candidate(s):[((7, 10), (11, 10)), ((13, 10), (11, 10)), ((7, 10), (13, 10))]
2025-04-11 17:10:43,326 [DEBUG] Tree_policy iteration 1: Expanding move ((13, 10), (11, 10))
2025-04-11 17:10:43,327 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:43,327 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:43,327 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:43,335 [INFO] Final candidates: []
2025-04-11 17:10:43,335 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:43,338 [DEBUG] board coords: [(5, 10), (6, 10), (7, 10), (8, 10), (9, 10), (10, 10)]
2025-04-11 17:10:43,338 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 17:10:43,338 [DEBUG] check_window_intermediate_custom: empty_cells=[(5, 10), (6, 10)]
2025-04-11 17:10:43,338 [DEBUG] check_window_intermediate_custom (only one inserted(6, 10)): For L=6, window [0 0 1 1 1 1] with coords [(5, 10), (6, 10), (7, 10), (8, 10), (9, 10), (10, 10)] triggers candidate.
2025-04-11 17:10:43,338 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10)] triggers candidate.
2025-04-11 17:10:43,338 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 17:10:43,338 [DEBUG] board coords: [(9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)]
2025-04-11 17:10:43,338 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 17:10:43,338 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 10), (14, 10)]
2025-04-11 17:10:43,338 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 0 1 1 0] with coords [(9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)] triggers candidate.
2025-04-11 17:10:43,339 [DEBUG] board coords: [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10), (12, 10)]
2025-04-11 17:10:43,339 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1)]
2025-04-11 17:10:43,339 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (11, 10)]
2025-04-11 17:10:43,339 [DEBUG] check_window_intermediate_custom: For L=7, window [0 1 1 1 1 0 1] with coords [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10), (12, 10)] triggers candidate.
2025-04-11 17:10:43,339 [DEBUG] board coords: [(8, 10), (9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)]
2025-04-11 17:10:43,339 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 17:10:43,339 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 10), (14, 10)]
2025-04-11 17:10:43,339 [DEBUG] check_window_intermediate_custom: For L=7, window [1 1 1 0 1 1 0] with coords [(8, 10), (9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)] triggers candidate.
2025-04-11 17:10:43,344 [INFO] Final candidates: [(11, 10), (6, 10), (14, 10)]
2025-04-11 17:10:43,344 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 10), (14, 10)), ((11, 10), (6, 10)), ((6, 10), (14, 10))]
2025-04-11 17:10:43,344 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(1), np.int64(14)), (np.int64(11), np.int64(10)))
2025-04-11 17:10:43,345 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:43,527 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:43,528 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:43,528 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:10:43,528 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:43,528 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:43,528 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:43,528 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:10:43,528 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:43,528 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:43,528 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:43,536 [INFO] Final candidates: []
2025-04-11 17:10:43,536 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:43,539 [DEBUG] board coords: [(5, 10), (6, 10), (7, 10), (8, 10), (9, 10), (10, 10)]
2025-04-11 17:10:43,539 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 17:10:43,539 [DEBUG] check_window_intermediate_custom: empty_cells=[(5, 10), (6, 10)]
2025-04-11 17:10:43,539 [DEBUG] check_window_intermediate_custom (only one inserted(6, 10)): For L=6, window [0 0 1 1 1 1] with coords [(5, 10), (6, 10), (7, 10), (8, 10), (9, 10), (10, 10)] triggers candidate.
2025-04-11 17:10:43,539 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10)] triggers candidate.
2025-04-11 17:10:43,539 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 17:10:43,539 [DEBUG] board coords: [(9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)]
2025-04-11 17:10:43,539 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 17:10:43,539 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 10), (14, 10)]
2025-04-11 17:10:43,539 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 0 1 1 0] with coords [(9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)] triggers candidate.
2025-04-11 17:10:43,540 [DEBUG] board coords: [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10), (12, 10)]
2025-04-11 17:10:43,540 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1)]
2025-04-11 17:10:43,540 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (11, 10)]
2025-04-11 17:10:43,540 [DEBUG] check_window_intermediate_custom: For L=7, window [0 1 1 1 1 0 1] with coords [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10), (12, 10)] triggers candidate.
2025-04-11 17:10:43,540 [DEBUG] board coords: [(8, 10), (9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)]
2025-04-11 17:10:43,540 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 17:10:43,540 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 10), (14, 10)]
2025-04-11 17:10:43,540 [DEBUG] check_window_intermediate_custom: For L=7, window [1 1 1 0 1 1 0] with coords [(8, 10), (9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)] triggers candidate.
2025-04-11 17:10:43,544 [INFO] Final candidates: [(11, 10), (6, 10), (14, 10)]
2025-04-11 17:10:43,544 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 10), (14, 10)), ((11, 10), (6, 10)), ((6, 10), (14, 10))]
2025-04-11 17:10:43,545 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(10)), (np.int64(12), np.int64(11)))
2025-04-11 17:10:43,546 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:43,818 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:43,818 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:43,818 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:10:43,818 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:43,818 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:43,818 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:43,819 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:10:43,819 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:43,819 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:43,819 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:43,827 [INFO] Final candidates: []
2025-04-11 17:10:43,827 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:43,829 [DEBUG] board coords: [(5, 10), (6, 10), (7, 10), (8, 10), (9, 10), (10, 10)]
2025-04-11 17:10:43,829 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 17:10:43,829 [DEBUG] check_window_intermediate_custom: empty_cells=[(5, 10), (6, 10)]
2025-04-11 17:10:43,830 [DEBUG] check_window_intermediate_custom (only one inserted(6, 10)): For L=6, window [0 0 1 1 1 1] with coords [(5, 10), (6, 10), (7, 10), (8, 10), (9, 10), (10, 10)] triggers candidate.
2025-04-11 17:10:43,830 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10)] triggers candidate.
2025-04-11 17:10:43,830 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 17:10:43,830 [DEBUG] board coords: [(9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)]
2025-04-11 17:10:43,830 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 17:10:43,830 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 10), (14, 10)]
2025-04-11 17:10:43,830 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 0 1 1 0] with coords [(9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)] triggers candidate.
2025-04-11 17:10:43,831 [DEBUG] board coords: [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10), (12, 10)]
2025-04-11 17:10:43,831 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1)]
2025-04-11 17:10:43,831 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (11, 10)]
2025-04-11 17:10:43,831 [DEBUG] check_window_intermediate_custom: For L=7, window [0 1 1 1 1 0 1] with coords [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10), (12, 10)] triggers candidate.
2025-04-11 17:10:43,831 [DEBUG] board coords: [(8, 10), (9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)]
2025-04-11 17:10:43,831 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 17:10:43,831 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 10), (14, 10)]
2025-04-11 17:10:43,831 [DEBUG] check_window_intermediate_custom: For L=7, window [1 1 1 0 1 1 0] with coords [(8, 10), (9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)] triggers candidate.
2025-04-11 17:10:43,835 [INFO] Final candidates: [(11, 10), (6, 10), (14, 10)]
2025-04-11 17:10:43,835 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 10), (14, 10)), ((11, 10), (6, 10)), ((6, 10), (14, 10))]
2025-04-11 17:10:43,836 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(8)), (np.int64(11), np.int64(11)))
2025-04-11 17:10:43,837 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:43,975 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:43,976 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:43,984 [INFO] Final candidates: []
2025-04-11 17:10:43,984 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:43,987 [DEBUG] board coords: [(5, 10), (6, 10), (7, 10), (8, 10), (9, 10), (10, 10)]
2025-04-11 17:10:43,987 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 17:10:43,987 [DEBUG] check_window_intermediate_custom: empty_cells=[(5, 10), (6, 10)]
2025-04-11 17:10:43,987 [DEBUG] check_window_intermediate_custom (only one inserted(6, 10)): For L=6, window [0 0 1 1 1 1] with coords [(5, 10), (6, 10), (7, 10), (8, 10), (9, 10), (10, 10)] triggers candidate.
2025-04-11 17:10:43,987 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10)] triggers candidate.
2025-04-11 17:10:43,987 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 17:10:43,987 [DEBUG] board coords: [(9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)]
2025-04-11 17:10:43,987 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 17:10:43,987 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 10), (14, 10)]
2025-04-11 17:10:43,987 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 0 1 1 0] with coords [(9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)] triggers candidate.
2025-04-11 17:10:43,988 [DEBUG] board coords: [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10), (12, 10)]
2025-04-11 17:10:43,988 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1)]
2025-04-11 17:10:43,988 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (11, 10)]
2025-04-11 17:10:43,988 [DEBUG] check_window_intermediate_custom: For L=7, window [0 1 1 1 1 0 1] with coords [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10), (12, 10)] triggers candidate.
2025-04-11 17:10:43,988 [DEBUG] board coords: [(8, 10), (9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)]
2025-04-11 17:10:43,988 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 17:10:43,988 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 10), (14, 10)]
2025-04-11 17:10:43,988 [DEBUG] check_window_intermediate_custom: For L=7, window [1 1 1 0 1 1 0] with coords [(8, 10), (9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)] triggers candidate.
2025-04-11 17:10:43,993 [INFO] Final candidates: [(11, 10), (6, 10), (14, 10)]
2025-04-11 17:10:43,993 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 10), (14, 10)), ((11, 10), (6, 10)), ((6, 10), (14, 10))]
2025-04-11 17:10:43,993 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(1), np.int64(9)), (np.int64(3), np.int64(11)))
2025-04-11 17:10:43,994 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:44,186 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:44,187 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:44,187 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:10:44,187 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:44,187 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:44,187 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:44,187 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:10:44,187 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:44,187 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:44,187 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:44,195 [INFO] Final candidates: []
2025-04-11 17:10:44,195 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:44,198 [DEBUG] board coords: [(5, 10), (6, 10), (7, 10), (8, 10), (9, 10), (10, 10)]
2025-04-11 17:10:44,198 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 17:10:44,198 [DEBUG] check_window_intermediate_custom: empty_cells=[(5, 10), (6, 10)]
2025-04-11 17:10:44,198 [DEBUG] check_window_intermediate_custom (only one inserted(6, 10)): For L=6, window [0 0 1 1 1 1] with coords [(5, 10), (6, 10), (7, 10), (8, 10), (9, 10), (10, 10)] triggers candidate.
2025-04-11 17:10:44,198 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10)] triggers candidate.
2025-04-11 17:10:44,198 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 17:10:44,198 [DEBUG] board coords: [(9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)]
2025-04-11 17:10:44,198 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 17:10:44,198 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 10), (14, 10)]
2025-04-11 17:10:44,198 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 0 1 1 0] with coords [(9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)] triggers candidate.
2025-04-11 17:10:44,199 [DEBUG] board coords: [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10), (12, 10)]
2025-04-11 17:10:44,199 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1)]
2025-04-11 17:10:44,199 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (11, 10)]
2025-04-11 17:10:44,199 [DEBUG] check_window_intermediate_custom: For L=7, window [0 1 1 1 1 0 1] with coords [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10), (12, 10)] triggers candidate.
2025-04-11 17:10:44,199 [DEBUG] board coords: [(8, 10), (9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)]
2025-04-11 17:10:44,199 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 17:10:44,199 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 10), (14, 10)]
2025-04-11 17:10:44,199 [DEBUG] check_window_intermediate_custom: For L=7, window [1 1 1 0 1 1 0] with coords [(8, 10), (9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)] triggers candidate.
2025-04-11 17:10:44,204 [INFO] Final candidates: [(11, 10), (6, 10), (14, 10)]
2025-04-11 17:10:44,204 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 10), (14, 10)), ((11, 10), (6, 10)), ((6, 10), (14, 10))]
2025-04-11 17:10:44,204 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(4)), (np.int64(13), np.int64(11)))
2025-04-11 17:10:44,205 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:44,393 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:44,394 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:44,402 [INFO] Final candidates: []
2025-04-11 17:10:44,402 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:44,404 [DEBUG] board coords: [(5, 10), (6, 10), (7, 10), (8, 10), (9, 10), (10, 10)]
2025-04-11 17:10:44,404 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 17:10:44,405 [DEBUG] check_window_intermediate_custom: empty_cells=[(5, 10), (6, 10)]
2025-04-11 17:10:44,405 [DEBUG] check_window_intermediate_custom (only one inserted(6, 10)): For L=6, window [0 0 1 1 1 1] with coords [(5, 10), (6, 10), (7, 10), (8, 10), (9, 10), (10, 10)] triggers candidate.
2025-04-11 17:10:44,405 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10)] triggers candidate.
2025-04-11 17:10:44,405 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 17:10:44,405 [DEBUG] board coords: [(9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)]
2025-04-11 17:10:44,405 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 17:10:44,405 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 10), (14, 10)]
2025-04-11 17:10:44,405 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 0 1 1 0] with coords [(9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)] triggers candidate.
2025-04-11 17:10:44,406 [DEBUG] board coords: [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10), (12, 10)]
2025-04-11 17:10:44,406 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1)]
2025-04-11 17:10:44,406 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (11, 10)]
2025-04-11 17:10:44,406 [DEBUG] check_window_intermediate_custom: For L=7, window [0 1 1 1 1 0 1] with coords [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10), (12, 10)] triggers candidate.
2025-04-11 17:10:44,406 [DEBUG] board coords: [(8, 10), (9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)]
2025-04-11 17:10:44,406 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 17:10:44,406 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 10), (14, 10)]
2025-04-11 17:10:44,406 [DEBUG] check_window_intermediate_custom: For L=7, window [1 1 1 0 1 1 0] with coords [(8, 10), (9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)] triggers candidate.
2025-04-11 17:10:44,410 [INFO] Final candidates: [(11, 10), (6, 10), (14, 10)]
2025-04-11 17:10:44,410 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 10), (14, 10)), ((11, 10), (6, 10)), ((6, 10), (14, 10))]
2025-04-11 17:10:44,411 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(1)), (np.int64(11), np.int64(11)))
2025-04-11 17:10:44,412 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:44,562 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:44,562 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:44,562 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:10:44,562 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:44,563 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:44,563 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:44,563 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:10:44,563 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:44,563 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:44,563 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:44,577 [INFO] Final candidates: []
2025-04-11 17:10:44,577 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:44,583 [DEBUG] board coords: [(5, 10), (6, 10), (7, 10), (8, 10), (9, 10), (10, 10)]
2025-04-11 17:10:44,583 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 17:10:44,583 [DEBUG] check_window_intermediate_custom: empty_cells=[(5, 10), (6, 10)]
2025-04-11 17:10:44,584 [DEBUG] check_window_intermediate_custom (only one inserted(6, 10)): For L=6, window [0 0 1 1 1 1] with coords [(5, 10), (6, 10), (7, 10), (8, 10), (9, 10), (10, 10)] triggers candidate.
2025-04-11 17:10:44,584 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10)] triggers candidate.
2025-04-11 17:10:44,584 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 17:10:44,584 [DEBUG] board coords: [(9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)]
2025-04-11 17:10:44,584 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 17:10:44,584 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 10), (14, 10)]
2025-04-11 17:10:44,584 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 0 1 1 0] with coords [(9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)] triggers candidate.
2025-04-11 17:10:44,585 [DEBUG] board coords: [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10), (12, 10)]
2025-04-11 17:10:44,585 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1)]
2025-04-11 17:10:44,585 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (11, 10)]
2025-04-11 17:10:44,585 [DEBUG] check_window_intermediate_custom: For L=7, window [0 1 1 1 1 0 1] with coords [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10), (12, 10)] triggers candidate.
2025-04-11 17:10:44,585 [DEBUG] board coords: [(8, 10), (9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)]
2025-04-11 17:10:44,585 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 17:10:44,585 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 10), (14, 10)]
2025-04-11 17:10:44,585 [DEBUG] check_window_intermediate_custom: For L=7, window [1 1 1 0 1 1 0] with coords [(8, 10), (9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)] triggers candidate.
2025-04-11 17:10:44,589 [INFO] Final candidates: [(11, 10), (6, 10), (14, 10)]
2025-04-11 17:10:44,589 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 10), (14, 10)), ((11, 10), (6, 10)), ((6, 10), (14, 10))]
2025-04-11 17:10:44,590 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(6)), (np.int64(12), np.int64(12)))
2025-04-11 17:10:44,590 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:44,641 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:44,642 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:44,642 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:10:44,642 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:44,642 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:44,642 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:44,642 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:10:44,642 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:44,642 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:44,642 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:44,651 [INFO] Final candidates: []
2025-04-11 17:10:44,651 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:44,654 [DEBUG] board coords: [(5, 10), (6, 10), (7, 10), (8, 10), (9, 10), (10, 10)]
2025-04-11 17:10:44,654 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 17:10:44,654 [DEBUG] check_window_intermediate_custom: empty_cells=[(5, 10), (6, 10)]
2025-04-11 17:10:44,654 [DEBUG] check_window_intermediate_custom (only one inserted(6, 10)): For L=6, window [0 0 1 1 1 1] with coords [(5, 10), (6, 10), (7, 10), (8, 10), (9, 10), (10, 10)] triggers candidate.
2025-04-11 17:10:44,654 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10)] triggers candidate.
2025-04-11 17:10:44,654 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 17:10:44,654 [DEBUG] board coords: [(9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)]
2025-04-11 17:10:44,654 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 17:10:44,654 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 10), (14, 10)]
2025-04-11 17:10:44,654 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 0 1 1 0] with coords [(9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)] triggers candidate.
2025-04-11 17:10:44,655 [DEBUG] board coords: [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10), (12, 10)]
2025-04-11 17:10:44,655 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1)]
2025-04-11 17:10:44,655 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (11, 10)]
2025-04-11 17:10:44,655 [DEBUG] check_window_intermediate_custom: For L=7, window [0 1 1 1 1 0 1] with coords [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10), (12, 10)] triggers candidate.
2025-04-11 17:10:44,655 [DEBUG] board coords: [(8, 10), (9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)]
2025-04-11 17:10:44,655 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 17:10:44,655 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 10), (14, 10)]
2025-04-11 17:10:44,655 [DEBUG] check_window_intermediate_custom: For L=7, window [1 1 1 0 1 1 0] with coords [(8, 10), (9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)] triggers candidate.
2025-04-11 17:10:44,660 [INFO] Final candidates: [(11, 10), (6, 10), (14, 10)]
2025-04-11 17:10:44,660 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 10), (14, 10)), ((11, 10), (6, 10)), ((6, 10), (14, 10))]
2025-04-11 17:10:44,660 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(10)), (np.int64(10), np.int64(11)))
2025-04-11 17:10:44,661 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:44,827 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:44,827 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:44,827 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:10:44,827 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:44,827 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:44,827 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:44,827 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:10:44,827 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:44,827 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:44,828 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:44,839 [INFO] Final candidates: []
2025-04-11 17:10:44,840 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:44,843 [DEBUG] board coords: [(5, 10), (6, 10), (7, 10), (8, 10), (9, 10), (10, 10)]
2025-04-11 17:10:44,843 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 17:10:44,843 [DEBUG] check_window_intermediate_custom: empty_cells=[(5, 10), (6, 10)]
2025-04-11 17:10:44,843 [DEBUG] check_window_intermediate_custom (only one inserted(6, 10)): For L=6, window [0 0 1 1 1 1] with coords [(5, 10), (6, 10), (7, 10), (8, 10), (9, 10), (10, 10)] triggers candidate.
2025-04-11 17:10:44,843 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10)] triggers candidate.
2025-04-11 17:10:44,843 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 17:10:44,843 [DEBUG] board coords: [(9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)]
2025-04-11 17:10:44,843 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 17:10:44,843 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 10), (14, 10)]
2025-04-11 17:10:44,843 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 0 1 1 0] with coords [(9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)] triggers candidate.
2025-04-11 17:10:44,844 [DEBUG] board coords: [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10), (12, 10)]
2025-04-11 17:10:44,844 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1)]
2025-04-11 17:10:44,844 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (11, 10)]
2025-04-11 17:10:44,844 [DEBUG] check_window_intermediate_custom: For L=7, window [0 1 1 1 1 0 1] with coords [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10), (12, 10)] triggers candidate.
2025-04-11 17:10:44,844 [DEBUG] board coords: [(8, 10), (9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)]
2025-04-11 17:10:44,844 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 17:10:44,844 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 10), (14, 10)]
2025-04-11 17:10:44,844 [DEBUG] check_window_intermediate_custom: For L=7, window [1 1 1 0 1 1 0] with coords [(8, 10), (9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)] triggers candidate.
2025-04-11 17:10:44,849 [INFO] Final candidates: [(11, 10), (6, 10), (14, 10)]
2025-04-11 17:10:44,849 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 10), (14, 10)), ((11, 10), (6, 10)), ((6, 10), (14, 10))]
2025-04-11 17:10:44,850 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(3)), (np.int64(4), np.int64(12)))
2025-04-11 17:10:44,852 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:44,853 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:44,854 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:44,854 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:10:44,854 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:44,854 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:44,854 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:44,854 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:10:44,854 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:44,854 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:44,855 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:44,869 [INFO] Final candidates: []
2025-04-11 17:10:44,869 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:44,872 [DEBUG] board coords: [(5, 10), (6, 10), (7, 10), (8, 10), (9, 10), (10, 10)]
2025-04-11 17:10:44,872 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 17:10:44,872 [DEBUG] check_window_intermediate_custom: empty_cells=[(5, 10), (6, 10)]
2025-04-11 17:10:44,872 [DEBUG] check_window_intermediate_custom (only one inserted(6, 10)): For L=6, window [0 0 1 1 1 1] with coords [(5, 10), (6, 10), (7, 10), (8, 10), (9, 10), (10, 10)] triggers candidate.
2025-04-11 17:10:44,872 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10)] triggers candidate.
2025-04-11 17:10:44,872 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 17:10:44,872 [DEBUG] board coords: [(9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)]
2025-04-11 17:10:44,872 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 17:10:44,872 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 10), (14, 10)]
2025-04-11 17:10:44,872 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 0 1 1 0] with coords [(9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)] triggers candidate.
2025-04-11 17:10:44,873 [DEBUG] board coords: [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10), (12, 10)]
2025-04-11 17:10:44,873 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1)]
2025-04-11 17:10:44,873 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (11, 10)]
2025-04-11 17:10:44,873 [DEBUG] check_window_intermediate_custom: For L=7, window [0 1 1 1 1 0 1] with coords [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10), (12, 10)] triggers candidate.
2025-04-11 17:10:44,873 [DEBUG] board coords: [(8, 10), (9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)]
2025-04-11 17:10:44,873 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 17:10:44,873 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 10), (14, 10)]
2025-04-11 17:10:44,873 [DEBUG] check_window_intermediate_custom: For L=7, window [1 1 1 0 1 1 0] with coords [(8, 10), (9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)] triggers candidate.
2025-04-11 17:10:44,878 [INFO] Final candidates: [(11, 10), (6, 10), (14, 10)]
2025-04-11 17:10:44,878 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 10), (14, 10)), ((11, 10), (6, 10)), ((6, 10), (14, 10))]
2025-04-11 17:10:44,878 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(11)), (np.int64(8), np.int64(11)))
2025-04-11 17:10:44,879 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:45,121 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:45,121 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:45,121 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:10:45,121 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:45,121 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:45,121 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:45,121 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:10:45,121 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:45,122 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:45,122 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:45,130 [INFO] Final candidates: []
2025-04-11 17:10:45,130 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:45,132 [DEBUG] board coords: [(5, 10), (6, 10), (7, 10), (8, 10), (9, 10), (10, 10)]
2025-04-11 17:10:45,132 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 17:10:45,133 [DEBUG] check_window_intermediate_custom: empty_cells=[(5, 10), (6, 10)]
2025-04-11 17:10:45,133 [DEBUG] check_window_intermediate_custom (only one inserted(6, 10)): For L=6, window [0 0 1 1 1 1] with coords [(5, 10), (6, 10), (7, 10), (8, 10), (9, 10), (10, 10)] triggers candidate.
2025-04-11 17:10:45,133 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10)] triggers candidate.
2025-04-11 17:10:45,133 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 17:10:45,133 [DEBUG] board coords: [(9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)]
2025-04-11 17:10:45,133 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 17:10:45,133 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 10), (14, 10)]
2025-04-11 17:10:45,133 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 0 1 1 0] with coords [(9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)] triggers candidate.
2025-04-11 17:10:45,134 [DEBUG] board coords: [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10), (12, 10)]
2025-04-11 17:10:45,134 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1)]
2025-04-11 17:10:45,134 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (11, 10)]
2025-04-11 17:10:45,134 [DEBUG] check_window_intermediate_custom: For L=7, window [0 1 1 1 1 0 1] with coords [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10), (12, 10)] triggers candidate.
2025-04-11 17:10:45,134 [DEBUG] board coords: [(8, 10), (9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)]
2025-04-11 17:10:45,134 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 17:10:45,134 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 10), (14, 10)]
2025-04-11 17:10:45,134 [DEBUG] check_window_intermediate_custom: For L=7, window [1 1 1 0 1 1 0] with coords [(8, 10), (9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)] triggers candidate.
2025-04-11 17:10:45,138 [INFO] Final candidates: [(11, 10), (6, 10), (14, 10)]
2025-04-11 17:10:45,139 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 10), (14, 10)), ((11, 10), (6, 10)), ((6, 10), (14, 10))]
2025-04-11 17:10:45,139 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(12)), (np.int64(12), np.int64(9)))
2025-04-11 17:10:45,140 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:45,181 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:45,181 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:45,189 [INFO] Final candidates: []
2025-04-11 17:10:45,189 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:45,191 [DEBUG] board coords: [(5, 10), (6, 10), (7, 10), (8, 10), (9, 10), (10, 10)]
2025-04-11 17:10:45,191 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 17:10:45,192 [DEBUG] check_window_intermediate_custom: empty_cells=[(5, 10), (6, 10)]
2025-04-11 17:10:45,192 [DEBUG] check_window_intermediate_custom (only one inserted(6, 10)): For L=6, window [0 0 1 1 1 1] with coords [(5, 10), (6, 10), (7, 10), (8, 10), (9, 10), (10, 10)] triggers candidate.
2025-04-11 17:10:45,192 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10)] triggers candidate.
2025-04-11 17:10:45,192 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 17:10:45,192 [DEBUG] board coords: [(9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)]
2025-04-11 17:10:45,192 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 17:10:45,192 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 10), (14, 10)]
2025-04-11 17:10:45,192 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 0 1 1 0] with coords [(9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)] triggers candidate.
2025-04-11 17:10:45,193 [DEBUG] board coords: [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10), (12, 10)]
2025-04-11 17:10:45,193 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1)]
2025-04-11 17:10:45,193 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (11, 10)]
2025-04-11 17:10:45,193 [DEBUG] check_window_intermediate_custom: For L=7, window [0 1 1 1 1 0 1] with coords [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10), (12, 10)] triggers candidate.
2025-04-11 17:10:45,193 [DEBUG] board coords: [(8, 10), (9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)]
2025-04-11 17:10:45,193 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 17:10:45,193 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 10), (14, 10)]
2025-04-11 17:10:45,193 [DEBUG] check_window_intermediate_custom: For L=7, window [1 1 1 0 1 1 0] with coords [(8, 10), (9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)] triggers candidate.
2025-04-11 17:10:45,197 [INFO] Final candidates: [(11, 10), (6, 10), (14, 10)]
2025-04-11 17:10:45,197 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 10), (14, 10)), ((11, 10), (6, 10)), ((6, 10), (14, 10))]
2025-04-11 17:10:45,198 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(8)), (np.int64(13), np.int64(12)))
2025-04-11 17:10:45,201 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:45,385 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:45,385 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:45,385 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:10:45,386 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:45,386 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:45,386 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:45,386 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:10:45,386 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:45,386 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:45,386 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:45,394 [INFO] Final candidates: []
2025-04-11 17:10:45,394 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:45,397 [DEBUG] board coords: [(5, 10), (6, 10), (7, 10), (8, 10), (9, 10), (10, 10)]
2025-04-11 17:10:45,397 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 17:10:45,397 [DEBUG] check_window_intermediate_custom: empty_cells=[(5, 10), (6, 10)]
2025-04-11 17:10:45,397 [DEBUG] check_window_intermediate_custom (only one inserted(6, 10)): For L=6, window [0 0 1 1 1 1] with coords [(5, 10), (6, 10), (7, 10), (8, 10), (9, 10), (10, 10)] triggers candidate.
2025-04-11 17:10:45,397 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10)] triggers candidate.
2025-04-11 17:10:45,397 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 17:10:45,397 [DEBUG] board coords: [(9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)]
2025-04-11 17:10:45,397 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 17:10:45,397 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 10), (14, 10)]
2025-04-11 17:10:45,397 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 0 1 1 0] with coords [(9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)] triggers candidate.
2025-04-11 17:10:45,398 [DEBUG] board coords: [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10), (12, 10)]
2025-04-11 17:10:45,399 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1)]
2025-04-11 17:10:45,399 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (11, 10)]
2025-04-11 17:10:45,399 [DEBUG] check_window_intermediate_custom: For L=7, window [0 1 1 1 1 0 1] with coords [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10), (12, 10)] triggers candidate.
2025-04-11 17:10:45,399 [DEBUG] board coords: [(8, 10), (9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)]
2025-04-11 17:10:45,399 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 17:10:45,399 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 10), (14, 10)]
2025-04-11 17:10:45,399 [DEBUG] check_window_intermediate_custom: For L=7, window [1 1 1 0 1 1 0] with coords [(8, 10), (9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)] triggers candidate.
2025-04-11 17:10:45,403 [INFO] Final candidates: [(11, 10), (6, 10), (14, 10)]
2025-04-11 17:10:45,403 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 10), (14, 10)), ((11, 10), (6, 10)), ((6, 10), (14, 10))]
2025-04-11 17:10:45,403 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(13)), (np.int64(5), np.int64(15)))
2025-04-11 17:10:45,404 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:45,452 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:45,452 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:45,452 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:10:45,452 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:45,452 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:45,452 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:45,452 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:10:45,453 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:45,453 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:45,453 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:45,460 [INFO] Final candidates: []
2025-04-11 17:10:45,461 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:45,463 [DEBUG] board coords: [(5, 10), (6, 10), (7, 10), (8, 10), (9, 10), (10, 10)]
2025-04-11 17:10:45,463 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 17:10:45,463 [DEBUG] check_window_intermediate_custom: empty_cells=[(5, 10), (6, 10)]
2025-04-11 17:10:45,463 [DEBUG] check_window_intermediate_custom (only one inserted(6, 10)): For L=6, window [0 0 1 1 1 1] with coords [(5, 10), (6, 10), (7, 10), (8, 10), (9, 10), (10, 10)] triggers candidate.
2025-04-11 17:10:45,463 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10)] triggers candidate.
2025-04-11 17:10:45,463 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 17:10:45,463 [DEBUG] board coords: [(9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)]
2025-04-11 17:10:45,463 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 17:10:45,463 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 10), (14, 10)]
2025-04-11 17:10:45,464 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 0 1 1 0] with coords [(9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)] triggers candidate.
2025-04-11 17:10:45,465 [DEBUG] board coords: [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10), (12, 10)]
2025-04-11 17:10:45,465 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1)]
2025-04-11 17:10:45,465 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (11, 10)]
2025-04-11 17:10:45,465 [DEBUG] check_window_intermediate_custom: For L=7, window [0 1 1 1 1 0 1] with coords [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10), (12, 10)] triggers candidate.
2025-04-11 17:10:45,465 [DEBUG] board coords: [(8, 10), (9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)]
2025-04-11 17:10:45,465 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 17:10:45,465 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 10), (14, 10)]
2025-04-11 17:10:45,465 [DEBUG] check_window_intermediate_custom: For L=7, window [1 1 1 0 1 1 0] with coords [(8, 10), (9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)] triggers candidate.
2025-04-11 17:10:45,469 [INFO] Final candidates: [(11, 10), (6, 10), (14, 10)]
2025-04-11 17:10:45,469 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 10), (14, 10)), ((11, 10), (6, 10)), ((6, 10), (14, 10))]
2025-04-11 17:10:45,469 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(9)), (np.int64(2), np.int64(9)))
2025-04-11 17:10:45,470 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:45,653 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:45,654 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:45,662 [INFO] Final candidates: []
2025-04-11 17:10:45,662 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:45,664 [DEBUG] board coords: [(5, 10), (6, 10), (7, 10), (8, 10), (9, 10), (10, 10)]
2025-04-11 17:10:45,664 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 17:10:45,664 [DEBUG] check_window_intermediate_custom: empty_cells=[(5, 10), (6, 10)]
2025-04-11 17:10:45,664 [DEBUG] check_window_intermediate_custom (only one inserted(6, 10)): For L=6, window [0 0 1 1 1 1] with coords [(5, 10), (6, 10), (7, 10), (8, 10), (9, 10), (10, 10)] triggers candidate.
2025-04-11 17:10:45,665 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10)] triggers candidate.
2025-04-11 17:10:45,665 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 17:10:45,665 [DEBUG] board coords: [(9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)]
2025-04-11 17:10:45,665 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 17:10:45,665 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 10), (14, 10)]
2025-04-11 17:10:45,665 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 0 1 1 0] with coords [(9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)] triggers candidate.
2025-04-11 17:10:45,666 [DEBUG] board coords: [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10), (12, 10)]
2025-04-11 17:10:45,666 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1)]
2025-04-11 17:10:45,666 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (11, 10)]
2025-04-11 17:10:45,666 [DEBUG] check_window_intermediate_custom: For L=7, window [0 1 1 1 1 0 1] with coords [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10), (12, 10)] triggers candidate.
2025-04-11 17:10:45,666 [DEBUG] board coords: [(8, 10), (9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)]
2025-04-11 17:10:45,666 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 17:10:45,666 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 10), (14, 10)]
2025-04-11 17:10:45,666 [DEBUG] check_window_intermediate_custom: For L=7, window [1 1 1 0 1 1 0] with coords [(8, 10), (9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)] triggers candidate.
2025-04-11 17:10:45,670 [INFO] Final candidates: [(11, 10), (6, 10), (14, 10)]
2025-04-11 17:10:45,670 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 10), (14, 10)), ((11, 10), (6, 10)), ((6, 10), (14, 10))]
2025-04-11 17:10:45,671 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(2), np.int64(8)), (np.int64(15), np.int64(10)))
2025-04-11 17:10:45,672 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:45,809 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:45,809 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:45,809 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:10:45,809 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:45,809 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:45,809 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:45,809 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:10:45,809 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:45,809 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:45,809 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:45,822 [INFO] Final candidates: []
2025-04-11 17:10:45,822 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:45,824 [DEBUG] board coords: [(5, 10), (6, 10), (7, 10), (8, 10), (9, 10), (10, 10)]
2025-04-11 17:10:45,824 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 17:10:45,824 [DEBUG] check_window_intermediate_custom: empty_cells=[(5, 10), (6, 10)]
2025-04-11 17:10:45,824 [DEBUG] check_window_intermediate_custom (only one inserted(6, 10)): For L=6, window [0 0 1 1 1 1] with coords [(5, 10), (6, 10), (7, 10), (8, 10), (9, 10), (10, 10)] triggers candidate.
2025-04-11 17:10:45,825 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10)] triggers candidate.
2025-04-11 17:10:45,825 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 17:10:45,825 [DEBUG] board coords: [(9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)]
2025-04-11 17:10:45,825 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 17:10:45,825 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 10), (14, 10)]
2025-04-11 17:10:45,825 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 0 1 1 0] with coords [(9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)] triggers candidate.
2025-04-11 17:10:45,826 [DEBUG] board coords: [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10), (12, 10)]
2025-04-11 17:10:45,826 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1)]
2025-04-11 17:10:45,826 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (11, 10)]
2025-04-11 17:10:45,826 [DEBUG] check_window_intermediate_custom: For L=7, window [0 1 1 1 1 0 1] with coords [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10), (12, 10)] triggers candidate.
2025-04-11 17:10:45,826 [DEBUG] board coords: [(8, 10), (9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)]
2025-04-11 17:10:45,826 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 17:10:45,826 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 10), (14, 10)]
2025-04-11 17:10:45,826 [DEBUG] check_window_intermediate_custom: For L=7, window [1 1 1 0 1 1 0] with coords [(8, 10), (9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)] triggers candidate.
2025-04-11 17:10:45,830 [INFO] Final candidates: [(11, 10), (6, 10), (14, 10)]
2025-04-11 17:10:45,830 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 10), (14, 10)), ((11, 10), (6, 10)), ((6, 10), (14, 10))]
2025-04-11 17:10:45,831 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(4), np.int64(12)), (np.int64(11), np.int64(10)))
2025-04-11 17:10:45,831 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:45,848 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:45,848 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:45,856 [INFO] Final candidates: []
2025-04-11 17:10:45,856 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:45,859 [DEBUG] board coords: [(5, 10), (6, 10), (7, 10), (8, 10), (9, 10), (10, 10)]
2025-04-11 17:10:45,859 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 17:10:45,859 [DEBUG] check_window_intermediate_custom: empty_cells=[(5, 10), (6, 10)]
2025-04-11 17:10:45,859 [DEBUG] check_window_intermediate_custom (only one inserted(6, 10)): For L=6, window [0 0 1 1 1 1] with coords [(5, 10), (6, 10), (7, 10), (8, 10), (9, 10), (10, 10)] triggers candidate.
2025-04-11 17:10:45,859 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10)] triggers candidate.
2025-04-11 17:10:45,859 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 17:10:45,859 [DEBUG] board coords: [(9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)]
2025-04-11 17:10:45,859 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 17:10:45,859 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 10), (14, 10)]
2025-04-11 17:10:45,859 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 0 1 1 0] with coords [(9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)] triggers candidate.
2025-04-11 17:10:45,860 [DEBUG] board coords: [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10), (12, 10)]
2025-04-11 17:10:45,860 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1)]
2025-04-11 17:10:45,860 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (11, 10)]
2025-04-11 17:10:45,861 [DEBUG] check_window_intermediate_custom: For L=7, window [0 1 1 1 1 0 1] with coords [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10), (12, 10)] triggers candidate.
2025-04-11 17:10:45,861 [DEBUG] board coords: [(8, 10), (9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)]
2025-04-11 17:10:45,861 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 17:10:45,861 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 10), (14, 10)]
2025-04-11 17:10:45,861 [DEBUG] check_window_intermediate_custom: For L=7, window [1 1 1 0 1 1 0] with coords [(8, 10), (9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)] triggers candidate.
2025-04-11 17:10:45,865 [INFO] Final candidates: [(11, 10), (6, 10), (14, 10)]
2025-04-11 17:10:45,865 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 10), (14, 10)), ((11, 10), (6, 10)), ((6, 10), (14, 10))]
2025-04-11 17:10:45,865 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(4), np.int64(13)), (np.int64(8), np.int64(6)))
2025-04-11 17:10:45,866 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:45,869 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:45,869 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:45,877 [INFO] Final candidates: []
2025-04-11 17:10:45,877 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:45,879 [DEBUG] board coords: [(5, 10), (6, 10), (7, 10), (8, 10), (9, 10), (10, 10)]
2025-04-11 17:10:45,879 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 17:10:45,879 [DEBUG] check_window_intermediate_custom: empty_cells=[(5, 10), (6, 10)]
2025-04-11 17:10:45,880 [DEBUG] check_window_intermediate_custom (only one inserted(6, 10)): For L=6, window [0 0 1 1 1 1] with coords [(5, 10), (6, 10), (7, 10), (8, 10), (9, 10), (10, 10)] triggers candidate.
2025-04-11 17:10:45,880 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10)] triggers candidate.
2025-04-11 17:10:45,880 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 17:10:45,880 [DEBUG] board coords: [(9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)]
2025-04-11 17:10:45,880 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 17:10:45,880 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 10), (14, 10)]
2025-04-11 17:10:45,880 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 0 1 1 0] with coords [(9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)] triggers candidate.
2025-04-11 17:10:45,881 [DEBUG] board coords: [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10), (12, 10)]
2025-04-11 17:10:45,881 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1)]
2025-04-11 17:10:45,881 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (11, 10)]
2025-04-11 17:10:45,881 [DEBUG] check_window_intermediate_custom: For L=7, window [0 1 1 1 1 0 1] with coords [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10), (12, 10)] triggers candidate.
2025-04-11 17:10:45,881 [DEBUG] board coords: [(8, 10), (9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)]
2025-04-11 17:10:45,881 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 17:10:45,881 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 10), (14, 10)]
2025-04-11 17:10:45,881 [DEBUG] check_window_intermediate_custom: For L=7, window [1 1 1 0 1 1 0] with coords [(8, 10), (9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)] triggers candidate.
2025-04-11 17:10:45,885 [INFO] Final candidates: [(11, 10), (6, 10), (14, 10)]
2025-04-11 17:10:45,885 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 10), (14, 10)), ((11, 10), (6, 10)), ((6, 10), (14, 10))]
2025-04-11 17:10:45,886 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(6)), (np.int64(8), np.int64(5)))
2025-04-11 17:10:45,886 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:45,956 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:45,957 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:45,957 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:10:45,957 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:45,957 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:45,957 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:45,957 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:10:45,957 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:45,957 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:45,957 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:45,965 [INFO] Final candidates: []
2025-04-11 17:10:45,965 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:45,971 [DEBUG] board coords: [(5, 10), (6, 10), (7, 10), (8, 10), (9, 10), (10, 10)]
2025-04-11 17:10:45,971 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 17:10:45,971 [DEBUG] check_window_intermediate_custom: empty_cells=[(5, 10), (6, 10)]
2025-04-11 17:10:45,971 [DEBUG] check_window_intermediate_custom (only one inserted(6, 10)): For L=6, window [0 0 1 1 1 1] with coords [(5, 10), (6, 10), (7, 10), (8, 10), (9, 10), (10, 10)] triggers candidate.
2025-04-11 17:10:45,971 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10)] triggers candidate.
2025-04-11 17:10:45,971 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 17:10:45,971 [DEBUG] board coords: [(9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)]
2025-04-11 17:10:45,971 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 17:10:45,971 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 10), (14, 10)]
2025-04-11 17:10:45,972 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 0 1 1 0] with coords [(9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)] triggers candidate.
2025-04-11 17:10:45,974 [DEBUG] board coords: [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10), (12, 10)]
2025-04-11 17:10:45,974 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1)]
2025-04-11 17:10:45,974 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (11, 10)]
2025-04-11 17:10:45,974 [DEBUG] check_window_intermediate_custom: For L=7, window [0 1 1 1 1 0 1] with coords [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10), (12, 10)] triggers candidate.
2025-04-11 17:10:45,974 [DEBUG] board coords: [(8, 10), (9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)]
2025-04-11 17:10:45,974 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 17:10:45,974 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 10), (14, 10)]
2025-04-11 17:10:45,974 [DEBUG] check_window_intermediate_custom: For L=7, window [1 1 1 0 1 1 0] with coords [(8, 10), (9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)] triggers candidate.
2025-04-11 17:10:45,978 [INFO] Final candidates: [(11, 10), (6, 10), (14, 10)]
2025-04-11 17:10:45,978 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 10), (14, 10)), ((11, 10), (6, 10)), ((6, 10), (14, 10))]
2025-04-11 17:10:45,979 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(0), np.int64(9)), (np.int64(2), np.int64(7)))
2025-04-11 17:10:45,979 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:46,172 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:46,172 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:46,180 [INFO] Final candidates: []
2025-04-11 17:10:46,180 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:46,183 [DEBUG] board coords: [(5, 10), (6, 10), (7, 10), (8, 10), (9, 10), (10, 10)]
2025-04-11 17:10:46,183 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 17:10:46,183 [DEBUG] check_window_intermediate_custom: empty_cells=[(5, 10), (6, 10)]
2025-04-11 17:10:46,183 [DEBUG] check_window_intermediate_custom (only one inserted(6, 10)): For L=6, window [0 0 1 1 1 1] with coords [(5, 10), (6, 10), (7, 10), (8, 10), (9, 10), (10, 10)] triggers candidate.
2025-04-11 17:10:46,183 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10)] triggers candidate.
2025-04-11 17:10:46,183 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 17:10:46,183 [DEBUG] board coords: [(9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)]
2025-04-11 17:10:46,183 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 17:10:46,183 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 10), (14, 10)]
2025-04-11 17:10:46,183 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 0 1 1 0] with coords [(9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)] triggers candidate.
2025-04-11 17:10:46,184 [DEBUG] board coords: [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10), (12, 10)]
2025-04-11 17:10:46,184 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1)]
2025-04-11 17:10:46,184 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (11, 10)]
2025-04-11 17:10:46,184 [DEBUG] check_window_intermediate_custom: For L=7, window [0 1 1 1 1 0 1] with coords [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10), (12, 10)] triggers candidate.
2025-04-11 17:10:46,184 [DEBUG] board coords: [(8, 10), (9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)]
2025-04-11 17:10:46,184 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 17:10:46,185 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 10), (14, 10)]
2025-04-11 17:10:46,185 [DEBUG] check_window_intermediate_custom: For L=7, window [1 1 1 0 1 1 0] with coords [(8, 10), (9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)] triggers candidate.
2025-04-11 17:10:46,189 [INFO] Final candidates: [(11, 10), (6, 10), (14, 10)]
2025-04-11 17:10:46,189 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 10), (14, 10)), ((11, 10), (6, 10)), ((6, 10), (14, 10))]
2025-04-11 17:10:46,189 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(12)), (np.int64(10), np.int64(11)))
2025-04-11 17:10:46,190 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:46,229 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:46,230 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:46,238 [INFO] Final candidates: []
2025-04-11 17:10:46,238 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:46,240 [DEBUG] board coords: [(5, 10), (6, 10), (7, 10), (8, 10), (9, 10), (10, 10)]
2025-04-11 17:10:46,240 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 17:10:46,240 [DEBUG] check_window_intermediate_custom: empty_cells=[(5, 10), (6, 10)]
2025-04-11 17:10:46,240 [DEBUG] check_window_intermediate_custom (only one inserted(6, 10)): For L=6, window [0 0 1 1 1 1] with coords [(5, 10), (6, 10), (7, 10), (8, 10), (9, 10), (10, 10)] triggers candidate.
2025-04-11 17:10:46,240 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10)] triggers candidate.
2025-04-11 17:10:46,240 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 17:10:46,240 [DEBUG] board coords: [(9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)]
2025-04-11 17:10:46,240 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 17:10:46,240 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 10), (14, 10)]
2025-04-11 17:10:46,241 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 0 1 1 0] with coords [(9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)] triggers candidate.
2025-04-11 17:10:46,242 [DEBUG] board coords: [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10), (12, 10)]
2025-04-11 17:10:46,242 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1)]
2025-04-11 17:10:46,242 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (11, 10)]
2025-04-11 17:10:46,242 [DEBUG] check_window_intermediate_custom: For L=7, window [0 1 1 1 1 0 1] with coords [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10), (12, 10)] triggers candidate.
2025-04-11 17:10:46,242 [DEBUG] board coords: [(8, 10), (9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)]
2025-04-11 17:10:46,242 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 17:10:46,242 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 10), (14, 10)]
2025-04-11 17:10:46,242 [DEBUG] check_window_intermediate_custom: For L=7, window [1 1 1 0 1 1 0] with coords [(8, 10), (9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)] triggers candidate.
2025-04-11 17:10:46,246 [INFO] Final candidates: [(11, 10), (6, 10), (14, 10)]
2025-04-11 17:10:46,246 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 10), (14, 10)), ((11, 10), (6, 10)), ((6, 10), (14, 10))]
2025-04-11 17:10:46,247 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(10)), (np.int64(13), np.int64(11)))
2025-04-11 17:10:46,248 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:46,267 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:46,267 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:46,276 [INFO] Final candidates: []
2025-04-11 17:10:46,276 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:46,279 [DEBUG] board coords: [(5, 10), (6, 10), (7, 10), (8, 10), (9, 10), (10, 10)]
2025-04-11 17:10:46,279 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 17:10:46,279 [DEBUG] check_window_intermediate_custom: empty_cells=[(5, 10), (6, 10)]
2025-04-11 17:10:46,279 [DEBUG] check_window_intermediate_custom (only one inserted(6, 10)): For L=6, window [0 0 1 1 1 1] with coords [(5, 10), (6, 10), (7, 10), (8, 10), (9, 10), (10, 10)] triggers candidate.
2025-04-11 17:10:46,279 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10)] triggers candidate.
2025-04-11 17:10:46,279 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 17:10:46,279 [DEBUG] board coords: [(9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)]
2025-04-11 17:10:46,280 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 17:10:46,280 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 10), (14, 10)]
2025-04-11 17:10:46,280 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 0 1 1 0] with coords [(9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)] triggers candidate.
2025-04-11 17:10:46,281 [DEBUG] board coords: [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10), (12, 10)]
2025-04-11 17:10:46,281 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1)]
2025-04-11 17:10:46,281 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (11, 10)]
2025-04-11 17:10:46,281 [DEBUG] check_window_intermediate_custom: For L=7, window [0 1 1 1 1 0 1] with coords [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10), (12, 10)] triggers candidate.
2025-04-11 17:10:46,281 [DEBUG] board coords: [(8, 10), (9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)]
2025-04-11 17:10:46,281 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 17:10:46,281 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 10), (14, 10)]
2025-04-11 17:10:46,281 [DEBUG] check_window_intermediate_custom: For L=7, window [1 1 1 0 1 1 0] with coords [(8, 10), (9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)] triggers candidate.
2025-04-11 17:10:46,285 [INFO] Final candidates: [(11, 10), (6, 10), (14, 10)]
2025-04-11 17:10:46,285 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 10), (14, 10)), ((11, 10), (6, 10)), ((6, 10), (14, 10))]
2025-04-11 17:10:46,286 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(12)), (np.int64(11), np.int64(1)))
2025-04-11 17:10:46,287 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:46,428 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:46,428 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:46,436 [INFO] Final candidates: []
2025-04-11 17:10:46,436 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:46,439 [DEBUG] board coords: [(5, 10), (6, 10), (7, 10), (8, 10), (9, 10), (10, 10)]
2025-04-11 17:10:46,439 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 17:10:46,439 [DEBUG] check_window_intermediate_custom: empty_cells=[(5, 10), (6, 10)]
2025-04-11 17:10:46,439 [DEBUG] check_window_intermediate_custom (only one inserted(6, 10)): For L=6, window [0 0 1 1 1 1] with coords [(5, 10), (6, 10), (7, 10), (8, 10), (9, 10), (10, 10)] triggers candidate.
2025-04-11 17:10:46,439 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10)] triggers candidate.
2025-04-11 17:10:46,439 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 17:10:46,439 [DEBUG] board coords: [(9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)]
2025-04-11 17:10:46,439 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 17:10:46,439 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 10), (14, 10)]
2025-04-11 17:10:46,439 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 0 1 1 0] with coords [(9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)] triggers candidate.
2025-04-11 17:10:46,440 [DEBUG] board coords: [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10), (12, 10)]
2025-04-11 17:10:46,440 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1)]
2025-04-11 17:10:46,440 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (11, 10)]
2025-04-11 17:10:46,440 [DEBUG] check_window_intermediate_custom: For L=7, window [0 1 1 1 1 0 1] with coords [(6, 10), (7, 10), (8, 10), (9, 10), (10, 10), (11, 10), (12, 10)] triggers candidate.
2025-04-11 17:10:46,440 [DEBUG] board coords: [(8, 10), (9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)]
2025-04-11 17:10:46,440 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 17:10:46,440 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 10), (14, 10)]
2025-04-11 17:10:46,440 [DEBUG] check_window_intermediate_custom: For L=7, window [1 1 1 0 1 1 0] with coords [(8, 10), (9, 10), (10, 10), (11, 10), (12, 10), (13, 10), (14, 10)] triggers candidate.
2025-04-11 17:10:46,445 [INFO] Final candidates: [(11, 10), (6, 10), (14, 10)]
2025-04-11 17:10:46,445 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 10), (14, 10)), ((11, 10), (6, 10)), ((6, 10), (14, 10))]
2025-04-11 17:10:46,445 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(9)), (np.int64(3), np.int64(7)))
2025-04-11 17:10:46,446 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:46,514 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:46,514 [INFO] MCTS: Search finished. Best move selected with 24 visits.
2025-04-11 17:10:46,514 [INFO] MCTS (win candidates) selected move: L8,L14
2025-04-11 17:10:57,867 [INFO] Starting pre-MCTS candidate collection.
2025-04-11 17:10:57,870 [DEBUG] board coords: [(5, 10), (6, 10), (7, 10), (8, 10), (9, 10), (10, 10)]
2025-04-11 17:10:57,870 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 17:10:57,870 [DEBUG] check_window_intermediate_custom: empty_cells=[(5, 10), (6, 10)]
2025-04-11 17:10:57,870 [DEBUG] check_window_intermediate_custom (only one inserted(6, 10)): For L=6, window [0 0 1 1 1 1] with coords [(5, 10), (6, 10), (7, 10), (8, 10), (9, 10), (10, 10)] triggers candidate.
2025-04-11 17:10:57,875 [INFO] Final candidates: [(6, 10)]
2025-04-11 17:10:57,875 [INFO] Phase win: Found only one candidate: (6, 10)
2025-04-11 17:10:57,875 [INFO] Phase win: Collected 8unique candidate(s):[((6, 10), (np.int64(7), np.int64(9))), ((6, 10), (np.int64(6), np.int64(8))), ((6, 10), (np.int64(5), np.int64(10))), ((6, 10), (np.int64(4), np.int64(10))), ((6, 10), (np.int64(6), np.int64(11))), ((6, 10), (np.int64(6), np.int64(9))), ((6, 10), (np.int64(5), np.int64(9))), ((6, 10), (np.int64(5), np.int64(11)))]
2025-04-11 17:10:57,875 [INFO] Phase 1 (immediate win): 8 candidate(s) found.
2025-04-11 17:10:57,875 [INFO] MCTS: Starting search for 50 iterations.
2025-04-11 17:10:57,880 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 17:10:57,880 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 17:10:57,880 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 7), (9, 8)]
2025-04-11 17:10:57,880 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 0 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 17:10:57,883 [INFO] Final candidates: [(8, 7), (9, 8)]
2025-04-11 17:10:57,883 [INFO] Phase win: Collected 1unique candidate(s):[((8, 7), (9, 8))]
2025-04-11 17:10:57,883 [DEBUG] Tree_policy iteration 1: Expanding move ((6, 10), (np.int64(5), np.int64(9)))
2025-04-11 17:10:57,884 [DEBUG] MCTS iteration 0: reached a node with 0 visits.
2025-04-11 17:10:57,884 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:58,001 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:58,006 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 17:10:58,007 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 17:10:58,007 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 7), (9, 8)]
2025-04-11 17:10:58,007 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 0 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 17:10:58,010 [INFO] Final candidates: [(8, 7), (9, 8)]
2025-04-11 17:10:58,010 [INFO] Phase win: Collected 1unique candidate(s):[((8, 7), (9, 8))]
2025-04-11 17:10:58,010 [DEBUG] Tree_policy iteration 1: Expanding move ((6, 10), (np.int64(4), np.int64(10)))
2025-04-11 17:10:58,010 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:58,253 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:58,257 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 17:10:58,258 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 17:10:58,258 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 7), (9, 8)]
2025-04-11 17:10:58,258 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 0 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 17:10:58,261 [INFO] Final candidates: [(8, 7), (9, 8)]
2025-04-11 17:10:58,261 [INFO] Phase win: Collected 1unique candidate(s):[((8, 7), (9, 8))]
2025-04-11 17:10:58,261 [DEBUG] Tree_policy iteration 1: Expanding move ((6, 10), (np.int64(6), np.int64(9)))
2025-04-11 17:10:58,261 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:58,329 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:58,334 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 17:10:58,334 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 17:10:58,334 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 7), (9, 8)]
2025-04-11 17:10:58,334 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 0 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 17:10:58,337 [INFO] Final candidates: [(8, 7), (9, 8)]
2025-04-11 17:10:58,338 [INFO] Phase win: Collected 1unique candidate(s):[((8, 7), (9, 8))]
2025-04-11 17:10:58,338 [DEBUG] Tree_policy iteration 1: Expanding move ((6, 10), (np.int64(5), np.int64(11)))
2025-04-11 17:10:58,338 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:58,555 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:58,560 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 17:10:58,560 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 17:10:58,560 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 7), (9, 8)]
2025-04-11 17:10:58,561 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 0 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 17:10:58,564 [INFO] Final candidates: [(8, 7), (9, 8)]
2025-04-11 17:10:58,564 [INFO] Phase win: Collected 1unique candidate(s):[((8, 7), (9, 8))]
2025-04-11 17:10:58,564 [DEBUG] Tree_policy iteration 1: Expanding move ((6, 10), (np.int64(6), np.int64(11)))
2025-04-11 17:10:58,564 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:58,586 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:58,591 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 17:10:58,591 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 17:10:58,591 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 7), (9, 8)]
2025-04-11 17:10:58,591 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 0 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 17:10:58,594 [INFO] Final candidates: [(8, 7), (9, 8)]
2025-04-11 17:10:58,594 [INFO] Phase win: Collected 1unique candidate(s):[((8, 7), (9, 8))]
2025-04-11 17:10:58,595 [DEBUG] Tree_policy iteration 1: Expanding move ((6, 10), (np.int64(6), np.int64(8)))
2025-04-11 17:10:58,595 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:58,811 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:58,816 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 17:10:58,816 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 17:10:58,816 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 7), (9, 8)]
2025-04-11 17:10:58,816 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 0 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 17:10:58,819 [INFO] Final candidates: [(8, 7), (9, 8)]
2025-04-11 17:10:58,819 [INFO] Phase win: Collected 1unique candidate(s):[((8, 7), (9, 8))]
2025-04-11 17:10:58,819 [DEBUG] Tree_policy iteration 1: Expanding move ((6, 10), (np.int64(7), np.int64(9)))
2025-04-11 17:10:58,820 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:58,963 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:58,968 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 17:10:58,968 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 17:10:58,968 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 7), (9, 8)]
2025-04-11 17:10:58,968 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 0 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 17:10:58,971 [INFO] Final candidates: [(8, 7), (9, 8)]
2025-04-11 17:10:58,971 [INFO] Phase win: Collected 1unique candidate(s):[((8, 7), (9, 8))]
2025-04-11 17:10:58,971 [DEBUG] Tree_policy iteration 1: Expanding move ((6, 10), (np.int64(5), np.int64(10)))
2025-04-11 17:10:58,972 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:59,083 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:59,083 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:59,091 [INFO] Final candidates: []
2025-04-11 17:10:59,091 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:59,093 [DEBUG] board coords: [(1, 10), (2, 10), (3, 10), (4, 10), (5, 10), (6, 10)]
2025-04-11 17:10:59,093 [DEBUG] board values[np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2)]
2025-04-11 17:10:59,093 [DEBUG] check_window_intermediate_custom: empty_cells=[(2, 10), (5, 10)]
2025-04-11 17:10:59,093 [DEBUG] check_window_intermediate_custom: For L=6, window [2 0 2 2 0 2] with coords [(1, 10), (2, 10), (3, 10), (4, 10), (5, 10), (6, 10)] triggers candidate.
2025-04-11 17:10:59,095 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 17:10:59,095 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 17:10:59,095 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 7), (9, 8)]
2025-04-11 17:10:59,096 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 0 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 17:10:59,099 [INFO] Final candidates: [(8, 7), (2, 10), (5, 10), (9, 8)]
2025-04-11 17:10:59,099 [INFO] Phase defense: Collected 6unique candidate(s):[((5, 10), (9, 8)), ((2, 10), (9, 8)), ((8, 7), (9, 8)), ((8, 7), (2, 10)), ((2, 10), (5, 10)), ((8, 7), (5, 10))]
2025-04-11 17:10:59,099 [DEBUG] Tree_policy iteration 2: Expanding move ((5, 10), (9, 8))
2025-04-11 17:10:59,100 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:59,244 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:59,244 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:59,252 [INFO] Final candidates: []
2025-04-11 17:10:59,252 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:59,257 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 17:10:59,257 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 17:10:59,257 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 7), (9, 8)]
2025-04-11 17:10:59,257 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 0 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 17:10:59,260 [INFO] Final candidates: [(8, 7), (9, 8)]
2025-04-11 17:10:59,260 [INFO] Phase defense: Collected 1unique candidate(s):[((8, 7), (9, 8))]
2025-04-11 17:10:59,260 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(5)), (np.int64(11), np.int64(11)))
2025-04-11 17:10:59,261 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:59,447 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:59,447 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:59,455 [INFO] Final candidates: []
2025-04-11 17:10:59,455 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:59,460 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 17:10:59,460 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 17:10:59,460 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 7), (9, 8)]
2025-04-11 17:10:59,460 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 0 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 17:10:59,463 [INFO] Final candidates: [(8, 7), (9, 8)]
2025-04-11 17:10:59,463 [INFO] Phase defense: Collected 1unique candidate(s):[((8, 7), (9, 8))]
2025-04-11 17:10:59,463 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(9)), (np.int64(10), np.int64(11)))
2025-04-11 17:10:59,464 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:59,622 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:59,622 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:59,630 [INFO] Final candidates: []
2025-04-11 17:10:59,631 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:59,633 [DEBUG] board coords: [(1, 10), (2, 10), (3, 10), (4, 10), (5, 10), (6, 10)]
2025-04-11 17:10:59,633 [DEBUG] board values[np.int64(2), np.int64(0), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 17:10:59,633 [DEBUG] check_window_intermediate_custom: empty_cells=[(2, 10), (4, 10)]
2025-04-11 17:10:59,633 [DEBUG] check_window_intermediate_custom: For L=6, window [2 0 2 0 2 2] with coords [(1, 10), (2, 10), (3, 10), (4, 10), (5, 10), (6, 10)] triggers candidate.
2025-04-11 17:10:59,635 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 17:10:59,635 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 17:10:59,635 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 7), (9, 8)]
2025-04-11 17:10:59,635 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 0 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 17:10:59,639 [INFO] Final candidates: [(8, 7), (4, 10), (2, 10), (9, 8)]
2025-04-11 17:10:59,639 [INFO] Phase defense: Collected 6unique candidate(s):[((4, 10), (9, 8)), ((4, 10), (2, 10)), ((2, 10), (9, 8)), ((8, 7), (9, 8)), ((8, 7), (2, 10)), ((8, 7), (4, 10))]
2025-04-11 17:10:59,639 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(12)), (np.int64(1), np.int64(9)))
2025-04-11 17:10:59,640 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:59,687 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:10:59,687 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:59,695 [INFO] Final candidates: []
2025-04-11 17:10:59,695 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:59,699 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 17:10:59,699 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 17:10:59,699 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 7), (9, 8)]
2025-04-11 17:10:59,699 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 0 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 17:10:59,703 [INFO] Final candidates: [(8, 7), (9, 8)]
2025-04-11 17:10:59,703 [INFO] Phase defense: Collected 1unique candidate(s):[((8, 7), (9, 8))]
2025-04-11 17:10:59,703 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(2), np.int64(10)), (np.int64(2), np.int64(7)))
2025-04-11 17:10:59,704 [INFO] Default policy: Starting random playout.
2025-04-11 17:10:59,880 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:10:59,880 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:10:59,889 [INFO] Final candidates: []
2025-04-11 17:10:59,889 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:10:59,894 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 17:10:59,894 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 17:10:59,894 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 7), (9, 8)]
2025-04-11 17:10:59,894 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 0 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 17:10:59,897 [INFO] Final candidates: [(8, 7), (9, 8)]
2025-04-11 17:10:59,897 [INFO] Phase defense: Collected 1unique candidate(s):[((8, 7), (9, 8))]
2025-04-11 17:10:59,897 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(1), np.int64(14)), (np.int64(4), np.int64(12)))
2025-04-11 17:10:59,898 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:00,132 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:11:00,132 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:00,142 [INFO] Final candidates: []
2025-04-11 17:11:00,142 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:00,147 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 17:11:00,147 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 17:11:00,147 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 7), (9, 8)]
2025-04-11 17:11:00,147 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 0 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 17:11:00,150 [INFO] Final candidates: [(8, 7), (9, 8)]
2025-04-11 17:11:00,150 [INFO] Phase defense: Collected 1unique candidate(s):[((8, 7), (9, 8))]
2025-04-11 17:11:00,150 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(12)), (np.int64(1), np.int64(14)))
2025-04-11 17:11:00,151 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:00,256 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:11:00,257 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:00,264 [INFO] Final candidates: []
2025-04-11 17:11:00,264 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:00,269 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 17:11:00,269 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 17:11:00,269 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 7), (9, 8)]
2025-04-11 17:11:00,269 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 0 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 17:11:00,272 [INFO] Final candidates: [(8, 7), (9, 8)]
2025-04-11 17:11:00,272 [INFO] Phase defense: Collected 1unique candidate(s):[((8, 7), (9, 8))]
2025-04-11 17:11:00,273 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(4), np.int64(15)), (np.int64(1), np.int64(11)))
2025-04-11 17:11:00,273 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:00,454 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:11:00,455 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:00,466 [INFO] Final candidates: []
2025-04-11 17:11:00,466 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:00,477 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 17:11:00,477 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 17:11:00,477 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 7), (9, 8)]
2025-04-11 17:11:00,477 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 0 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 17:11:00,480 [INFO] Final candidates: [(8, 7), (9, 8)]
2025-04-11 17:11:00,481 [INFO] Phase defense: Collected 1unique candidate(s):[((8, 7), (9, 8))]
2025-04-11 17:11:00,481 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(1), np.int64(12)), (np.int64(9), np.int64(7)))
2025-04-11 17:11:00,482 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:00,592 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:11:00,592 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:00,600 [INFO] Final candidates: []
2025-04-11 17:11:00,600 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:00,605 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 17:11:00,605 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 17:11:00,605 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 7), (9, 8)]
2025-04-11 17:11:00,605 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 0 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 17:11:00,608 [INFO] Final candidates: [(8, 7), (9, 8)]
2025-04-11 17:11:00,608 [INFO] Phase defense: Collected 1unique candidate(s):[((8, 7), (9, 8))]
2025-04-11 17:11:00,609 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(6)), (np.int64(11), np.int64(12)))
2025-04-11 17:11:00,609 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:00,790 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:11:00,791 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:00,800 [INFO] Final candidates: []
2025-04-11 17:11:00,800 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:00,806 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 17:11:00,806 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 17:11:00,806 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 7), (9, 8)]
2025-04-11 17:11:00,806 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 0 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 17:11:00,809 [INFO] Final candidates: [(8, 7), (9, 8)]
2025-04-11 17:11:00,809 [INFO] Phase defense: Collected 1unique candidate(s):[((8, 7), (9, 8))]
2025-04-11 17:11:00,809 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(11)), (np.int64(8), np.int64(7)))
2025-04-11 17:11:00,810 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:00,899 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:11:00,900 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:00,907 [INFO] Final candidates: []
2025-04-11 17:11:00,907 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:00,910 [DEBUG] board coords: [(1, 10), (2, 10), (3, 10), (4, 10), (5, 10), (6, 10)]
2025-04-11 17:11:00,910 [DEBUG] board values[np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2)]
2025-04-11 17:11:00,910 [DEBUG] check_window_intermediate_custom: empty_cells=[(2, 10), (5, 10)]
2025-04-11 17:11:00,910 [DEBUG] check_window_intermediate_custom: For L=6, window [2 0 2 2 0 2] with coords [(1, 10), (2, 10), (3, 10), (4, 10), (5, 10), (6, 10)] triggers candidate.
2025-04-11 17:11:00,912 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 17:11:00,912 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 17:11:00,912 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 7), (9, 8)]
2025-04-11 17:11:00,912 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 0 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 17:11:00,915 [INFO] Final candidates: [(8, 7), (2, 10), (5, 10), (9, 8)]
2025-04-11 17:11:00,915 [INFO] Phase defense: Collected 6unique candidate(s):[((5, 10), (9, 8)), ((2, 10), (9, 8)), ((8, 7), (9, 8)), ((8, 7), (2, 10)), ((2, 10), (5, 10)), ((8, 7), (5, 10))]
2025-04-11 17:11:00,916 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(9)), (np.int64(8), np.int64(7)))
2025-04-11 17:11:00,917 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:00,938 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:11:00,939 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:00,946 [INFO] Final candidates: []
2025-04-11 17:11:00,946 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:00,951 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 17:11:00,951 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 17:11:00,951 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 7), (9, 8)]
2025-04-11 17:11:00,951 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 0 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 17:11:00,954 [INFO] Final candidates: [(8, 7), (9, 8)]
2025-04-11 17:11:00,954 [INFO] Phase defense: Collected 1unique candidate(s):[((8, 7), (9, 8))]
2025-04-11 17:11:00,954 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(3), np.int64(6)), (np.int64(7), np.int64(8)))
2025-04-11 17:11:00,955 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:01,138 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:11:01,139 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:01,152 [INFO] Final candidates: []
2025-04-11 17:11:01,152 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:01,157 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 17:11:01,157 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 17:11:01,157 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 7), (9, 8)]
2025-04-11 17:11:01,157 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 0 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 17:11:01,160 [INFO] Final candidates: [(8, 7), (9, 8)]
2025-04-11 17:11:01,160 [INFO] Phase defense: Collected 1unique candidate(s):[((8, 7), (9, 8))]
2025-04-11 17:11:01,160 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(9)), (np.int64(4), np.int64(5)))
2025-04-11 17:11:01,161 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:01,239 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:11:01,239 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:01,246 [INFO] Final candidates: []
2025-04-11 17:11:01,246 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:01,251 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 17:11:01,251 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 17:11:01,251 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 7), (9, 8)]
2025-04-11 17:11:01,251 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 0 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 17:11:01,254 [INFO] Final candidates: [(8, 7), (9, 8)]
2025-04-11 17:11:01,254 [INFO] Phase defense: Collected 1unique candidate(s):[((8, 7), (9, 8))]
2025-04-11 17:11:01,255 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(4), np.int64(11)), (np.int64(12), np.int64(0)))
2025-04-11 17:11:01,255 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:01,455 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:11:01,456 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:01,464 [INFO] Final candidates: []
2025-04-11 17:11:01,464 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:01,467 [DEBUG] board coords: [(1, 10), (2, 10), (3, 10), (4, 10), (5, 10), (6, 10)]
2025-04-11 17:11:01,467 [DEBUG] board values[np.int64(2), np.int64(0), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 17:11:01,467 [DEBUG] check_window_intermediate_custom: empty_cells=[(2, 10), (4, 10)]
2025-04-11 17:11:01,468 [DEBUG] check_window_intermediate_custom: For L=6, window [2 0 2 0 2 2] with coords [(1, 10), (2, 10), (3, 10), (4, 10), (5, 10), (6, 10)] triggers candidate.
2025-04-11 17:11:01,470 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 17:11:01,470 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 17:11:01,470 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 7), (9, 8)]
2025-04-11 17:11:01,470 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 0 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 17:11:01,473 [INFO] Final candidates: [(8, 7), (4, 10), (2, 10), (9, 8)]
2025-04-11 17:11:01,473 [INFO] Phase defense: Collected 6unique candidate(s):[((4, 10), (9, 8)), ((4, 10), (2, 10)), ((2, 10), (9, 8)), ((8, 7), (9, 8)), ((8, 7), (2, 10)), ((8, 7), (4, 10))]
2025-04-11 17:11:01,474 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(1), np.int64(14)), (np.int64(6), np.int64(9)))
2025-04-11 17:11:01,475 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:01,637 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:11:01,637 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:01,645 [INFO] Final candidates: []
2025-04-11 17:11:01,645 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:01,648 [DEBUG] board coords: [(1, 10), (2, 10), (3, 10), (4, 10), (5, 10), (6, 10)]
2025-04-11 17:11:01,648 [DEBUG] board values[np.int64(2), np.int64(0), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 17:11:01,648 [DEBUG] check_window_intermediate_custom: empty_cells=[(2, 10), (4, 10)]
2025-04-11 17:11:01,648 [DEBUG] check_window_intermediate_custom: For L=6, window [2 0 2 0 2 2] with coords [(1, 10), (2, 10), (3, 10), (4, 10), (5, 10), (6, 10)] triggers candidate.
2025-04-11 17:11:01,650 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 17:11:01,650 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 17:11:01,650 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 7), (9, 8)]
2025-04-11 17:11:01,650 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 0 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 17:11:01,653 [INFO] Final candidates: [(8, 7), (4, 10), (2, 10), (9, 8)]
2025-04-11 17:11:01,653 [INFO] Phase defense: Collected 6unique candidate(s):[((4, 10), (9, 8)), ((4, 10), (2, 10)), ((2, 10), (9, 8)), ((8, 7), (9, 8)), ((8, 7), (2, 10)), ((8, 7), (4, 10))]
2025-04-11 17:11:01,654 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(4), np.int64(15)), (np.int64(6), np.int64(8)))
2025-04-11 17:11:01,655 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:01,690 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:11:01,690 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:01,698 [INFO] Final candidates: []
2025-04-11 17:11:01,699 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:01,703 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 17:11:01,704 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 17:11:01,704 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 7), (9, 8)]
2025-04-11 17:11:01,704 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 0 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 17:11:01,707 [INFO] Final candidates: [(8, 7), (9, 8)]
2025-04-11 17:11:01,707 [INFO] Phase defense: Collected 1unique candidate(s):[((8, 7), (9, 8))]
2025-04-11 17:11:01,707 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(9)), (np.int64(10), np.int64(2)))
2025-04-11 17:11:01,708 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:01,775 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:11:01,775 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:01,783 [INFO] Final candidates: []
2025-04-11 17:11:01,783 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:01,786 [DEBUG] board coords: [(1, 10), (2, 10), (3, 10), (4, 10), (5, 10), (6, 10)]
2025-04-11 17:11:01,786 [DEBUG] board values[np.int64(2), np.int64(0), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 17:11:01,786 [DEBUG] check_window_intermediate_custom: empty_cells=[(2, 10), (4, 10)]
2025-04-11 17:11:01,786 [DEBUG] check_window_intermediate_custom: For L=6, window [2 0 2 0 2 2] with coords [(1, 10), (2, 10), (3, 10), (4, 10), (5, 10), (6, 10)] triggers candidate.
2025-04-11 17:11:01,788 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 17:11:01,788 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 17:11:01,788 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 7), (9, 8)]
2025-04-11 17:11:01,788 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 0 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 17:11:01,791 [INFO] Final candidates: [(8, 7), (4, 10), (2, 10), (9, 8)]
2025-04-11 17:11:01,791 [INFO] Phase defense: Collected 6unique candidate(s):[((4, 10), (9, 8)), ((4, 10), (2, 10)), ((2, 10), (9, 8)), ((8, 7), (9, 8)), ((8, 7), (2, 10)), ((8, 7), (4, 10))]
2025-04-11 17:11:01,792 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(5)), (np.int64(10), np.int64(8)))
2025-04-11 17:11:01,793 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:02,049 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:11:02,049 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:02,057 [INFO] Final candidates: []
2025-04-11 17:11:02,057 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:02,062 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 17:11:02,062 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 17:11:02,062 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 7), (9, 8)]
2025-04-11 17:11:02,062 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 0 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 17:11:02,067 [INFO] Final candidates: [(8, 7), (9, 8)]
2025-04-11 17:11:02,067 [INFO] Phase defense: Collected 1unique candidate(s):[((8, 7), (9, 8))]
2025-04-11 17:11:02,067 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(12)), (np.int64(10), np.int64(7)))
2025-04-11 17:11:02,068 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:02,293 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:11:02,293 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:02,301 [INFO] Final candidates: []
2025-04-11 17:11:02,301 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:02,307 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 17:11:02,308 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 17:11:02,308 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 7), (9, 8)]
2025-04-11 17:11:02,308 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 0 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 17:11:02,315 [INFO] Final candidates: [(8, 7), (9, 8)]
2025-04-11 17:11:02,315 [INFO] Phase defense: Collected 1unique candidate(s):[((8, 7), (9, 8))]
2025-04-11 17:11:02,316 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(4)), (np.int64(12), np.int64(9)))
2025-04-11 17:11:02,318 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:02,404 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:11:02,405 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:02,413 [INFO] Final candidates: []
2025-04-11 17:11:02,413 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:02,416 [DEBUG] board coords: [(1, 10), (2, 10), (3, 10), (4, 10), (5, 10), (6, 10)]
2025-04-11 17:11:02,416 [DEBUG] board values[np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2)]
2025-04-11 17:11:02,416 [DEBUG] check_window_intermediate_custom: empty_cells=[(2, 10), (5, 10)]
2025-04-11 17:11:02,416 [DEBUG] check_window_intermediate_custom: For L=6, window [2 0 2 2 0 2] with coords [(1, 10), (2, 10), (3, 10), (4, 10), (5, 10), (6, 10)] triggers candidate.
2025-04-11 17:11:02,418 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 17:11:02,418 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 17:11:02,418 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 7), (9, 8)]
2025-04-11 17:11:02,419 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 0 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 17:11:02,422 [INFO] Final candidates: [(8, 7), (2, 10), (5, 10), (9, 8)]
2025-04-11 17:11:02,422 [INFO] Phase defense: Collected 6unique candidate(s):[((5, 10), (9, 8)), ((2, 10), (9, 8)), ((8, 7), (9, 8)), ((8, 7), (2, 10)), ((2, 10), (5, 10)), ((8, 7), (5, 10))]
2025-04-11 17:11:02,422 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(7)), (np.int64(2), np.int64(14)))
2025-04-11 17:11:02,423 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:02,668 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:11:02,668 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:02,676 [INFO] Final candidates: []
2025-04-11 17:11:02,676 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:02,681 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 17:11:02,681 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 17:11:02,681 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 7), (9, 8)]
2025-04-11 17:11:02,681 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 0 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 17:11:02,684 [INFO] Final candidates: [(8, 7), (9, 8)]
2025-04-11 17:11:02,684 [INFO] Phase defense: Collected 1unique candidate(s):[((8, 7), (9, 8))]
2025-04-11 17:11:02,684 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(0)), (np.int64(2), np.int64(7)))
2025-04-11 17:11:02,685 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:02,738 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:11:02,739 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:02,747 [INFO] Final candidates: []
2025-04-11 17:11:02,747 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:02,751 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 17:11:02,751 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 17:11:02,751 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 7), (9, 8)]
2025-04-11 17:11:02,751 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 0 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 17:11:02,755 [INFO] Final candidates: [(8, 7), (9, 8)]
2025-04-11 17:11:02,755 [INFO] Phase defense: Collected 1unique candidate(s):[((8, 7), (9, 8))]
2025-04-11 17:11:02,755 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(12)), (np.int64(14), np.int64(10)))
2025-04-11 17:11:02,756 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:02,897 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:11:02,897 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:02,906 [INFO] Final candidates: []
2025-04-11 17:11:02,907 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:02,911 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 17:11:02,911 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 17:11:02,911 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 7), (9, 8)]
2025-04-11 17:11:02,911 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 0 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 17:11:02,915 [INFO] Final candidates: [(8, 7), (9, 8)]
2025-04-11 17:11:02,915 [INFO] Phase defense: Collected 1unique candidate(s):[((8, 7), (9, 8))]
2025-04-11 17:11:02,915 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(0)), (np.int64(12), np.int64(11)))
2025-04-11 17:11:02,916 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:03,085 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:11:03,085 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:03,093 [INFO] Final candidates: []
2025-04-11 17:11:03,093 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:03,099 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 17:11:03,099 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 17:11:03,099 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 7), (9, 8)]
2025-04-11 17:11:03,099 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 0 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 17:11:03,102 [INFO] Final candidates: [(8, 7), (9, 8)]
2025-04-11 17:11:03,102 [INFO] Phase defense: Collected 1unique candidate(s):[((8, 7), (9, 8))]
2025-04-11 17:11:03,102 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(1), np.int64(12)), (np.int64(9), np.int64(0)))
2025-04-11 17:11:03,103 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:03,271 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:11:03,271 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:03,279 [INFO] Final candidates: []
2025-04-11 17:11:03,279 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:03,284 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 17:11:03,284 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 17:11:03,284 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 7), (9, 8)]
2025-04-11 17:11:03,284 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 0 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 17:11:03,287 [INFO] Final candidates: [(8, 7), (9, 8)]
2025-04-11 17:11:03,287 [INFO] Phase defense: Collected 1unique candidate(s):[((8, 7), (9, 8))]
2025-04-11 17:11:03,287 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(2), np.int64(15)), (np.int64(0), np.int64(13)))
2025-04-11 17:11:03,288 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:03,438 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:11:03,438 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:03,446 [INFO] Final candidates: []
2025-04-11 17:11:03,446 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:03,451 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 17:11:03,451 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 17:11:03,451 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 7), (9, 8)]
2025-04-11 17:11:03,451 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 0 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 17:11:03,454 [INFO] Final candidates: [(8, 7), (9, 8)]
2025-04-11 17:11:03,454 [INFO] Phase defense: Collected 1unique candidate(s):[((8, 7), (9, 8))]
2025-04-11 17:11:03,454 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(3), np.int64(9)), (np.int64(6), np.int64(3)))
2025-04-11 17:11:03,455 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:03,603 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:11:03,603 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:03,611 [INFO] Final candidates: []
2025-04-11 17:11:03,611 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:03,616 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 17:11:03,616 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 17:11:03,616 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 7), (9, 8)]
2025-04-11 17:11:03,616 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 0 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 17:11:03,622 [INFO] Final candidates: [(8, 7), (9, 8)]
2025-04-11 17:11:03,622 [INFO] Phase defense: Collected 1unique candidate(s):[((8, 7), (9, 8))]
2025-04-11 17:11:03,623 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(2)), (np.int64(2), np.int64(9)))
2025-04-11 17:11:03,625 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:03,674 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:11:03,674 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:03,682 [INFO] Final candidates: []
2025-04-11 17:11:03,682 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:03,687 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 17:11:03,687 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 17:11:03,687 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 7), (9, 8)]
2025-04-11 17:11:03,687 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 0 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 17:11:03,690 [INFO] Final candidates: [(8, 7), (9, 8)]
2025-04-11 17:11:03,690 [INFO] Phase defense: Collected 1unique candidate(s):[((8, 7), (9, 8))]
2025-04-11 17:11:03,690 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(0)), (np.int64(8), np.int64(11)))
2025-04-11 17:11:03,691 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:03,730 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:11:03,730 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:03,738 [INFO] Final candidates: []
2025-04-11 17:11:03,738 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:03,743 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 17:11:03,743 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 17:11:03,743 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 7), (9, 8)]
2025-04-11 17:11:03,743 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 0 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 17:11:03,746 [INFO] Final candidates: [(8, 7), (9, 8)]
2025-04-11 17:11:03,746 [INFO] Phase defense: Collected 1unique candidate(s):[((8, 7), (9, 8))]
2025-04-11 17:11:03,746 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(10)), (np.int64(2), np.int64(15)))
2025-04-11 17:11:03,747 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:03,919 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:11:03,919 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:03,927 [INFO] Final candidates: []
2025-04-11 17:11:03,928 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:03,932 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 17:11:03,933 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 17:11:03,933 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 7), (9, 8)]
2025-04-11 17:11:03,933 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 0 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 17:11:03,936 [INFO] Final candidates: [(8, 7), (9, 8)]
2025-04-11 17:11:03,936 [INFO] Phase defense: Collected 1unique candidate(s):[((8, 7), (9, 8))]
2025-04-11 17:11:03,936 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(6)), (np.int64(0), np.int64(13)))
2025-04-11 17:11:03,937 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:04,080 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:11:04,081 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:04,089 [INFO] Final candidates: []
2025-04-11 17:11:04,089 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:04,094 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 17:11:04,094 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 17:11:04,094 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 7), (9, 8)]
2025-04-11 17:11:04,094 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 0 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 17:11:04,098 [INFO] Final candidates: [(8, 7), (9, 8)]
2025-04-11 17:11:04,098 [INFO] Phase defense: Collected 1unique candidate(s):[((8, 7), (9, 8))]
2025-04-11 17:11:04,098 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(4), np.int64(15)), (np.int64(0), np.int64(12)))
2025-04-11 17:11:04,099 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:04,151 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:11:04,151 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:04,159 [INFO] Final candidates: []
2025-04-11 17:11:04,159 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:04,162 [DEBUG] board coords: [(1, 10), (2, 10), (3, 10), (4, 10), (5, 10), (6, 10)]
2025-04-11 17:11:04,162 [DEBUG] board values[np.int64(2), np.int64(0), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 17:11:04,162 [DEBUG] check_window_intermediate_custom: empty_cells=[(2, 10), (4, 10)]
2025-04-11 17:11:04,162 [DEBUG] check_window_intermediate_custom: For L=6, window [2 0 2 0 2 2] with coords [(1, 10), (2, 10), (3, 10), (4, 10), (5, 10), (6, 10)] triggers candidate.
2025-04-11 17:11:04,165 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 17:11:04,165 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 17:11:04,165 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 7), (9, 8)]
2025-04-11 17:11:04,165 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 0 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 17:11:04,168 [INFO] Final candidates: [(8, 7), (4, 10), (2, 10), (9, 8)]
2025-04-11 17:11:04,168 [INFO] Phase defense: Collected 6unique candidate(s):[((4, 10), (9, 8)), ((4, 10), (2, 10)), ((2, 10), (9, 8)), ((8, 7), (9, 8)), ((8, 7), (2, 10)), ((8, 7), (4, 10))]
2025-04-11 17:11:04,169 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(14)), (np.int64(11), np.int64(2)))
2025-04-11 17:11:04,170 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:04,337 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:11:04,337 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:04,345 [INFO] Final candidates: []
2025-04-11 17:11:04,345 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:04,350 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 17:11:04,350 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 17:11:04,350 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 7), (9, 8)]
2025-04-11 17:11:04,350 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 0 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 17:11:04,353 [INFO] Final candidates: [(8, 7), (9, 8)]
2025-04-11 17:11:04,353 [INFO] Phase defense: Collected 1unique candidate(s):[((8, 7), (9, 8))]
2025-04-11 17:11:04,353 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(4), np.int64(13)), (np.int64(8), np.int64(6)))
2025-04-11 17:11:04,354 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:04,494 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:11:04,494 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:04,502 [INFO] Final candidates: []
2025-04-11 17:11:04,502 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:04,507 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 17:11:04,507 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 17:11:04,507 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 7), (9, 8)]
2025-04-11 17:11:04,507 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 0 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 17:11:04,511 [INFO] Final candidates: [(8, 7), (9, 8)]
2025-04-11 17:11:04,511 [INFO] Phase defense: Collected 1unique candidate(s):[((8, 7), (9, 8))]
2025-04-11 17:11:04,511 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(1), np.int64(8)), (np.int64(6), np.int64(3)))
2025-04-11 17:11:04,512 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:04,766 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:11:04,766 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:04,774 [INFO] Final candidates: []
2025-04-11 17:11:04,774 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:04,777 [DEBUG] board coords: [(1, 10), (2, 10), (3, 10), (4, 10), (5, 10), (6, 10)]
2025-04-11 17:11:04,777 [DEBUG] board values[np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2)]
2025-04-11 17:11:04,777 [DEBUG] check_window_intermediate_custom: empty_cells=[(2, 10), (5, 10)]
2025-04-11 17:11:04,777 [DEBUG] check_window_intermediate_custom: For L=6, window [2 0 2 2 0 2] with coords [(1, 10), (2, 10), (3, 10), (4, 10), (5, 10), (6, 10)] triggers candidate.
2025-04-11 17:11:04,779 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 17:11:04,779 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 17:11:04,779 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 7), (9, 8)]
2025-04-11 17:11:04,779 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 0 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 17:11:04,782 [INFO] Final candidates: [(8, 7), (2, 10), (5, 10), (9, 8)]
2025-04-11 17:11:04,782 [INFO] Phase defense: Collected 6unique candidate(s):[((5, 10), (9, 8)), ((2, 10), (9, 8)), ((8, 7), (9, 8)), ((8, 7), (2, 10)), ((2, 10), (5, 10)), ((8, 7), (5, 10))]
2025-04-11 17:11:04,783 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(1), np.int64(12)), (np.int64(2), np.int64(7)))
2025-04-11 17:11:04,784 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:04,947 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:11:04,947 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:04,955 [INFO] Final candidates: []
2025-04-11 17:11:04,955 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:04,959 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 17:11:04,959 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 17:11:04,959 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 7), (9, 8)]
2025-04-11 17:11:04,959 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 0 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 17:11:04,963 [INFO] Final candidates: [(8, 7), (9, 8)]
2025-04-11 17:11:04,963 [INFO] Phase defense: Collected 1unique candidate(s):[((8, 7), (9, 8))]
2025-04-11 17:11:04,963 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(4), np.int64(13)), (np.int64(7), np.int64(8)))
2025-04-11 17:11:04,965 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:05,035 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:11:05,035 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:05,043 [INFO] Final candidates: []
2025-04-11 17:11:05,043 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:05,049 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 17:11:05,049 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 17:11:05,049 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 7), (9, 8)]
2025-04-11 17:11:05,049 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 0 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 17:11:05,053 [INFO] Final candidates: [(8, 7), (9, 8)]
2025-04-11 17:11:05,053 [INFO] Phase defense: Collected 1unique candidate(s):[((8, 7), (9, 8))]
2025-04-11 17:11:05,053 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(4)), (np.int64(8), np.int64(12)))
2025-04-11 17:11:05,054 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:05,088 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:11:05,089 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:05,096 [INFO] Final candidates: []
2025-04-11 17:11:05,096 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:05,101 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 17:11:05,101 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 17:11:05,101 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 7), (9, 8)]
2025-04-11 17:11:05,101 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 0 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 17:11:05,104 [INFO] Final candidates: [(8, 7), (9, 8)]
2025-04-11 17:11:05,104 [INFO] Phase defense: Collected 1unique candidate(s):[((8, 7), (9, 8))]
2025-04-11 17:11:05,104 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(11)), (np.int64(14), np.int64(9)))
2025-04-11 17:11:05,105 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:05,148 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:11:05,148 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:05,156 [INFO] Final candidates: []
2025-04-11 17:11:05,156 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:05,160 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 17:11:05,160 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 17:11:05,160 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 7), (9, 8)]
2025-04-11 17:11:05,161 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 0 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 17:11:05,164 [INFO] Final candidates: [(8, 7), (9, 8)]
2025-04-11 17:11:05,164 [INFO] Phase defense: Collected 1unique candidate(s):[((8, 7), (9, 8))]
2025-04-11 17:11:05,164 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(12)), (np.int64(0), np.int64(9)))
2025-04-11 17:11:05,165 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:05,417 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:11:05,417 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:05,432 [INFO] Final candidates: []
2025-04-11 17:11:05,432 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:05,440 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 17:11:05,440 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 17:11:05,440 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 7), (9, 8)]
2025-04-11 17:11:05,440 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 0 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 17:11:05,443 [INFO] Final candidates: [(8, 7), (9, 8)]
2025-04-11 17:11:05,443 [INFO] Phase defense: Collected 1unique candidate(s):[((8, 7), (9, 8))]
2025-04-11 17:11:05,444 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(10)), (np.int64(3), np.int64(12)))
2025-04-11 17:11:05,444 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:05,616 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:11:05,616 [INFO] MCTS: Search finished. Best move selected with 10 visits.
2025-04-11 17:11:05,616 [INFO] MCTS (win candidates) selected move: L7,M6
2025-04-11 17:11:43,599 [INFO] Starting pre-MCTS candidate collection.
2025-04-11 17:11:43,607 [INFO] Final candidates: []
2025-04-11 17:11:43,607 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:43,612 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 17:11:43,612 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 17:11:43,612 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 7), (9, 8)]
2025-04-11 17:11:43,612 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 0 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 17:11:43,615 [INFO] Final candidates: [(8, 7), (9, 8)]
2025-04-11 17:11:43,615 [INFO] Phase defense: Collected 1unique candidate(s):[((8, 7), (9, 8))]
2025-04-11 17:11:43,615 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 17:11:43,616 [INFO] MCTS: Starting search for 50 iterations.
2025-04-11 17:11:43,625 [INFO] Final candidates: []
2025-04-11 17:11:43,625 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:43,631 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 17:11:43,631 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 17:11:43,631 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 7), (9, 8)]
2025-04-11 17:11:43,631 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 0 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 17:11:43,634 [INFO] Final candidates: [(8, 7), (9, 8)]
2025-04-11 17:11:43,634 [INFO] Phase defense: Collected 1unique candidate(s):[((8, 7), (9, 8))]
2025-04-11 17:11:43,634 [DEBUG] Tree_policy iteration 1: Expanding move ((8, 7), (9, 8))
2025-04-11 17:11:43,635 [DEBUG] MCTS iteration 0: reached a node with 0 visits.
2025-04-11 17:11:43,635 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:43,723 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:11:43,723 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:43,731 [INFO] Final candidates: []
2025-04-11 17:11:43,731 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:43,739 [INFO] Final candidates: []
2025-04-11 17:11:43,739 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:11:43,739 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(9)), (np.int64(4), np.int64(12)))
2025-04-11 17:11:43,740 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:43,752 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:11:43,752 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:43,760 [INFO] Final candidates: []
2025-04-11 17:11:43,760 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:43,768 [INFO] Final candidates: []
2025-04-11 17:11:43,768 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:11:43,768 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(0), np.int64(9)), (np.int64(4), np.int64(10)))
2025-04-11 17:11:43,769 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:43,850 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:11:43,850 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:43,858 [INFO] Final candidates: []
2025-04-11 17:11:43,858 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:43,866 [INFO] Final candidates: []
2025-04-11 17:11:43,866 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:11:43,866 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(3), np.int64(13)), (np.int64(7), np.int64(12)))
2025-04-11 17:11:43,866 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:43,970 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:11:43,970 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:43,978 [INFO] Final candidates: []
2025-04-11 17:11:43,978 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:43,986 [INFO] Final candidates: []
2025-04-11 17:11:43,986 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:11:43,986 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(0), np.int64(13)), (np.int64(15), np.int64(10)))
2025-04-11 17:11:43,987 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:44,144 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:11:44,145 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:44,152 [INFO] Final candidates: []
2025-04-11 17:11:44,152 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:44,160 [INFO] Final candidates: []
2025-04-11 17:11:44,160 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:11:44,160 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(1), np.int64(14)), (np.int64(2), np.int64(10)))
2025-04-11 17:11:44,161 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:44,235 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:11:44,235 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:44,242 [INFO] Final candidates: []
2025-04-11 17:11:44,242 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:44,250 [INFO] Final candidates: []
2025-04-11 17:11:44,250 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:11:44,250 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(3), np.int64(7)), (np.int64(14), np.int64(11)))
2025-04-11 17:11:44,251 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:44,459 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:11:44,459 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:44,466 [INFO] Final candidates: []
2025-04-11 17:11:44,466 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:44,474 [INFO] Final candidates: []
2025-04-11 17:11:44,474 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:11:44,474 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(3)), (np.int64(4), np.int64(7)))
2025-04-11 17:11:44,475 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:44,792 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:11:44,792 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:44,800 [INFO] Final candidates: []
2025-04-11 17:11:44,800 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:44,808 [INFO] Final candidates: []
2025-04-11 17:11:44,808 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:11:44,808 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(8)), (np.int64(11), np.int64(1)))
2025-04-11 17:11:44,809 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:44,897 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:11:44,897 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:44,905 [INFO] Final candidates: []
2025-04-11 17:11:44,905 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:44,915 [INFO] Final candidates: []
2025-04-11 17:11:44,915 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:11:44,915 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(3), np.int64(13)), (np.int64(13), np.int64(8)))
2025-04-11 17:11:44,916 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:45,142 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:11:45,142 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:45,149 [INFO] Final candidates: []
2025-04-11 17:11:45,149 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:45,157 [INFO] Final candidates: []
2025-04-11 17:11:45,157 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:11:45,157 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(8)), (np.int64(4), np.int64(10)))
2025-04-11 17:11:45,158 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:45,184 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:11:45,184 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:45,191 [INFO] Final candidates: []
2025-04-11 17:11:45,191 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:45,199 [INFO] Final candidates: []
2025-04-11 17:11:45,199 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:11:45,199 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(4)), (np.int64(11), np.int64(1)))
2025-04-11 17:11:45,200 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:45,216 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:11:45,216 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:45,223 [INFO] Final candidates: []
2025-04-11 17:11:45,223 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:45,231 [INFO] Final candidates: []
2025-04-11 17:11:45,231 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:11:45,231 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(3), np.int64(16)), (np.int64(2), np.int64(8)))
2025-04-11 17:11:45,232 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:45,598 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:11:45,599 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:45,606 [INFO] Final candidates: []
2025-04-11 17:11:45,606 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:45,614 [INFO] Final candidates: []
2025-04-11 17:11:45,614 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:11:45,614 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(4)), (np.int64(1), np.int64(11)))
2025-04-11 17:11:45,615 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:45,773 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:11:45,774 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:45,781 [INFO] Final candidates: []
2025-04-11 17:11:45,781 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:45,789 [INFO] Final candidates: []
2025-04-11 17:11:45,789 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:11:45,789 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(9)), (np.int64(5), np.int64(15)))
2025-04-11 17:11:45,790 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:46,007 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:11:46,007 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:46,014 [INFO] Final candidates: []
2025-04-11 17:11:46,014 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:46,022 [INFO] Final candidates: []
2025-04-11 17:11:46,022 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:11:46,022 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(12)), (np.int64(9), np.int64(12)))
2025-04-11 17:11:46,023 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:46,293 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:11:46,293 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:46,301 [INFO] Final candidates: []
2025-04-11 17:11:46,301 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:46,308 [INFO] Final candidates: []
2025-04-11 17:11:46,309 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:11:46,309 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(9)), (np.int64(11), np.int64(11)))
2025-04-11 17:11:46,309 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:46,358 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:11:46,358 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:46,373 [INFO] Final candidates: []
2025-04-11 17:11:46,373 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:46,392 [INFO] Final candidates: []
2025-04-11 17:11:46,392 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:11:46,392 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(9)), (np.int64(11), np.int64(8)))
2025-04-11 17:11:46,393 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:46,593 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:11:46,593 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:46,601 [INFO] Final candidates: []
2025-04-11 17:11:46,601 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:46,609 [INFO] Final candidates: []
2025-04-11 17:11:46,609 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:11:46,609 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(9)), (np.int64(6), np.int64(8)))
2025-04-11 17:11:46,609 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:46,691 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:11:46,691 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:46,699 [INFO] Final candidates: []
2025-04-11 17:11:46,699 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:46,707 [INFO] Final candidates: []
2025-04-11 17:11:46,707 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:11:46,707 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(6)), (np.int64(0), np.int64(12)))
2025-04-11 17:11:46,708 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:46,936 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:11:46,937 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:46,944 [INFO] Final candidates: []
2025-04-11 17:11:46,944 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:46,952 [INFO] Final candidates: []
2025-04-11 17:11:46,952 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:11:46,952 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(3), np.int64(9)), (np.int64(2), np.int64(7)))
2025-04-11 17:11:46,953 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:47,110 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:11:47,111 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:47,118 [INFO] Final candidates: []
2025-04-11 17:11:47,118 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:47,126 [INFO] Final candidates: []
2025-04-11 17:11:47,126 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:11:47,126 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(8)), (np.int64(4), np.int64(7)))
2025-04-11 17:11:47,127 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:47,263 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:11:47,263 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:47,271 [INFO] Final candidates: []
2025-04-11 17:11:47,271 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:47,279 [INFO] Final candidates: []
2025-04-11 17:11:47,279 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:11:47,279 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(11)), (np.int64(14), np.int64(11)))
2025-04-11 17:11:47,280 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:47,351 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:11:47,352 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:47,359 [INFO] Final candidates: []
2025-04-11 17:11:47,359 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:47,367 [INFO] Final candidates: []
2025-04-11 17:11:47,367 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:11:47,367 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(1)), (np.int64(0), np.int64(10)))
2025-04-11 17:11:47,368 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:47,414 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:11:47,414 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:47,422 [INFO] Final candidates: []
2025-04-11 17:11:47,422 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:47,429 [INFO] Final candidates: []
2025-04-11 17:11:47,429 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:11:47,430 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(1), np.int64(13)), (np.int64(2), np.int64(9)))
2025-04-11 17:11:47,430 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:47,641 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:11:47,641 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:47,649 [INFO] Final candidates: []
2025-04-11 17:11:47,649 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:47,656 [INFO] Final candidates: []
2025-04-11 17:11:47,656 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:11:47,657 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(10)), (np.int64(2), np.int64(7)))
2025-04-11 17:11:47,657 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:47,769 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:11:47,769 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:47,777 [INFO] Final candidates: []
2025-04-11 17:11:47,777 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:47,785 [INFO] Final candidates: []
2025-04-11 17:11:47,785 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:11:47,785 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(6)), (np.int64(5), np.int64(7)))
2025-04-11 17:11:47,786 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:47,828 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:11:47,828 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:47,836 [INFO] Final candidates: []
2025-04-11 17:11:47,836 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:47,844 [INFO] Final candidates: []
2025-04-11 17:11:47,844 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:11:47,844 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(14)), (np.int64(12), np.int64(9)))
2025-04-11 17:11:47,844 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:47,953 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:11:47,953 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:47,961 [INFO] Final candidates: []
2025-04-11 17:11:47,961 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:47,968 [INFO] Final candidates: []
2025-04-11 17:11:47,968 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:11:47,968 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(9)), (np.int64(2), np.int64(12)))
2025-04-11 17:11:47,969 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:48,210 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:11:48,210 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:48,218 [INFO] Final candidates: []
2025-04-11 17:11:48,218 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:48,226 [INFO] Final candidates: []
2025-04-11 17:11:48,226 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:11:48,226 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(12)), (np.int64(2), np.int64(9)))
2025-04-11 17:11:48,227 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:48,424 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:11:48,424 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:48,441 [INFO] Final candidates: []
2025-04-11 17:11:48,441 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:48,451 [INFO] Final candidates: []
2025-04-11 17:11:48,451 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:11:48,451 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(2), np.int64(14)), (np.int64(11), np.int64(12)))
2025-04-11 17:11:48,452 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:48,533 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:11:48,533 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:48,541 [INFO] Final candidates: []
2025-04-11 17:11:48,541 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:48,548 [INFO] Final candidates: []
2025-04-11 17:11:48,548 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:11:48,548 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(4), np.int64(5)), (np.int64(0), np.int64(12)))
2025-04-11 17:11:48,549 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:48,600 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:11:48,601 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:48,608 [INFO] Final candidates: []
2025-04-11 17:11:48,608 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:48,616 [INFO] Final candidates: []
2025-04-11 17:11:48,616 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:11:48,616 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(4)), (np.int64(5), np.int64(5)))
2025-04-11 17:11:48,616 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:48,743 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:11:48,744 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:48,751 [INFO] Final candidates: []
2025-04-11 17:11:48,751 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:48,758 [INFO] Final candidates: []
2025-04-11 17:11:48,758 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:11:48,758 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(12)), (np.int64(9), np.int64(0)))
2025-04-11 17:11:48,759 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:48,880 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:11:48,880 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:48,888 [INFO] Final candidates: []
2025-04-11 17:11:48,888 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:48,895 [INFO] Final candidates: []
2025-04-11 17:11:48,895 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:11:48,895 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(11)), (np.int64(7), np.int64(9)))
2025-04-11 17:11:48,896 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:48,989 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:11:48,989 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:48,996 [INFO] Final candidates: []
2025-04-11 17:11:48,996 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:49,004 [INFO] Final candidates: []
2025-04-11 17:11:49,004 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:11:49,004 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(7)), (np.int64(12), np.int64(9)))
2025-04-11 17:11:49,005 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:49,118 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:11:49,119 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:49,126 [INFO] Final candidates: []
2025-04-11 17:11:49,126 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:49,134 [INFO] Final candidates: []
2025-04-11 17:11:49,134 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:11:49,134 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(12)), (np.int64(4), np.int64(10)))
2025-04-11 17:11:49,135 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:49,405 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:11:49,405 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:49,413 [INFO] Final candidates: []
2025-04-11 17:11:49,413 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:49,420 [INFO] Final candidates: []
2025-04-11 17:11:49,420 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:11:49,420 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(4), np.int64(10)), (np.int64(1), np.int64(13)))
2025-04-11 17:11:49,421 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:49,614 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:11:49,614 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:49,622 [INFO] Final candidates: []
2025-04-11 17:11:49,622 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:49,630 [INFO] Final candidates: []
2025-04-11 17:11:49,630 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:11:49,630 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(1), np.int64(14)), (np.int64(4), np.int64(8)))
2025-04-11 17:11:49,631 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:49,858 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:11:49,858 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:49,865 [INFO] Final candidates: []
2025-04-11 17:11:49,865 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:49,873 [INFO] Final candidates: []
2025-04-11 17:11:49,873 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:11:49,873 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(9)), (np.int64(3), np.int64(6)))
2025-04-11 17:11:49,874 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:49,976 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:11:49,976 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:49,984 [INFO] Final candidates: []
2025-04-11 17:11:49,984 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:49,992 [INFO] Final candidates: []
2025-04-11 17:11:49,992 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:11:49,992 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(9)), (np.int64(9), np.int64(11)))
2025-04-11 17:11:49,992 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:50,027 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:11:50,027 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:50,035 [INFO] Final candidates: []
2025-04-11 17:11:50,035 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:50,042 [INFO] Final candidates: []
2025-04-11 17:11:50,042 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:11:50,042 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(4), np.int64(13)), (np.int64(7), np.int64(4)))
2025-04-11 17:11:50,043 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:50,219 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:11:50,219 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:50,227 [INFO] Final candidates: []
2025-04-11 17:11:50,227 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:50,236 [INFO] Final candidates: []
2025-04-11 17:11:50,236 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:11:50,236 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(3), np.int64(6)), (np.int64(2), np.int64(9)))
2025-04-11 17:11:50,237 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:50,412 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:11:50,412 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:50,420 [INFO] Final candidates: []
2025-04-11 17:11:50,420 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:50,427 [INFO] Final candidates: []
2025-04-11 17:11:50,427 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:11:50,427 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(8)), (np.int64(1), np.int64(14)))
2025-04-11 17:11:50,428 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:50,526 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:11:50,526 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:50,534 [INFO] Final candidates: []
2025-04-11 17:11:50,534 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:50,542 [INFO] Final candidates: []
2025-04-11 17:11:50,542 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:11:50,542 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(1)), (np.int64(3), np.int64(16)))
2025-04-11 17:11:50,543 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:50,687 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:11:50,687 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:50,695 [INFO] Final candidates: []
2025-04-11 17:11:50,695 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:50,703 [INFO] Final candidates: []
2025-04-11 17:11:50,703 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:11:50,703 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(2)), (np.int64(1), np.int64(11)))
2025-04-11 17:11:50,704 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:50,862 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:11:50,862 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:50,870 [INFO] Final candidates: []
2025-04-11 17:11:50,870 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:50,878 [INFO] Final candidates: []
2025-04-11 17:11:50,878 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:11:50,878 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(7)), (np.int64(10), np.int64(11)))
2025-04-11 17:11:50,879 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:51,108 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:11:51,108 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:51,115 [INFO] Final candidates: []
2025-04-11 17:11:51,115 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:51,123 [INFO] Final candidates: []
2025-04-11 17:11:51,123 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:11:51,123 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(0)), (np.int64(8), np.int64(12)))
2025-04-11 17:11:51,124 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:51,398 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:11:51,398 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:51,405 [INFO] Final candidates: []
2025-04-11 17:11:51,405 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:51,413 [INFO] Final candidates: []
2025-04-11 17:11:51,413 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:11:51,413 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(9)), (np.int64(0), np.int64(10)))
2025-04-11 17:11:51,414 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:51,643 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:11:51,644 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:11:51,651 [INFO] Final candidates: []
2025-04-11 17:11:51,651 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:11:51,659 [INFO] Final candidates: []
2025-04-11 17:11:51,659 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:11:51,659 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(5)), (np.int64(10), np.int64(11)))
2025-04-11 17:11:51,660 [INFO] Default policy: Starting random playout.
2025-04-11 17:11:51,691 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:11:51,691 [INFO] MCTS: Search finished. Best move selected with 50 visits.
2025-04-11 17:11:51,691 [INFO] MCTS (defense candidates) selected move: H9,J10
2025-04-11 17:12:05,252 [INFO] Starting pre-MCTS candidate collection.
2025-04-11 17:12:05,259 [INFO] Final candidates: []
2025-04-11 17:12:05,259 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:05,266 [INFO] Final candidates: []
2025-04-11 17:12:05,266 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:05,266 [INFO] No candidate found in Phase 1 or 2; using full legal moves for MCTS.
2025-04-11 17:12:05,267 [INFO] MCTS: Starting search for 100 iterations.
2025-04-11 17:12:05,275 [INFO] Final candidates: []
2025-04-11 17:12:05,275 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:05,282 [INFO] Final candidates: []
2025-04-11 17:12:05,282 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:05,282 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(11)), (np.int64(11), np.int64(2)))
2025-04-11 17:12:05,283 [DEBUG] MCTS iteration 0: reached a node with 0 visits.
2025-04-11 17:12:05,283 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:05,323 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:05,331 [INFO] Final candidates: []
2025-04-11 17:12:05,331 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:05,338 [INFO] Final candidates: []
2025-04-11 17:12:05,338 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:05,338 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(6)), (np.int64(14), np.int64(11)))
2025-04-11 17:12:05,339 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:05,544 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:05,551 [INFO] Final candidates: []
2025-04-11 17:12:05,551 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:05,559 [INFO] Final candidates: []
2025-04-11 17:12:05,559 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:05,559 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(10)), (np.int64(13), np.int64(0)))
2025-04-11 17:12:05,559 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:05,859 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:05,866 [INFO] Final candidates: []
2025-04-11 17:12:05,866 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:05,874 [INFO] Final candidates: []
2025-04-11 17:12:05,874 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:05,874 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(9)), (np.int64(4), np.int64(7)))
2025-04-11 17:12:05,875 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:06,040 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:06,047 [INFO] Final candidates: []
2025-04-11 17:12:06,047 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:06,055 [INFO] Final candidates: []
2025-04-11 17:12:06,055 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:06,055 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(3), np.int64(1)), (np.int64(2), np.int64(9)))
2025-04-11 17:12:06,056 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:06,354 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:06,364 [INFO] Final candidates: []
2025-04-11 17:12:06,364 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:06,372 [INFO] Final candidates: []
2025-04-11 17:12:06,372 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:06,372 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(4)), (np.int64(0), np.int64(10)))
2025-04-11 17:12:06,375 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:06,493 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:06,501 [INFO] Final candidates: []
2025-04-11 17:12:06,501 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:06,509 [INFO] Final candidates: []
2025-04-11 17:12:06,509 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:06,509 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(7)), (np.int64(10), np.int64(2)))
2025-04-11 17:12:06,509 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:06,694 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:06,708 [INFO] Final candidates: []
2025-04-11 17:12:06,708 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:06,718 [INFO] Final candidates: []
2025-04-11 17:12:06,718 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:06,718 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(1)), (np.int64(3), np.int64(2)))
2025-04-11 17:12:06,719 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:06,823 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:06,830 [INFO] Final candidates: []
2025-04-11 17:12:06,830 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:06,838 [INFO] Final candidates: []
2025-04-11 17:12:06,838 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:06,838 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(2)), (np.int64(2), np.int64(4)))
2025-04-11 17:12:06,839 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:06,978 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:06,985 [INFO] Final candidates: []
2025-04-11 17:12:06,985 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:06,993 [INFO] Final candidates: []
2025-04-11 17:12:06,993 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:06,993 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(9)), (np.int64(15), np.int64(10)))
2025-04-11 17:12:06,994 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:07,243 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:07,258 [INFO] Final candidates: []
2025-04-11 17:12:07,258 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:07,270 [INFO] Final candidates: []
2025-04-11 17:12:07,270 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:07,270 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(5)), (np.int64(11), np.int64(2)))
2025-04-11 17:12:07,272 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:07,393 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:07,401 [INFO] Final candidates: []
2025-04-11 17:12:07,401 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:07,408 [INFO] Final candidates: []
2025-04-11 17:12:07,408 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:07,408 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(3), np.int64(2)), (np.int64(12), np.int64(9)))
2025-04-11 17:12:07,409 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:07,490 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:07,498 [INFO] Final candidates: []
2025-04-11 17:12:07,498 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:07,505 [INFO] Final candidates: []
2025-04-11 17:12:07,505 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:07,505 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(10)), (np.int64(10), np.int64(11)))
2025-04-11 17:12:07,506 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:07,639 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:07,647 [INFO] Final candidates: []
2025-04-11 17:12:07,647 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:07,654 [INFO] Final candidates: []
2025-04-11 17:12:07,654 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:07,654 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(2), np.int64(4)), (np.int64(15), np.int64(10)))
2025-04-11 17:12:07,655 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:07,738 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:07,746 [INFO] Final candidates: []
2025-04-11 17:12:07,746 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:07,753 [INFO] Final candidates: []
2025-04-11 17:12:07,753 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:07,753 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(8)), (np.int64(2), np.int64(6)))
2025-04-11 17:12:07,754 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:07,841 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:07,854 [INFO] Final candidates: []
2025-04-11 17:12:07,854 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:07,864 [INFO] Final candidates: []
2025-04-11 17:12:07,865 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:07,865 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(12)), (np.int64(2), np.int64(6)))
2025-04-11 17:12:07,866 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:07,917 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:07,925 [INFO] Final candidates: []
2025-04-11 17:12:07,925 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:07,932 [INFO] Final candidates: []
2025-04-11 17:12:07,932 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:07,932 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(0)), (np.int64(8), np.int64(12)))
2025-04-11 17:12:07,933 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:08,015 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:08,023 [INFO] Final candidates: []
2025-04-11 17:12:08,023 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:08,031 [INFO] Final candidates: []
2025-04-11 17:12:08,031 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:08,031 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(2), np.int64(3)), (np.int64(9), np.int64(6)))
2025-04-11 17:12:08,032 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:08,251 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:08,258 [INFO] Final candidates: []
2025-04-11 17:12:08,258 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:08,266 [INFO] Final candidates: []
2025-04-11 17:12:08,266 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:08,266 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(2), np.int64(6)), (np.int64(15), np.int64(10)))
2025-04-11 17:12:08,267 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:08,285 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:08,292 [INFO] Final candidates: []
2025-04-11 17:12:08,292 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:08,300 [INFO] Final candidates: []
2025-04-11 17:12:08,300 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:08,300 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(5)), (np.int64(10), np.int64(8)))
2025-04-11 17:12:08,301 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:08,385 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:08,392 [INFO] Final candidates: []
2025-04-11 17:12:08,392 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:08,400 [INFO] Final candidates: []
2025-04-11 17:12:08,400 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:08,400 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(3), np.int64(15)), (np.int64(3), np.int64(4)))
2025-04-11 17:12:08,401 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:08,609 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:08,617 [INFO] Final candidates: []
2025-04-11 17:12:08,617 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:08,624 [INFO] Final candidates: []
2025-04-11 17:12:08,624 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:08,624 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(8)), (np.int64(4), np.int64(13)))
2025-04-11 17:12:08,625 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:08,809 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:08,817 [INFO] Final candidates: []
2025-04-11 17:12:08,817 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:08,824 [INFO] Final candidates: []
2025-04-11 17:12:08,824 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:08,824 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(8)), (np.int64(4), np.int64(4)))
2025-04-11 17:12:08,825 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:08,952 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:08,960 [INFO] Final candidates: []
2025-04-11 17:12:08,960 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:08,968 [INFO] Final candidates: []
2025-04-11 17:12:08,968 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:08,968 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(6)), (np.int64(4), np.int64(15)))
2025-04-11 17:12:08,969 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:09,150 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:09,158 [INFO] Final candidates: []
2025-04-11 17:12:09,158 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:09,165 [INFO] Final candidates: []
2025-04-11 17:12:09,165 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:09,165 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(6)), (np.int64(4), np.int64(16)))
2025-04-11 17:12:09,166 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:09,301 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:09,309 [INFO] Final candidates: []
2025-04-11 17:12:09,309 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:09,317 [INFO] Final candidates: []
2025-04-11 17:12:09,317 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:09,317 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(3), np.int64(1)), (np.int64(3), np.int64(2)))
2025-04-11 17:12:09,318 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:09,550 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:09,558 [INFO] Final candidates: []
2025-04-11 17:12:09,558 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:09,565 [INFO] Final candidates: []
2025-04-11 17:12:09,565 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:09,565 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(2)), (np.int64(0), np.int64(13)))
2025-04-11 17:12:09,566 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:09,714 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:09,722 [INFO] Final candidates: []
2025-04-11 17:12:09,722 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:09,730 [INFO] Final candidates: []
2025-04-11 17:12:09,730 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:09,730 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(1), np.int64(6)), (np.int64(15), np.int64(10)))
2025-04-11 17:12:09,731 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:09,957 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:09,964 [INFO] Final candidates: []
2025-04-11 17:12:09,964 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:09,972 [INFO] Final candidates: []
2025-04-11 17:12:09,972 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:09,972 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(3), np.int64(16)), (np.int64(8), np.int64(5)))
2025-04-11 17:12:09,973 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:10,199 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:10,207 [INFO] Final candidates: []
2025-04-11 17:12:10,207 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:10,214 [INFO] Final candidates: []
2025-04-11 17:12:10,214 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:10,214 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(2), np.int64(8)), (np.int64(8), np.int64(5)))
2025-04-11 17:12:10,215 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:10,517 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:10,536 [INFO] Final candidates: []
2025-04-11 17:12:10,536 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:10,545 [INFO] Final candidates: []
2025-04-11 17:12:10,545 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:10,545 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(0)), (np.int64(3), np.int64(9)))
2025-04-11 17:12:10,546 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:10,589 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:10,596 [INFO] Final candidates: []
2025-04-11 17:12:10,596 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:10,604 [INFO] Final candidates: []
2025-04-11 17:12:10,604 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:10,604 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(1), np.int64(12)), (np.int64(1), np.int64(13)))
2025-04-11 17:12:10,605 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:10,748 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:10,766 [INFO] Final candidates: []
2025-04-11 17:12:10,767 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:10,776 [INFO] Final candidates: []
2025-04-11 17:12:10,776 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:10,776 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(9)), (np.int64(7), np.int64(4)))
2025-04-11 17:12:10,777 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:10,872 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:10,880 [INFO] Final candidates: []
2025-04-11 17:12:10,880 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:10,887 [INFO] Final candidates: []
2025-04-11 17:12:10,887 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:10,887 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(12)), (np.int64(1), np.int64(8)))
2025-04-11 17:12:10,888 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:11,216 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:11,223 [INFO] Final candidates: []
2025-04-11 17:12:11,223 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:11,231 [INFO] Final candidates: []
2025-04-11 17:12:11,231 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:11,231 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(10)), (np.int64(2), np.int64(5)))
2025-04-11 17:12:11,231 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:11,482 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:11,489 [INFO] Final candidates: []
2025-04-11 17:12:11,489 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:11,497 [INFO] Final candidates: []
2025-04-11 17:12:11,497 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:11,497 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(0)), (np.int64(6), np.int64(14)))
2025-04-11 17:12:11,498 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:11,751 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:11,758 [INFO] Final candidates: []
2025-04-11 17:12:11,758 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:11,766 [INFO] Final candidates: []
2025-04-11 17:12:11,766 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:11,766 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(9)), (np.int64(3), np.int64(2)))
2025-04-11 17:12:11,767 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:11,892 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:11,900 [INFO] Final candidates: []
2025-04-11 17:12:11,900 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:11,907 [INFO] Final candidates: []
2025-04-11 17:12:11,907 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:11,907 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(1), np.int64(6)), (np.int64(5), np.int64(15)))
2025-04-11 17:12:11,908 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:12,195 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:12,203 [INFO] Final candidates: []
2025-04-11 17:12:12,203 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:12,210 [INFO] Final candidates: []
2025-04-11 17:12:12,210 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:12,210 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(15)), (np.int64(3), np.int64(9)))
2025-04-11 17:12:12,211 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:12,455 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:12,463 [INFO] Final candidates: []
2025-04-11 17:12:12,463 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:12,471 [INFO] Final candidates: []
2025-04-11 17:12:12,471 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:12,471 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(8)), (np.int64(1), np.int64(9)))
2025-04-11 17:12:12,472 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:12,754 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:12,762 [INFO] Final candidates: []
2025-04-11 17:12:12,762 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:12,770 [INFO] Final candidates: []
2025-04-11 17:12:12,770 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:12,770 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(2), np.int64(4)), (np.int64(9), np.int64(7)))
2025-04-11 17:12:12,771 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:12,852 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:12,861 [INFO] Final candidates: []
2025-04-11 17:12:12,861 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:12,869 [INFO] Final candidates: []
2025-04-11 17:12:12,869 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:12,869 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(3), np.int64(13)), (np.int64(10), np.int64(7)))
2025-04-11 17:12:12,870 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:13,042 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:13,050 [INFO] Final candidates: []
2025-04-11 17:12:13,050 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:13,057 [INFO] Final candidates: []
2025-04-11 17:12:13,057 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:13,057 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(11)), (np.int64(12), np.int64(12)))
2025-04-11 17:12:13,058 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:13,354 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:13,361 [INFO] Final candidates: []
2025-04-11 17:12:13,361 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:13,369 [INFO] Final candidates: []
2025-04-11 17:12:13,369 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:13,369 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(7)), (np.int64(11), np.int64(12)))
2025-04-11 17:12:13,370 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:13,624 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:13,632 [INFO] Final candidates: []
2025-04-11 17:12:13,632 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:13,640 [INFO] Final candidates: []
2025-04-11 17:12:13,640 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:13,640 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(5)), (np.int64(14), np.int64(11)))
2025-04-11 17:12:13,642 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:13,853 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:13,861 [INFO] Final candidates: []
2025-04-11 17:12:13,861 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:13,869 [INFO] Final candidates: []
2025-04-11 17:12:13,869 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:13,869 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(1)), (np.int64(3), np.int64(11)))
2025-04-11 17:12:13,870 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:14,022 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:14,030 [INFO] Final candidates: []
2025-04-11 17:12:14,030 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:14,037 [INFO] Final candidates: []
2025-04-11 17:12:14,037 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:14,037 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(9)), (np.int64(2), np.int64(8)))
2025-04-11 17:12:14,038 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:14,114 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:14,121 [INFO] Final candidates: []
2025-04-11 17:12:14,121 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:14,129 [INFO] Final candidates: []
2025-04-11 17:12:14,129 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:14,129 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(7)), (np.int64(12), np.int64(1)))
2025-04-11 17:12:14,130 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:14,261 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:14,269 [INFO] Final candidates: []
2025-04-11 17:12:14,269 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:14,277 [INFO] Final candidates: []
2025-04-11 17:12:14,277 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:14,277 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(1)), (np.int64(7), np.int64(4)))
2025-04-11 17:12:14,278 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:14,464 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:14,472 [INFO] Final candidates: []
2025-04-11 17:12:14,472 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:14,479 [INFO] Final candidates: []
2025-04-11 17:12:14,479 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:14,479 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(11)), (np.int64(7), np.int64(8)))
2025-04-11 17:12:14,480 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:14,579 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:14,586 [INFO] Final candidates: []
2025-04-11 17:12:14,586 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:14,594 [INFO] Final candidates: []
2025-04-11 17:12:14,594 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:14,594 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(9)), (np.int64(11), np.int64(1)))
2025-04-11 17:12:14,595 [DEBUG] MCTS iteration 50: reached a node with 0 visits.
2025-04-11 17:12:14,595 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:14,758 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:14,766 [INFO] Final candidates: []
2025-04-11 17:12:14,766 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:14,773 [INFO] Final candidates: []
2025-04-11 17:12:14,773 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:14,773 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(9)), (np.int64(11), np.int64(11)))
2025-04-11 17:12:14,774 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:14,938 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:14,946 [INFO] Final candidates: []
2025-04-11 17:12:14,946 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:14,954 [INFO] Final candidates: []
2025-04-11 17:12:14,954 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:14,954 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(2), np.int64(6)), (np.int64(4), np.int64(6)))
2025-04-11 17:12:14,955 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:15,069 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:15,077 [INFO] Final candidates: []
2025-04-11 17:12:15,077 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:15,084 [INFO] Final candidates: []
2025-04-11 17:12:15,084 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:15,084 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(1)), (np.int64(3), np.int64(11)))
2025-04-11 17:12:15,085 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:15,248 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:15,256 [INFO] Final candidates: []
2025-04-11 17:12:15,256 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:15,263 [INFO] Final candidates: []
2025-04-11 17:12:15,263 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:15,264 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(3), np.int64(2)), (np.int64(11), np.int64(12)))
2025-04-11 17:12:15,264 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:15,358 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:15,366 [INFO] Final candidates: []
2025-04-11 17:12:15,366 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:15,373 [INFO] Final candidates: []
2025-04-11 17:12:15,373 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:15,373 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(11)), (np.int64(4), np.int64(13)))
2025-04-11 17:12:15,374 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:15,404 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:15,412 [INFO] Final candidates: []
2025-04-11 17:12:15,412 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:15,420 [INFO] Final candidates: []
2025-04-11 17:12:15,420 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:15,420 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(3)), (np.int64(1), np.int64(11)))
2025-04-11 17:12:15,421 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:15,504 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:15,512 [INFO] Final candidates: []
2025-04-11 17:12:15,512 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:15,520 [INFO] Final candidates: []
2025-04-11 17:12:15,520 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:15,520 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(0)), (np.int64(1), np.int64(6)))
2025-04-11 17:12:15,521 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:15,677 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:15,685 [INFO] Final candidates: []
2025-04-11 17:12:15,685 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:15,692 [INFO] Final candidates: []
2025-04-11 17:12:15,692 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:15,692 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(1)), (np.int64(10), np.int64(12)))
2025-04-11 17:12:15,693 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:15,779 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:15,787 [INFO] Final candidates: []
2025-04-11 17:12:15,787 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:15,794 [INFO] Final candidates: []
2025-04-11 17:12:15,794 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:15,794 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(4)), (np.int64(10), np.int64(1)))
2025-04-11 17:12:15,795 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:15,852 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:15,860 [INFO] Final candidates: []
2025-04-11 17:12:15,860 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:15,867 [INFO] Final candidates: []
2025-04-11 17:12:15,867 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:15,868 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(3), np.int64(16)), (np.int64(10), np.int64(2)))
2025-04-11 17:12:15,868 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:15,978 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:15,986 [INFO] Final candidates: []
2025-04-11 17:12:15,986 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:15,993 [INFO] Final candidates: []
2025-04-11 17:12:15,993 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:15,993 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(3), np.int64(9)), (np.int64(2), np.int64(3)))
2025-04-11 17:12:15,994 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:16,078 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:16,085 [INFO] Final candidates: []
2025-04-11 17:12:16,085 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:16,093 [INFO] Final candidates: []
2025-04-11 17:12:16,093 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:16,093 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(1)), (np.int64(12), np.int64(9)))
2025-04-11 17:12:16,093 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:16,161 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:16,169 [INFO] Final candidates: []
2025-04-11 17:12:16,169 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:16,176 [INFO] Final candidates: []
2025-04-11 17:12:16,176 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:16,176 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(0)), (np.int64(2), np.int64(2)))
2025-04-11 17:12:16,177 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:16,308 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:16,316 [INFO] Final candidates: []
2025-04-11 17:12:16,316 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:16,323 [INFO] Final candidates: []
2025-04-11 17:12:16,323 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:16,323 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(11)), (np.int64(9), np.int64(11)))
2025-04-11 17:12:16,324 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:16,385 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:16,392 [INFO] Final candidates: []
2025-04-11 17:12:16,393 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:16,400 [INFO] Final candidates: []
2025-04-11 17:12:16,400 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:16,400 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(3)), (np.int64(3), np.int64(5)))
2025-04-11 17:12:16,401 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:16,527 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:16,535 [INFO] Final candidates: []
2025-04-11 17:12:16,535 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:16,543 [INFO] Final candidates: []
2025-04-11 17:12:16,543 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:16,543 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(9)), (np.int64(4), np.int64(16)))
2025-04-11 17:12:16,544 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:16,654 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:16,661 [INFO] Final candidates: []
2025-04-11 17:12:16,661 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:16,671 [INFO] Final candidates: []
2025-04-11 17:12:16,671 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:16,671 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(1), np.int64(13)), (np.int64(11), np.int64(8)))
2025-04-11 17:12:16,673 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:16,858 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:16,865 [INFO] Final candidates: []
2025-04-11 17:12:16,865 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:16,873 [INFO] Final candidates: []
2025-04-11 17:12:16,873 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:16,873 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(11)), (np.int64(2), np.int64(14)))
2025-04-11 17:12:16,875 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:17,044 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:17,052 [INFO] Final candidates: []
2025-04-11 17:12:17,052 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:17,059 [INFO] Final candidates: []
2025-04-11 17:12:17,060 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:17,060 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(3), np.int64(1)), (np.int64(4), np.int64(13)))
2025-04-11 17:12:17,060 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:17,310 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:17,317 [INFO] Final candidates: []
2025-04-11 17:12:17,317 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:17,325 [INFO] Final candidates: []
2025-04-11 17:12:17,325 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:17,325 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(7)), (np.int64(10), np.int64(12)))
2025-04-11 17:12:17,326 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:17,624 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:17,632 [INFO] Final candidates: []
2025-04-11 17:12:17,632 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:17,639 [INFO] Final candidates: []
2025-04-11 17:12:17,639 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:17,639 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(0)), (np.int64(6), np.int64(14)))
2025-04-11 17:12:17,640 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:17,913 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:17,921 [INFO] Final candidates: []
2025-04-11 17:12:17,921 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:17,928 [INFO] Final candidates: []
2025-04-11 17:12:17,929 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:17,929 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(4)), (np.int64(6), np.int64(14)))
2025-04-11 17:12:17,929 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:17,982 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:17,989 [INFO] Final candidates: []
2025-04-11 17:12:17,989 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:17,997 [INFO] Final candidates: []
2025-04-11 17:12:17,997 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:17,997 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(3), np.int64(7)), (np.int64(4), np.int64(16)))
2025-04-11 17:12:17,998 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:18,172 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:18,180 [INFO] Final candidates: []
2025-04-11 17:12:18,180 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:18,189 [INFO] Final candidates: []
2025-04-11 17:12:18,189 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:18,189 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(12)), (np.int64(5), np.int64(7)))
2025-04-11 17:12:18,190 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:18,375 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:18,382 [INFO] Final candidates: []
2025-04-11 17:12:18,382 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:18,390 [INFO] Final candidates: []
2025-04-11 17:12:18,390 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:18,390 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(6)), (np.int64(2), np.int64(9)))
2025-04-11 17:12:18,391 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:18,554 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:18,561 [INFO] Final candidates: []
2025-04-11 17:12:18,561 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:18,569 [INFO] Final candidates: []
2025-04-11 17:12:18,569 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:18,569 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(2), np.int64(2)), (np.int64(5), np.int64(7)))
2025-04-11 17:12:18,570 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:18,881 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:18,890 [INFO] Final candidates: []
2025-04-11 17:12:18,890 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:18,906 [INFO] Final candidates: []
2025-04-11 17:12:18,906 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:18,906 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(2), np.int64(3)), (np.int64(2), np.int64(12)))
2025-04-11 17:12:18,907 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:18,991 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:18,999 [INFO] Final candidates: []
2025-04-11 17:12:18,999 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:19,007 [INFO] Final candidates: []
2025-04-11 17:12:19,007 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:19,007 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(12)), (np.int64(10), np.int64(12)))
2025-04-11 17:12:19,008 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:19,146 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:19,153 [INFO] Final candidates: []
2025-04-11 17:12:19,154 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:19,161 [INFO] Final candidates: []
2025-04-11 17:12:19,161 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:19,161 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(1), np.int64(14)), (np.int64(2), np.int64(12)))
2025-04-11 17:12:19,162 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:19,263 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:19,270 [INFO] Final candidates: []
2025-04-11 17:12:19,270 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:19,278 [INFO] Final candidates: []
2025-04-11 17:12:19,278 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:19,278 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(4)), (np.int64(2), np.int64(12)))
2025-04-11 17:12:19,278 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:19,445 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:19,452 [INFO] Final candidates: []
2025-04-11 17:12:19,452 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:19,460 [INFO] Final candidates: []
2025-04-11 17:12:19,460 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:19,460 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(12)), (np.int64(15), np.int64(10)))
2025-04-11 17:12:19,461 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:19,536 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:19,544 [INFO] Final candidates: []
2025-04-11 17:12:19,544 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:19,551 [INFO] Final candidates: []
2025-04-11 17:12:19,551 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:19,551 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(2), np.int64(4)), (np.int64(4), np.int64(13)))
2025-04-11 17:12:19,552 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:19,664 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:19,671 [INFO] Final candidates: []
2025-04-11 17:12:19,671 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:19,679 [INFO] Final candidates: []
2025-04-11 17:12:19,679 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:19,679 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(0)), (np.int64(13), np.int64(9)))
2025-04-11 17:12:19,679 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:19,695 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:19,703 [INFO] Final candidates: []
2025-04-11 17:12:19,703 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:19,711 [INFO] Final candidates: []
2025-04-11 17:12:19,711 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:19,711 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(10)), (np.int64(4), np.int64(5)))
2025-04-11 17:12:19,712 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:19,914 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:19,922 [INFO] Final candidates: []
2025-04-11 17:12:19,922 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:19,929 [INFO] Final candidates: []
2025-04-11 17:12:19,929 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:19,929 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(0)), (np.int64(5), np.int64(3)))
2025-04-11 17:12:19,930 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:19,946 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:19,965 [INFO] Final candidates: []
2025-04-11 17:12:19,965 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:19,981 [INFO] Final candidates: []
2025-04-11 17:12:19,981 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:19,981 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(1)), (np.int64(13), np.int64(12)))
2025-04-11 17:12:19,982 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:20,142 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:20,149 [INFO] Final candidates: []
2025-04-11 17:12:20,149 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:20,157 [INFO] Final candidates: []
2025-04-11 17:12:20,157 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:20,157 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(10)), (np.int64(7), np.int64(7)))
2025-04-11 17:12:20,158 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:20,390 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:20,398 [INFO] Final candidates: []
2025-04-11 17:12:20,398 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:20,405 [INFO] Final candidates: []
2025-04-11 17:12:20,405 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:20,405 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(0)), (np.int64(7), np.int64(13)))
2025-04-11 17:12:20,406 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:20,602 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:20,610 [INFO] Final candidates: []
2025-04-11 17:12:20,610 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:20,617 [INFO] Final candidates: []
2025-04-11 17:12:20,617 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:20,617 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(11)), (np.int64(1), np.int64(6)))
2025-04-11 17:12:20,618 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:20,669 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:20,677 [INFO] Final candidates: []
2025-04-11 17:12:20,677 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:20,687 [INFO] Final candidates: []
2025-04-11 17:12:20,687 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:20,687 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(2), np.int64(8)), (np.int64(5), np.int64(15)))
2025-04-11 17:12:20,689 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:20,846 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:20,853 [INFO] Final candidates: []
2025-04-11 17:12:20,853 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:20,861 [INFO] Final candidates: []
2025-04-11 17:12:20,861 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:20,861 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(3), np.int64(1)), (np.int64(4), np.int64(6)))
2025-04-11 17:12:20,862 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:20,916 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:20,923 [INFO] Final candidates: []
2025-04-11 17:12:20,923 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:20,931 [INFO] Final candidates: []
2025-04-11 17:12:20,931 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:20,931 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(9)), (np.int64(10), np.int64(12)))
2025-04-11 17:12:20,932 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:21,172 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:21,179 [INFO] Final candidates: []
2025-04-11 17:12:21,179 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:21,187 [INFO] Final candidates: []
2025-04-11 17:12:21,187 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:21,187 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(9)), (np.int64(12), np.int64(11)))
2025-04-11 17:12:21,188 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:21,249 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:21,257 [INFO] Final candidates: []
2025-04-11 17:12:21,257 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:21,264 [INFO] Final candidates: []
2025-04-11 17:12:21,264 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:21,265 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(2), np.int64(2)), (np.int64(14), np.int64(10)))
2025-04-11 17:12:21,265 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:21,480 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:21,488 [INFO] Final candidates: []
2025-04-11 17:12:21,488 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:21,495 [INFO] Final candidates: []
2025-04-11 17:12:21,495 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:21,495 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(6)), (np.int64(3), np.int64(16)))
2025-04-11 17:12:21,496 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:21,790 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:21,809 [INFO] Final candidates: []
2025-04-11 17:12:21,809 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:21,829 [INFO] Final candidates: []
2025-04-11 17:12:21,829 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:21,829 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(0)), (np.int64(12), np.int64(12)))
2025-04-11 17:12:21,831 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:21,990 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:21,998 [INFO] Final candidates: []
2025-04-11 17:12:21,998 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:22,007 [INFO] Final candidates: []
2025-04-11 17:12:22,007 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:22,007 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(7)), (np.int64(4), np.int64(7)))
2025-04-11 17:12:22,009 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:22,232 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:22,240 [INFO] Final candidates: []
2025-04-11 17:12:22,240 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:22,247 [INFO] Final candidates: []
2025-04-11 17:12:22,247 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:22,247 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(6)), (np.int64(4), np.int64(3)))
2025-04-11 17:12:22,248 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:22,343 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:22,351 [INFO] Final candidates: []
2025-04-11 17:12:22,351 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:22,358 [INFO] Final candidates: []
2025-04-11 17:12:22,358 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:22,359 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(1), np.int64(12)), (np.int64(13), np.int64(0)))
2025-04-11 17:12:22,359 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:22,557 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:22,558 [INFO] MCTS: Search finished. Best move selected with 1 visits.
2025-04-11 17:12:22,558 [INFO] MCTS selected move: M7,C12
2025-04-11 17:12:22,558 [INFO] ===============NEW MOVE================
2025-04-11 17:12:37,372 [INFO] Starting pre-MCTS candidate collection.
2025-04-11 17:12:37,372 [DEBUG] board coords: [(6, 7), (6, 8), (6, 9), (6, 10), (6, 11), (6, 12)]
2025-04-11 17:12:37,372 [DEBUG] board values[np.int64(1), np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 17:12:37,372 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 8), (6, 9)]
2025-04-11 17:12:37,373 [DEBUG] check_window_intermediate_custom: For L=6, window [1 0 0 1 1 1] with coords [(6, 7), (6, 8), (6, 9), (6, 10), (6, 11), (6, 12)] triggers candidate.
2025-04-11 17:12:37,380 [INFO] Final candidates: [(6, 8), (6, 9)]
2025-04-11 17:12:37,380 [INFO] Phase win: Collected 1unique candidate(s):[((6, 8), (6, 9))]
2025-04-11 17:12:37,380 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 17:12:37,380 [INFO] MCTS: Starting search for 50 iterations.
2025-04-11 17:12:37,380 [DEBUG] board coords: [(6, 7), (6, 8), (6, 9), (6, 10), (6, 11), (6, 12)]
2025-04-11 17:12:37,380 [DEBUG] board values[np.int64(1), np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 17:12:37,380 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 8), (6, 9)]
2025-04-11 17:12:37,380 [DEBUG] check_window_intermediate_custom: For L=6, window [1 0 0 1 1 1] with coords [(6, 7), (6, 8), (6, 9), (6, 10), (6, 11), (6, 12)] triggers candidate.
2025-04-11 17:12:37,387 [INFO] Final candidates: [(6, 8), (6, 9)]
2025-04-11 17:12:37,387 [INFO] Phase win: Collected 1unique candidate(s):[((6, 8), (6, 9))]
2025-04-11 17:12:37,387 [DEBUG] Tree_policy iteration 1: Expanding move ((6, 8), (6, 9))
2025-04-11 17:12:37,388 [DEBUG] MCTS iteration 0: reached a node with 0 visits.
2025-04-11 17:12:37,389 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:37,389 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:37,389 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:12:37,389 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:12:37,389 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:37,389 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:37,389 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:12:37,389 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:12:37,389 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:37,389 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:37,389 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:12:37,389 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:12:37,389 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:37,389 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:37,390 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:12:37,390 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:12:37,390 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:37,390 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:37,390 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:12:37,390 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:12:37,390 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:37,390 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:37,390 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:12:37,390 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:12:37,390 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:37,390 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:37,390 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:12:37,390 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:12:37,390 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:37,391 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:37,391 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:12:37,391 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:12:37,391 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:37,391 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:37,391 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:12:37,391 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:12:37,391 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:37,391 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:37,391 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:12:37,391 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:12:37,391 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:37,391 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:37,391 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:12:37,391 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:12:37,392 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:37,392 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:37,392 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:12:37,392 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:12:37,392 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:37,392 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:37,392 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:12:37,392 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:12:37,392 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:37,392 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:37,392 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:12:37,392 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:12:37,392 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:37,392 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:37,392 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:12:37,393 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:12:37,393 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:37,393 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:37,393 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:12:37,393 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:12:37,393 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:37,393 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:37,393 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:12:37,393 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:12:37,393 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:37,393 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:37,393 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:12:37,393 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:12:37,393 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:37,393 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:37,394 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:12:37,394 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:12:37,394 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:37,394 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:37,394 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:12:37,394 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:12:37,394 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:37,394 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:37,394 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:12:37,394 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:12:37,394 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:37,394 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:37,394 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:12:37,394 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:12:37,394 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:37,395 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:37,395 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:12:37,395 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:12:37,395 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:37,395 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:37,395 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:12:37,395 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:12:37,395 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:37,395 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:37,395 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:12:37,395 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:12:37,395 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:37,395 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:37,395 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:12:37,396 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:12:37,396 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:37,396 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:37,396 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:12:37,396 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:12:37,396 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:37,396 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:37,396 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:12:37,396 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:12:37,396 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:37,396 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:37,396 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:12:37,396 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:12:37,396 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:37,396 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:37,397 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:12:37,397 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:12:37,397 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:37,397 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:37,397 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:12:37,397 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:12:37,397 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:37,397 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:37,397 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:12:37,397 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:12:37,397 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:37,397 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:37,397 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:12:37,397 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:12:37,397 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:37,397 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:37,398 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:12:37,398 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:12:37,398 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:37,398 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:37,398 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:12:37,398 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:12:37,398 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:37,398 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:37,398 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:12:37,398 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:12:37,398 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:37,398 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:37,398 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:12:37,398 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:12:37,398 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:37,399 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:37,399 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:12:37,399 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:12:37,399 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:37,399 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:37,399 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:12:37,399 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:12:37,399 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:37,399 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:37,399 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:12:37,399 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:12:37,399 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:37,399 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:37,399 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:12:37,400 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:12:37,400 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:37,400 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:37,400 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:12:37,400 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:12:37,400 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:37,400 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:37,400 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:12:37,400 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:12:37,400 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:37,400 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:37,400 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:12:37,400 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:12:37,400 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:37,400 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:37,401 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:12:37,401 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:12:37,401 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:37,401 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:37,401 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:12:37,401 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:12:37,401 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:37,401 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:37,401 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:12:37,401 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:12:37,401 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:37,401 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:37,401 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:12:37,402 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:12:37,402 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:37,402 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:37,402 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:12:37,402 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:12:37,402 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:37,402 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:37,402 [INFO] MCTS: Search finished. Best move selected with 50 visits.
2025-04-11 17:12:37,402 [INFO] MCTS (win candidates) selected move: J7,K7
2025-04-11 17:12:46,636 [INFO] Starting pre-MCTS candidate collection.
2025-04-11 17:12:46,646 [INFO] Final candidates: []
2025-04-11 17:12:46,646 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:46,655 [INFO] Final candidates: []
2025-04-11 17:12:46,655 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:46,655 [INFO] No candidate found in Phase 1 or 2; using full legal moves for MCTS.
2025-04-11 17:12:46,655 [INFO] MCTS: Starting search for 100 iterations.
2025-04-11 17:12:46,664 [INFO] Final candidates: []
2025-04-11 17:12:46,664 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:46,674 [INFO] Final candidates: []
2025-04-11 17:12:46,674 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:46,674 [DEBUG] Tree_policy iteration 1: Expanding move (9, 17)
2025-04-11 17:12:46,674 [DEBUG] MCTS iteration 0: reached a node with 0 visits.
2025-04-11 17:12:46,674 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:46,756 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:46,766 [INFO] Final candidates: []
2025-04-11 17:12:46,766 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:46,775 [INFO] Final candidates: []
2025-04-11 17:12:46,775 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:46,775 [DEBUG] Tree_policy iteration 1: Expanding move (13, 8)
2025-04-11 17:12:46,775 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:47,049 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:47,059 [INFO] Final candidates: []
2025-04-11 17:12:47,059 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:47,069 [INFO] Final candidates: []
2025-04-11 17:12:47,069 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:47,069 [DEBUG] Tree_policy iteration 1: Expanding move (14, 17)
2025-04-11 17:12:47,070 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:47,093 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:47,103 [INFO] Final candidates: []
2025-04-11 17:12:47,103 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:47,112 [INFO] Final candidates: []
2025-04-11 17:12:47,112 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:47,112 [DEBUG] Tree_policy iteration 1: Expanding move (8, 2)
2025-04-11 17:12:47,112 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:47,273 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:47,283 [INFO] Final candidates: []
2025-04-11 17:12:47,283 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:47,293 [INFO] Final candidates: []
2025-04-11 17:12:47,293 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:47,293 [DEBUG] Tree_policy iteration 1: Expanding move (7, 14)
2025-04-11 17:12:47,293 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:47,325 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:47,334 [INFO] Final candidates: []
2025-04-11 17:12:47,334 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:47,344 [INFO] Final candidates: []
2025-04-11 17:12:47,344 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:47,344 [DEBUG] Tree_policy iteration 1: Expanding move (1, 8)
2025-04-11 17:12:47,344 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:47,371 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:47,380 [INFO] Final candidates: []
2025-04-11 17:12:47,380 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:47,390 [INFO] Final candidates: []
2025-04-11 17:12:47,390 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:47,390 [DEBUG] Tree_policy iteration 1: Expanding move (14, 10)
2025-04-11 17:12:47,390 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:47,426 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:47,435 [INFO] Final candidates: []
2025-04-11 17:12:47,435 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:47,445 [INFO] Final candidates: []
2025-04-11 17:12:47,445 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:47,445 [DEBUG] Tree_policy iteration 1: Expanding move (3, 9)
2025-04-11 17:12:47,445 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:47,588 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:47,597 [INFO] Final candidates: []
2025-04-11 17:12:47,597 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:47,607 [INFO] Final candidates: []
2025-04-11 17:12:47,607 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:47,607 [DEBUG] Tree_policy iteration 1: Expanding move (6, 3)
2025-04-11 17:12:47,607 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:47,795 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:47,805 [INFO] Final candidates: []
2025-04-11 17:12:47,805 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:47,814 [INFO] Final candidates: []
2025-04-11 17:12:47,815 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:47,815 [DEBUG] Tree_policy iteration 1: Expanding move (8, 18)
2025-04-11 17:12:47,815 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:47,908 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:47,918 [INFO] Final candidates: []
2025-04-11 17:12:47,918 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:47,927 [INFO] Final candidates: []
2025-04-11 17:12:47,927 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:47,927 [DEBUG] Tree_policy iteration 1: Expanding move (13, 1)
2025-04-11 17:12:47,928 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:47,938 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:47,956 [INFO] Final candidates: []
2025-04-11 17:12:47,956 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:47,967 [INFO] Final candidates: []
2025-04-11 17:12:47,967 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:47,967 [DEBUG] Tree_policy iteration 1: Expanding move (10, 17)
2025-04-11 17:12:47,967 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:48,101 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:48,110 [INFO] Final candidates: []
2025-04-11 17:12:48,110 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:48,120 [INFO] Final candidates: []
2025-04-11 17:12:48,120 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:48,120 [DEBUG] Tree_policy iteration 1: Expanding move (15, 14)
2025-04-11 17:12:48,120 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:48,169 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:48,179 [INFO] Final candidates: []
2025-04-11 17:12:48,179 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:48,188 [INFO] Final candidates: []
2025-04-11 17:12:48,188 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:48,188 [DEBUG] Tree_policy iteration 1: Expanding move (18, 8)
2025-04-11 17:12:48,188 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:48,261 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:48,271 [INFO] Final candidates: []
2025-04-11 17:12:48,271 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:48,281 [INFO] Final candidates: []
2025-04-11 17:12:48,281 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:48,281 [DEBUG] Tree_policy iteration 1: Expanding move (6, 16)
2025-04-11 17:12:48,281 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:48,394 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:48,404 [INFO] Final candidates: []
2025-04-11 17:12:48,404 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:48,413 [INFO] Final candidates: []
2025-04-11 17:12:48,413 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:48,413 [DEBUG] Tree_policy iteration 1: Expanding move (9, 5)
2025-04-11 17:12:48,414 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:48,605 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:48,614 [INFO] Final candidates: []
2025-04-11 17:12:48,615 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:48,624 [INFO] Final candidates: []
2025-04-11 17:12:48,624 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:48,624 [DEBUG] Tree_policy iteration 1: Expanding move (15, 4)
2025-04-11 17:12:48,624 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:48,712 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:48,721 [INFO] Final candidates: []
2025-04-11 17:12:48,721 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:48,731 [INFO] Final candidates: []
2025-04-11 17:12:48,731 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:48,731 [DEBUG] Tree_policy iteration 1: Expanding move (5, 11)
2025-04-11 17:12:48,731 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:48,828 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:48,837 [INFO] Final candidates: []
2025-04-11 17:12:48,837 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:48,847 [INFO] Final candidates: []
2025-04-11 17:12:48,847 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:48,847 [DEBUG] Tree_policy iteration 1: Expanding move (13, 13)
2025-04-11 17:12:48,847 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:49,044 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:49,054 [INFO] Final candidates: []
2025-04-11 17:12:49,054 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:49,064 [INFO] Final candidates: []
2025-04-11 17:12:49,064 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:49,064 [DEBUG] Tree_policy iteration 1: Expanding move (14, 15)
2025-04-11 17:12:49,064 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:49,136 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:49,145 [INFO] Final candidates: []
2025-04-11 17:12:49,145 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:49,156 [INFO] Final candidates: []
2025-04-11 17:12:49,156 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:49,156 [DEBUG] Tree_policy iteration 1: Expanding move (13, 10)
2025-04-11 17:12:49,156 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:49,340 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:49,358 [INFO] Final candidates: []
2025-04-11 17:12:49,359 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:49,368 [INFO] Final candidates: []
2025-04-11 17:12:49,368 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:49,368 [DEBUG] Tree_policy iteration 1: Expanding move (6, 7)
2025-04-11 17:12:49,368 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:49,460 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:49,470 [INFO] Final candidates: []
2025-04-11 17:12:49,470 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:49,480 [INFO] Final candidates: []
2025-04-11 17:12:49,480 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:49,480 [DEBUG] Tree_policy iteration 1: Expanding move (12, 4)
2025-04-11 17:12:49,480 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:49,659 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:49,669 [INFO] Final candidates: []
2025-04-11 17:12:49,669 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:49,679 [INFO] Final candidates: []
2025-04-11 17:12:49,679 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:49,679 [DEBUG] Tree_policy iteration 1: Expanding move (16, 1)
2025-04-11 17:12:49,679 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:49,905 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:49,915 [INFO] Final candidates: []
2025-04-11 17:12:49,915 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:49,924 [INFO] Final candidates: []
2025-04-11 17:12:49,924 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:49,924 [DEBUG] Tree_policy iteration 1: Expanding move (8, 5)
2025-04-11 17:12:49,925 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:50,087 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:50,106 [INFO] Final candidates: []
2025-04-11 17:12:50,106 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:50,120 [INFO] Final candidates: []
2025-04-11 17:12:50,120 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:50,120 [DEBUG] Tree_policy iteration 1: Expanding move (6, 5)
2025-04-11 17:12:50,120 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:50,315 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:50,326 [INFO] Final candidates: []
2025-04-11 17:12:50,326 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:50,335 [INFO] Final candidates: []
2025-04-11 17:12:50,335 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:50,336 [DEBUG] Tree_policy iteration 1: Expanding move (3, 8)
2025-04-11 17:12:50,336 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:50,471 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:50,480 [INFO] Final candidates: []
2025-04-11 17:12:50,481 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:50,490 [INFO] Final candidates: []
2025-04-11 17:12:50,490 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:50,490 [DEBUG] Tree_policy iteration 1: Expanding move (14, 12)
2025-04-11 17:12:50,490 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:50,502 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:50,512 [INFO] Final candidates: []
2025-04-11 17:12:50,512 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:50,521 [INFO] Final candidates: []
2025-04-11 17:12:50,521 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:50,521 [DEBUG] Tree_policy iteration 1: Expanding move (5, 8)
2025-04-11 17:12:50,522 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:50,590 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:50,600 [INFO] Final candidates: []
2025-04-11 17:12:50,600 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:50,610 [INFO] Final candidates: []
2025-04-11 17:12:50,610 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:50,610 [DEBUG] Tree_policy iteration 1: Expanding move (11, 15)
2025-04-11 17:12:50,610 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:50,636 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:50,646 [INFO] Final candidates: []
2025-04-11 17:12:50,646 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:50,656 [INFO] Final candidates: []
2025-04-11 17:12:50,657 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:50,657 [DEBUG] Tree_policy iteration 1: Expanding move (18, 3)
2025-04-11 17:12:50,657 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:50,702 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:50,711 [INFO] Final candidates: []
2025-04-11 17:12:50,711 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:50,721 [INFO] Final candidates: []
2025-04-11 17:12:50,721 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:50,721 [DEBUG] Tree_policy iteration 1: Expanding move (6, 11)
2025-04-11 17:12:50,721 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:50,797 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:50,807 [INFO] Final candidates: []
2025-04-11 17:12:50,807 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:50,816 [INFO] Final candidates: []
2025-04-11 17:12:50,816 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:50,816 [DEBUG] Tree_policy iteration 1: Expanding move (11, 13)
2025-04-11 17:12:50,816 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:50,912 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:50,922 [INFO] Final candidates: []
2025-04-11 17:12:50,922 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:50,932 [INFO] Final candidates: []
2025-04-11 17:12:50,932 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:50,932 [DEBUG] Tree_policy iteration 1: Expanding move (16, 9)
2025-04-11 17:12:50,932 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:51,006 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:51,016 [INFO] Final candidates: []
2025-04-11 17:12:51,016 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:51,025 [INFO] Final candidates: []
2025-04-11 17:12:51,025 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:51,025 [DEBUG] Tree_policy iteration 1: Expanding move (8, 1)
2025-04-11 17:12:51,025 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:51,131 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:51,156 [INFO] Final candidates: []
2025-04-11 17:12:51,156 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:51,175 [INFO] Final candidates: []
2025-04-11 17:12:51,175 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:51,175 [DEBUG] Tree_policy iteration 1: Expanding move (3, 14)
2025-04-11 17:12:51,175 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:51,320 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:51,330 [INFO] Final candidates: []
2025-04-11 17:12:51,330 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:51,339 [INFO] Final candidates: []
2025-04-11 17:12:51,339 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:51,339 [DEBUG] Tree_policy iteration 1: Expanding move (18, 14)
2025-04-11 17:12:51,339 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:51,574 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:51,584 [INFO] Final candidates: []
2025-04-11 17:12:51,584 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:51,593 [INFO] Final candidates: []
2025-04-11 17:12:51,594 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:51,594 [DEBUG] Tree_policy iteration 1: Expanding move (11, 2)
2025-04-11 17:12:51,594 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:51,708 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:51,717 [INFO] Final candidates: []
2025-04-11 17:12:51,717 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:51,729 [INFO] Final candidates: []
2025-04-11 17:12:51,729 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:51,729 [DEBUG] Tree_policy iteration 1: Expanding move (13, 14)
2025-04-11 17:12:51,729 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:51,746 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:51,755 [INFO] Final candidates: []
2025-04-11 17:12:51,756 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:51,766 [INFO] Final candidates: []
2025-04-11 17:12:51,766 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:51,766 [DEBUG] Tree_policy iteration 1: Expanding move (16, 10)
2025-04-11 17:12:51,766 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:51,828 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:51,837 [INFO] Final candidates: []
2025-04-11 17:12:51,837 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:51,847 [INFO] Final candidates: []
2025-04-11 17:12:51,847 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:51,847 [DEBUG] Tree_policy iteration 1: Expanding move (15, 16)
2025-04-11 17:12:51,847 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:51,860 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:51,870 [INFO] Final candidates: []
2025-04-11 17:12:51,870 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:51,879 [INFO] Final candidates: []
2025-04-11 17:12:51,879 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:51,879 [DEBUG] Tree_policy iteration 1: Expanding move (18, 4)
2025-04-11 17:12:51,879 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:51,970 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:51,979 [INFO] Final candidates: []
2025-04-11 17:12:51,980 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:51,989 [INFO] Final candidates: []
2025-04-11 17:12:51,989 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:51,989 [DEBUG] Tree_policy iteration 1: Expanding move (6, 2)
2025-04-11 17:12:51,989 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:52,060 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:52,071 [INFO] Final candidates: []
2025-04-11 17:12:52,071 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:52,080 [INFO] Final candidates: []
2025-04-11 17:12:52,080 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:52,080 [DEBUG] Tree_policy iteration 1: Expanding move (7, 12)
2025-04-11 17:12:52,081 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:52,230 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:52,240 [INFO] Final candidates: []
2025-04-11 17:12:52,240 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:52,249 [INFO] Final candidates: []
2025-04-11 17:12:52,249 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:52,249 [DEBUG] Tree_policy iteration 1: Expanding move (0, 1)
2025-04-11 17:12:52,249 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:52,348 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:52,357 [INFO] Final candidates: []
2025-04-11 17:12:52,357 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:52,367 [INFO] Final candidates: []
2025-04-11 17:12:52,367 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:52,367 [DEBUG] Tree_policy iteration 1: Expanding move (2, 14)
2025-04-11 17:12:52,367 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:52,385 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:52,395 [INFO] Final candidates: []
2025-04-11 17:12:52,395 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:52,404 [INFO] Final candidates: []
2025-04-11 17:12:52,404 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:52,404 [DEBUG] Tree_policy iteration 1: Expanding move (13, 17)
2025-04-11 17:12:52,404 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:52,519 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:52,543 [INFO] Final candidates: []
2025-04-11 17:12:52,543 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:52,560 [INFO] Final candidates: []
2025-04-11 17:12:52,560 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:52,560 [DEBUG] Tree_policy iteration 1: Expanding move (18, 6)
2025-04-11 17:12:52,560 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:52,731 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:52,741 [INFO] Final candidates: []
2025-04-11 17:12:52,741 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:52,751 [INFO] Final candidates: []
2025-04-11 17:12:52,751 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:52,751 [DEBUG] Tree_policy iteration 1: Expanding move (2, 4)
2025-04-11 17:12:52,751 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:52,877 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:52,887 [INFO] Final candidates: []
2025-04-11 17:12:52,887 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:52,897 [INFO] Final candidates: []
2025-04-11 17:12:52,897 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:52,897 [DEBUG] Tree_policy iteration 1: Expanding move (3, 6)
2025-04-11 17:12:52,897 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:52,912 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:52,921 [INFO] Final candidates: []
2025-04-11 17:12:52,921 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:52,930 [INFO] Final candidates: []
2025-04-11 17:12:52,930 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:52,931 [DEBUG] Tree_policy iteration 1: Expanding move (6, 4)
2025-04-11 17:12:52,931 [DEBUG] MCTS iteration 50: reached a node with 0 visits.
2025-04-11 17:12:52,931 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:52,998 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:53,008 [INFO] Final candidates: []
2025-04-11 17:12:53,008 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:53,018 [INFO] Final candidates: []
2025-04-11 17:12:53,018 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:53,018 [DEBUG] Tree_policy iteration 1: Expanding move (3, 1)
2025-04-11 17:12:53,018 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:53,083 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:53,093 [INFO] Final candidates: []
2025-04-11 17:12:53,093 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:53,102 [INFO] Final candidates: []
2025-04-11 17:12:53,102 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:53,102 [DEBUG] Tree_policy iteration 1: Expanding move (8, 3)
2025-04-11 17:12:53,103 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:53,175 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:53,184 [INFO] Final candidates: []
2025-04-11 17:12:53,185 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:53,194 [INFO] Final candidates: []
2025-04-11 17:12:53,194 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:53,194 [DEBUG] Tree_policy iteration 1: Expanding move (8, 14)
2025-04-11 17:12:53,194 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:53,245 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:53,254 [INFO] Final candidates: []
2025-04-11 17:12:53,254 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:53,264 [INFO] Final candidates: []
2025-04-11 17:12:53,264 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:53,264 [DEBUG] Tree_policy iteration 1: Expanding move (15, 8)
2025-04-11 17:12:53,264 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:53,339 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:53,348 [INFO] Final candidates: []
2025-04-11 17:12:53,348 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:53,359 [INFO] Final candidates: []
2025-04-11 17:12:53,360 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:53,360 [DEBUG] Tree_policy iteration 1: Expanding move (17, 10)
2025-04-11 17:12:53,360 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:53,434 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:53,444 [INFO] Final candidates: []
2025-04-11 17:12:53,444 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:53,454 [INFO] Final candidates: []
2025-04-11 17:12:53,454 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:53,454 [DEBUG] Tree_policy iteration 1: Expanding move (7, 3)
2025-04-11 17:12:53,454 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:53,520 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:53,529 [INFO] Final candidates: []
2025-04-11 17:12:53,529 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:53,539 [INFO] Final candidates: []
2025-04-11 17:12:53,539 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:53,539 [DEBUG] Tree_policy iteration 1: Expanding move (12, 0)
2025-04-11 17:12:53,539 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:53,620 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:53,630 [INFO] Final candidates: []
2025-04-11 17:12:53,630 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:53,639 [INFO] Final candidates: []
2025-04-11 17:12:53,639 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:53,639 [DEBUG] Tree_policy iteration 1: Expanding move (3, 16)
2025-04-11 17:12:53,639 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:53,800 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:53,810 [INFO] Final candidates: []
2025-04-11 17:12:53,810 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:53,819 [INFO] Final candidates: []
2025-04-11 17:12:53,819 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:53,819 [DEBUG] Tree_policy iteration 1: Expanding move (1, 18)
2025-04-11 17:12:53,820 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:53,949 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:53,966 [INFO] Final candidates: []
2025-04-11 17:12:53,966 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:53,976 [INFO] Final candidates: []
2025-04-11 17:12:53,976 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:53,976 [DEBUG] Tree_policy iteration 1: Expanding move (15, 2)
2025-04-11 17:12:53,976 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:54,016 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:54,026 [INFO] Final candidates: []
2025-04-11 17:12:54,027 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:54,036 [INFO] Final candidates: []
2025-04-11 17:12:54,036 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:54,036 [DEBUG] Tree_policy iteration 1: Expanding move (8, 4)
2025-04-11 17:12:54,037 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:54,143 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:54,154 [INFO] Final candidates: []
2025-04-11 17:12:54,154 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:54,163 [INFO] Final candidates: []
2025-04-11 17:12:54,163 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:54,163 [DEBUG] Tree_policy iteration 1: Expanding move (13, 5)
2025-04-11 17:12:54,163 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:54,202 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:54,211 [INFO] Final candidates: []
2025-04-11 17:12:54,211 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:54,221 [INFO] Final candidates: []
2025-04-11 17:12:54,221 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:54,221 [DEBUG] Tree_policy iteration 1: Expanding move (18, 16)
2025-04-11 17:12:54,221 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:54,281 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:54,291 [INFO] Final candidates: []
2025-04-11 17:12:54,291 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:54,301 [INFO] Final candidates: []
2025-04-11 17:12:54,301 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:54,301 [DEBUG] Tree_policy iteration 1: Expanding move (13, 16)
2025-04-11 17:12:54,301 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:54,322 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:54,332 [INFO] Final candidates: []
2025-04-11 17:12:54,332 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:54,341 [INFO] Final candidates: []
2025-04-11 17:12:54,341 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:54,341 [DEBUG] Tree_policy iteration 1: Expanding move (9, 14)
2025-04-11 17:12:54,341 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:54,377 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:54,387 [INFO] Final candidates: []
2025-04-11 17:12:54,387 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:54,396 [INFO] Final candidates: []
2025-04-11 17:12:54,396 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:54,396 [DEBUG] Tree_policy iteration 1: Expanding move (7, 5)
2025-04-11 17:12:54,397 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:54,483 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:54,494 [INFO] Final candidates: []
2025-04-11 17:12:54,494 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:54,504 [INFO] Final candidates: []
2025-04-11 17:12:54,504 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:54,504 [DEBUG] Tree_policy iteration 1: Expanding move (11, 4)
2025-04-11 17:12:54,504 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:54,658 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:54,668 [INFO] Final candidates: []
2025-04-11 17:12:54,668 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:54,677 [INFO] Final candidates: []
2025-04-11 17:12:54,677 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:54,677 [DEBUG] Tree_policy iteration 1: Expanding move (4, 15)
2025-04-11 17:12:54,678 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:54,705 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:54,714 [INFO] Final candidates: []
2025-04-11 17:12:54,714 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:54,724 [INFO] Final candidates: []
2025-04-11 17:12:54,724 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:54,724 [DEBUG] Tree_policy iteration 1: Expanding move (4, 11)
2025-04-11 17:12:54,724 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:54,891 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:54,901 [INFO] Final candidates: []
2025-04-11 17:12:54,901 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:54,911 [INFO] Final candidates: []
2025-04-11 17:12:54,911 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:54,911 [DEBUG] Tree_policy iteration 1: Expanding move (0, 7)
2025-04-11 17:12:54,911 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:54,986 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:55,001 [INFO] Final candidates: []
2025-04-11 17:12:55,001 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:55,010 [INFO] Final candidates: []
2025-04-11 17:12:55,010 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:55,010 [DEBUG] Tree_policy iteration 1: Expanding move (14, 1)
2025-04-11 17:12:55,010 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:55,056 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:55,066 [INFO] Final candidates: []
2025-04-11 17:12:55,066 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:55,077 [INFO] Final candidates: []
2025-04-11 17:12:55,077 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:55,077 [DEBUG] Tree_policy iteration 1: Expanding move (15, 15)
2025-04-11 17:12:55,077 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:55,094 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:55,103 [INFO] Final candidates: []
2025-04-11 17:12:55,103 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:55,123 [INFO] Final candidates: []
2025-04-11 17:12:55,123 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:55,123 [DEBUG] Tree_policy iteration 1: Expanding move (0, 8)
2025-04-11 17:12:55,123 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:55,196 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:55,206 [INFO] Final candidates: []
2025-04-11 17:12:55,206 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:55,215 [INFO] Final candidates: []
2025-04-11 17:12:55,216 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:55,216 [DEBUG] Tree_policy iteration 1: Expanding move (18, 1)
2025-04-11 17:12:55,216 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:55,260 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:55,270 [INFO] Final candidates: []
2025-04-11 17:12:55,270 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:55,279 [INFO] Final candidates: []
2025-04-11 17:12:55,279 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:55,279 [DEBUG] Tree_policy iteration 1: Expanding move (6, 8)
2025-04-11 17:12:55,280 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:55,359 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:55,369 [INFO] Final candidates: []
2025-04-11 17:12:55,369 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:55,378 [INFO] Final candidates: []
2025-04-11 17:12:55,378 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:55,378 [DEBUG] Tree_policy iteration 1: Expanding move (16, 11)
2025-04-11 17:12:55,378 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:55,577 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:55,586 [INFO] Final candidates: []
2025-04-11 17:12:55,587 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:55,596 [INFO] Final candidates: []
2025-04-11 17:12:55,596 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:55,596 [DEBUG] Tree_policy iteration 1: Expanding move (16, 4)
2025-04-11 17:12:55,596 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:55,755 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:55,765 [INFO] Final candidates: []
2025-04-11 17:12:55,765 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:55,774 [INFO] Final candidates: []
2025-04-11 17:12:55,774 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:55,774 [DEBUG] Tree_policy iteration 1: Expanding move (17, 6)
2025-04-11 17:12:55,775 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:55,845 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:55,856 [INFO] Final candidates: []
2025-04-11 17:12:55,856 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:55,866 [INFO] Final candidates: []
2025-04-11 17:12:55,866 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:55,866 [DEBUG] Tree_policy iteration 1: Expanding move (8, 8)
2025-04-11 17:12:55,866 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:55,929 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:55,947 [INFO] Final candidates: []
2025-04-11 17:12:55,947 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:55,972 [INFO] Final candidates: []
2025-04-11 17:12:55,972 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:55,972 [DEBUG] Tree_policy iteration 1: Expanding move (13, 12)
2025-04-11 17:12:55,972 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:56,279 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:56,289 [INFO] Final candidates: []
2025-04-11 17:12:56,289 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:56,298 [INFO] Final candidates: []
2025-04-11 17:12:56,298 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:56,298 [DEBUG] Tree_policy iteration 1: Expanding move (13, 6)
2025-04-11 17:12:56,299 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:56,605 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:56,617 [INFO] Final candidates: []
2025-04-11 17:12:56,617 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:56,633 [INFO] Final candidates: []
2025-04-11 17:12:56,633 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:56,633 [DEBUG] Tree_policy iteration 1: Expanding move (15, 6)
2025-04-11 17:12:56,633 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:56,679 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:56,689 [INFO] Final candidates: []
2025-04-11 17:12:56,689 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:56,698 [INFO] Final candidates: []
2025-04-11 17:12:56,698 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:56,698 [DEBUG] Tree_policy iteration 1: Expanding move (10, 12)
2025-04-11 17:12:56,698 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:56,824 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:56,834 [INFO] Final candidates: []
2025-04-11 17:12:56,834 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:56,850 [INFO] Final candidates: []
2025-04-11 17:12:56,850 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:56,850 [DEBUG] Tree_policy iteration 1: Expanding move (11, 17)
2025-04-11 17:12:56,851 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:57,124 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:57,133 [INFO] Final candidates: []
2025-04-11 17:12:57,133 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:57,143 [INFO] Final candidates: []
2025-04-11 17:12:57,143 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:57,143 [DEBUG] Tree_policy iteration 1: Expanding move (13, 7)
2025-04-11 17:12:57,143 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:57,441 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:57,450 [INFO] Final candidates: []
2025-04-11 17:12:57,450 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:57,460 [INFO] Final candidates: []
2025-04-11 17:12:57,460 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:57,460 [DEBUG] Tree_policy iteration 1: Expanding move (17, 16)
2025-04-11 17:12:57,460 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:57,539 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:57,549 [INFO] Final candidates: []
2025-04-11 17:12:57,549 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:57,559 [INFO] Final candidates: []
2025-04-11 17:12:57,559 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:57,559 [DEBUG] Tree_policy iteration 1: Expanding move (11, 0)
2025-04-11 17:12:57,559 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:57,806 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:57,816 [INFO] Final candidates: []
2025-04-11 17:12:57,817 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:57,828 [INFO] Final candidates: []
2025-04-11 17:12:57,828 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:57,828 [DEBUG] Tree_policy iteration 1: Expanding move (5, 0)
2025-04-11 17:12:57,828 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:57,880 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:57,892 [INFO] Final candidates: []
2025-04-11 17:12:57,892 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:57,902 [INFO] Final candidates: []
2025-04-11 17:12:57,902 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:57,902 [DEBUG] Tree_policy iteration 1: Expanding move (9, 8)
2025-04-11 17:12:57,902 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:58,209 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:58,219 [INFO] Final candidates: []
2025-04-11 17:12:58,219 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:58,231 [INFO] Final candidates: []
2025-04-11 17:12:58,231 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:58,231 [DEBUG] Tree_policy iteration 1: Expanding move (18, 10)
2025-04-11 17:12:58,231 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:58,301 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:58,312 [INFO] Final candidates: []
2025-04-11 17:12:58,312 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:58,321 [INFO] Final candidates: []
2025-04-11 17:12:58,321 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:58,321 [DEBUG] Tree_policy iteration 1: Expanding move (11, 12)
2025-04-11 17:12:58,321 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:58,483 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:58,492 [INFO] Final candidates: []
2025-04-11 17:12:58,492 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:58,502 [INFO] Final candidates: []
2025-04-11 17:12:58,502 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:58,502 [DEBUG] Tree_policy iteration 1: Expanding move (10, 15)
2025-04-11 17:12:58,502 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:58,544 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:58,554 [INFO] Final candidates: []
2025-04-11 17:12:58,554 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:58,564 [INFO] Final candidates: []
2025-04-11 17:12:58,564 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:58,564 [DEBUG] Tree_policy iteration 1: Expanding move (8, 0)
2025-04-11 17:12:58,564 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:58,580 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:58,591 [INFO] Final candidates: []
2025-04-11 17:12:58,591 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:58,600 [INFO] Final candidates: []
2025-04-11 17:12:58,600 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:58,600 [DEBUG] Tree_policy iteration 1: Expanding move (4, 14)
2025-04-11 17:12:58,600 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:58,679 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:58,688 [INFO] Final candidates: []
2025-04-11 17:12:58,688 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:58,698 [INFO] Final candidates: []
2025-04-11 17:12:58,698 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:58,698 [DEBUG] Tree_policy iteration 1: Expanding move (4, 7)
2025-04-11 17:12:58,698 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:58,800 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:58,810 [INFO] Final candidates: []
2025-04-11 17:12:58,810 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:58,819 [INFO] Final candidates: []
2025-04-11 17:12:58,819 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:58,819 [DEBUG] Tree_policy iteration 1: Expanding move (9, 9)
2025-04-11 17:12:58,819 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:59,089 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:59,098 [INFO] Final candidates: []
2025-04-11 17:12:59,098 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:59,108 [INFO] Final candidates: []
2025-04-11 17:12:59,108 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:59,108 [DEBUG] Tree_policy iteration 1: Expanding move (8, 15)
2025-04-11 17:12:59,108 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:59,290 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:59,301 [INFO] Final candidates: []
2025-04-11 17:12:59,301 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:59,311 [INFO] Final candidates: []
2025-04-11 17:12:59,311 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:59,311 [DEBUG] Tree_policy iteration 1: Expanding move (7, 8)
2025-04-11 17:12:59,311 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:59,409 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:12:59,420 [INFO] Final candidates: []
2025-04-11 17:12:59,420 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:12:59,429 [INFO] Final candidates: []
2025-04-11 17:12:59,429 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:12:59,429 [DEBUG] Tree_policy iteration 1: Expanding move (17, 11)
2025-04-11 17:12:59,429 [INFO] Default policy: Starting random playout.
2025-04-11 17:12:59,528 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:12:59,528 [INFO] MCTS: Search finished. Best move selected with 1 visits.
2025-04-11 17:12:59,528 [INFO] MCTS selected move: S10
2025-04-11 17:12:59,528 [INFO] ===============NEW MOVE================
2025-04-11 17:13:04,224 [INFO] Starting pre-MCTS candidate collection.
2025-04-11 17:13:04,233 [INFO] Final candidates: []
2025-04-11 17:13:04,233 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:04,243 [INFO] Final candidates: []
2025-04-11 17:13:04,243 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:04,243 [INFO] No candidate found in Phase 1 or 2; using full legal moves for MCTS.
2025-04-11 17:13:04,243 [INFO] MCTS: Starting search for 100 iterations.
2025-04-11 17:13:04,252 [INFO] Final candidates: []
2025-04-11 17:13:04,252 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:04,262 [INFO] Final candidates: []
2025-04-11 17:13:04,262 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:04,262 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(13)), (np.int64(8), np.int64(10)))
2025-04-11 17:13:04,262 [DEBUG] MCTS iteration 0: reached a node with 0 visits.
2025-04-11 17:13:04,262 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:04,356 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:04,366 [INFO] Final candidates: []
2025-04-11 17:13:04,366 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:04,375 [INFO] Final candidates: []
2025-04-11 17:13:04,375 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:04,375 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(9)), (np.int64(7), np.int64(10)))
2025-04-11 17:13:04,375 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:04,397 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:04,407 [INFO] Final candidates: []
2025-04-11 17:13:04,407 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:04,416 [INFO] Final candidates: []
2025-04-11 17:13:04,416 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:04,416 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(11)), (np.int64(7), np.int64(12)))
2025-04-11 17:13:04,416 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:04,628 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:04,638 [INFO] Final candidates: []
2025-04-11 17:13:04,638 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:04,647 [INFO] Final candidates: []
2025-04-11 17:13:04,647 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:04,647 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(9)), (np.int64(10), np.int64(16)))
2025-04-11 17:13:04,647 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:04,826 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:04,836 [INFO] Final candidates: []
2025-04-11 17:13:04,836 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:04,845 [INFO] Final candidates: []
2025-04-11 17:13:04,845 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:04,845 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(16)), (np.int64(6), np.int64(10)))
2025-04-11 17:13:04,845 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:04,917 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:04,927 [INFO] Final candidates: []
2025-04-11 17:13:04,927 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:04,936 [INFO] Final candidates: []
2025-04-11 17:13:04,936 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:04,936 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(9)), (np.int64(7), np.int64(9)))
2025-04-11 17:13:04,936 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:05,042 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:05,059 [INFO] Final candidates: []
2025-04-11 17:13:05,059 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:05,070 [INFO] Final candidates: []
2025-04-11 17:13:05,070 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:05,070 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(18)), (np.int64(7), np.int64(9)))
2025-04-11 17:13:05,071 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:05,134 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:05,144 [INFO] Final candidates: []
2025-04-11 17:13:05,144 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:05,154 [INFO] Final candidates: []
2025-04-11 17:13:05,154 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:05,154 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(9)), (np.int64(6), np.int64(10)))
2025-04-11 17:13:05,154 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:05,364 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:05,374 [INFO] Final candidates: []
2025-04-11 17:13:05,374 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:05,383 [INFO] Final candidates: []
2025-04-11 17:13:05,383 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:05,383 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(9)), (np.int64(9), np.int64(11)))
2025-04-11 17:13:05,384 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:05,408 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:05,418 [INFO] Final candidates: []
2025-04-11 17:13:05,418 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:05,427 [INFO] Final candidates: []
2025-04-11 17:13:05,427 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:05,427 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(8)), (np.int64(11), np.int64(9)))
2025-04-11 17:13:05,427 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:05,525 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:05,535 [INFO] Final candidates: []
2025-04-11 17:13:05,535 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:05,544 [INFO] Final candidates: []
2025-04-11 17:13:05,544 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:05,544 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(17)), (np.int64(7), np.int64(12)))
2025-04-11 17:13:05,544 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:05,664 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:05,673 [INFO] Final candidates: []
2025-04-11 17:13:05,673 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:05,682 [INFO] Final candidates: []
2025-04-11 17:13:05,682 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:05,682 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(12)), (np.int64(9), np.int64(11)))
2025-04-11 17:13:05,683 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:05,778 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:05,787 [INFO] Final candidates: []
2025-04-11 17:13:05,787 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:05,796 [INFO] Final candidates: []
2025-04-11 17:13:05,796 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:05,796 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(11)), (np.int64(8), np.int64(16)))
2025-04-11 17:13:05,797 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:05,815 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:05,832 [INFO] Final candidates: []
2025-04-11 17:13:05,833 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:05,844 [INFO] Final candidates: []
2025-04-11 17:13:05,844 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:05,844 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(9)), (np.int64(8), np.int64(16)))
2025-04-11 17:13:05,844 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:05,890 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:05,899 [INFO] Final candidates: []
2025-04-11 17:13:05,899 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:05,908 [INFO] Final candidates: []
2025-04-11 17:13:05,908 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:05,908 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(17)), (np.int64(9), np.int64(15)))
2025-04-11 17:13:05,909 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:06,095 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:06,106 [INFO] Final candidates: []
2025-04-11 17:13:06,106 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:06,115 [INFO] Final candidates: []
2025-04-11 17:13:06,115 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:06,115 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(10)), (np.int64(5), np.int64(11)))
2025-04-11 17:13:06,115 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:06,192 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:06,205 [INFO] Final candidates: []
2025-04-11 17:13:06,205 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:06,214 [INFO] Final candidates: []
2025-04-11 17:13:06,214 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:06,214 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(18)), (np.int64(8), np.int64(16)))
2025-04-11 17:13:06,214 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:06,254 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:06,264 [INFO] Final candidates: []
2025-04-11 17:13:06,264 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:06,273 [INFO] Final candidates: []
2025-04-11 17:13:06,273 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:06,273 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(18)), (np.int64(10), np.int64(8)))
2025-04-11 17:13:06,273 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:06,407 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:06,417 [INFO] Final candidates: []
2025-04-11 17:13:06,417 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:06,426 [INFO] Final candidates: []
2025-04-11 17:13:06,426 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:06,426 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(10)), (np.int64(9), np.int64(15)))
2025-04-11 17:13:06,427 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:06,470 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:06,479 [INFO] Final candidates: []
2025-04-11 17:13:06,479 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:06,488 [INFO] Final candidates: []
2025-04-11 17:13:06,488 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:06,488 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(11)), (np.int64(7), np.int64(9)))
2025-04-11 17:13:06,489 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:06,778 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:06,788 [INFO] Final candidates: []
2025-04-11 17:13:06,788 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:06,797 [INFO] Final candidates: []
2025-04-11 17:13:06,797 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:06,797 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(7)), (np.int64(10), np.int64(17)))
2025-04-11 17:13:06,797 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:06,820 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:06,830 [INFO] Final candidates: []
2025-04-11 17:13:06,830 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:06,839 [INFO] Final candidates: []
2025-04-11 17:13:06,839 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:06,839 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(7)), (np.int64(7), np.int64(9)))
2025-04-11 17:13:06,839 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:06,905 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:06,915 [INFO] Final candidates: []
2025-04-11 17:13:06,915 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:06,924 [INFO] Final candidates: []
2025-04-11 17:13:06,924 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:06,924 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(12)), (np.int64(8), np.int64(16)))
2025-04-11 17:13:06,925 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:06,995 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:07,004 [INFO] Final candidates: []
2025-04-11 17:13:07,004 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:07,014 [INFO] Final candidates: []
2025-04-11 17:13:07,014 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:07,014 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(11)), (np.int64(9), np.int64(18)))
2025-04-11 17:13:07,015 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:07,077 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:07,087 [INFO] Final candidates: []
2025-04-11 17:13:07,087 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:07,096 [INFO] Final candidates: []
2025-04-11 17:13:07,096 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:07,096 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(8)), (np.int64(6), np.int64(11)))
2025-04-11 17:13:07,096 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:07,241 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:07,250 [INFO] Final candidates: []
2025-04-11 17:13:07,250 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:07,259 [INFO] Final candidates: []
2025-04-11 17:13:07,259 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:07,259 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(9)), (np.int64(6), np.int64(10)))
2025-04-11 17:13:07,260 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:07,371 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:07,383 [INFO] Final candidates: []
2025-04-11 17:13:07,383 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:07,392 [INFO] Final candidates: []
2025-04-11 17:13:07,392 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:07,392 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(8)), (np.int64(10), np.int64(8)))
2025-04-11 17:13:07,392 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:07,424 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:07,433 [INFO] Final candidates: []
2025-04-11 17:13:07,433 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:07,443 [INFO] Final candidates: []
2025-04-11 17:13:07,443 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:07,443 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(8)), (np.int64(7), np.int64(13)))
2025-04-11 17:13:07,443 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:07,579 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:07,588 [INFO] Final candidates: []
2025-04-11 17:13:07,588 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:07,597 [INFO] Final candidates: []
2025-04-11 17:13:07,597 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:07,597 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(18)), (np.int64(10), np.int64(16)))
2025-04-11 17:13:07,598 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:07,636 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:07,646 [INFO] Final candidates: []
2025-04-11 17:13:07,646 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:07,655 [INFO] Final candidates: []
2025-04-11 17:13:07,655 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:07,655 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(17)), (np.int64(8), np.int64(9)))
2025-04-11 17:13:07,655 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:07,727 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:07,737 [INFO] Final candidates: []
2025-04-11 17:13:07,737 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:07,746 [INFO] Final candidates: []
2025-04-11 17:13:07,746 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:07,746 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(11)), (np.int64(8), np.int64(16)))
2025-04-11 17:13:07,746 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:07,881 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:07,892 [INFO] Final candidates: []
2025-04-11 17:13:07,892 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:07,901 [INFO] Final candidates: []
2025-04-11 17:13:07,902 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:07,902 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(11)), (np.int64(9), np.int64(10)))
2025-04-11 17:13:07,902 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:07,942 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:07,955 [INFO] Final candidates: []
2025-04-11 17:13:07,955 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:07,964 [INFO] Final candidates: []
2025-04-11 17:13:07,964 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:07,964 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(12)), (np.int64(11), np.int64(9)))
2025-04-11 17:13:07,964 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:08,087 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:08,097 [INFO] Final candidates: []
2025-04-11 17:13:08,097 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:08,106 [INFO] Final candidates: []
2025-04-11 17:13:08,106 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:08,106 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(11)), (np.int64(6), np.int64(11)))
2025-04-11 17:13:08,106 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:08,176 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:08,186 [INFO] Final candidates: []
2025-04-11 17:13:08,186 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:08,195 [INFO] Final candidates: []
2025-04-11 17:13:08,195 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:08,195 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(10)), (np.int64(8), np.int64(11)))
2025-04-11 17:13:08,195 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:08,315 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:08,325 [INFO] Final candidates: []
2025-04-11 17:13:08,325 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:08,334 [INFO] Final candidates: []
2025-04-11 17:13:08,334 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:08,334 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(8)), (np.int64(9), np.int64(10)))
2025-04-11 17:13:08,334 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:08,376 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:08,385 [INFO] Final candidates: []
2025-04-11 17:13:08,385 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:08,394 [INFO] Final candidates: []
2025-04-11 17:13:08,394 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:08,395 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(9)), (np.int64(8), np.int64(8)))
2025-04-11 17:13:08,395 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:08,584 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:08,593 [INFO] Final candidates: []
2025-04-11 17:13:08,593 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:08,602 [INFO] Final candidates: []
2025-04-11 17:13:08,602 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:08,602 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(17)), (np.int64(7), np.int64(9)))
2025-04-11 17:13:08,603 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:08,834 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:08,843 [INFO] Final candidates: []
2025-04-11 17:13:08,843 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:08,852 [INFO] Final candidates: []
2025-04-11 17:13:08,852 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:08,852 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(11)), (np.int64(11), np.int64(9)))
2025-04-11 17:13:08,853 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:08,937 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:08,946 [INFO] Final candidates: []
2025-04-11 17:13:08,946 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:08,955 [INFO] Final candidates: []
2025-04-11 17:13:08,955 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:08,955 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(17)), (np.int64(6), np.int64(10)))
2025-04-11 17:13:08,955 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:09,196 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:09,206 [INFO] Final candidates: []
2025-04-11 17:13:09,206 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:09,215 [INFO] Final candidates: []
2025-04-11 17:13:09,215 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:09,215 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(18)), (np.int64(8), np.int64(10)))
2025-04-11 17:13:09,215 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:09,270 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:09,279 [INFO] Final candidates: []
2025-04-11 17:13:09,279 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:09,289 [INFO] Final candidates: []
2025-04-11 17:13:09,289 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:09,289 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(10)), (np.int64(9), np.int64(18)))
2025-04-11 17:13:09,289 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:09,475 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:09,485 [INFO] Final candidates: []
2025-04-11 17:13:09,485 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:09,494 [INFO] Final candidates: []
2025-04-11 17:13:09,494 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:09,494 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(10)), (np.int64(10), np.int64(16)))
2025-04-11 17:13:09,495 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:09,541 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:09,550 [INFO] Final candidates: []
2025-04-11 17:13:09,550 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:09,560 [INFO] Final candidates: []
2025-04-11 17:13:09,560 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:09,560 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(18)), (np.int64(10), np.int64(10)))
2025-04-11 17:13:09,560 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:09,707 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:09,719 [INFO] Final candidates: []
2025-04-11 17:13:09,719 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:09,728 [INFO] Final candidates: []
2025-04-11 17:13:09,728 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:09,728 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(9)), (np.int64(11), np.int64(9)))
2025-04-11 17:13:09,728 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:09,749 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:09,759 [INFO] Final candidates: []
2025-04-11 17:13:09,759 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:09,768 [INFO] Final candidates: []
2025-04-11 17:13:09,768 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:09,768 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(18)), (np.int64(7), np.int64(10)))
2025-04-11 17:13:09,768 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:09,842 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:09,852 [INFO] Final candidates: []
2025-04-11 17:13:09,852 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:09,861 [INFO] Final candidates: []
2025-04-11 17:13:09,861 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:09,861 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(9)), (np.int64(8), np.int64(18)))
2025-04-11 17:13:09,861 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:10,115 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:10,125 [INFO] Final candidates: []
2025-04-11 17:13:10,125 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:10,134 [INFO] Final candidates: []
2025-04-11 17:13:10,134 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:10,134 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(17)), (np.int64(9), np.int64(7)))
2025-04-11 17:13:10,135 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:10,422 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:10,432 [INFO] Final candidates: []
2025-04-11 17:13:10,432 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:10,443 [INFO] Final candidates: []
2025-04-11 17:13:10,443 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:10,443 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(12)), (np.int64(9), np.int64(15)))
2025-04-11 17:13:10,443 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:10,523 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:10,532 [INFO] Final candidates: []
2025-04-11 17:13:10,532 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:10,542 [INFO] Final candidates: []
2025-04-11 17:13:10,542 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:10,542 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(9)), (np.int64(10), np.int64(10)))
2025-04-11 17:13:10,542 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:10,579 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:10,589 [INFO] Final candidates: []
2025-04-11 17:13:10,589 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:10,598 [INFO] Final candidates: []
2025-04-11 17:13:10,598 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:10,598 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(11)), (np.int64(9), np.int64(18)))
2025-04-11 17:13:10,599 [DEBUG] MCTS iteration 50: reached a node with 0 visits.
2025-04-11 17:13:10,599 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:10,653 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:10,663 [INFO] Final candidates: []
2025-04-11 17:13:10,663 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:10,672 [INFO] Final candidates: []
2025-04-11 17:13:10,672 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:10,672 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(7)), (np.int64(9), np.int64(18)))
2025-04-11 17:13:10,673 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:10,776 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:10,788 [INFO] Final candidates: []
2025-04-11 17:13:10,788 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:10,797 [INFO] Final candidates: []
2025-04-11 17:13:10,797 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:10,797 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(12)), (np.int64(9), np.int64(18)))
2025-04-11 17:13:10,797 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:10,860 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:10,869 [INFO] Final candidates: []
2025-04-11 17:13:10,869 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:10,880 [INFO] Final candidates: []
2025-04-11 17:13:10,880 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:10,880 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(8)), (np.int64(9), np.int64(18)))
2025-04-11 17:13:10,880 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:11,016 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:11,025 [INFO] Final candidates: []
2025-04-11 17:13:11,025 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:11,034 [INFO] Final candidates: []
2025-04-11 17:13:11,034 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:11,034 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(12)), (np.int64(9), np.int64(16)))
2025-04-11 17:13:11,035 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:11,141 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:11,150 [INFO] Final candidates: []
2025-04-11 17:13:11,150 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:11,159 [INFO] Final candidates: []
2025-04-11 17:13:11,160 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:11,160 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(11)), (np.int64(8), np.int64(16)))
2025-04-11 17:13:11,160 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:11,225 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:11,235 [INFO] Final candidates: []
2025-04-11 17:13:11,235 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:11,244 [INFO] Final candidates: []
2025-04-11 17:13:11,245 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:11,245 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(8)), (np.int64(7), np.int64(12)))
2025-04-11 17:13:11,245 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:11,339 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:11,348 [INFO] Final candidates: []
2025-04-11 17:13:11,349 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:11,358 [INFO] Final candidates: []
2025-04-11 17:13:11,358 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:11,359 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(12)), (np.int64(10), np.int64(9)))
2025-04-11 17:13:11,359 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:11,404 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:11,414 [INFO] Final candidates: []
2025-04-11 17:13:11,414 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:11,424 [INFO] Final candidates: []
2025-04-11 17:13:11,424 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:11,424 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(9)), (np.int64(7), np.int64(12)))
2025-04-11 17:13:11,424 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:11,458 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:11,468 [INFO] Final candidates: []
2025-04-11 17:13:11,468 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:11,477 [INFO] Final candidates: []
2025-04-11 17:13:11,477 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:11,477 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(8)), (np.int64(11), np.int64(17)))
2025-04-11 17:13:11,477 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:11,643 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:11,652 [INFO] Final candidates: []
2025-04-11 17:13:11,652 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:11,661 [INFO] Final candidates: []
2025-04-11 17:13:11,661 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:11,661 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(18)), (np.int64(9), np.int64(15)))
2025-04-11 17:13:11,662 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:11,816 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:11,825 [INFO] Final candidates: []
2025-04-11 17:13:11,825 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:11,834 [INFO] Final candidates: []
2025-04-11 17:13:11,834 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:11,834 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(10)), (np.int64(8), np.int64(8)))
2025-04-11 17:13:11,835 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:11,928 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:11,938 [INFO] Final candidates: []
2025-04-11 17:13:11,938 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:11,947 [INFO] Final candidates: []
2025-04-11 17:13:11,947 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:11,947 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(9)), (np.int64(5), np.int64(11)))
2025-04-11 17:13:11,947 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:12,188 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:12,197 [INFO] Final candidates: []
2025-04-11 17:13:12,197 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:12,206 [INFO] Final candidates: []
2025-04-11 17:13:12,206 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:12,206 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(11)), (np.int64(10), np.int64(17)))
2025-04-11 17:13:12,207 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:12,275 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:12,284 [INFO] Final candidates: []
2025-04-11 17:13:12,284 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:12,293 [INFO] Final candidates: []
2025-04-11 17:13:12,293 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:12,293 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(9)), (np.int64(8), np.int64(10)))
2025-04-11 17:13:12,294 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:12,455 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:12,465 [INFO] Final candidates: []
2025-04-11 17:13:12,465 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:12,474 [INFO] Final candidates: []
2025-04-11 17:13:12,474 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:12,474 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(12)), (np.int64(9), np.int64(8)))
2025-04-11 17:13:12,474 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:12,581 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:12,592 [INFO] Final candidates: []
2025-04-11 17:13:12,592 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:12,601 [INFO] Final candidates: []
2025-04-11 17:13:12,601 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:12,601 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(9)), (np.int64(9), np.int64(8)))
2025-04-11 17:13:12,601 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:12,677 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:12,686 [INFO] Final candidates: []
2025-04-11 17:13:12,686 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:12,696 [INFO] Final candidates: []
2025-04-11 17:13:12,696 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:12,696 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(13)), (np.int64(9), np.int64(10)))
2025-04-11 17:13:12,696 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:12,955 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:12,964 [INFO] Final candidates: []
2025-04-11 17:13:12,964 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:12,973 [INFO] Final candidates: []
2025-04-11 17:13:12,973 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:12,973 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(8)), (np.int64(8), np.int64(18)))
2025-04-11 17:13:12,974 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:13,082 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:13,092 [INFO] Final candidates: []
2025-04-11 17:13:13,092 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:13,101 [INFO] Final candidates: []
2025-04-11 17:13:13,101 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:13,101 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(10)), (np.int64(7), np.int64(13)))
2025-04-11 17:13:13,102 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:13,146 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:13,155 [INFO] Final candidates: []
2025-04-11 17:13:13,155 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:13,164 [INFO] Final candidates: []
2025-04-11 17:13:13,164 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:13,164 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(17)), (np.int64(7), np.int64(10)))
2025-04-11 17:13:13,165 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:13,244 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:13,254 [INFO] Final candidates: []
2025-04-11 17:13:13,254 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:13,263 [INFO] Final candidates: []
2025-04-11 17:13:13,263 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:13,263 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(10)), (np.int64(11), np.int64(9)))
2025-04-11 17:13:13,264 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:13,290 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:13,299 [INFO] Final candidates: []
2025-04-11 17:13:13,299 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:13,308 [INFO] Final candidates: []
2025-04-11 17:13:13,308 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:13,308 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(17)), (np.int64(8), np.int64(16)))
2025-04-11 17:13:13,309 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:13,503 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:13,512 [INFO] Final candidates: []
2025-04-11 17:13:13,512 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:13,521 [INFO] Final candidates: []
2025-04-11 17:13:13,521 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:13,521 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(11)), (np.int64(5), np.int64(11)))
2025-04-11 17:13:13,522 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:13,588 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:13,598 [INFO] Final candidates: []
2025-04-11 17:13:13,598 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:13,608 [INFO] Final candidates: []
2025-04-11 17:13:13,608 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:13,608 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(11)), (np.int64(10), np.int64(10)))
2025-04-11 17:13:13,608 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:13,832 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:13,841 [INFO] Final candidates: []
2025-04-11 17:13:13,842 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:13,851 [INFO] Final candidates: []
2025-04-11 17:13:13,851 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:13,851 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(17)), (np.int64(9), np.int64(11)))
2025-04-11 17:13:13,851 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:14,009 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:14,018 [INFO] Final candidates: []
2025-04-11 17:13:14,018 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:14,027 [INFO] Final candidates: []
2025-04-11 17:13:14,027 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:14,027 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(12)), (np.int64(8), np.int64(18)))
2025-04-11 17:13:14,028 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:14,162 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:14,171 [INFO] Final candidates: []
2025-04-11 17:13:14,171 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:14,180 [INFO] Final candidates: []
2025-04-11 17:13:14,180 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:14,180 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(10)), (np.int64(8), np.int64(16)))
2025-04-11 17:13:14,181 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:14,220 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:14,230 [INFO] Final candidates: []
2025-04-11 17:13:14,230 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:14,239 [INFO] Final candidates: []
2025-04-11 17:13:14,239 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:14,239 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(9)), (np.int64(8), np.int64(10)))
2025-04-11 17:13:14,239 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:14,502 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:14,511 [INFO] Final candidates: []
2025-04-11 17:13:14,511 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:14,521 [INFO] Final candidates: []
2025-04-11 17:13:14,521 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:14,521 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(9)), (np.int64(9), np.int64(18)))
2025-04-11 17:13:14,521 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:14,672 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:14,681 [INFO] Final candidates: []
2025-04-11 17:13:14,681 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:14,692 [INFO] Final candidates: []
2025-04-11 17:13:14,692 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:14,692 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(17)), (np.int64(11), np.int64(9)))
2025-04-11 17:13:14,692 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:14,777 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:14,786 [INFO] Final candidates: []
2025-04-11 17:13:14,786 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:14,795 [INFO] Final candidates: []
2025-04-11 17:13:14,796 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:14,796 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(10)), (np.int64(10), np.int64(10)))
2025-04-11 17:13:14,796 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:14,875 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:14,884 [INFO] Final candidates: []
2025-04-11 17:13:14,885 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:14,894 [INFO] Final candidates: []
2025-04-11 17:13:14,894 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:14,894 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(16)), (np.int64(8), np.int64(16)))
2025-04-11 17:13:14,894 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:14,960 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:14,969 [INFO] Final candidates: []
2025-04-11 17:13:14,969 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:14,978 [INFO] Final candidates: []
2025-04-11 17:13:14,978 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:14,979 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(17)), (np.int64(8), np.int64(16)))
2025-04-11 17:13:14,979 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:15,046 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:15,055 [INFO] Final candidates: []
2025-04-11 17:13:15,055 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:15,064 [INFO] Final candidates: []
2025-04-11 17:13:15,064 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:15,065 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(10)), (np.int64(9), np.int64(15)))
2025-04-11 17:13:15,065 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:15,188 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:15,198 [INFO] Final candidates: []
2025-04-11 17:13:15,198 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:15,207 [INFO] Final candidates: []
2025-04-11 17:13:15,207 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:15,207 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(11)), (np.int64(7), np.int64(10)))
2025-04-11 17:13:15,207 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:15,374 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:15,383 [INFO] Final candidates: []
2025-04-11 17:13:15,383 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:15,394 [INFO] Final candidates: []
2025-04-11 17:13:15,394 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:15,394 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(17)), (np.int64(11), np.int64(9)))
2025-04-11 17:13:15,394 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:15,626 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:15,636 [INFO] Final candidates: []
2025-04-11 17:13:15,636 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:15,645 [INFO] Final candidates: []
2025-04-11 17:13:15,645 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:15,645 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(12)), (np.int64(6), np.int64(10)))
2025-04-11 17:13:15,645 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:15,869 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:15,879 [INFO] Final candidates: []
2025-04-11 17:13:15,879 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:15,888 [INFO] Final candidates: []
2025-04-11 17:13:15,888 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:15,888 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(13)), (np.int64(10), np.int64(16)))
2025-04-11 17:13:15,888 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:15,987 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:15,997 [INFO] Final candidates: []
2025-04-11 17:13:15,997 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:16,006 [INFO] Final candidates: []
2025-04-11 17:13:16,006 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:16,006 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(17)), (np.int64(6), np.int64(10)))
2025-04-11 17:13:16,006 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:16,108 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:16,118 [INFO] Final candidates: []
2025-04-11 17:13:16,118 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:16,127 [INFO] Final candidates: []
2025-04-11 17:13:16,127 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:16,127 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(17)), (np.int64(10), np.int64(16)))
2025-04-11 17:13:16,127 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:16,286 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:16,296 [INFO] Final candidates: []
2025-04-11 17:13:16,296 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:16,305 [INFO] Final candidates: []
2025-04-11 17:13:16,305 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:16,305 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(9)), (np.int64(5), np.int64(11)))
2025-04-11 17:13:16,305 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:16,340 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:16,350 [INFO] Final candidates: []
2025-04-11 17:13:16,350 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:16,359 [INFO] Final candidates: []
2025-04-11 17:13:16,359 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:16,359 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(12)), (np.int64(5), np.int64(11)))
2025-04-11 17:13:16,359 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:16,663 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:16,673 [INFO] Final candidates: []
2025-04-11 17:13:16,673 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:16,682 [INFO] Final candidates: []
2025-04-11 17:13:16,682 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:16,682 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(12)), (np.int64(8), np.int64(8)))
2025-04-11 17:13:16,683 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:16,930 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:16,945 [INFO] Final candidates: []
2025-04-11 17:13:16,945 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:16,963 [INFO] Final candidates: []
2025-04-11 17:13:16,963 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:16,963 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(11)), (np.int64(9), np.int64(16)))
2025-04-11 17:13:16,964 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:17,078 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:17,088 [INFO] Final candidates: []
2025-04-11 17:13:17,088 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:17,097 [INFO] Final candidates: []
2025-04-11 17:13:17,097 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:17,098 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(12)), (np.int64(10), np.int64(10)))
2025-04-11 17:13:17,098 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:17,167 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:17,177 [INFO] Final candidates: []
2025-04-11 17:13:17,177 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:17,186 [INFO] Final candidates: []
2025-04-11 17:13:17,186 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:17,186 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(16)), (np.int64(7), np.int64(9)))
2025-04-11 17:13:17,186 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:17,432 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:17,442 [INFO] Final candidates: []
2025-04-11 17:13:17,442 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:17,451 [INFO] Final candidates: []
2025-04-11 17:13:17,451 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:17,451 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(11)), (np.int64(9), np.int64(18)))
2025-04-11 17:13:17,451 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:17,510 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:17,520 [INFO] Final candidates: []
2025-04-11 17:13:17,520 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:17,529 [INFO] Final candidates: []
2025-04-11 17:13:17,529 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:17,529 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(18)), (np.int64(11), np.int64(17)))
2025-04-11 17:13:17,529 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:17,584 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:17,594 [INFO] Final candidates: []
2025-04-11 17:13:17,594 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:17,603 [INFO] Final candidates: []
2025-04-11 17:13:17,603 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:17,603 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(11)), (np.int64(8), np.int64(10)))
2025-04-11 17:13:17,603 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:17,618 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:17,618 [INFO] MCTS: Search finished. Best move selected with 1 visits.
2025-04-11 17:13:17,618 [INFO] MCTS selected move: O8,L9
2025-04-11 17:13:17,618 [INFO] ===============NEW MOVE================
2025-04-11 17:13:28,671 [INFO] Starting pre-MCTS candidate collection.
2025-04-11 17:13:28,680 [INFO] Final candidates: []
2025-04-11 17:13:28,680 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:28,689 [INFO] Final candidates: []
2025-04-11 17:13:28,689 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:28,689 [INFO] No candidate found in Phase 1 or 2; using full legal moves for MCTS.
2025-04-11 17:13:28,689 [INFO] MCTS: Starting search for 100 iterations.
2025-04-11 17:13:28,698 [INFO] Final candidates: []
2025-04-11 17:13:28,698 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:28,707 [INFO] Final candidates: []
2025-04-11 17:13:28,707 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:28,707 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(4)), (np.int64(11), np.int64(9)))
2025-04-11 17:13:28,707 [DEBUG] MCTS iteration 0: reached a node with 0 visits.
2025-04-11 17:13:28,707 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:28,821 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:28,831 [INFO] Final candidates: []
2025-04-11 17:13:28,831 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:28,840 [INFO] Final candidates: []
2025-04-11 17:13:28,840 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:28,840 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(12)), (np.int64(8), np.int64(14)))
2025-04-11 17:13:28,840 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:28,957 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:28,966 [INFO] Final candidates: []
2025-04-11 17:13:28,966 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:28,975 [INFO] Final candidates: []
2025-04-11 17:13:28,975 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:28,975 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(15)), (np.int64(10), np.int64(16)))
2025-04-11 17:13:28,975 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:29,084 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:29,094 [INFO] Final candidates: []
2025-04-11 17:13:29,094 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:29,104 [INFO] Final candidates: []
2025-04-11 17:13:29,104 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:29,104 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(3), np.int64(4)), (np.int64(4), np.int64(3)))
2025-04-11 17:13:29,105 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:29,340 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:29,349 [INFO] Final candidates: []
2025-04-11 17:13:29,349 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:29,358 [INFO] Final candidates: []
2025-04-11 17:13:29,358 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:29,358 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(6)), (np.int64(9), np.int64(11)))
2025-04-11 17:13:29,358 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:29,635 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:29,644 [INFO] Final candidates: []
2025-04-11 17:13:29,644 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:29,653 [INFO] Final candidates: []
2025-04-11 17:13:29,653 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:29,653 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(4)), (np.int64(7), np.int64(8)))
2025-04-11 17:13:29,654 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:29,866 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:29,875 [INFO] Final candidates: []
2025-04-11 17:13:29,875 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:29,888 [INFO] Final candidates: []
2025-04-11 17:13:29,888 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:29,888 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(13)), (np.int64(10), np.int64(17)))
2025-04-11 17:13:29,888 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:29,980 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:29,989 [INFO] Final candidates: []
2025-04-11 17:13:29,989 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:29,998 [INFO] Final candidates: []
2025-04-11 17:13:29,998 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:29,998 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(18)), (np.int64(8), np.int64(11)))
2025-04-11 17:13:29,998 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:30,218 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:30,228 [INFO] Final candidates: []
2025-04-11 17:13:30,228 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:30,237 [INFO] Final candidates: []
2025-04-11 17:13:30,237 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:30,237 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(13)), (np.int64(3), np.int64(5)))
2025-04-11 17:13:30,238 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:30,489 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:30,498 [INFO] Final candidates: []
2025-04-11 17:13:30,498 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:30,507 [INFO] Final candidates: []
2025-04-11 17:13:30,507 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:30,507 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(17)), (np.int64(7), np.int64(12)))
2025-04-11 17:13:30,507 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:30,641 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:30,650 [INFO] Final candidates: []
2025-04-11 17:13:30,650 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:30,659 [INFO] Final candidates: []
2025-04-11 17:13:30,659 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:30,660 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(12)), (np.int64(9), np.int64(11)))
2025-04-11 17:13:30,660 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:30,814 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:30,823 [INFO] Final candidates: []
2025-04-11 17:13:30,823 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:30,832 [INFO] Final candidates: []
2025-04-11 17:13:30,832 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:30,832 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(9)), (np.int64(6), np.int64(8)))
2025-04-11 17:13:30,832 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:31,005 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:31,016 [INFO] Final candidates: []
2025-04-11 17:13:31,016 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:31,025 [INFO] Final candidates: []
2025-04-11 17:13:31,025 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:31,025 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(17)), (np.int64(8), np.int64(9)))
2025-04-11 17:13:31,025 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:31,154 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:31,163 [INFO] Final candidates: []
2025-04-11 17:13:31,163 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:31,172 [INFO] Final candidates: []
2025-04-11 17:13:31,172 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:31,172 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(6)), (np.int64(11), np.int64(9)))
2025-04-11 17:13:31,173 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:31,232 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:31,241 [INFO] Final candidates: []
2025-04-11 17:13:31,241 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:31,250 [INFO] Final candidates: []
2025-04-11 17:13:31,250 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:31,250 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(10)), (np.int64(8), np.int64(17)))
2025-04-11 17:13:31,250 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:31,440 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:31,449 [INFO] Final candidates: []
2025-04-11 17:13:31,449 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:31,459 [INFO] Final candidates: []
2025-04-11 17:13:31,459 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:31,459 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(3), np.int64(4)), (np.int64(7), np.int64(10)))
2025-04-11 17:13:31,459 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:31,488 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:31,497 [INFO] Final candidates: []
2025-04-11 17:13:31,497 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:31,506 [INFO] Final candidates: []
2025-04-11 17:13:31,506 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:31,506 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(3), np.int64(3)), (np.int64(11), np.int64(9)))
2025-04-11 17:13:31,506 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:31,625 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:31,634 [INFO] Final candidates: []
2025-04-11 17:13:31,634 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:31,643 [INFO] Final candidates: []
2025-04-11 17:13:31,643 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:31,643 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(8)), (np.int64(9), np.int64(18)))
2025-04-11 17:13:31,643 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:31,792 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:31,801 [INFO] Final candidates: []
2025-04-11 17:13:31,801 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:31,812 [INFO] Final candidates: []
2025-04-11 17:13:31,812 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:31,812 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(8)), (np.int64(5), np.int64(11)))
2025-04-11 17:13:31,812 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:31,900 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:31,909 [INFO] Final candidates: []
2025-04-11 17:13:31,909 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:31,918 [INFO] Final candidates: []
2025-04-11 17:13:31,918 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:31,918 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(8)), (np.int64(10), np.int64(10)))
2025-04-11 17:13:31,919 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:32,125 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:32,136 [INFO] Final candidates: []
2025-04-11 17:13:32,136 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:32,145 [INFO] Final candidates: []
2025-04-11 17:13:32,145 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:32,145 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(4)), (np.int64(10), np.int64(17)))
2025-04-11 17:13:32,145 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:32,419 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:32,428 [INFO] Final candidates: []
2025-04-11 17:13:32,428 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:32,437 [INFO] Final candidates: []
2025-04-11 17:13:32,437 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:32,437 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(18)), (np.int64(9), np.int64(15)))
2025-04-11 17:13:32,438 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:32,606 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:32,616 [INFO] Final candidates: []
2025-04-11 17:13:32,616 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:32,625 [INFO] Final candidates: []
2025-04-11 17:13:32,625 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:32,625 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(8)), (np.int64(6), np.int64(6)))
2025-04-11 17:13:32,626 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:32,862 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:32,871 [INFO] Final candidates: []
2025-04-11 17:13:32,871 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:32,880 [INFO] Final candidates: []
2025-04-11 17:13:32,880 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:32,880 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(14)), (np.int64(8), np.int64(17)))
2025-04-11 17:13:32,880 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:32,926 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:32,935 [INFO] Final candidates: []
2025-04-11 17:13:32,935 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:32,945 [INFO] Final candidates: []
2025-04-11 17:13:32,945 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:32,945 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(13)), (np.int64(10), np.int64(16)))
2025-04-11 17:13:32,945 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:32,952 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:32,961 [INFO] Final candidates: []
2025-04-11 17:13:32,961 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:32,971 [INFO] Final candidates: []
2025-04-11 17:13:32,971 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:32,971 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(3)), (np.int64(8), np.int64(11)))
2025-04-11 17:13:32,971 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:33,100 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:33,109 [INFO] Final candidates: []
2025-04-11 17:13:33,109 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:33,118 [INFO] Final candidates: []
2025-04-11 17:13:33,118 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:33,118 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(4)), (np.int64(6), np.int64(13)))
2025-04-11 17:13:33,118 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:33,228 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:33,237 [INFO] Final candidates: []
2025-04-11 17:13:33,237 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:33,246 [INFO] Final candidates: []
2025-04-11 17:13:33,246 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:33,246 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(3)), (np.int64(6), np.int64(10)))
2025-04-11 17:13:33,247 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:33,383 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:33,392 [INFO] Final candidates: []
2025-04-11 17:13:33,392 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:33,402 [INFO] Final candidates: []
2025-04-11 17:13:33,402 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:33,402 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(2)), (np.int64(9), np.int64(16)))
2025-04-11 17:13:33,402 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:33,556 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:33,566 [INFO] Final candidates: []
2025-04-11 17:13:33,566 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:33,575 [INFO] Final candidates: []
2025-04-11 17:13:33,575 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:33,575 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(2)), (np.int64(7), np.int64(9)))
2025-04-11 17:13:33,575 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:33,626 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:33,635 [INFO] Final candidates: []
2025-04-11 17:13:33,635 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:33,644 [INFO] Final candidates: []
2025-04-11 17:13:33,644 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:33,644 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(6)), (np.int64(3), np.int64(5)))
2025-04-11 17:13:33,644 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:33,785 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:33,795 [INFO] Final candidates: []
2025-04-11 17:13:33,795 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:33,804 [INFO] Final candidates: []
2025-04-11 17:13:33,804 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:33,804 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(12)), (np.int64(8), np.int64(18)))
2025-04-11 17:13:33,805 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:34,097 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:34,106 [INFO] Final candidates: []
2025-04-11 17:13:34,106 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:34,116 [INFO] Final candidates: []
2025-04-11 17:13:34,116 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:34,116 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(6)), (np.int64(8), np.int64(7)))
2025-04-11 17:13:34,116 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:34,182 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:34,192 [INFO] Final candidates: []
2025-04-11 17:13:34,192 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:34,201 [INFO] Final candidates: []
2025-04-11 17:13:34,201 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:34,201 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(9)), (np.int64(11), np.int64(17)))
2025-04-11 17:13:34,201 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:34,379 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:34,388 [INFO] Final candidates: []
2025-04-11 17:13:34,388 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:34,397 [INFO] Final candidates: []
2025-04-11 17:13:34,397 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:34,397 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(3)), (np.int64(9), np.int64(16)))
2025-04-11 17:13:34,397 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:34,434 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:34,443 [INFO] Final candidates: []
2025-04-11 17:13:34,443 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:34,452 [INFO] Final candidates: []
2025-04-11 17:13:34,452 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:34,452 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(8)), (np.int64(6), np.int64(4)))
2025-04-11 17:13:34,453 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:34,551 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:34,560 [INFO] Final candidates: []
2025-04-11 17:13:34,560 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:34,569 [INFO] Final candidates: []
2025-04-11 17:13:34,569 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:34,569 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(11)), (np.int64(9), np.int64(15)))
2025-04-11 17:13:34,570 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:34,607 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:34,616 [INFO] Final candidates: []
2025-04-11 17:13:34,616 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:34,636 [INFO] Final candidates: []
2025-04-11 17:13:34,636 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:34,636 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(3)), (np.int64(10), np.int64(17)))
2025-04-11 17:13:34,636 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:34,698 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:34,707 [INFO] Final candidates: []
2025-04-11 17:13:34,707 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:34,716 [INFO] Final candidates: []
2025-04-11 17:13:34,716 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:34,716 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(8)), (np.int64(10), np.int64(10)))
2025-04-11 17:13:34,717 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:34,870 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:34,879 [INFO] Final candidates: []
2025-04-11 17:13:34,879 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:34,888 [INFO] Final candidates: []
2025-04-11 17:13:34,888 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:34,888 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(17)), (np.int64(8), np.int64(8)))
2025-04-11 17:13:34,889 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:35,018 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:35,027 [INFO] Final candidates: []
2025-04-11 17:13:35,027 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:35,036 [INFO] Final candidates: []
2025-04-11 17:13:35,036 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:35,036 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(6)), (np.int64(9), np.int64(15)))
2025-04-11 17:13:35,036 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:35,203 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:35,212 [INFO] Final candidates: []
2025-04-11 17:13:35,212 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:35,221 [INFO] Final candidates: []
2025-04-11 17:13:35,221 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:35,221 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(17)), (np.int64(5), np.int64(11)))
2025-04-11 17:13:35,221 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:35,262 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:35,271 [INFO] Final candidates: []
2025-04-11 17:13:35,271 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:35,280 [INFO] Final candidates: []
2025-04-11 17:13:35,280 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:35,280 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(18)), (np.int64(8), np.int64(13)))
2025-04-11 17:13:35,281 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:35,480 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:35,489 [INFO] Final candidates: []
2025-04-11 17:13:35,489 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:35,498 [INFO] Final candidates: []
2025-04-11 17:13:35,498 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:35,498 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(8)), (np.int64(11), np.int64(9)))
2025-04-11 17:13:35,498 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:35,695 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:35,705 [INFO] Final candidates: []
2025-04-11 17:13:35,705 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:35,715 [INFO] Final candidates: []
2025-04-11 17:13:35,715 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:35,715 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(15)), (np.int64(6), np.int64(6)))
2025-04-11 17:13:35,716 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:35,732 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:35,742 [INFO] Final candidates: []
2025-04-11 17:13:35,742 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:35,751 [INFO] Final candidates: []
2025-04-11 17:13:35,751 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:35,751 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(8)), (np.int64(9), np.int64(15)))
2025-04-11 17:13:35,751 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:35,892 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:35,902 [INFO] Final candidates: []
2025-04-11 17:13:35,902 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:35,911 [INFO] Final candidates: []
2025-04-11 17:13:35,911 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:35,911 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(14)), (np.int64(7), np.int64(14)))
2025-04-11 17:13:35,912 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:36,035 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:36,044 [INFO] Final candidates: []
2025-04-11 17:13:36,044 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:36,053 [INFO] Final candidates: []
2025-04-11 17:13:36,053 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:36,053 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(6)), (np.int64(9), np.int64(13)))
2025-04-11 17:13:36,054 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:36,303 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:36,312 [INFO] Final candidates: []
2025-04-11 17:13:36,312 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:36,322 [INFO] Final candidates: []
2025-04-11 17:13:36,322 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:36,322 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(3), np.int64(4)), (np.int64(11), np.int64(9)))
2025-04-11 17:13:36,322 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:36,516 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:36,524 [INFO] Final candidates: []
2025-04-11 17:13:36,525 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:36,534 [INFO] Final candidates: []
2025-04-11 17:13:36,534 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:36,534 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(6)), (np.int64(5), np.int64(11)))
2025-04-11 17:13:36,534 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:36,660 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:36,674 [INFO] Final candidates: []
2025-04-11 17:13:36,674 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:36,696 [INFO] Final candidates: []
2025-04-11 17:13:36,696 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:36,696 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(17)), (np.int64(7), np.int64(12)))
2025-04-11 17:13:36,697 [DEBUG] MCTS iteration 50: reached a node with 0 visits.
2025-04-11 17:13:36,697 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:36,906 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:36,916 [INFO] Final candidates: []
2025-04-11 17:13:36,916 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:36,925 [INFO] Final candidates: []
2025-04-11 17:13:36,925 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:36,925 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(12)), (np.int64(7), np.int64(12)))
2025-04-11 17:13:36,926 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:37,065 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:37,074 [INFO] Final candidates: []
2025-04-11 17:13:37,074 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:37,083 [INFO] Final candidates: []
2025-04-11 17:13:37,083 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:37,083 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(6)), (np.int64(4), np.int64(2)))
2025-04-11 17:13:37,083 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:37,201 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:37,210 [INFO] Final candidates: []
2025-04-11 17:13:37,210 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:37,220 [INFO] Final candidates: []
2025-04-11 17:13:37,220 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:37,220 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(4)), (np.int64(8), np.int64(16)))
2025-04-11 17:13:37,220 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:37,343 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:37,355 [INFO] Final candidates: []
2025-04-11 17:13:37,355 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:37,367 [INFO] Final candidates: []
2025-04-11 17:13:37,367 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:37,367 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(6)), (np.int64(10), np.int64(16)))
2025-04-11 17:13:37,367 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:37,386 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:37,395 [INFO] Final candidates: []
2025-04-11 17:13:37,396 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:37,405 [INFO] Final candidates: []
2025-04-11 17:13:37,405 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:37,405 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(7)), (np.int64(10), np.int64(10)))
2025-04-11 17:13:37,405 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:37,618 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:37,627 [INFO] Final candidates: []
2025-04-11 17:13:37,627 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:37,637 [INFO] Final candidates: []
2025-04-11 17:13:37,637 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:37,637 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(15)), (np.int64(8), np.int64(16)))
2025-04-11 17:13:37,637 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:37,767 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:37,776 [INFO] Final candidates: []
2025-04-11 17:13:37,776 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:37,785 [INFO] Final candidates: []
2025-04-11 17:13:37,785 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:37,786 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(9)), (np.int64(7), np.int64(9)))
2025-04-11 17:13:37,786 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:37,819 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:37,827 [INFO] Final candidates: []
2025-04-11 17:13:37,828 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:37,837 [INFO] Final candidates: []
2025-04-11 17:13:37,837 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:37,837 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(12)), (np.int64(10), np.int64(8)))
2025-04-11 17:13:37,837 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:37,945 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:37,956 [INFO] Final candidates: []
2025-04-11 17:13:37,956 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:37,966 [INFO] Final candidates: []
2025-04-11 17:13:37,966 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:37,966 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(10)), (np.int64(8), np.int64(16)))
2025-04-11 17:13:37,967 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:38,146 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:38,155 [INFO] Final candidates: []
2025-04-11 17:13:38,155 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:38,164 [INFO] Final candidates: []
2025-04-11 17:13:38,164 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:38,164 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(5)), (np.int64(6), np.int64(13)))
2025-04-11 17:13:38,164 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:38,199 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:38,218 [INFO] Final candidates: []
2025-04-11 17:13:38,218 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:38,227 [INFO] Final candidates: []
2025-04-11 17:13:38,227 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:38,227 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(11)), (np.int64(6), np.int64(7)))
2025-04-11 17:13:38,227 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:38,418 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:38,427 [INFO] Final candidates: []
2025-04-11 17:13:38,427 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:38,436 [INFO] Final candidates: []
2025-04-11 17:13:38,436 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:38,436 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(7)), (np.int64(10), np.int64(18)))
2025-04-11 17:13:38,437 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:38,663 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:38,672 [INFO] Final candidates: []
2025-04-11 17:13:38,672 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:38,681 [INFO] Final candidates: []
2025-04-11 17:13:38,681 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:38,681 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(17)), (np.int64(11), np.int64(9)))
2025-04-11 17:13:38,681 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:38,820 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:38,829 [INFO] Final candidates: []
2025-04-11 17:13:38,829 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:38,838 [INFO] Final candidates: []
2025-04-11 17:13:38,838 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:38,838 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(3), np.int64(4)), (np.int64(4), np.int64(5)))
2025-04-11 17:13:38,839 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:39,048 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:39,057 [INFO] Final candidates: []
2025-04-11 17:13:39,057 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:39,066 [INFO] Final candidates: []
2025-04-11 17:13:39,066 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:39,066 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(7)), (np.int64(10), np.int64(9)))
2025-04-11 17:13:39,066 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:39,337 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:39,346 [INFO] Final candidates: []
2025-04-11 17:13:39,346 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:39,358 [INFO] Final candidates: []
2025-04-11 17:13:39,358 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:39,358 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(7)), (np.int64(9), np.int64(13)))
2025-04-11 17:13:39,358 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:39,509 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:39,520 [INFO] Final candidates: []
2025-04-11 17:13:39,520 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:39,530 [INFO] Final candidates: []
2025-04-11 17:13:39,530 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:39,530 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(7)), (np.int64(8), np.int64(13)))
2025-04-11 17:13:39,531 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:39,680 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:39,691 [INFO] Final candidates: []
2025-04-11 17:13:39,691 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:39,702 [INFO] Final candidates: []
2025-04-11 17:13:39,702 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:39,702 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(18)), (np.int64(9), np.int64(10)))
2025-04-11 17:13:39,703 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:39,786 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:39,795 [INFO] Final candidates: []
2025-04-11 17:13:39,795 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:39,804 [INFO] Final candidates: []
2025-04-11 17:13:39,804 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:39,804 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(2), np.int64(4)), (np.int64(8), np.int64(17)))
2025-04-11 17:13:39,804 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:39,963 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:39,972 [INFO] Final candidates: []
2025-04-11 17:13:39,972 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:39,981 [INFO] Final candidates: []
2025-04-11 17:13:39,981 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:39,981 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(17)), (np.int64(10), np.int64(8)))
2025-04-11 17:13:39,981 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:40,203 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:40,213 [INFO] Final candidates: []
2025-04-11 17:13:40,213 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:40,223 [INFO] Final candidates: []
2025-04-11 17:13:40,223 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:40,223 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(10)), (np.int64(9), np.int64(18)))
2025-04-11 17:13:40,224 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:40,254 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:40,263 [INFO] Final candidates: []
2025-04-11 17:13:40,263 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:40,272 [INFO] Final candidates: []
2025-04-11 17:13:40,272 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:40,272 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(9)), (np.int64(8), np.int64(7)))
2025-04-11 17:13:40,272 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:40,433 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:40,443 [INFO] Final candidates: []
2025-04-11 17:13:40,443 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:40,454 [INFO] Final candidates: []
2025-04-11 17:13:40,454 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:40,454 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(17)), (np.int64(5), np.int64(13)))
2025-04-11 17:13:40,454 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:40,755 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:40,764 [INFO] Final candidates: []
2025-04-11 17:13:40,764 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:40,773 [INFO] Final candidates: []
2025-04-11 17:13:40,773 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:40,773 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(14)), (np.int64(5), np.int64(5)))
2025-04-11 17:13:40,773 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:40,859 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:40,868 [INFO] Final candidates: []
2025-04-11 17:13:40,868 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:40,878 [INFO] Final candidates: []
2025-04-11 17:13:40,878 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:40,878 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(9)), (np.int64(5), np.int64(3)))
2025-04-11 17:13:40,879 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:40,974 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:40,983 [INFO] Final candidates: []
2025-04-11 17:13:40,984 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:40,993 [INFO] Final candidates: []
2025-04-11 17:13:40,993 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:40,993 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(9)), (np.int64(11), np.int64(9)))
2025-04-11 17:13:40,993 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:41,132 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:41,141 [INFO] Final candidates: []
2025-04-11 17:13:41,141 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:41,150 [INFO] Final candidates: []
2025-04-11 17:13:41,150 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:41,150 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(7)), (np.int64(7), np.int64(6)))
2025-04-11 17:13:41,151 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:41,363 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:41,372 [INFO] Final candidates: []
2025-04-11 17:13:41,372 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:41,381 [INFO] Final candidates: []
2025-04-11 17:13:41,381 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:41,381 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(8)), (np.int64(8), np.int64(13)))
2025-04-11 17:13:41,381 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:41,491 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:41,502 [INFO] Final candidates: []
2025-04-11 17:13:41,502 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:41,511 [INFO] Final candidates: []
2025-04-11 17:13:41,511 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:41,511 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(7)), (np.int64(9), np.int64(18)))
2025-04-11 17:13:41,512 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:41,670 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:41,678 [INFO] Final candidates: []
2025-04-11 17:13:41,679 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:41,687 [INFO] Final candidates: []
2025-04-11 17:13:41,687 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:41,688 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(4)), (np.int64(2), np.int64(4)))
2025-04-11 17:13:41,688 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:41,852 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:41,861 [INFO] Final candidates: []
2025-04-11 17:13:41,862 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:41,871 [INFO] Final candidates: []
2025-04-11 17:13:41,871 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:41,871 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(3)), (np.int64(10), np.int64(17)))
2025-04-11 17:13:41,871 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:42,138 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:42,147 [INFO] Final candidates: []
2025-04-11 17:13:42,147 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:42,156 [INFO] Final candidates: []
2025-04-11 17:13:42,156 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:42,156 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(13)), (np.int64(8), np.int64(16)))
2025-04-11 17:13:42,156 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:42,310 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:42,319 [INFO] Final candidates: []
2025-04-11 17:13:42,319 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:42,328 [INFO] Final candidates: []
2025-04-11 17:13:42,328 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:42,328 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(17)), (np.int64(6), np.int64(8)))
2025-04-11 17:13:42,328 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:42,344 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:42,353 [INFO] Final candidates: []
2025-04-11 17:13:42,353 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:42,362 [INFO] Final candidates: []
2025-04-11 17:13:42,362 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:42,362 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(5)), (np.int64(9), np.int64(18)))
2025-04-11 17:13:42,362 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:42,465 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:42,476 [INFO] Final candidates: []
2025-04-11 17:13:42,476 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:42,485 [INFO] Final candidates: []
2025-04-11 17:13:42,485 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:42,485 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(11)), (np.int64(5), np.int64(3)))
2025-04-11 17:13:42,486 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:42,739 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:42,748 [INFO] Final candidates: []
2025-04-11 17:13:42,748 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:42,757 [INFO] Final candidates: []
2025-04-11 17:13:42,758 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:42,758 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(17)), (np.int64(9), np.int64(15)))
2025-04-11 17:13:42,758 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:42,918 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:42,927 [INFO] Final candidates: []
2025-04-11 17:13:42,927 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:42,937 [INFO] Final candidates: []
2025-04-11 17:13:42,937 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:42,937 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(9)), (np.int64(6), np.int64(6)))
2025-04-11 17:13:42,937 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:43,142 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:43,151 [INFO] Final candidates: []
2025-04-11 17:13:43,151 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:43,161 [INFO] Final candidates: []
2025-04-11 17:13:43,161 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:43,161 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(17)), (np.int64(5), np.int64(11)))
2025-04-11 17:13:43,161 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:43,253 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:43,262 [INFO] Final candidates: []
2025-04-11 17:13:43,262 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:43,271 [INFO] Final candidates: []
2025-04-11 17:13:43,271 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:43,271 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(11)), (np.int64(6), np.int64(8)))
2025-04-11 17:13:43,272 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:43,315 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:43,325 [INFO] Final candidates: []
2025-04-11 17:13:43,325 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:43,334 [INFO] Final candidates: []
2025-04-11 17:13:43,334 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:43,334 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(12)), (np.int64(8), np.int64(6)))
2025-04-11 17:13:43,334 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:43,445 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:43,454 [INFO] Final candidates: []
2025-04-11 17:13:43,454 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:43,463 [INFO] Final candidates: []
2025-04-11 17:13:43,463 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:43,463 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(2)), (np.int64(9), np.int64(15)))
2025-04-11 17:13:43,463 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:43,513 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:43,525 [INFO] Final candidates: []
2025-04-11 17:13:43,525 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:43,534 [INFO] Final candidates: []
2025-04-11 17:13:43,534 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:43,534 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(13)), (np.int64(6), np.int64(4)))
2025-04-11 17:13:43,535 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:43,664 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:43,673 [INFO] Final candidates: []
2025-04-11 17:13:43,673 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:43,683 [INFO] Final candidates: []
2025-04-11 17:13:43,683 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:43,683 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(13)), (np.int64(11), np.int64(9)))
2025-04-11 17:13:43,683 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:43,806 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:43,820 [INFO] Final candidates: []
2025-04-11 17:13:43,820 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:43,834 [INFO] Final candidates: []
2025-04-11 17:13:43,834 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:43,835 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(8)), (np.int64(3), np.int64(5)))
2025-04-11 17:13:43,835 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:44,028 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:44,038 [INFO] Final candidates: []
2025-04-11 17:13:44,038 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:44,047 [INFO] Final candidates: []
2025-04-11 17:13:44,047 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:44,047 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(11)), (np.int64(7), np.int64(8)))
2025-04-11 17:13:44,047 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:44,087 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:44,096 [INFO] Final candidates: []
2025-04-11 17:13:44,096 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:44,107 [INFO] Final candidates: []
2025-04-11 17:13:44,107 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:44,107 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(3), np.int64(5)), (np.int64(6), np.int64(6)))
2025-04-11 17:13:44,108 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:44,200 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:44,209 [INFO] Final candidates: []
2025-04-11 17:13:44,209 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:44,218 [INFO] Final candidates: []
2025-04-11 17:13:44,218 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:44,218 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(17)), (np.int64(11), np.int64(9)))
2025-04-11 17:13:44,219 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:44,443 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:44,452 [INFO] Final candidates: []
2025-04-11 17:13:44,452 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:44,461 [INFO] Final candidates: []
2025-04-11 17:13:44,461 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:44,461 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(8)), (np.int64(8), np.int64(14)))
2025-04-11 17:13:44,461 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:44,505 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:44,519 [INFO] Final candidates: []
2025-04-11 17:13:44,519 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:44,528 [INFO] Final candidates: []
2025-04-11 17:13:44,528 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 17:13:44,528 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(9)), (np.int64(9), np.int64(15)))
2025-04-11 17:13:44,528 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:44,600 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:44,600 [INFO] MCTS: Search finished. Best move selected with 1 visits.
2025-04-11 17:13:44,600 [INFO] MCTS selected move: E6,K12
2025-04-11 17:13:44,600 [INFO] ===============NEW MOVE================
2025-04-11 17:13:49,048 [INFO] Starting pre-MCTS candidate collection.
2025-04-11 17:13:49,056 [INFO] Final candidates: []
2025-04-11 17:13:49,056 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:49,061 [DEBUG] board coords: [(2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7)]
2025-04-11 17:13:49,061 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 17:13:49,061 [DEBUG] check_window_intermediate_custom: empty_cells=[(2, 2), (3, 3)]
2025-04-11 17:13:49,062 [DEBUG] check_window_intermediate_custom (only one inserted(3, 3)): For L=6, window [0 0 2 2 2 2] with coords [(2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7)] triggers candidate.
2025-04-11 17:13:49,062 [DEBUG] check_window_margin_custom: For L=6, window [0 2 2 2 2 0] with coords [(3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8)] triggers candidate.
2025-04-11 17:13:49,062 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 17:13:49,062 [DEBUG] board coords: [(5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10)]
2025-04-11 17:13:49,062 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(0)]
2025-04-11 17:13:49,062 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 8), (10, 10)]
2025-04-11 17:13:49,062 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 0 2 0] with coords [(5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10)] triggers candidate.
2025-04-11 17:13:49,063 [DEBUG] board coords: [(3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9)]
2025-04-11 17:13:49,063 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(2)]
2025-04-11 17:13:49,063 [DEBUG] check_window_intermediate_custom: empty_cells=[(3, 3), (8, 8)]
2025-04-11 17:13:49,063 [DEBUG] check_window_intermediate_custom: For L=7, window [0 2 2 2 2 0 2] with coords [(3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9)] triggers candidate.
2025-04-11 17:13:49,063 [DEBUG] board coords: [(4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10)]
2025-04-11 17:13:49,063 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(0)]
2025-04-11 17:13:49,063 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 8), (10, 10)]
2025-04-11 17:13:49,063 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 0 2 0] with coords [(4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10)] triggers candidate.
2025-04-11 17:13:49,067 [INFO] Final candidates: [(8, 8), (3, 3), (10, 10)]
2025-04-11 17:13:49,067 [INFO] Phase defense: Collected 3unique candidate(s):[((3, 3), (10, 10)), ((8, 8), (3, 3)), ((8, 8), (10, 10))]
2025-04-11 17:13:49,067 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 17:13:49,067 [INFO] MCTS: Starting search for 50 iterations.
2025-04-11 17:13:49,072 [DEBUG] board coords: [(2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7)]
2025-04-11 17:13:49,072 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 17:13:49,072 [DEBUG] check_window_intermediate_custom: empty_cells=[(2, 2), (3, 3)]
2025-04-11 17:13:49,072 [DEBUG] check_window_intermediate_custom (only one inserted(3, 3)): For L=6, window [0 0 2 2 2 2] with coords [(2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7)] triggers candidate.
2025-04-11 17:13:49,073 [DEBUG] check_window_margin_custom: For L=6, window [0 2 2 2 2 0] with coords [(3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8)] triggers candidate.
2025-04-11 17:13:49,073 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 17:13:49,073 [DEBUG] board coords: [(5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10)]
2025-04-11 17:13:49,073 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(0)]
2025-04-11 17:13:49,073 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 8), (10, 10)]
2025-04-11 17:13:49,073 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 0 2 0] with coords [(5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10)] triggers candidate.
2025-04-11 17:13:49,074 [DEBUG] board coords: [(3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9)]
2025-04-11 17:13:49,074 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(2)]
2025-04-11 17:13:49,074 [DEBUG] check_window_intermediate_custom: empty_cells=[(3, 3), (8, 8)]
2025-04-11 17:13:49,074 [DEBUG] check_window_intermediate_custom: For L=7, window [0 2 2 2 2 0 2] with coords [(3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9)] triggers candidate.
2025-04-11 17:13:49,074 [DEBUG] board coords: [(4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10)]
2025-04-11 17:13:49,074 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(0)]
2025-04-11 17:13:49,074 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 8), (10, 10)]
2025-04-11 17:13:49,074 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 0 2 0] with coords [(4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10)] triggers candidate.
2025-04-11 17:13:49,077 [INFO] Final candidates: [(8, 8), (3, 3), (10, 10)]
2025-04-11 17:13:49,077 [INFO] Phase win: Collected 3unique candidate(s):[((3, 3), (10, 10)), ((8, 8), (3, 3)), ((8, 8), (10, 10))]
2025-04-11 17:13:49,077 [DEBUG] Tree_policy iteration 1: Expanding move ((8, 8), (10, 10))
2025-04-11 17:13:49,078 [DEBUG] MCTS iteration 0: reached a node with 0 visits.
2025-04-11 17:13:49,078 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:49,078 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:49,084 [DEBUG] board coords: [(2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7)]
2025-04-11 17:13:49,085 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 17:13:49,085 [DEBUG] check_window_intermediate_custom: empty_cells=[(2, 2), (3, 3)]
2025-04-11 17:13:49,085 [DEBUG] check_window_intermediate_custom (only one inserted(3, 3)): For L=6, window [0 0 2 2 2 2] with coords [(2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7)] triggers candidate.
2025-04-11 17:13:49,085 [DEBUG] check_window_margin_custom: For L=6, window [0 2 2 2 2 0] with coords [(3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8)] triggers candidate.
2025-04-11 17:13:49,085 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 17:13:49,085 [DEBUG] board coords: [(5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10)]
2025-04-11 17:13:49,085 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(0)]
2025-04-11 17:13:49,085 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 8), (10, 10)]
2025-04-11 17:13:49,085 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 0 2 0] with coords [(5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10)] triggers candidate.
2025-04-11 17:13:49,086 [DEBUG] board coords: [(3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9)]
2025-04-11 17:13:49,086 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(2)]
2025-04-11 17:13:49,086 [DEBUG] check_window_intermediate_custom: empty_cells=[(3, 3), (8, 8)]
2025-04-11 17:13:49,086 [DEBUG] check_window_intermediate_custom: For L=7, window [0 2 2 2 2 0 2] with coords [(3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9)] triggers candidate.
2025-04-11 17:13:49,086 [DEBUG] board coords: [(4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10)]
2025-04-11 17:13:49,086 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(0)]
2025-04-11 17:13:49,086 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 8), (10, 10)]
2025-04-11 17:13:49,086 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 0 2 0] with coords [(4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10)] triggers candidate.
2025-04-11 17:13:49,089 [INFO] Final candidates: [(8, 8), (3, 3), (10, 10)]
2025-04-11 17:13:49,089 [INFO] Phase win: Collected 3unique candidate(s):[((3, 3), (10, 10)), ((8, 8), (3, 3)), ((8, 8), (10, 10))]
2025-04-11 17:13:49,089 [DEBUG] Tree_policy iteration 1: Expanding move ((8, 8), (3, 3))
2025-04-11 17:13:49,089 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:49,089 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:49,095 [DEBUG] board coords: [(2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7)]
2025-04-11 17:13:49,095 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 17:13:49,095 [DEBUG] check_window_intermediate_custom: empty_cells=[(2, 2), (3, 3)]
2025-04-11 17:13:49,095 [DEBUG] check_window_intermediate_custom (only one inserted(3, 3)): For L=6, window [0 0 2 2 2 2] with coords [(2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7)] triggers candidate.
2025-04-11 17:13:49,095 [DEBUG] check_window_margin_custom: For L=6, window [0 2 2 2 2 0] with coords [(3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8)] triggers candidate.
2025-04-11 17:13:49,095 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 17:13:49,095 [DEBUG] board coords: [(5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10)]
2025-04-11 17:13:49,095 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(0)]
2025-04-11 17:13:49,095 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 8), (10, 10)]
2025-04-11 17:13:49,095 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 0 2 0] with coords [(5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10)] triggers candidate.
2025-04-11 17:13:49,096 [DEBUG] board coords: [(3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9)]
2025-04-11 17:13:49,096 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(2)]
2025-04-11 17:13:49,096 [DEBUG] check_window_intermediate_custom: empty_cells=[(3, 3), (8, 8)]
2025-04-11 17:13:49,096 [DEBUG] check_window_intermediate_custom: For L=7, window [0 2 2 2 2 0 2] with coords [(3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9)] triggers candidate.
2025-04-11 17:13:49,096 [DEBUG] board coords: [(4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10)]
2025-04-11 17:13:49,096 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(0)]
2025-04-11 17:13:49,096 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 8), (10, 10)]
2025-04-11 17:13:49,096 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 0 2 0] with coords [(4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10)] triggers candidate.
2025-04-11 17:13:49,099 [INFO] Final candidates: [(8, 8), (3, 3), (10, 10)]
2025-04-11 17:13:49,099 [INFO] Phase win: Collected 3unique candidate(s):[((3, 3), (10, 10)), ((8, 8), (3, 3)), ((8, 8), (10, 10))]
2025-04-11 17:13:49,099 [DEBUG] Tree_policy iteration 1: Expanding move ((3, 3), (10, 10))
2025-04-11 17:13:49,100 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:49,184 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:49,184 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:13:49,184 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:13:49,185 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:49,185 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:49,185 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:13:49,185 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:13:49,185 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:49,185 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:49,185 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:13:49,193 [INFO] Final candidates: []
2025-04-11 17:13:49,193 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:49,198 [DEBUG] board coords: [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)]
2025-04-11 17:13:49,198 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 17:13:49,198 [DEBUG] check_window_intermediate_custom: empty_cells=[(1, 1), (2, 2)]
2025-04-11 17:13:49,198 [DEBUG] check_window_intermediate_custom (only one inserted(2, 2)): For L=6, window [0 0 2 2 2 2] with coords [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)] triggers candidate.
2025-04-11 17:13:49,198 [DEBUG] board coords: [(6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)]
2025-04-11 17:13:49,199 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 17:13:49,199 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 8), (11, 11)]
2025-04-11 17:13:49,199 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)] triggers candidate.
2025-04-11 17:13:49,200 [DEBUG] board coords: [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7)]
2025-04-11 17:13:49,200 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 17:13:49,200 [DEBUG] check_window_intermediate_custom: empty_cells=[(1, 1), (2, 2)]
2025-04-11 17:13:49,200 [DEBUG] check_window_intermediate_custom (only one inserted(2, 2)): For L=7, window [0 0 2 2 2 2 2] with coords [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7)] triggers candidate.
2025-04-11 17:13:49,200 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8)] triggers candidate.
2025-04-11 17:13:49,200 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 17:13:49,201 [DEBUG] board coords: [(5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)]
2025-04-11 17:13:49,201 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 17:13:49,201 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 8), (11, 11)]
2025-04-11 17:13:49,201 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 0 2 2 0] with coords [(5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)] triggers candidate.
2025-04-11 17:13:49,204 [INFO] Final candidates: [(8, 8), (11, 11), (2, 2)]
2025-04-11 17:13:49,204 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 11), (2, 2)), ((8, 8), (2, 2)), ((8, 8), (11, 11))]
2025-04-11 17:13:49,204 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(1), np.int64(3)), (np.int64(6), np.int64(11)))
2025-04-11 17:13:49,206 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:49,437 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:49,437 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:13:49,437 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:13:49,437 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:49,437 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:49,437 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:13:49,437 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:13:49,437 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:49,437 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:49,437 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:13:49,446 [INFO] Final candidates: []
2025-04-11 17:13:49,446 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:49,451 [DEBUG] board coords: [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)]
2025-04-11 17:13:49,451 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 17:13:49,451 [DEBUG] check_window_intermediate_custom: empty_cells=[(1, 1), (2, 2)]
2025-04-11 17:13:49,451 [DEBUG] check_window_intermediate_custom (only one inserted(2, 2)): For L=6, window [0 0 2 2 2 2] with coords [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)] triggers candidate.
2025-04-11 17:13:49,451 [DEBUG] board coords: [(6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)]
2025-04-11 17:13:49,451 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 17:13:49,451 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 8), (11, 11)]
2025-04-11 17:13:49,451 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)] triggers candidate.
2025-04-11 17:13:49,452 [DEBUG] board coords: [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7)]
2025-04-11 17:13:49,452 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 17:13:49,452 [DEBUG] check_window_intermediate_custom: empty_cells=[(1, 1), (2, 2)]
2025-04-11 17:13:49,452 [DEBUG] check_window_intermediate_custom (only one inserted(2, 2)): For L=7, window [0 0 2 2 2 2 2] with coords [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7)] triggers candidate.
2025-04-11 17:13:49,452 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8)] triggers candidate.
2025-04-11 17:13:49,452 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 17:13:49,452 [DEBUG] board coords: [(5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)]
2025-04-11 17:13:49,452 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 17:13:49,452 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 8), (11, 11)]
2025-04-11 17:13:49,453 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 0 2 2 0] with coords [(5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)] triggers candidate.
2025-04-11 17:13:49,455 [INFO] Final candidates: [(8, 8), (11, 11), (2, 2)]
2025-04-11 17:13:49,455 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 11), (2, 2)), ((8, 8), (2, 2)), ((8, 8), (11, 11))]
2025-04-11 17:13:49,455 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(12)), (np.int64(13), np.int64(9)))
2025-04-11 17:13:49,456 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:49,559 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:49,560 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:13:49,560 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:13:49,560 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:49,560 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:49,560 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:13:49,560 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:13:49,560 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:49,560 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:49,560 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:13:49,569 [INFO] Final candidates: []
2025-04-11 17:13:49,569 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:49,574 [DEBUG] board coords: [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)]
2025-04-11 17:13:49,574 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 17:13:49,574 [DEBUG] check_window_intermediate_custom: empty_cells=[(1, 1), (2, 2)]
2025-04-11 17:13:49,574 [DEBUG] check_window_intermediate_custom (only one inserted(2, 2)): For L=6, window [0 0 2 2 2 2] with coords [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)] triggers candidate.
2025-04-11 17:13:49,575 [DEBUG] board coords: [(6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)]
2025-04-11 17:13:49,575 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 17:13:49,575 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 8), (11, 11)]
2025-04-11 17:13:49,575 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)] triggers candidate.
2025-04-11 17:13:49,576 [DEBUG] board coords: [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7)]
2025-04-11 17:13:49,576 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 17:13:49,576 [DEBUG] check_window_intermediate_custom: empty_cells=[(1, 1), (2, 2)]
2025-04-11 17:13:49,576 [DEBUG] check_window_intermediate_custom (only one inserted(2, 2)): For L=7, window [0 0 2 2 2 2 2] with coords [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7)] triggers candidate.
2025-04-11 17:13:49,576 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8)] triggers candidate.
2025-04-11 17:13:49,576 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 17:13:49,576 [DEBUG] board coords: [(5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)]
2025-04-11 17:13:49,576 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 17:13:49,576 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 8), (11, 11)]
2025-04-11 17:13:49,576 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 0 2 2 0] with coords [(5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)] triggers candidate.
2025-04-11 17:13:49,579 [INFO] Final candidates: [(8, 8), (11, 11), (2, 2)]
2025-04-11 17:13:49,579 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 11), (2, 2)), ((8, 8), (2, 2)), ((8, 8), (11, 11))]
2025-04-11 17:13:49,579 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(12)), (np.int64(7), np.int64(10)))
2025-04-11 17:13:49,580 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:49,606 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:49,606 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:13:49,606 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:13:49,606 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:49,606 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:49,607 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:13:49,607 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:13:49,607 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:49,607 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:49,607 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:13:49,615 [INFO] Final candidates: []
2025-04-11 17:13:49,615 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:49,620 [DEBUG] board coords: [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)]
2025-04-11 17:13:49,620 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 17:13:49,620 [DEBUG] check_window_intermediate_custom: empty_cells=[(1, 1), (2, 2)]
2025-04-11 17:13:49,620 [DEBUG] check_window_intermediate_custom (only one inserted(2, 2)): For L=6, window [0 0 2 2 2 2] with coords [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)] triggers candidate.
2025-04-11 17:13:49,621 [DEBUG] board coords: [(6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)]
2025-04-11 17:13:49,621 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 17:13:49,621 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 8), (11, 11)]
2025-04-11 17:13:49,621 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)] triggers candidate.
2025-04-11 17:13:49,622 [DEBUG] board coords: [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7)]
2025-04-11 17:13:49,622 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 17:13:49,622 [DEBUG] check_window_intermediate_custom: empty_cells=[(1, 1), (2, 2)]
2025-04-11 17:13:49,622 [DEBUG] check_window_intermediate_custom (only one inserted(2, 2)): For L=7, window [0 0 2 2 2 2 2] with coords [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7)] triggers candidate.
2025-04-11 17:13:49,622 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8)] triggers candidate.
2025-04-11 17:13:49,622 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 17:13:49,622 [DEBUG] board coords: [(5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)]
2025-04-11 17:13:49,622 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 17:13:49,622 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 8), (11, 11)]
2025-04-11 17:13:49,622 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 0 2 2 0] with coords [(5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)] triggers candidate.
2025-04-11 17:13:49,625 [INFO] Final candidates: [(8, 8), (11, 11), (2, 2)]
2025-04-11 17:13:49,625 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 11), (2, 2)), ((8, 8), (2, 2)), ((8, 8), (11, 11))]
2025-04-11 17:13:49,625 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(7)), (np.int64(6), np.int64(7)))
2025-04-11 17:13:49,625 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:49,641 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:49,642 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:13:49,642 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:13:49,642 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:49,642 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:49,642 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:13:49,642 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:13:49,642 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:49,642 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:49,642 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:13:49,650 [INFO] Final candidates: []
2025-04-11 17:13:49,650 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:49,655 [DEBUG] board coords: [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)]
2025-04-11 17:13:49,655 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 17:13:49,655 [DEBUG] check_window_intermediate_custom: empty_cells=[(1, 1), (2, 2)]
2025-04-11 17:13:49,655 [DEBUG] check_window_intermediate_custom (only one inserted(2, 2)): For L=6, window [0 0 2 2 2 2] with coords [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)] triggers candidate.
2025-04-11 17:13:49,656 [DEBUG] board coords: [(6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)]
2025-04-11 17:13:49,656 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 17:13:49,656 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 8), (11, 11)]
2025-04-11 17:13:49,656 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)] triggers candidate.
2025-04-11 17:13:49,656 [DEBUG] board coords: [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7)]
2025-04-11 17:13:49,656 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 17:13:49,656 [DEBUG] check_window_intermediate_custom: empty_cells=[(1, 1), (2, 2)]
2025-04-11 17:13:49,657 [DEBUG] check_window_intermediate_custom (only one inserted(2, 2)): For L=7, window [0 0 2 2 2 2 2] with coords [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7)] triggers candidate.
2025-04-11 17:13:49,657 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8)] triggers candidate.
2025-04-11 17:13:49,657 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 17:13:49,657 [DEBUG] board coords: [(5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)]
2025-04-11 17:13:49,657 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 17:13:49,657 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 8), (11, 11)]
2025-04-11 17:13:49,657 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 0 2 2 0] with coords [(5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)] triggers candidate.
2025-04-11 17:13:49,659 [INFO] Final candidates: [(8, 8), (11, 11), (2, 2)]
2025-04-11 17:13:49,660 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 11), (2, 2)), ((8, 8), (2, 2)), ((8, 8), (11, 11))]
2025-04-11 17:13:49,660 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(2), np.int64(2)), (np.int64(11), np.int64(10)))
2025-04-11 17:13:49,660 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:49,738 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:49,738 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:13:49,747 [INFO] Final candidates: []
2025-04-11 17:13:49,747 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:49,752 [DEBUG] board coords: [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)]
2025-04-11 17:13:49,752 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 17:13:49,752 [DEBUG] check_window_intermediate_custom: empty_cells=[(1, 1), (2, 2)]
2025-04-11 17:13:49,753 [DEBUG] check_window_intermediate_custom (only one inserted(2, 2)): For L=6, window [0 0 2 2 2 2] with coords [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)] triggers candidate.
2025-04-11 17:13:49,753 [DEBUG] board coords: [(6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)]
2025-04-11 17:13:49,753 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 17:13:49,753 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 8), (11, 11)]
2025-04-11 17:13:49,753 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)] triggers candidate.
2025-04-11 17:13:49,754 [DEBUG] board coords: [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7)]
2025-04-11 17:13:49,754 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 17:13:49,754 [DEBUG] check_window_intermediate_custom: empty_cells=[(1, 1), (2, 2)]
2025-04-11 17:13:49,754 [DEBUG] check_window_intermediate_custom (only one inserted(2, 2)): For L=7, window [0 0 2 2 2 2 2] with coords [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7)] triggers candidate.
2025-04-11 17:13:49,754 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8)] triggers candidate.
2025-04-11 17:13:49,754 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 17:13:49,755 [DEBUG] board coords: [(5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)]
2025-04-11 17:13:49,755 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 17:13:49,755 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 8), (11, 11)]
2025-04-11 17:13:49,755 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 0 2 2 0] with coords [(5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)] triggers candidate.
2025-04-11 17:13:49,758 [INFO] Final candidates: [(8, 8), (11, 11), (2, 2)]
2025-04-11 17:13:49,758 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 11), (2, 2)), ((8, 8), (2, 2)), ((8, 8), (11, 11))]
2025-04-11 17:13:49,758 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(11)), (np.int64(6), np.int64(3)))
2025-04-11 17:13:49,758 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:49,900 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:49,900 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:13:49,909 [INFO] Final candidates: []
2025-04-11 17:13:49,909 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:49,914 [DEBUG] board coords: [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)]
2025-04-11 17:13:49,914 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 17:13:49,914 [DEBUG] check_window_intermediate_custom: empty_cells=[(1, 1), (2, 2)]
2025-04-11 17:13:49,914 [DEBUG] check_window_intermediate_custom (only one inserted(2, 2)): For L=6, window [0 0 2 2 2 2] with coords [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)] triggers candidate.
2025-04-11 17:13:49,914 [DEBUG] board coords: [(6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)]
2025-04-11 17:13:49,914 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 17:13:49,914 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 8), (11, 11)]
2025-04-11 17:13:49,914 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)] triggers candidate.
2025-04-11 17:13:49,915 [DEBUG] board coords: [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7)]
2025-04-11 17:13:49,915 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 17:13:49,915 [DEBUG] check_window_intermediate_custom: empty_cells=[(1, 1), (2, 2)]
2025-04-11 17:13:49,915 [DEBUG] check_window_intermediate_custom (only one inserted(2, 2)): For L=7, window [0 0 2 2 2 2 2] with coords [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7)] triggers candidate.
2025-04-11 17:13:49,915 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8)] triggers candidate.
2025-04-11 17:13:49,915 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 17:13:49,916 [DEBUG] board coords: [(5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)]
2025-04-11 17:13:49,916 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 17:13:49,916 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 8), (11, 11)]
2025-04-11 17:13:49,916 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 0 2 2 0] with coords [(5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)] triggers candidate.
2025-04-11 17:13:49,918 [INFO] Final candidates: [(8, 8), (11, 11), (2, 2)]
2025-04-11 17:13:49,918 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 11), (2, 2)), ((8, 8), (2, 2)), ((8, 8), (11, 11))]
2025-04-11 17:13:49,918 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(4), np.int64(2)), (np.int64(10), np.int64(16)))
2025-04-11 17:13:49,919 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:50,022 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:50,022 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:13:50,036 [INFO] Final candidates: []
2025-04-11 17:13:50,036 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:50,041 [DEBUG] board coords: [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)]
2025-04-11 17:13:50,041 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 17:13:50,041 [DEBUG] check_window_intermediate_custom: empty_cells=[(1, 1), (2, 2)]
2025-04-11 17:13:50,041 [DEBUG] check_window_intermediate_custom (only one inserted(2, 2)): For L=6, window [0 0 2 2 2 2] with coords [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)] triggers candidate.
2025-04-11 17:13:50,042 [DEBUG] board coords: [(6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)]
2025-04-11 17:13:50,042 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 17:13:50,042 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 8), (11, 11)]
2025-04-11 17:13:50,042 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)] triggers candidate.
2025-04-11 17:13:50,042 [DEBUG] board coords: [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7)]
2025-04-11 17:13:50,042 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 17:13:50,042 [DEBUG] check_window_intermediate_custom: empty_cells=[(1, 1), (2, 2)]
2025-04-11 17:13:50,042 [DEBUG] check_window_intermediate_custom (only one inserted(2, 2)): For L=7, window [0 0 2 2 2 2 2] with coords [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7)] triggers candidate.
2025-04-11 17:13:50,043 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8)] triggers candidate.
2025-04-11 17:13:50,043 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 17:13:50,043 [DEBUG] board coords: [(5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)]
2025-04-11 17:13:50,043 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 17:13:50,043 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 8), (11, 11)]
2025-04-11 17:13:50,043 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 0 2 2 0] with coords [(5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)] triggers candidate.
2025-04-11 17:13:50,046 [INFO] Final candidates: [(8, 8), (11, 11), (2, 2)]
2025-04-11 17:13:50,046 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 11), (2, 2)), ((8, 8), (2, 2)), ((8, 8), (11, 11))]
2025-04-11 17:13:50,046 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(7)), (np.int64(12), np.int64(8)))
2025-04-11 17:13:50,046 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:50,053 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:50,053 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:13:50,053 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:13:50,053 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:50,053 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:50,053 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:13:50,053 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:13:50,053 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:50,053 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:50,053 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:13:50,062 [INFO] Final candidates: []
2025-04-11 17:13:50,062 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:50,067 [DEBUG] board coords: [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)]
2025-04-11 17:13:50,067 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 17:13:50,067 [DEBUG] check_window_intermediate_custom: empty_cells=[(1, 1), (2, 2)]
2025-04-11 17:13:50,067 [DEBUG] check_window_intermediate_custom (only one inserted(2, 2)): For L=6, window [0 0 2 2 2 2] with coords [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)] triggers candidate.
2025-04-11 17:13:50,067 [DEBUG] board coords: [(6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)]
2025-04-11 17:13:50,067 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 17:13:50,067 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 8), (11, 11)]
2025-04-11 17:13:50,067 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)] triggers candidate.
2025-04-11 17:13:50,068 [DEBUG] board coords: [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7)]
2025-04-11 17:13:50,068 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 17:13:50,068 [DEBUG] check_window_intermediate_custom: empty_cells=[(1, 1), (2, 2)]
2025-04-11 17:13:50,068 [DEBUG] check_window_intermediate_custom (only one inserted(2, 2)): For L=7, window [0 0 2 2 2 2 2] with coords [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7)] triggers candidate.
2025-04-11 17:13:50,068 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8)] triggers candidate.
2025-04-11 17:13:50,068 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 17:13:50,069 [DEBUG] board coords: [(5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)]
2025-04-11 17:13:50,069 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 17:13:50,069 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 8), (11, 11)]
2025-04-11 17:13:50,069 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 0 2 2 0] with coords [(5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)] triggers candidate.
2025-04-11 17:13:50,071 [INFO] Final candidates: [(8, 8), (11, 11), (2, 2)]
2025-04-11 17:13:50,071 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 11), (2, 2)), ((8, 8), (2, 2)), ((8, 8), (11, 11))]
2025-04-11 17:13:50,071 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(2)), (np.int64(2), np.int64(3)))
2025-04-11 17:13:50,072 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:50,268 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:50,268 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:13:50,268 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:13:50,268 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:50,268 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:50,268 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:13:50,268 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:13:50,268 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:50,268 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:50,268 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:13:50,277 [INFO] Final candidates: []
2025-04-11 17:13:50,277 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:50,282 [DEBUG] board coords: [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)]
2025-04-11 17:13:50,282 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 17:13:50,282 [DEBUG] check_window_intermediate_custom: empty_cells=[(1, 1), (2, 2)]
2025-04-11 17:13:50,282 [DEBUG] check_window_intermediate_custom (only one inserted(2, 2)): For L=6, window [0 0 2 2 2 2] with coords [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)] triggers candidate.
2025-04-11 17:13:50,282 [DEBUG] board coords: [(6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)]
2025-04-11 17:13:50,282 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 17:13:50,282 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 8), (11, 11)]
2025-04-11 17:13:50,282 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)] triggers candidate.
2025-04-11 17:13:50,283 [DEBUG] board coords: [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7)]
2025-04-11 17:13:50,283 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 17:13:50,283 [DEBUG] check_window_intermediate_custom: empty_cells=[(1, 1), (2, 2)]
2025-04-11 17:13:50,283 [DEBUG] check_window_intermediate_custom (only one inserted(2, 2)): For L=7, window [0 0 2 2 2 2 2] with coords [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7)] triggers candidate.
2025-04-11 17:13:50,283 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8)] triggers candidate.
2025-04-11 17:13:50,283 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 17:13:50,283 [DEBUG] board coords: [(5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)]
2025-04-11 17:13:50,283 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 17:13:50,283 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 8), (11, 11)]
2025-04-11 17:13:50,283 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 0 2 2 0] with coords [(5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)] triggers candidate.
2025-04-11 17:13:50,286 [INFO] Final candidates: [(8, 8), (11, 11), (2, 2)]
2025-04-11 17:13:50,286 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 11), (2, 2)), ((8, 8), (2, 2)), ((8, 8), (11, 11))]
2025-04-11 17:13:50,286 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(3), np.int64(1)), (np.int64(5), np.int64(11)))
2025-04-11 17:13:50,287 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:50,476 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:50,476 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:13:50,476 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:13:50,476 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:50,476 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:50,476 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:13:50,476 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:13:50,476 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:50,477 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:50,477 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:13:50,485 [INFO] Final candidates: []
2025-04-11 17:13:50,485 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:50,490 [DEBUG] board coords: [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)]
2025-04-11 17:13:50,490 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 17:13:50,490 [DEBUG] check_window_intermediate_custom: empty_cells=[(1, 1), (2, 2)]
2025-04-11 17:13:50,490 [DEBUG] check_window_intermediate_custom (only one inserted(2, 2)): For L=6, window [0 0 2 2 2 2] with coords [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)] triggers candidate.
2025-04-11 17:13:50,491 [DEBUG] board coords: [(6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)]
2025-04-11 17:13:50,491 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 17:13:50,491 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 8), (11, 11)]
2025-04-11 17:13:50,491 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)] triggers candidate.
2025-04-11 17:13:50,491 [DEBUG] board coords: [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7)]
2025-04-11 17:13:50,491 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 17:13:50,491 [DEBUG] check_window_intermediate_custom: empty_cells=[(1, 1), (2, 2)]
2025-04-11 17:13:50,491 [DEBUG] check_window_intermediate_custom (only one inserted(2, 2)): For L=7, window [0 0 2 2 2 2 2] with coords [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7)] triggers candidate.
2025-04-11 17:13:50,492 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8)] triggers candidate.
2025-04-11 17:13:50,492 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 17:13:50,492 [DEBUG] board coords: [(5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)]
2025-04-11 17:13:50,492 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 17:13:50,492 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 8), (11, 11)]
2025-04-11 17:13:50,492 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 0 2 2 0] with coords [(5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)] triggers candidate.
2025-04-11 17:13:50,495 [INFO] Final candidates: [(8, 8), (11, 11), (2, 2)]
2025-04-11 17:13:50,495 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 11), (2, 2)), ((8, 8), (2, 2)), ((8, 8), (11, 11))]
2025-04-11 17:13:50,495 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(7)), (np.int64(12), np.int64(8)))
2025-04-11 17:13:50,495 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:50,665 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:50,666 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:13:50,674 [INFO] Final candidates: []
2025-04-11 17:13:50,674 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:50,679 [DEBUG] board coords: [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)]
2025-04-11 17:13:50,679 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 17:13:50,679 [DEBUG] check_window_intermediate_custom: empty_cells=[(1, 1), (2, 2)]
2025-04-11 17:13:50,679 [DEBUG] check_window_intermediate_custom (only one inserted(2, 2)): For L=6, window [0 0 2 2 2 2] with coords [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)] triggers candidate.
2025-04-11 17:13:50,680 [DEBUG] board coords: [(6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)]
2025-04-11 17:13:50,680 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 17:13:50,680 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 8), (11, 11)]
2025-04-11 17:13:50,680 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)] triggers candidate.
2025-04-11 17:13:50,681 [DEBUG] board coords: [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7)]
2025-04-11 17:13:50,681 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 17:13:50,681 [DEBUG] check_window_intermediate_custom: empty_cells=[(1, 1), (2, 2)]
2025-04-11 17:13:50,681 [DEBUG] check_window_intermediate_custom (only one inserted(2, 2)): For L=7, window [0 0 2 2 2 2 2] with coords [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7)] triggers candidate.
2025-04-11 17:13:50,681 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8)] triggers candidate.
2025-04-11 17:13:50,681 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 17:13:50,682 [DEBUG] board coords: [(5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)]
2025-04-11 17:13:50,682 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 17:13:50,682 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 8), (11, 11)]
2025-04-11 17:13:50,682 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 0 2 2 0] with coords [(5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)] triggers candidate.
2025-04-11 17:13:50,685 [INFO] Final candidates: [(8, 8), (11, 11), (2, 2)]
2025-04-11 17:13:50,685 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 11), (2, 2)), ((8, 8), (2, 2)), ((8, 8), (11, 11))]
2025-04-11 17:13:50,685 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(12)), (np.int64(5), np.int64(3)))
2025-04-11 17:13:50,686 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:50,686 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:50,686 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:13:50,686 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:13:50,686 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:50,686 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:50,686 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:13:50,686 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:13:50,686 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:50,686 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:50,687 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:13:50,697 [INFO] Final candidates: []
2025-04-11 17:13:50,697 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:50,703 [DEBUG] board coords: [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)]
2025-04-11 17:13:50,703 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 17:13:50,703 [DEBUG] check_window_intermediate_custom: empty_cells=[(1, 1), (2, 2)]
2025-04-11 17:13:50,703 [DEBUG] check_window_intermediate_custom (only one inserted(2, 2)): For L=6, window [0 0 2 2 2 2] with coords [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)] triggers candidate.
2025-04-11 17:13:50,704 [DEBUG] board coords: [(6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)]
2025-04-11 17:13:50,704 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 17:13:50,704 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 8), (11, 11)]
2025-04-11 17:13:50,704 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)] triggers candidate.
2025-04-11 17:13:50,704 [DEBUG] board coords: [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7)]
2025-04-11 17:13:50,704 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 17:13:50,704 [DEBUG] check_window_intermediate_custom: empty_cells=[(1, 1), (2, 2)]
2025-04-11 17:13:50,705 [DEBUG] check_window_intermediate_custom (only one inserted(2, 2)): For L=7, window [0 0 2 2 2 2 2] with coords [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7)] triggers candidate.
2025-04-11 17:13:50,705 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8)] triggers candidate.
2025-04-11 17:13:50,705 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 17:13:50,705 [DEBUG] board coords: [(5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)]
2025-04-11 17:13:50,705 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 17:13:50,705 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 8), (11, 11)]
2025-04-11 17:13:50,705 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 0 2 2 0] with coords [(5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)] triggers candidate.
2025-04-11 17:13:50,710 [INFO] Final candidates: [(8, 8), (11, 11), (2, 2)]
2025-04-11 17:13:50,710 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 11), (2, 2)), ((8, 8), (2, 2)), ((8, 8), (11, 11))]
2025-04-11 17:13:50,711 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(13)), (np.int64(10), np.int64(8)))
2025-04-11 17:13:50,712 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:50,793 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:50,793 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:13:50,793 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:13:50,793 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:50,793 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:50,793 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:13:50,793 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:13:50,793 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:50,793 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:50,793 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:13:50,802 [INFO] Final candidates: []
2025-04-11 17:13:50,802 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:50,807 [DEBUG] board coords: [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)]
2025-04-11 17:13:50,807 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 17:13:50,807 [DEBUG] check_window_intermediate_custom: empty_cells=[(1, 1), (2, 2)]
2025-04-11 17:13:50,807 [DEBUG] check_window_intermediate_custom (only one inserted(2, 2)): For L=6, window [0 0 2 2 2 2] with coords [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)] triggers candidate.
2025-04-11 17:13:50,807 [DEBUG] board coords: [(6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)]
2025-04-11 17:13:50,807 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 17:13:50,807 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 8), (11, 11)]
2025-04-11 17:13:50,808 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)] triggers candidate.
2025-04-11 17:13:50,808 [DEBUG] board coords: [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7)]
2025-04-11 17:13:50,808 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 17:13:50,808 [DEBUG] check_window_intermediate_custom: empty_cells=[(1, 1), (2, 2)]
2025-04-11 17:13:50,808 [DEBUG] check_window_intermediate_custom (only one inserted(2, 2)): For L=7, window [0 0 2 2 2 2 2] with coords [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7)] triggers candidate.
2025-04-11 17:13:50,808 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8)] triggers candidate.
2025-04-11 17:13:50,808 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 17:13:50,809 [DEBUG] board coords: [(5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)]
2025-04-11 17:13:50,809 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 17:13:50,809 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 8), (11, 11)]
2025-04-11 17:13:50,809 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 0 2 2 0] with coords [(5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)] triggers candidate.
2025-04-11 17:13:50,811 [INFO] Final candidates: [(8, 8), (11, 11), (2, 2)]
2025-04-11 17:13:50,811 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 11), (2, 2)), ((8, 8), (2, 2)), ((8, 8), (11, 11))]
2025-04-11 17:13:50,812 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(7)), (np.int64(11), np.int64(8)))
2025-04-11 17:13:50,812 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:50,975 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:50,975 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:13:50,975 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:13:50,975 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:50,975 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:50,975 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:13:50,975 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:13:50,975 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:50,975 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:50,975 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:13:50,984 [INFO] Final candidates: []
2025-04-11 17:13:50,984 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:50,989 [DEBUG] board coords: [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)]
2025-04-11 17:13:50,989 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 17:13:50,989 [DEBUG] check_window_intermediate_custom: empty_cells=[(1, 1), (2, 2)]
2025-04-11 17:13:50,989 [DEBUG] check_window_intermediate_custom (only one inserted(2, 2)): For L=6, window [0 0 2 2 2 2] with coords [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)] triggers candidate.
2025-04-11 17:13:50,989 [DEBUG] board coords: [(6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)]
2025-04-11 17:13:50,989 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 17:13:50,989 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 8), (11, 11)]
2025-04-11 17:13:50,989 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)] triggers candidate.
2025-04-11 17:13:50,990 [DEBUG] board coords: [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7)]
2025-04-11 17:13:50,990 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 17:13:50,990 [DEBUG] check_window_intermediate_custom: empty_cells=[(1, 1), (2, 2)]
2025-04-11 17:13:50,990 [DEBUG] check_window_intermediate_custom (only one inserted(2, 2)): For L=7, window [0 0 2 2 2 2 2] with coords [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7)] triggers candidate.
2025-04-11 17:13:50,990 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8)] triggers candidate.
2025-04-11 17:13:50,990 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 17:13:50,990 [DEBUG] board coords: [(5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)]
2025-04-11 17:13:50,990 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 17:13:50,990 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 8), (11, 11)]
2025-04-11 17:13:50,990 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 0 2 2 0] with coords [(5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)] triggers candidate.
2025-04-11 17:13:50,993 [INFO] Final candidates: [(8, 8), (11, 11), (2, 2)]
2025-04-11 17:13:50,993 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 11), (2, 2)), ((8, 8), (2, 2)), ((8, 8), (11, 11))]
2025-04-11 17:13:50,993 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(9)), (np.int64(9), np.int64(16)))
2025-04-11 17:13:50,994 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:50,995 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:50,996 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:13:50,996 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:13:50,996 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:50,996 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:50,996 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:13:50,996 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:13:50,996 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:50,996 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:50,996 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:13:51,004 [INFO] Final candidates: []
2025-04-11 17:13:51,004 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:51,009 [DEBUG] board coords: [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)]
2025-04-11 17:13:51,009 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 17:13:51,009 [DEBUG] check_window_intermediate_custom: empty_cells=[(1, 1), (2, 2)]
2025-04-11 17:13:51,009 [DEBUG] check_window_intermediate_custom (only one inserted(2, 2)): For L=6, window [0 0 2 2 2 2] with coords [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)] triggers candidate.
2025-04-11 17:13:51,010 [DEBUG] board coords: [(6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)]
2025-04-11 17:13:51,010 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 17:13:51,010 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 8), (11, 11)]
2025-04-11 17:13:51,010 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)] triggers candidate.
2025-04-11 17:13:51,010 [DEBUG] board coords: [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7)]
2025-04-11 17:13:51,010 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 17:13:51,010 [DEBUG] check_window_intermediate_custom: empty_cells=[(1, 1), (2, 2)]
2025-04-11 17:13:51,010 [DEBUG] check_window_intermediate_custom (only one inserted(2, 2)): For L=7, window [0 0 2 2 2 2 2] with coords [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7)] triggers candidate.
2025-04-11 17:13:51,011 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8)] triggers candidate.
2025-04-11 17:13:51,011 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 17:13:51,011 [DEBUG] board coords: [(5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)]
2025-04-11 17:13:51,011 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 17:13:51,011 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 8), (11, 11)]
2025-04-11 17:13:51,011 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 0 2 2 0] with coords [(5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)] triggers candidate.
2025-04-11 17:13:51,013 [INFO] Final candidates: [(8, 8), (11, 11), (2, 2)]
2025-04-11 17:13:51,013 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 11), (2, 2)), ((8, 8), (2, 2)), ((8, 8), (11, 11))]
2025-04-11 17:13:51,014 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(4), np.int64(3)), (np.int64(3), np.int64(5)))
2025-04-11 17:13:51,014 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:51,094 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:51,095 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:13:51,095 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:13:51,095 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:51,095 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:51,095 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:13:51,095 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:13:51,095 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:51,095 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:51,095 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:13:51,104 [INFO] Final candidates: []
2025-04-11 17:13:51,104 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:51,110 [DEBUG] board coords: [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)]
2025-04-11 17:13:51,110 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 17:13:51,110 [DEBUG] check_window_intermediate_custom: empty_cells=[(1, 1), (2, 2)]
2025-04-11 17:13:51,110 [DEBUG] check_window_intermediate_custom (only one inserted(2, 2)): For L=6, window [0 0 2 2 2 2] with coords [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)] triggers candidate.
2025-04-11 17:13:51,110 [DEBUG] board coords: [(6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)]
2025-04-11 17:13:51,110 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 17:13:51,110 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 8), (11, 11)]
2025-04-11 17:13:51,110 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)] triggers candidate.
2025-04-11 17:13:51,111 [DEBUG] board coords: [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7)]
2025-04-11 17:13:51,111 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 17:13:51,111 [DEBUG] check_window_intermediate_custom: empty_cells=[(1, 1), (2, 2)]
2025-04-11 17:13:51,111 [DEBUG] check_window_intermediate_custom (only one inserted(2, 2)): For L=7, window [0 0 2 2 2 2 2] with coords [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7)] triggers candidate.
2025-04-11 17:13:51,111 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8)] triggers candidate.
2025-04-11 17:13:51,111 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 17:13:51,111 [DEBUG] board coords: [(5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)]
2025-04-11 17:13:51,111 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 17:13:51,111 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 8), (11, 11)]
2025-04-11 17:13:51,111 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 0 2 2 0] with coords [(5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)] triggers candidate.
2025-04-11 17:13:51,114 [INFO] Final candidates: [(8, 8), (11, 11), (2, 2)]
2025-04-11 17:13:51,114 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 11), (2, 2)), ((8, 8), (2, 2)), ((8, 8), (11, 11))]
2025-04-11 17:13:51,114 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(18)), (np.int64(10), np.int64(12)))
2025-04-11 17:13:51,115 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:51,124 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:51,125 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:13:51,125 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:13:51,125 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:51,125 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:51,125 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:13:51,125 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 17:13:51,125 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:51,125 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:51,125 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:13:51,133 [INFO] Final candidates: []
2025-04-11 17:13:51,133 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:51,138 [DEBUG] board coords: [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)]
2025-04-11 17:13:51,138 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 17:13:51,138 [DEBUG] check_window_intermediate_custom: empty_cells=[(1, 1), (2, 2)]
2025-04-11 17:13:51,138 [DEBUG] check_window_intermediate_custom (only one inserted(2, 2)): For L=6, window [0 0 2 2 2 2] with coords [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)] triggers candidate.
2025-04-11 17:13:51,139 [DEBUG] board coords: [(6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)]
2025-04-11 17:13:51,139 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 17:13:51,139 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 8), (11, 11)]
2025-04-11 17:13:51,140 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)] triggers candidate.
2025-04-11 17:13:51,141 [DEBUG] board coords: [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7)]
2025-04-11 17:13:51,141 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 17:13:51,141 [DEBUG] check_window_intermediate_custom: empty_cells=[(1, 1), (2, 2)]
2025-04-11 17:13:51,141 [DEBUG] check_window_intermediate_custom (only one inserted(2, 2)): For L=7, window [0 0 2 2 2 2 2] with coords [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7)] triggers candidate.
2025-04-11 17:13:51,142 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8)] triggers candidate.
2025-04-11 17:13:51,142 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 17:13:51,142 [DEBUG] board coords: [(5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)]
2025-04-11 17:13:51,142 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 17:13:51,142 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 8), (11, 11)]
2025-04-11 17:13:51,142 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 0 2 2 0] with coords [(5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)] triggers candidate.
2025-04-11 17:13:51,145 [INFO] Final candidates: [(8, 8), (11, 11), (2, 2)]
2025-04-11 17:13:51,145 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 11), (2, 2)), ((8, 8), (2, 2)), ((8, 8), (11, 11))]
2025-04-11 17:13:51,145 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(9)), (np.int64(6), np.int64(10)))
2025-04-11 17:13:51,145 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:51,321 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 17:13:51,321 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 17:13:51,330 [INFO] Final candidates: []
2025-04-11 17:13:51,330 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 17:13:51,337 [DEBUG] board coords: [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)]
2025-04-11 17:13:51,337 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 17:13:51,337 [DEBUG] check_window_intermediate_custom: empty_cells=[(1, 1), (2, 2)]
2025-04-11 17:13:51,337 [DEBUG] check_window_intermediate_custom (only one inserted(2, 2)): For L=6, window [0 0 2 2 2 2] with coords [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)] triggers candidate.
2025-04-11 17:13:51,337 [DEBUG] board coords: [(6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)]
2025-04-11 17:13:51,337 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 17:13:51,338 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 8), (11, 11)]
2025-04-11 17:13:51,338 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)] triggers candidate.
2025-04-11 17:13:51,338 [DEBUG] board coords: [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7)]
2025-04-11 17:13:51,338 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 17:13:51,338 [DEBUG] check_window_intermediate_custom: empty_cells=[(1, 1), (2, 2)]
2025-04-11 17:13:51,338 [DEBUG] check_window_intermediate_custom (only one inserted(2, 2)): For L=7, window [0 0 2 2 2 2 2] with coords [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7)] triggers candidate.
2025-04-11 17:13:51,338 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8)] triggers candidate.
2025-04-11 17:13:51,338 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 17:13:51,339 [DEBUG] board coords: [(5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)]
2025-04-11 17:13:51,339 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 17:13:51,339 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 8), (11, 11)]
2025-04-11 17:13:51,339 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 0 2 2 0] with coords [(5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)] triggers candidate.
2025-04-11 17:13:51,342 [INFO] Final candidates: [(8, 8), (11, 11), (2, 2)]
2025-04-11 17:13:51,342 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 11), (2, 2)), ((8, 8), (2, 2)), ((8, 8), (11, 11))]
2025-04-11 17:13:51,342 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(11)), (np.int64(5), np.int64(2)))
2025-04-11 17:13:51,343 [INFO] Default policy: Starting random playout.
2025-04-11 17:13:51,468 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 17:13:51,469 [INFO] MCTS: Search finished. Best move selected with 20 visits.
2025-04-11 17:13:51,469 [INFO] MCTS (defense candidates) selected move: D4,L11
2025-04-11 17:28:04,897 [INFO] Game terminated.
