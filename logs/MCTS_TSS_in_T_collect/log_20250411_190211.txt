2025-04-11 19:02:36,470 [INFO] Starting pre-MCTS candidate collection.
2025-04-11 19:02:36,478 [INFO] Final candidates: []
2025-04-11 19:02:36,478 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:36,486 [INFO] Final candidates: []
2025-04-11 19:02:36,486 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:36,486 [INFO] No candidate found in Phase 1 or 2; using full legal moves for MCTS.
2025-04-11 19:02:36,487 [INFO] MCTS: Starting search for 100 iterations.
2025-04-11 19:02:36,487 [DEBUG] Tree_policy iteration 1: Expanding move (14, 8)
2025-04-11 19:02:36,495 [INFO] Final candidates: []
2025-04-11 19:02:36,495 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:36,505 [INFO] Final candidates: []
2025-04-11 19:02:36,505 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:36,506 [DEBUG] MCTS iteration 0: reached a node with 0 visits.
2025-04-11 19:02:36,506 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:36,530 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:36,530 [DEBUG] Tree_policy iteration 1: Expanding move (1, 1)
2025-04-11 19:02:36,538 [INFO] Final candidates: []
2025-04-11 19:02:36,538 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:36,546 [INFO] Final candidates: []
2025-04-11 19:02:36,546 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:36,546 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:36,622 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:36,622 [DEBUG] Tree_policy iteration 1: Expanding move (11, 6)
2025-04-11 19:02:36,630 [INFO] Final candidates: []
2025-04-11 19:02:36,630 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:36,638 [INFO] Final candidates: []
2025-04-11 19:02:36,638 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:36,638 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:36,797 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:36,798 [DEBUG] Tree_policy iteration 1: Expanding move (6, 9)
2025-04-11 19:02:36,806 [INFO] Final candidates: []
2025-04-11 19:02:36,806 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:36,814 [INFO] Final candidates: []
2025-04-11 19:02:36,814 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:36,814 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:36,834 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:36,834 [DEBUG] Tree_policy iteration 1: Expanding move (4, 13)
2025-04-11 19:02:36,843 [INFO] Final candidates: []
2025-04-11 19:02:36,843 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:36,851 [INFO] Final candidates: []
2025-04-11 19:02:36,851 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:36,851 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:36,892 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:36,893 [DEBUG] Tree_policy iteration 1: Expanding move (4, 14)
2025-04-11 19:02:36,901 [INFO] Final candidates: []
2025-04-11 19:02:36,901 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:36,909 [INFO] Final candidates: []
2025-04-11 19:02:36,909 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:36,909 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:36,955 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:36,955 [DEBUG] Tree_policy iteration 1: Expanding move (3, 6)
2025-04-11 19:02:36,963 [INFO] Final candidates: []
2025-04-11 19:02:36,963 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:36,971 [INFO] Final candidates: []
2025-04-11 19:02:36,971 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:36,971 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:37,168 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:37,168 [DEBUG] Tree_policy iteration 1: Expanding move (18, 2)
2025-04-11 19:02:37,177 [INFO] Final candidates: []
2025-04-11 19:02:37,177 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:37,186 [INFO] Final candidates: []
2025-04-11 19:02:37,186 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:37,186 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:37,226 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:37,226 [DEBUG] Tree_policy iteration 1: Expanding move (17, 14)
2025-04-11 19:02:37,235 [INFO] Final candidates: []
2025-04-11 19:02:37,235 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:37,243 [INFO] Final candidates: []
2025-04-11 19:02:37,243 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:37,243 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:37,278 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:37,278 [DEBUG] Tree_policy iteration 1: Expanding move (18, 7)
2025-04-11 19:02:37,287 [INFO] Final candidates: []
2025-04-11 19:02:37,287 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:37,295 [INFO] Final candidates: []
2025-04-11 19:02:37,295 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:37,295 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:37,309 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:37,309 [DEBUG] Tree_policy iteration 1: Expanding move (18, 14)
2025-04-11 19:02:37,318 [INFO] Final candidates: []
2025-04-11 19:02:37,318 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:37,327 [INFO] Final candidates: []
2025-04-11 19:02:37,327 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:37,327 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:37,346 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:37,346 [DEBUG] Tree_policy iteration 1: Expanding move (5, 8)
2025-04-11 19:02:37,355 [INFO] Final candidates: []
2025-04-11 19:02:37,355 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:37,366 [INFO] Final candidates: []
2025-04-11 19:02:37,366 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:37,366 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:37,443 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:37,444 [DEBUG] Tree_policy iteration 1: Expanding move (3, 13)
2025-04-11 19:02:37,452 [INFO] Final candidates: []
2025-04-11 19:02:37,452 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:37,460 [INFO] Final candidates: []
2025-04-11 19:02:37,460 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:37,460 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:37,486 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:37,486 [DEBUG] Tree_policy iteration 1: Expanding move (18, 18)
2025-04-11 19:02:37,494 [INFO] Final candidates: []
2025-04-11 19:02:37,494 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:37,502 [INFO] Final candidates: []
2025-04-11 19:02:37,502 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:37,503 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:37,523 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:37,523 [DEBUG] Tree_policy iteration 1: Expanding move (4, 5)
2025-04-11 19:02:37,532 [INFO] Final candidates: []
2025-04-11 19:02:37,532 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:37,540 [INFO] Final candidates: []
2025-04-11 19:02:37,540 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:37,540 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:37,606 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:37,607 [DEBUG] Tree_policy iteration 1: Expanding move (3, 4)
2025-04-11 19:02:37,615 [INFO] Final candidates: []
2025-04-11 19:02:37,615 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:37,623 [INFO] Final candidates: []
2025-04-11 19:02:37,623 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:37,623 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:37,664 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:37,664 [DEBUG] Tree_policy iteration 1: Expanding move (7, 3)
2025-04-11 19:02:37,672 [INFO] Final candidates: []
2025-04-11 19:02:37,672 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:37,680 [INFO] Final candidates: []
2025-04-11 19:02:37,680 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:37,680 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:37,759 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:37,759 [DEBUG] Tree_policy iteration 1: Expanding move (10, 4)
2025-04-11 19:02:37,767 [INFO] Final candidates: []
2025-04-11 19:02:37,767 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:37,776 [INFO] Final candidates: []
2025-04-11 19:02:37,776 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:37,776 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:37,834 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:37,834 [DEBUG] Tree_policy iteration 1: Expanding move (7, 0)
2025-04-11 19:02:37,842 [INFO] Final candidates: []
2025-04-11 19:02:37,842 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:37,850 [INFO] Final candidates: []
2025-04-11 19:02:37,850 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:37,850 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:37,913 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:37,914 [DEBUG] Tree_policy iteration 1: Expanding move (12, 15)
2025-04-11 19:02:37,925 [INFO] Final candidates: []
2025-04-11 19:02:37,925 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:37,934 [INFO] Final candidates: []
2025-04-11 19:02:37,934 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:37,934 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:37,979 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:37,979 [DEBUG] Tree_policy iteration 1: Expanding move (5, 13)
2025-04-11 19:02:37,987 [INFO] Final candidates: []
2025-04-11 19:02:37,987 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:37,995 [INFO] Final candidates: []
2025-04-11 19:02:37,995 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:37,996 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:38,160 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:38,160 [DEBUG] Tree_policy iteration 1: Expanding move (3, 15)
2025-04-11 19:02:38,169 [INFO] Final candidates: []
2025-04-11 19:02:38,169 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:38,178 [INFO] Final candidates: []
2025-04-11 19:02:38,178 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:38,178 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:38,196 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:38,196 [DEBUG] Tree_policy iteration 1: Expanding move (3, 11)
2025-04-11 19:02:38,205 [INFO] Final candidates: []
2025-04-11 19:02:38,205 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:38,214 [INFO] Final candidates: []
2025-04-11 19:02:38,214 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:38,214 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:38,281 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:38,281 [DEBUG] Tree_policy iteration 1: Expanding move (11, 15)
2025-04-11 19:02:38,289 [INFO] Final candidates: []
2025-04-11 19:02:38,289 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:38,298 [INFO] Final candidates: []
2025-04-11 19:02:38,298 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:38,298 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:38,350 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:38,350 [DEBUG] Tree_policy iteration 1: Expanding move (15, 13)
2025-04-11 19:02:38,358 [INFO] Final candidates: []
2025-04-11 19:02:38,358 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:38,366 [INFO] Final candidates: []
2025-04-11 19:02:38,366 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:38,366 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:38,400 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:38,400 [DEBUG] Tree_policy iteration 1: Expanding move (15, 17)
2025-04-11 19:02:38,409 [INFO] Final candidates: []
2025-04-11 19:02:38,409 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:38,417 [INFO] Final candidates: []
2025-04-11 19:02:38,417 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:38,417 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:38,566 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:38,566 [DEBUG] Tree_policy iteration 1: Expanding move (2, 9)
2025-04-11 19:02:38,574 [INFO] Final candidates: []
2025-04-11 19:02:38,574 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:38,582 [INFO] Final candidates: []
2025-04-11 19:02:38,582 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:38,582 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:38,615 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:38,615 [DEBUG] Tree_policy iteration 1: Expanding move (8, 10)
2025-04-11 19:02:38,623 [INFO] Final candidates: []
2025-04-11 19:02:38,623 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:38,631 [INFO] Final candidates: []
2025-04-11 19:02:38,631 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:38,632 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:38,831 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:38,831 [DEBUG] Tree_policy iteration 1: Expanding move (17, 10)
2025-04-11 19:02:38,839 [INFO] Final candidates: []
2025-04-11 19:02:38,839 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:38,847 [INFO] Final candidates: []
2025-04-11 19:02:38,847 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:38,848 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:38,948 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:38,949 [DEBUG] Tree_policy iteration 1: Expanding move (10, 6)
2025-04-11 19:02:38,957 [INFO] Final candidates: []
2025-04-11 19:02:38,957 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:38,965 [INFO] Final candidates: []
2025-04-11 19:02:38,965 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:38,965 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:39,154 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:39,155 [DEBUG] Tree_policy iteration 1: Expanding move (3, 2)
2025-04-11 19:02:39,163 [INFO] Final candidates: []
2025-04-11 19:02:39,163 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:39,171 [INFO] Final candidates: []
2025-04-11 19:02:39,171 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:39,171 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:39,207 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:39,207 [DEBUG] Tree_policy iteration 1: Expanding move (14, 1)
2025-04-11 19:02:39,215 [INFO] Final candidates: []
2025-04-11 19:02:39,215 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:39,223 [INFO] Final candidates: []
2025-04-11 19:02:39,223 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:39,223 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:39,273 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:39,273 [DEBUG] Tree_policy iteration 1: Expanding move (4, 18)
2025-04-11 19:02:39,281 [INFO] Final candidates: []
2025-04-11 19:02:39,282 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:39,290 [INFO] Final candidates: []
2025-04-11 19:02:39,290 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:39,290 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:39,334 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:39,334 [DEBUG] Tree_policy iteration 1: Expanding move (15, 11)
2025-04-11 19:02:39,342 [INFO] Final candidates: []
2025-04-11 19:02:39,342 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:39,350 [INFO] Final candidates: []
2025-04-11 19:02:39,350 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:39,350 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:39,372 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:39,372 [DEBUG] Tree_policy iteration 1: Expanding move (18, 3)
2025-04-11 19:02:39,381 [INFO] Final candidates: []
2025-04-11 19:02:39,381 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:39,390 [INFO] Final candidates: []
2025-04-11 19:02:39,390 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:39,390 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:39,442 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:39,442 [DEBUG] Tree_policy iteration 1: Expanding move (6, 5)
2025-04-11 19:02:39,451 [INFO] Final candidates: []
2025-04-11 19:02:39,451 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:39,459 [INFO] Final candidates: []
2025-04-11 19:02:39,459 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:39,460 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:39,519 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:39,519 [DEBUG] Tree_policy iteration 1: Expanding move (13, 15)
2025-04-11 19:02:39,528 [INFO] Final candidates: []
2025-04-11 19:02:39,528 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:39,536 [INFO] Final candidates: []
2025-04-11 19:02:39,536 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:39,537 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:39,724 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:39,724 [DEBUG] Tree_policy iteration 1: Expanding move (5, 15)
2025-04-11 19:02:39,732 [INFO] Final candidates: []
2025-04-11 19:02:39,732 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:39,740 [INFO] Final candidates: []
2025-04-11 19:02:39,740 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:39,740 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:39,761 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:39,761 [DEBUG] Tree_policy iteration 1: Expanding move (14, 0)
2025-04-11 19:02:39,769 [INFO] Final candidates: []
2025-04-11 19:02:39,769 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:39,777 [INFO] Final candidates: []
2025-04-11 19:02:39,777 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:39,778 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:39,819 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:39,819 [DEBUG] Tree_policy iteration 1: Expanding move (18, 13)
2025-04-11 19:02:39,827 [INFO] Final candidates: []
2025-04-11 19:02:39,827 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:39,835 [INFO] Final candidates: []
2025-04-11 19:02:39,835 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:39,835 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:39,926 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:39,926 [DEBUG] Tree_policy iteration 1: Expanding move (10, 0)
2025-04-11 19:02:39,934 [INFO] Final candidates: []
2025-04-11 19:02:39,934 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:39,942 [INFO] Final candidates: []
2025-04-11 19:02:39,942 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:39,942 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:40,108 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:40,109 [DEBUG] Tree_policy iteration 1: Expanding move (6, 1)
2025-04-11 19:02:40,117 [INFO] Final candidates: []
2025-04-11 19:02:40,117 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:40,125 [INFO] Final candidates: []
2025-04-11 19:02:40,125 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:40,125 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:40,217 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:40,217 [DEBUG] Tree_policy iteration 1: Expanding move (9, 1)
2025-04-11 19:02:40,225 [INFO] Final candidates: []
2025-04-11 19:02:40,225 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:40,233 [INFO] Final candidates: []
2025-04-11 19:02:40,233 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:40,233 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:40,265 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:40,265 [DEBUG] Tree_policy iteration 1: Expanding move (13, 6)
2025-04-11 19:02:40,273 [INFO] Final candidates: []
2025-04-11 19:02:40,273 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:40,281 [INFO] Final candidates: []
2025-04-11 19:02:40,281 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:40,281 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:40,336 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:40,336 [DEBUG] Tree_policy iteration 1: Expanding move (14, 14)
2025-04-11 19:02:40,345 [INFO] Final candidates: []
2025-04-11 19:02:40,345 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:40,353 [INFO] Final candidates: []
2025-04-11 19:02:40,353 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:40,353 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:40,658 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:40,658 [DEBUG] Tree_policy iteration 1: Expanding move (3, 14)
2025-04-11 19:02:40,666 [INFO] Final candidates: []
2025-04-11 19:02:40,666 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:40,674 [INFO] Final candidates: []
2025-04-11 19:02:40,674 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:40,675 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:40,692 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:40,692 [DEBUG] Tree_policy iteration 1: Expanding move (4, 15)
2025-04-11 19:02:40,700 [INFO] Final candidates: []
2025-04-11 19:02:40,700 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:40,708 [INFO] Final candidates: []
2025-04-11 19:02:40,708 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:40,708 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:40,793 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:40,793 [DEBUG] Tree_policy iteration 1: Expanding move (1, 0)
2025-04-11 19:02:40,801 [INFO] Final candidates: []
2025-04-11 19:02:40,801 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:40,809 [INFO] Final candidates: []
2025-04-11 19:02:40,809 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:40,809 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:40,823 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:40,824 [DEBUG] Tree_policy iteration 1: Expanding move (1, 15)
2025-04-11 19:02:40,832 [INFO] Final candidates: []
2025-04-11 19:02:40,832 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:40,840 [INFO] Final candidates: []
2025-04-11 19:02:40,840 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:40,840 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:40,895 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:40,895 [DEBUG] Tree_policy iteration 1: Expanding move (12, 4)
2025-04-11 19:02:40,903 [INFO] Final candidates: []
2025-04-11 19:02:40,903 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:40,911 [INFO] Final candidates: []
2025-04-11 19:02:40,911 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:40,911 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:41,090 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:41,091 [DEBUG] Tree_policy iteration 1: Expanding move (16, 11)
2025-04-11 19:02:41,099 [INFO] Final candidates: []
2025-04-11 19:02:41,099 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:41,107 [INFO] Final candidates: []
2025-04-11 19:02:41,107 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:41,107 [DEBUG] MCTS iteration 50: reached a node with 0 visits.
2025-04-11 19:02:41,107 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:41,148 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:41,148 [DEBUG] Tree_policy iteration 1: Expanding move (0, 12)
2025-04-11 19:02:41,156 [INFO] Final candidates: []
2025-04-11 19:02:41,156 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:41,164 [INFO] Final candidates: []
2025-04-11 19:02:41,164 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:41,164 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:41,232 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:41,232 [DEBUG] Tree_policy iteration 1: Expanding move (11, 17)
2025-04-11 19:02:41,240 [INFO] Final candidates: []
2025-04-11 19:02:41,240 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:41,248 [INFO] Final candidates: []
2025-04-11 19:02:41,248 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:41,249 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:41,295 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:41,295 [DEBUG] Tree_policy iteration 1: Expanding move (8, 0)
2025-04-11 19:02:41,303 [INFO] Final candidates: []
2025-04-11 19:02:41,303 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:41,311 [INFO] Final candidates: []
2025-04-11 19:02:41,311 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:41,312 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:41,351 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:41,352 [DEBUG] Tree_policy iteration 1: Expanding move (15, 3)
2025-04-11 19:02:41,360 [INFO] Final candidates: []
2025-04-11 19:02:41,360 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:41,368 [INFO] Final candidates: []
2025-04-11 19:02:41,368 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:41,368 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:41,586 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:41,586 [DEBUG] Tree_policy iteration 1: Expanding move (11, 0)
2025-04-11 19:02:41,595 [INFO] Final candidates: []
2025-04-11 19:02:41,595 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:41,603 [INFO] Final candidates: []
2025-04-11 19:02:41,603 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:41,603 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:41,707 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:41,707 [DEBUG] Tree_policy iteration 1: Expanding move (12, 13)
2025-04-11 19:02:41,715 [INFO] Final candidates: []
2025-04-11 19:02:41,715 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:41,723 [INFO] Final candidates: []
2025-04-11 19:02:41,723 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:41,723 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:41,892 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:41,892 [DEBUG] Tree_policy iteration 1: Expanding move (13, 0)
2025-04-11 19:02:41,907 [INFO] Final candidates: []
2025-04-11 19:02:41,907 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:41,923 [INFO] Final candidates: []
2025-04-11 19:02:41,923 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:41,923 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:41,951 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:41,951 [DEBUG] Tree_policy iteration 1: Expanding move (12, 12)
2025-04-11 19:02:41,959 [INFO] Final candidates: []
2025-04-11 19:02:41,959 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:41,967 [INFO] Final candidates: []
2025-04-11 19:02:41,967 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:41,968 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:42,031 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:42,032 [DEBUG] Tree_policy iteration 1: Expanding move (0, 15)
2025-04-11 19:02:42,041 [INFO] Final candidates: []
2025-04-11 19:02:42,042 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:42,050 [INFO] Final candidates: []
2025-04-11 19:02:42,050 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:42,050 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:42,106 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:42,106 [DEBUG] Tree_policy iteration 1: Expanding move (10, 13)
2025-04-11 19:02:42,115 [INFO] Final candidates: []
2025-04-11 19:02:42,115 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:42,123 [INFO] Final candidates: []
2025-04-11 19:02:42,123 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:42,123 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:42,170 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:42,170 [DEBUG] Tree_policy iteration 1: Expanding move (7, 13)
2025-04-11 19:02:42,179 [INFO] Final candidates: []
2025-04-11 19:02:42,179 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:42,186 [INFO] Final candidates: []
2025-04-11 19:02:42,186 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:42,187 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:42,272 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:42,273 [DEBUG] Tree_policy iteration 1: Expanding move (12, 17)
2025-04-11 19:02:42,281 [INFO] Final candidates: []
2025-04-11 19:02:42,281 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:42,289 [INFO] Final candidates: []
2025-04-11 19:02:42,289 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:42,289 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:42,351 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:42,351 [DEBUG] Tree_policy iteration 1: Expanding move (16, 5)
2025-04-11 19:02:42,360 [INFO] Final candidates: []
2025-04-11 19:02:42,360 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:42,368 [INFO] Final candidates: []
2025-04-11 19:02:42,368 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:42,368 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:42,536 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:42,536 [DEBUG] Tree_policy iteration 1: Expanding move (16, 10)
2025-04-11 19:02:42,544 [INFO] Final candidates: []
2025-04-11 19:02:42,544 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:42,552 [INFO] Final candidates: []
2025-04-11 19:02:42,552 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:42,552 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:42,619 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:42,619 [DEBUG] Tree_policy iteration 1: Expanding move (5, 2)
2025-04-11 19:02:42,629 [INFO] Final candidates: []
2025-04-11 19:02:42,629 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:42,637 [INFO] Final candidates: []
2025-04-11 19:02:42,637 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:42,638 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:42,717 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:42,717 [DEBUG] Tree_policy iteration 1: Expanding move (8, 13)
2025-04-11 19:02:42,726 [INFO] Final candidates: []
2025-04-11 19:02:42,726 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:42,734 [INFO] Final candidates: []
2025-04-11 19:02:42,734 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:42,734 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:42,768 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:42,768 [DEBUG] Tree_policy iteration 1: Expanding move (16, 2)
2025-04-11 19:02:42,776 [INFO] Final candidates: []
2025-04-11 19:02:42,776 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:42,784 [INFO] Final candidates: []
2025-04-11 19:02:42,784 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:42,784 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:42,912 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:42,913 [DEBUG] Tree_policy iteration 1: Expanding move (5, 17)
2025-04-11 19:02:42,921 [INFO] Final candidates: []
2025-04-11 19:02:42,921 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:42,929 [INFO] Final candidates: []
2025-04-11 19:02:42,929 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:42,929 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:42,970 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:42,970 [DEBUG] Tree_policy iteration 1: Expanding move (9, 9)
2025-04-11 19:02:42,978 [INFO] Final candidates: []
2025-04-11 19:02:42,978 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:42,987 [INFO] Final candidates: []
2025-04-11 19:02:42,987 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:42,987 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:43,114 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:43,114 [DEBUG] Tree_policy iteration 1: Expanding move (16, 8)
2025-04-11 19:02:43,122 [INFO] Final candidates: []
2025-04-11 19:02:43,122 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:43,130 [INFO] Final candidates: []
2025-04-11 19:02:43,130 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:43,130 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:43,214 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:43,214 [DEBUG] Tree_policy iteration 1: Expanding move (8, 3)
2025-04-11 19:02:43,222 [INFO] Final candidates: []
2025-04-11 19:02:43,223 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:43,230 [INFO] Final candidates: []
2025-04-11 19:02:43,230 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:43,231 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:43,352 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:43,352 [DEBUG] Tree_policy iteration 1: Expanding move (9, 8)
2025-04-11 19:02:43,360 [INFO] Final candidates: []
2025-04-11 19:02:43,360 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:43,368 [INFO] Final candidates: []
2025-04-11 19:02:43,368 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:43,368 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:43,382 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:43,382 [DEBUG] Tree_policy iteration 1: Expanding move (7, 9)
2025-04-11 19:02:43,391 [INFO] Final candidates: []
2025-04-11 19:02:43,391 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:43,399 [INFO] Final candidates: []
2025-04-11 19:02:43,399 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:43,399 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:43,476 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:43,476 [DEBUG] Tree_policy iteration 1: Expanding move (17, 13)
2025-04-11 19:02:43,485 [INFO] Final candidates: []
2025-04-11 19:02:43,485 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:43,493 [INFO] Final candidates: []
2025-04-11 19:02:43,493 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:43,493 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:43,536 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:43,536 [DEBUG] Tree_policy iteration 1: Expanding move (17, 18)
2025-04-11 19:02:43,545 [INFO] Final candidates: []
2025-04-11 19:02:43,545 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:43,553 [INFO] Final candidates: []
2025-04-11 19:02:43,553 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:43,553 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:43,621 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:43,621 [DEBUG] Tree_policy iteration 1: Expanding move (15, 15)
2025-04-11 19:02:43,637 [INFO] Final candidates: []
2025-04-11 19:02:43,637 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:43,652 [INFO] Final candidates: []
2025-04-11 19:02:43,652 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:43,652 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:43,676 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:43,676 [DEBUG] Tree_policy iteration 1: Expanding move (10, 5)
2025-04-11 19:02:43,684 [INFO] Final candidates: []
2025-04-11 19:02:43,684 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:43,692 [INFO] Final candidates: []
2025-04-11 19:02:43,692 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:43,692 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:43,730 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:43,731 [DEBUG] Tree_policy iteration 1: Expanding move (1, 3)
2025-04-11 19:02:43,739 [INFO] Final candidates: []
2025-04-11 19:02:43,739 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:43,747 [INFO] Final candidates: []
2025-04-11 19:02:43,747 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:43,747 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:43,848 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:43,848 [DEBUG] Tree_policy iteration 1: Expanding move (1, 13)
2025-04-11 19:02:43,856 [INFO] Final candidates: []
2025-04-11 19:02:43,856 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:43,864 [INFO] Final candidates: []
2025-04-11 19:02:43,864 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:43,864 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:43,933 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:43,934 [DEBUG] Tree_policy iteration 1: Expanding move (14, 17)
2025-04-11 19:02:43,944 [INFO] Final candidates: []
2025-04-11 19:02:43,944 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:43,952 [INFO] Final candidates: []
2025-04-11 19:02:43,952 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:43,952 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:44,049 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:44,049 [DEBUG] Tree_policy iteration 1: Expanding move (4, 4)
2025-04-11 19:02:44,057 [INFO] Final candidates: []
2025-04-11 19:02:44,057 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:44,065 [INFO] Final candidates: []
2025-04-11 19:02:44,065 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:44,065 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:44,157 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:44,158 [DEBUG] Tree_policy iteration 1: Expanding move (12, 10)
2025-04-11 19:02:44,166 [INFO] Final candidates: []
2025-04-11 19:02:44,166 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:44,173 [INFO] Final candidates: []
2025-04-11 19:02:44,173 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:44,174 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:44,365 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:44,365 [DEBUG] Tree_policy iteration 1: Expanding move (8, 5)
2025-04-11 19:02:44,375 [INFO] Final candidates: []
2025-04-11 19:02:44,375 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:44,383 [INFO] Final candidates: []
2025-04-11 19:02:44,383 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:44,383 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:44,496 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:44,496 [DEBUG] Tree_policy iteration 1: Expanding move (2, 15)
2025-04-11 19:02:44,504 [INFO] Final candidates: []
2025-04-11 19:02:44,504 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:44,512 [INFO] Final candidates: []
2025-04-11 19:02:44,512 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:44,512 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:44,563 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:44,563 [DEBUG] Tree_policy iteration 1: Expanding move (6, 15)
2025-04-11 19:02:44,571 [INFO] Final candidates: []
2025-04-11 19:02:44,571 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:44,579 [INFO] Final candidates: []
2025-04-11 19:02:44,579 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:44,579 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:44,707 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:44,708 [DEBUG] Tree_policy iteration 1: Expanding move (1, 11)
2025-04-11 19:02:44,716 [INFO] Final candidates: []
2025-04-11 19:02:44,716 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:44,724 [INFO] Final candidates: []
2025-04-11 19:02:44,724 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:44,724 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:44,794 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:44,794 [DEBUG] Tree_policy iteration 1: Expanding move (7, 2)
2025-04-11 19:02:44,802 [INFO] Final candidates: []
2025-04-11 19:02:44,803 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:44,810 [INFO] Final candidates: []
2025-04-11 19:02:44,810 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:44,811 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:44,888 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:44,888 [DEBUG] Tree_policy iteration 1: Expanding move (5, 16)
2025-04-11 19:02:44,896 [INFO] Final candidates: []
2025-04-11 19:02:44,896 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:44,904 [INFO] Final candidates: []
2025-04-11 19:02:44,904 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:44,904 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:44,986 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:44,987 [DEBUG] Tree_policy iteration 1: Expanding move (11, 5)
2025-04-11 19:02:44,995 [INFO] Final candidates: []
2025-04-11 19:02:44,995 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:45,003 [INFO] Final candidates: []
2025-04-11 19:02:45,003 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:45,003 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:45,194 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:45,195 [DEBUG] Tree_policy iteration 1: Expanding move (10, 15)
2025-04-11 19:02:45,203 [INFO] Final candidates: []
2025-04-11 19:02:45,203 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:45,213 [INFO] Final candidates: []
2025-04-11 19:02:45,213 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:45,213 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:45,277 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:45,277 [DEBUG] Tree_policy iteration 1: Expanding move (12, 8)
2025-04-11 19:02:45,285 [INFO] Final candidates: []
2025-04-11 19:02:45,285 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:45,293 [INFO] Final candidates: []
2025-04-11 19:02:45,293 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:45,293 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:45,480 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:45,480 [DEBUG] Tree_policy iteration 1: Expanding move (2, 3)
2025-04-11 19:02:45,488 [INFO] Final candidates: []
2025-04-11 19:02:45,488 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:45,496 [INFO] Final candidates: []
2025-04-11 19:02:45,496 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:45,497 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:45,594 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:45,595 [DEBUG] Tree_policy iteration 1: Expanding move (5, 11)
2025-04-11 19:02:45,603 [INFO] Final candidates: []
2025-04-11 19:02:45,603 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:45,611 [INFO] Final candidates: []
2025-04-11 19:02:45,611 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:45,611 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:45,617 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:45,617 [DEBUG] Tree_policy iteration 1: Expanding move (8, 14)
2025-04-11 19:02:45,625 [INFO] Final candidates: []
2025-04-11 19:02:45,625 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:45,633 [INFO] Final candidates: []
2025-04-11 19:02:45,633 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:45,633 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:45,889 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:45,889 [DEBUG] Tree_policy iteration 1: Expanding move (4, 17)
2025-04-11 19:02:45,897 [INFO] Final candidates: []
2025-04-11 19:02:45,897 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:45,905 [INFO] Final candidates: []
2025-04-11 19:02:45,905 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:45,905 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:46,040 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:46,041 [DEBUG] Tree_policy iteration 1: Expanding move (14, 4)
2025-04-11 19:02:46,049 [INFO] Final candidates: []
2025-04-11 19:02:46,049 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:46,057 [INFO] Final candidates: []
2025-04-11 19:02:46,057 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:46,058 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:46,174 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:46,174 [DEBUG] Tree_policy iteration 1: Expanding move (5, 18)
2025-04-11 19:02:46,182 [INFO] Final candidates: []
2025-04-11 19:02:46,182 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:46,190 [INFO] Final candidates: []
2025-04-11 19:02:46,190 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:46,190 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:46,336 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:46,336 [DEBUG] Tree_policy iteration 1: Expanding move (1, 14)
2025-04-11 19:02:46,344 [INFO] Final candidates: []
2025-04-11 19:02:46,344 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:46,352 [INFO] Final candidates: []
2025-04-11 19:02:46,352 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:46,352 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:46,357 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:46,357 [DEBUG] Tree_policy iteration 1: Expanding move (8, 8)
2025-04-11 19:02:46,366 [INFO] Final candidates: []
2025-04-11 19:02:46,366 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:46,374 [INFO] Final candidates: []
2025-04-11 19:02:46,374 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:46,374 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:46,473 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:46,474 [INFO] MCTS: Search finished. Best move selected with 1 visits.
2025-04-11 19:02:46,474 [INFO] MCTS selected move: J15
2025-04-11 19:02:46,474 [INFO] ===============NEW MOVE================
2025-04-11 19:02:46,593 [INFO] Starting pre-MCTS candidate collection.
2025-04-11 19:02:46,601 [INFO] Final candidates: []
2025-04-11 19:02:46,601 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:46,609 [INFO] Final candidates: []
2025-04-11 19:02:46,609 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:46,609 [INFO] No candidate found in Phase 1 or 2; using full legal moves for MCTS.
2025-04-11 19:02:46,609 [INFO] MCTS: Starting search for 100 iterations.
2025-04-11 19:02:46,609 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(7)), (np.int64(14), np.int64(9)))
2025-04-11 19:02:46,617 [INFO] Final candidates: []
2025-04-11 19:02:46,617 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:46,625 [INFO] Final candidates: []
2025-04-11 19:02:46,625 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:46,625 [DEBUG] MCTS iteration 0: reached a node with 0 visits.
2025-04-11 19:02:46,625 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:46,811 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:46,811 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(7)), (np.int64(12), np.int64(5)))
2025-04-11 19:02:46,819 [INFO] Final candidates: []
2025-04-11 19:02:46,819 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:46,827 [INFO] Final candidates: []
2025-04-11 19:02:46,827 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:46,828 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:46,842 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:46,843 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(6)), (np.int64(11), np.int64(6)))
2025-04-11 19:02:46,850 [INFO] Final candidates: []
2025-04-11 19:02:46,850 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:46,858 [INFO] Final candidates: []
2025-04-11 19:02:46,858 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:46,858 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:46,960 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:46,960 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(5)), (np.int64(13), np.int64(6)))
2025-04-11 19:02:46,969 [INFO] Final candidates: []
2025-04-11 19:02:46,969 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:46,976 [INFO] Final candidates: []
2025-04-11 19:02:46,976 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:46,976 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:47,107 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:47,107 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(10)), (np.int64(13), np.int64(8)))
2025-04-11 19:02:47,115 [INFO] Final candidates: []
2025-04-11 19:02:47,115 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:47,123 [INFO] Final candidates: []
2025-04-11 19:02:47,123 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:47,123 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:47,269 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:47,269 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(8)), (np.int64(14), np.int64(6)))
2025-04-11 19:02:47,277 [INFO] Final candidates: []
2025-04-11 19:02:47,277 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:47,284 [INFO] Final candidates: []
2025-04-11 19:02:47,284 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:47,285 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:47,292 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:47,292 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(8)), (np.int64(15), np.int64(9)))
2025-04-11 19:02:47,300 [INFO] Final candidates: []
2025-04-11 19:02:47,300 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:47,308 [INFO] Final candidates: []
2025-04-11 19:02:47,308 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:47,308 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:47,344 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:47,344 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(6)), (np.int64(11), np.int64(5)))
2025-04-11 19:02:47,352 [INFO] Final candidates: []
2025-04-11 19:02:47,352 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:47,359 [INFO] Final candidates: []
2025-04-11 19:02:47,359 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:47,360 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:47,399 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:47,399 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(5)), (np.int64(13), np.int64(9)))
2025-04-11 19:02:47,407 [INFO] Final candidates: []
2025-04-11 19:02:47,407 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:47,415 [INFO] Final candidates: []
2025-04-11 19:02:47,415 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:47,415 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:47,463 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:47,463 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(5)), (np.int64(14), np.int64(9)))
2025-04-11 19:02:47,471 [INFO] Final candidates: []
2025-04-11 19:02:47,471 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:47,479 [INFO] Final candidates: []
2025-04-11 19:02:47,479 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:47,479 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:47,492 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:47,493 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(5)), (np.int64(14), np.int64(6)))
2025-04-11 19:02:47,501 [INFO] Final candidates: []
2025-04-11 19:02:47,501 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:47,509 [INFO] Final candidates: []
2025-04-11 19:02:47,509 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:47,509 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:47,579 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:47,579 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(8)), (np.int64(13), np.int64(6)))
2025-04-11 19:02:47,587 [INFO] Final candidates: []
2025-04-11 19:02:47,587 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:47,595 [INFO] Final candidates: []
2025-04-11 19:02:47,595 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:47,595 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:47,633 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:47,633 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(4)), (np.int64(12), np.int64(5)))
2025-04-11 19:02:47,641 [INFO] Final candidates: []
2025-04-11 19:02:47,641 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:47,648 [INFO] Final candidates: []
2025-04-11 19:02:47,648 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:47,648 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:47,767 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:47,767 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(10)), (np.int64(12), np.int64(8)))
2025-04-11 19:02:47,775 [INFO] Final candidates: []
2025-04-11 19:02:47,775 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:47,782 [INFO] Final candidates: []
2025-04-11 19:02:47,782 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:47,783 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:47,901 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:47,901 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(5)), (np.int64(15), np.int64(9)))
2025-04-11 19:02:47,909 [INFO] Final candidates: []
2025-04-11 19:02:47,909 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:47,917 [INFO] Final candidates: []
2025-04-11 19:02:47,917 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:47,917 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:47,945 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:47,945 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(7)), (np.int64(11), np.int64(6)))
2025-04-11 19:02:47,953 [INFO] Final candidates: []
2025-04-11 19:02:47,953 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:47,960 [INFO] Final candidates: []
2025-04-11 19:02:47,961 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:47,961 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:48,004 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:48,004 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(8)), (np.int64(14), np.int64(9)))
2025-04-11 19:02:48,012 [INFO] Final candidates: []
2025-04-11 19:02:48,013 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:48,020 [INFO] Final candidates: []
2025-04-11 19:02:48,020 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:48,021 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:48,122 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:48,122 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(6)), (np.int64(12), np.int64(5)))
2025-04-11 19:02:48,131 [INFO] Final candidates: []
2025-04-11 19:02:48,131 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:48,139 [INFO] Final candidates: []
2025-04-11 19:02:48,139 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:48,139 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:48,228 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:48,228 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(10)), (np.int64(14), np.int64(9)))
2025-04-11 19:02:48,236 [INFO] Final candidates: []
2025-04-11 19:02:48,236 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:48,244 [INFO] Final candidates: []
2025-04-11 19:02:48,244 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:48,244 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:48,321 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:48,322 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(5)), (np.int64(12), np.int64(5)))
2025-04-11 19:02:48,337 [INFO] Final candidates: []
2025-04-11 19:02:48,338 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:48,347 [INFO] Final candidates: []
2025-04-11 19:02:48,347 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:48,347 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:48,470 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:48,470 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(7)), (np.int64(14), np.int64(7)))
2025-04-11 19:02:48,478 [INFO] Final candidates: []
2025-04-11 19:02:48,478 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:48,486 [INFO] Final candidates: []
2025-04-11 19:02:48,486 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:48,486 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:48,542 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:48,542 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(4)), (np.int64(13), np.int64(6)))
2025-04-11 19:02:48,550 [INFO] Final candidates: []
2025-04-11 19:02:48,550 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:48,558 [INFO] Final candidates: []
2025-04-11 19:02:48,558 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:48,559 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:48,639 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:48,639 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(7)), (np.int64(15), np.int64(7)))
2025-04-11 19:02:48,647 [INFO] Final candidates: []
2025-04-11 19:02:48,647 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:48,655 [INFO] Final candidates: []
2025-04-11 19:02:48,655 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:48,655 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:48,697 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:48,697 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(8)), (np.int64(12), np.int64(8)))
2025-04-11 19:02:48,705 [INFO] Final candidates: []
2025-04-11 19:02:48,705 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:48,712 [INFO] Final candidates: []
2025-04-11 19:02:48,712 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:48,712 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:48,786 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:48,786 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(5)), (np.int64(16), np.int64(8)))
2025-04-11 19:02:48,794 [INFO] Final candidates: []
2025-04-11 19:02:48,794 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:48,802 [INFO] Final candidates: []
2025-04-11 19:02:48,802 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:48,802 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:48,911 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:48,912 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(5)), (np.int64(15), np.int64(7)))
2025-04-11 19:02:48,920 [INFO] Final candidates: []
2025-04-11 19:02:48,920 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:48,927 [INFO] Final candidates: []
2025-04-11 19:02:48,928 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:48,928 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:48,967 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:48,967 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(4)), (np.int64(14), np.int64(6)))
2025-04-11 19:02:48,975 [INFO] Final candidates: []
2025-04-11 19:02:48,975 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:48,983 [INFO] Final candidates: []
2025-04-11 19:02:48,983 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:48,983 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:49,145 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:49,145 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(5)), (np.int64(15), np.int64(9)))
2025-04-11 19:02:49,154 [INFO] Final candidates: []
2025-04-11 19:02:49,154 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:49,162 [INFO] Final candidates: []
2025-04-11 19:02:49,162 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:49,162 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:49,363 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:49,363 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(4)), (np.int64(11), np.int64(7)))
2025-04-11 19:02:49,371 [INFO] Final candidates: []
2025-04-11 19:02:49,371 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:49,379 [INFO] Final candidates: []
2025-04-11 19:02:49,379 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:49,379 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:49,507 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:49,507 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(8)), (np.int64(15), np.int64(9)))
2025-04-11 19:02:49,515 [INFO] Final candidates: []
2025-04-11 19:02:49,515 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:49,523 [INFO] Final candidates: []
2025-04-11 19:02:49,523 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:49,523 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:49,586 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:49,586 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(5)), (np.int64(11), np.int64(7)))
2025-04-11 19:02:49,594 [INFO] Final candidates: []
2025-04-11 19:02:49,594 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:49,602 [INFO] Final candidates: []
2025-04-11 19:02:49,602 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:49,602 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:49,718 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:49,718 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(9)), (np.int64(11), np.int64(7)))
2025-04-11 19:02:49,726 [INFO] Final candidates: []
2025-04-11 19:02:49,726 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:49,734 [INFO] Final candidates: []
2025-04-11 19:02:49,734 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:49,734 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:49,802 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:49,802 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(7)), (np.int64(15), np.int64(9)))
2025-04-11 19:02:49,810 [INFO] Final candidates: []
2025-04-11 19:02:49,810 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:49,818 [INFO] Final candidates: []
2025-04-11 19:02:49,818 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:49,818 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:49,862 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:49,862 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(4)), (np.int64(10), np.int64(6)))
2025-04-11 19:02:49,870 [INFO] Final candidates: []
2025-04-11 19:02:49,870 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:49,878 [INFO] Final candidates: []
2025-04-11 19:02:49,878 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:49,878 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:50,085 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:50,085 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(10)), (np.int64(13), np.int64(9)))
2025-04-11 19:02:50,093 [INFO] Final candidates: []
2025-04-11 19:02:50,093 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:50,101 [INFO] Final candidates: []
2025-04-11 19:02:50,101 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:50,101 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:50,119 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:50,119 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(5)), (np.int64(13), np.int64(5)))
2025-04-11 19:02:50,127 [INFO] Final candidates: []
2025-04-11 19:02:50,127 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:50,135 [INFO] Final candidates: []
2025-04-11 19:02:50,135 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:50,135 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:50,162 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:50,162 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(7)), (np.int64(14), np.int64(10)))
2025-04-11 19:02:50,170 [INFO] Final candidates: []
2025-04-11 19:02:50,170 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:50,178 [INFO] Final candidates: []
2025-04-11 19:02:50,178 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:50,178 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:50,294 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:50,294 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(6)), (np.int64(16), np.int64(8)))
2025-04-11 19:02:50,302 [INFO] Final candidates: []
2025-04-11 19:02:50,302 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:50,310 [INFO] Final candidates: []
2025-04-11 19:02:50,310 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:50,310 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:50,373 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:50,373 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(7)), (np.int64(10), np.int64(6)))
2025-04-11 19:02:50,381 [INFO] Final candidates: []
2025-04-11 19:02:50,381 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:50,389 [INFO] Final candidates: []
2025-04-11 19:02:50,389 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:50,389 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:50,409 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:50,409 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(4)), (np.int64(14), np.int64(7)))
2025-04-11 19:02:50,417 [INFO] Final candidates: []
2025-04-11 19:02:50,417 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:50,425 [INFO] Final candidates: []
2025-04-11 19:02:50,425 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:50,425 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:50,454 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:50,454 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(7)), (np.int64(12), np.int64(8)))
2025-04-11 19:02:50,462 [INFO] Final candidates: []
2025-04-11 19:02:50,462 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:50,470 [INFO] Final candidates: []
2025-04-11 19:02:50,470 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:50,470 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:50,540 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:50,541 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(6)), (np.int64(11), np.int64(6)))
2025-04-11 19:02:50,549 [INFO] Final candidates: []
2025-04-11 19:02:50,549 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:50,557 [INFO] Final candidates: []
2025-04-11 19:02:50,557 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:50,557 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:50,578 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:50,578 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(6)), (np.int64(15), np.int64(8)))
2025-04-11 19:02:50,592 [INFO] Final candidates: []
2025-04-11 19:02:50,592 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:50,600 [INFO] Final candidates: []
2025-04-11 19:02:50,600 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:50,600 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:50,637 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:50,638 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(7)), (np.int64(16), np.int64(8)))
2025-04-11 19:02:50,645 [INFO] Final candidates: []
2025-04-11 19:02:50,646 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:50,653 [INFO] Final candidates: []
2025-04-11 19:02:50,653 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:50,653 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:50,713 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:50,713 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(6)), (np.int64(15), np.int64(7)))
2025-04-11 19:02:50,722 [INFO] Final candidates: []
2025-04-11 19:02:50,722 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:50,730 [INFO] Final candidates: []
2025-04-11 19:02:50,730 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:50,730 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:50,796 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:50,796 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(7)), (np.int64(11), np.int64(6)))
2025-04-11 19:02:50,804 [INFO] Final candidates: []
2025-04-11 19:02:50,804 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:50,811 [INFO] Final candidates: []
2025-04-11 19:02:50,811 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:50,812 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:50,879 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:50,879 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(8)), (np.int64(13), np.int64(6)))
2025-04-11 19:02:50,887 [INFO] Final candidates: []
2025-04-11 19:02:50,887 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:50,895 [INFO] Final candidates: []
2025-04-11 19:02:50,895 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:50,895 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:50,919 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:50,920 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(5)), (np.int64(14), np.int64(6)))
2025-04-11 19:02:50,928 [INFO] Final candidates: []
2025-04-11 19:02:50,928 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:50,935 [INFO] Final candidates: []
2025-04-11 19:02:50,935 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:50,935 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:51,067 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:51,067 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(7)), (np.int64(15), np.int64(9)))
2025-04-11 19:02:51,075 [INFO] Final candidates: []
2025-04-11 19:02:51,075 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:51,083 [INFO] Final candidates: []
2025-04-11 19:02:51,083 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:51,083 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:51,240 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:51,240 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(7)), (np.int64(12), np.int64(5)))
2025-04-11 19:02:51,248 [INFO] Final candidates: []
2025-04-11 19:02:51,248 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:51,256 [INFO] Final candidates: []
2025-04-11 19:02:51,256 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:51,256 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:51,308 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:51,308 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(8)), (np.int64(16), np.int64(8)))
2025-04-11 19:02:51,316 [INFO] Final candidates: []
2025-04-11 19:02:51,316 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:51,324 [INFO] Final candidates: []
2025-04-11 19:02:51,324 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:51,324 [DEBUG] MCTS iteration 50: reached a node with 0 visits.
2025-04-11 19:02:51,324 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:51,441 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:51,441 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(5)), (np.int64(12), np.int64(8)))
2025-04-11 19:02:51,451 [INFO] Final candidates: []
2025-04-11 19:02:51,451 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:51,459 [INFO] Final candidates: []
2025-04-11 19:02:51,459 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:51,459 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:51,497 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:51,497 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(7)), (np.int64(16), np.int64(8)))
2025-04-11 19:02:51,505 [INFO] Final candidates: []
2025-04-11 19:02:51,505 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:51,513 [INFO] Final candidates: []
2025-04-11 19:02:51,513 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:51,513 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:51,768 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:51,768 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(5)), (np.int64(15), np.int64(9)))
2025-04-11 19:02:51,776 [INFO] Final candidates: []
2025-04-11 19:02:51,776 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:51,783 [INFO] Final candidates: []
2025-04-11 19:02:51,783 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:51,784 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:51,838 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:51,838 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(7)), (np.int64(13), np.int64(8)))
2025-04-11 19:02:51,846 [INFO] Final candidates: []
2025-04-11 19:02:51,846 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:51,854 [INFO] Final candidates: []
2025-04-11 19:02:51,854 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:51,854 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:52,014 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:52,014 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(4)), (np.int64(13), np.int64(9)))
2025-04-11 19:02:52,022 [INFO] Final candidates: []
2025-04-11 19:02:52,022 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:52,029 [INFO] Final candidates: []
2025-04-11 19:02:52,029 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:52,029 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:52,187 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:52,187 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(7)), (np.int64(13), np.int64(6)))
2025-04-11 19:02:52,195 [INFO] Final candidates: []
2025-04-11 19:02:52,195 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:52,203 [INFO] Final candidates: []
2025-04-11 19:02:52,203 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:52,203 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:52,269 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:52,270 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(5)), (np.int64(11), np.int64(7)))
2025-04-11 19:02:52,278 [INFO] Final candidates: []
2025-04-11 19:02:52,278 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:52,288 [INFO] Final candidates: []
2025-04-11 19:02:52,288 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:52,288 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:52,337 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:52,338 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(7)), (np.int64(11), np.int64(6)))
2025-04-11 19:02:52,346 [INFO] Final candidates: []
2025-04-11 19:02:52,346 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:52,353 [INFO] Final candidates: []
2025-04-11 19:02:52,353 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:52,354 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:52,399 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:52,399 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(7)), (np.int64(11), np.int64(5)))
2025-04-11 19:02:52,407 [INFO] Final candidates: []
2025-04-11 19:02:52,407 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:52,414 [INFO] Final candidates: []
2025-04-11 19:02:52,414 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:52,414 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:52,473 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:52,473 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(7)), (np.int64(12), np.int64(5)))
2025-04-11 19:02:52,481 [INFO] Final candidates: []
2025-04-11 19:02:52,481 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:52,491 [INFO] Final candidates: []
2025-04-11 19:02:52,491 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:52,491 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:52,606 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:52,606 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(7)), (np.int64(16), np.int64(8)))
2025-04-11 19:02:52,616 [INFO] Final candidates: []
2025-04-11 19:02:52,616 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:52,623 [INFO] Final candidates: []
2025-04-11 19:02:52,624 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:52,624 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:52,722 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:52,722 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(6)), (np.int64(14), np.int64(6)))
2025-04-11 19:02:52,730 [INFO] Final candidates: []
2025-04-11 19:02:52,730 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:52,738 [INFO] Final candidates: []
2025-04-11 19:02:52,738 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:52,738 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:52,882 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:52,882 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(6)), (np.int64(14), np.int64(9)))
2025-04-11 19:02:52,890 [INFO] Final candidates: []
2025-04-11 19:02:52,890 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:52,898 [INFO] Final candidates: []
2025-04-11 19:02:52,898 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:52,898 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:52,948 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:52,948 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(5)), (np.int64(12), np.int64(8)))
2025-04-11 19:02:52,956 [INFO] Final candidates: []
2025-04-11 19:02:52,956 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:52,964 [INFO] Final candidates: []
2025-04-11 19:02:52,964 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:52,964 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:53,004 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:53,004 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(7)), (np.int64(15), np.int64(8)))
2025-04-11 19:02:53,012 [INFO] Final candidates: []
2025-04-11 19:02:53,012 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:53,020 [INFO] Final candidates: []
2025-04-11 19:02:53,020 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:53,020 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:53,047 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:53,047 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(7)), (np.int64(15), np.int64(7)))
2025-04-11 19:02:53,055 [INFO] Final candidates: []
2025-04-11 19:02:53,055 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:53,063 [INFO] Final candidates: []
2025-04-11 19:02:53,063 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:53,063 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:53,113 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:53,113 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(5)), (np.int64(12), np.int64(5)))
2025-04-11 19:02:53,121 [INFO] Final candidates: []
2025-04-11 19:02:53,121 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:53,129 [INFO] Final candidates: []
2025-04-11 19:02:53,129 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:53,129 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:53,180 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:53,181 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(4)), (np.int64(11), np.int64(5)))
2025-04-11 19:02:53,189 [INFO] Final candidates: []
2025-04-11 19:02:53,189 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:53,196 [INFO] Final candidates: []
2025-04-11 19:02:53,196 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:53,196 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:53,230 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:53,230 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(8)), (np.int64(13), np.int64(9)))
2025-04-11 19:02:53,238 [INFO] Final candidates: []
2025-04-11 19:02:53,238 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:53,246 [INFO] Final candidates: []
2025-04-11 19:02:53,246 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:53,246 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:53,381 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:53,381 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(8)), (np.int64(16), np.int64(8)))
2025-04-11 19:02:53,389 [INFO] Final candidates: []
2025-04-11 19:02:53,389 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:53,396 [INFO] Final candidates: []
2025-04-11 19:02:53,396 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:53,397 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:53,631 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:53,631 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(8)), (np.int64(14), np.int64(6)))
2025-04-11 19:02:53,639 [INFO] Final candidates: []
2025-04-11 19:02:53,639 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:53,647 [INFO] Final candidates: []
2025-04-11 19:02:53,647 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:53,647 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:53,763 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:53,763 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(4)), (np.int64(13), np.int64(5)))
2025-04-11 19:02:53,771 [INFO] Final candidates: []
2025-04-11 19:02:53,771 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:53,779 [INFO] Final candidates: []
2025-04-11 19:02:53,779 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:53,779 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:53,836 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:53,836 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(4)), (np.int64(11), np.int64(6)))
2025-04-11 19:02:53,844 [INFO] Final candidates: []
2025-04-11 19:02:53,844 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:53,851 [INFO] Final candidates: []
2025-04-11 19:02:53,851 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:53,852 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:53,934 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:53,934 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(10)), (np.int64(10), np.int64(6)))
2025-04-11 19:02:53,942 [INFO] Final candidates: []
2025-04-11 19:02:53,942 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:53,950 [INFO] Final candidates: []
2025-04-11 19:02:53,950 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:53,950 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:54,015 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:54,016 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(9)), (np.int64(13), np.int64(6)))
2025-04-11 19:02:54,023 [INFO] Final candidates: []
2025-04-11 19:02:54,023 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:54,031 [INFO] Final candidates: []
2025-04-11 19:02:54,031 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:54,031 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:54,055 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:54,056 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(6)), (np.int64(11), np.int64(7)))
2025-04-11 19:02:54,064 [INFO] Final candidates: []
2025-04-11 19:02:54,064 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:54,071 [INFO] Final candidates: []
2025-04-11 19:02:54,071 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:54,071 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:54,264 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:54,265 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(10)), (np.int64(14), np.int64(6)))
2025-04-11 19:02:54,273 [INFO] Final candidates: []
2025-04-11 19:02:54,273 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:54,280 [INFO] Final candidates: []
2025-04-11 19:02:54,280 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:54,281 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:54,313 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:54,313 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(6)), (np.int64(15), np.int64(9)))
2025-04-11 19:02:54,321 [INFO] Final candidates: []
2025-04-11 19:02:54,321 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:54,328 [INFO] Final candidates: []
2025-04-11 19:02:54,328 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:54,329 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:54,434 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:54,434 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(6)), (np.int64(13), np.int64(9)))
2025-04-11 19:02:54,442 [INFO] Final candidates: []
2025-04-11 19:02:54,442 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:54,450 [INFO] Final candidates: []
2025-04-11 19:02:54,450 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:54,451 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:54,475 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:54,476 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(7)), (np.int64(11), np.int64(6)))
2025-04-11 19:02:54,484 [INFO] Final candidates: []
2025-04-11 19:02:54,484 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:54,492 [INFO] Final candidates: []
2025-04-11 19:02:54,492 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:54,492 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:54,512 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:54,512 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(4)), (np.int64(14), np.int64(9)))
2025-04-11 19:02:54,520 [INFO] Final candidates: []
2025-04-11 19:02:54,520 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:54,528 [INFO] Final candidates: []
2025-04-11 19:02:54,528 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:54,528 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:54,765 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:54,766 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(5)), (np.int64(15), np.int64(8)))
2025-04-11 19:02:54,774 [INFO] Final candidates: []
2025-04-11 19:02:54,774 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:54,782 [INFO] Final candidates: []
2025-04-11 19:02:54,782 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:54,782 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:54,855 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:54,855 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(4)), (np.int64(14), np.int64(10)))
2025-04-11 19:02:54,863 [INFO] Final candidates: []
2025-04-11 19:02:54,863 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:54,871 [INFO] Final candidates: []
2025-04-11 19:02:54,871 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:54,871 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:54,914 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:54,915 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(6)), (np.int64(13), np.int64(5)))
2025-04-11 19:02:54,923 [INFO] Final candidates: []
2025-04-11 19:02:54,923 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:54,930 [INFO] Final candidates: []
2025-04-11 19:02:54,930 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:54,930 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:55,101 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:55,101 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(5)), (np.int64(13), np.int64(6)))
2025-04-11 19:02:55,109 [INFO] Final candidates: []
2025-04-11 19:02:55,109 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:55,117 [INFO] Final candidates: []
2025-04-11 19:02:55,117 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:55,117 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:55,285 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:55,285 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(7)), (np.int64(13), np.int64(9)))
2025-04-11 19:02:55,293 [INFO] Final candidates: []
2025-04-11 19:02:55,293 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:55,300 [INFO] Final candidates: []
2025-04-11 19:02:55,300 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:55,301 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:55,368 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:55,368 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(5)), (np.int64(16), np.int64(8)))
2025-04-11 19:02:55,377 [INFO] Final candidates: []
2025-04-11 19:02:55,377 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:55,384 [INFO] Final candidates: []
2025-04-11 19:02:55,384 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:55,384 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:55,449 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:55,450 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(7)), (np.int64(13), np.int64(9)))
2025-04-11 19:02:55,458 [INFO] Final candidates: []
2025-04-11 19:02:55,458 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:55,465 [INFO] Final candidates: []
2025-04-11 19:02:55,465 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:55,465 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:55,486 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:55,486 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(9)), (np.int64(16), np.int64(8)))
2025-04-11 19:02:55,494 [INFO] Final candidates: []
2025-04-11 19:02:55,494 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:55,501 [INFO] Final candidates: []
2025-04-11 19:02:55,501 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:55,502 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:55,609 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:55,609 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(8)), (np.int64(11), np.int64(6)))
2025-04-11 19:02:55,617 [INFO] Final candidates: []
2025-04-11 19:02:55,617 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:55,624 [INFO] Final candidates: []
2025-04-11 19:02:55,625 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:55,625 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:55,631 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:55,631 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(4)), (np.int64(15), np.int64(8)))
2025-04-11 19:02:55,639 [INFO] Final candidates: []
2025-04-11 19:02:55,639 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:55,646 [INFO] Final candidates: []
2025-04-11 19:02:55,646 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:55,647 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:55,697 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:55,697 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(5)), (np.int64(13), np.int64(9)))
2025-04-11 19:02:55,705 [INFO] Final candidates: []
2025-04-11 19:02:55,705 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:55,713 [INFO] Final candidates: []
2025-04-11 19:02:55,713 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:55,713 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:55,740 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:55,740 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(6)), (np.int64(16), np.int64(8)))
2025-04-11 19:02:55,748 [INFO] Final candidates: []
2025-04-11 19:02:55,748 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:55,756 [INFO] Final candidates: []
2025-04-11 19:02:55,756 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:55,756 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:56,029 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:56,030 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(10)), (np.int64(13), np.int64(5)))
2025-04-11 19:02:56,038 [INFO] Final candidates: []
2025-04-11 19:02:56,038 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:56,046 [INFO] Final candidates: []
2025-04-11 19:02:56,046 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:56,046 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:56,067 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:56,068 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(10)), (np.int64(11), np.int64(7)))
2025-04-11 19:02:56,076 [INFO] Final candidates: []
2025-04-11 19:02:56,076 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:56,083 [INFO] Final candidates: []
2025-04-11 19:02:56,083 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:56,084 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:56,337 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:56,337 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(10)), (np.int64(15), np.int64(7)))
2025-04-11 19:02:56,345 [INFO] Final candidates: []
2025-04-11 19:02:56,345 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:56,353 [INFO] Final candidates: []
2025-04-11 19:02:56,353 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:56,353 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:56,552 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:56,553 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(8)), (np.int64(12), np.int64(5)))
2025-04-11 19:02:56,561 [INFO] Final candidates: []
2025-04-11 19:02:56,561 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:56,568 [INFO] Final candidates: []
2025-04-11 19:02:56,568 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:56,568 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:56,637 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:56,638 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(6)), (np.int64(15), np.int64(9)))
2025-04-11 19:02:56,647 [INFO] Final candidates: []
2025-04-11 19:02:56,647 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:56,655 [INFO] Final candidates: []
2025-04-11 19:02:56,655 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:56,655 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:56,834 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:56,835 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(9)), (np.int64(15), np.int64(7)))
2025-04-11 19:02:56,843 [INFO] Final candidates: []
2025-04-11 19:02:56,843 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:56,850 [INFO] Final candidates: []
2025-04-11 19:02:56,850 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:56,850 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:56,920 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:56,920 [INFO] MCTS: Search finished. Best move selected with 1 visits.
2025-04-11 19:02:56,920 [INFO] MCTS selected move: H15,K15
2025-04-11 19:02:56,920 [INFO] ===============NEW MOVE================
2025-04-11 19:02:57,077 [INFO] Starting pre-MCTS candidate collection.
2025-04-11 19:02:57,085 [INFO] Final candidates: []
2025-04-11 19:02:57,085 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:57,093 [INFO] Final candidates: []
2025-04-11 19:02:57,093 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:57,093 [INFO] No candidate found in Phase 1 or 2; using full legal moves for MCTS.
2025-04-11 19:02:57,093 [INFO] MCTS: Starting search for 100 iterations.
2025-04-11 19:02:57,093 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(17), np.int64(0)), (np.int64(13), np.int64(8)))
2025-04-11 19:02:57,101 [INFO] Final candidates: []
2025-04-11 19:02:57,101 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:57,109 [INFO] Final candidates: []
2025-04-11 19:02:57,109 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:57,109 [DEBUG] MCTS iteration 0: reached a node with 0 visits.
2025-04-11 19:02:57,109 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:57,175 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:57,175 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(7)), (np.int64(13), np.int64(0)))
2025-04-11 19:02:57,183 [INFO] Final candidates: []
2025-04-11 19:02:57,183 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:57,191 [INFO] Final candidates: []
2025-04-11 19:02:57,191 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:57,191 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:57,209 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:57,209 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(8)), (np.int64(12), np.int64(8)))
2025-04-11 19:02:57,217 [INFO] Final candidates: []
2025-04-11 19:02:57,217 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:57,225 [INFO] Final candidates: []
2025-04-11 19:02:57,225 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:57,225 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:57,294 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:57,294 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(6)), (np.int64(13), np.int64(6)))
2025-04-11 19:02:57,302 [INFO] Final candidates: []
2025-04-11 19:02:57,302 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:57,309 [INFO] Final candidates: []
2025-04-11 19:02:57,309 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:57,310 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:57,453 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:57,453 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(1)), (np.int64(13), np.int64(6)))
2025-04-11 19:02:57,461 [INFO] Final candidates: []
2025-04-11 19:02:57,461 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:57,469 [INFO] Final candidates: []
2025-04-11 19:02:57,469 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:57,469 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:57,536 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:57,537 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(10)), (np.int64(15), np.int64(1)))
2025-04-11 19:02:57,544 [INFO] Final candidates: []
2025-04-11 19:02:57,545 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:57,552 [INFO] Final candidates: []
2025-04-11 19:02:57,552 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:57,552 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:57,638 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:57,638 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(9)), (np.int64(16), np.int64(9)))
2025-04-11 19:02:57,646 [INFO] Final candidates: []
2025-04-11 19:02:57,646 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:57,653 [INFO] Final candidates: []
2025-04-11 19:02:57,653 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:57,654 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:57,767 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:57,767 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(1)), (np.int64(15), np.int64(2)))
2025-04-11 19:02:57,775 [INFO] Final candidates: []
2025-04-11 19:02:57,775 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:57,782 [INFO] Final candidates: []
2025-04-11 19:02:57,782 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:57,783 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:57,834 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:57,834 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(9)), (np.int64(15), np.int64(7)))
2025-04-11 19:02:57,842 [INFO] Final candidates: []
2025-04-11 19:02:57,842 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:57,850 [INFO] Final candidates: []
2025-04-11 19:02:57,850 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:57,850 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:57,874 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:57,874 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(10)), (np.int64(11), np.int64(6)))
2025-04-11 19:02:57,882 [INFO] Final candidates: []
2025-04-11 19:02:57,882 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:57,890 [INFO] Final candidates: []
2025-04-11 19:02:57,890 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:57,890 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:57,946 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:57,946 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(9)), (np.int64(15), np.int64(6)))
2025-04-11 19:02:57,954 [INFO] Final candidates: []
2025-04-11 19:02:57,954 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:57,962 [INFO] Final candidates: []
2025-04-11 19:02:57,962 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:57,962 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:57,992 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:57,993 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(0)), (np.int64(15), np.int64(9)))
2025-04-11 19:02:58,000 [INFO] Final candidates: []
2025-04-11 19:02:58,000 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:58,008 [INFO] Final candidates: []
2025-04-11 19:02:58,008 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:58,008 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:58,052 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:58,052 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(6)), (np.int64(13), np.int64(5)))
2025-04-11 19:02:58,060 [INFO] Final candidates: []
2025-04-11 19:02:58,060 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:58,068 [INFO] Final candidates: []
2025-04-11 19:02:58,068 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:58,068 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:58,232 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:58,233 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(7)), (np.int64(14), np.int64(0)))
2025-04-11 19:02:58,240 [INFO] Final candidates: []
2025-04-11 19:02:58,240 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:58,248 [INFO] Final candidates: []
2025-04-11 19:02:58,248 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:58,248 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:58,483 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:58,483 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(9)), (np.int64(16), np.int64(8)))
2025-04-11 19:02:58,491 [INFO] Final candidates: []
2025-04-11 19:02:58,491 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:58,499 [INFO] Final candidates: []
2025-04-11 19:02:58,499 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:58,500 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:58,567 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:58,567 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(2)), (np.int64(15), np.int64(9)))
2025-04-11 19:02:58,575 [INFO] Final candidates: []
2025-04-11 19:02:58,575 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:58,583 [INFO] Final candidates: []
2025-04-11 19:02:58,583 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:58,583 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:58,608 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:58,608 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(5)), (np.int64(16), np.int64(6)))
2025-04-11 19:02:58,616 [INFO] Final candidates: []
2025-04-11 19:02:58,616 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:58,623 [INFO] Final candidates: []
2025-04-11 19:02:58,623 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:58,623 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:58,900 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:58,900 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(7)), (np.int64(16), np.int64(8)))
2025-04-11 19:02:58,908 [INFO] Final candidates: []
2025-04-11 19:02:58,908 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:58,916 [INFO] Final candidates: []
2025-04-11 19:02:58,916 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:58,916 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:59,087 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:59,087 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(7)), (np.int64(11), np.int64(6)))
2025-04-11 19:02:59,095 [INFO] Final candidates: []
2025-04-11 19:02:59,095 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:59,103 [INFO] Final candidates: []
2025-04-11 19:02:59,103 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:59,103 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:59,168 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:59,168 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(7)), (np.int64(13), np.int64(9)))
2025-04-11 19:02:59,176 [INFO] Final candidates: []
2025-04-11 19:02:59,176 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:59,184 [INFO] Final candidates: []
2025-04-11 19:02:59,184 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:59,184 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:59,347 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:59,347 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(1)), (np.int64(13), np.int64(0)))
2025-04-11 19:02:59,355 [INFO] Final candidates: []
2025-04-11 19:02:59,355 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:59,362 [INFO] Final candidates: []
2025-04-11 19:02:59,362 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:59,363 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:59,400 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:02:59,400 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(10)), (np.int64(13), np.int64(8)))
2025-04-11 19:02:59,401 [DEBUG] board coords: [(14, 7), (14, 8), (14, 9), (14, 10), (14, 11), (14, 12)]
2025-04-11 19:02:59,401 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:02:59,401 [DEBUG] check_window_intermediate_custom: empty_cells=[(14, 11), (14, 12)]
2025-04-11 19:02:59,401 [DEBUG] check_window_intermediate_custom (only one inserted(14, 11)): For L=6, window [1 1 1 1 0 0] with coords [(14, 7), (14, 8), (14, 9), (14, 10), (14, 11), (14, 12)] triggers candidate.
2025-04-11 19:02:59,408 [INFO] Final candidates: [(14, 11)]
2025-04-11 19:02:59,408 [INFO] Phase win: Found only one candidate: (14, 11)
2025-04-11 19:02:59,408 [INFO] Phase win: Collected 10unique candidate(s):[((14, 11), (np.int64(14), np.int64(12))), ((14, 11), (np.int64(16), np.int64(11))), ((14, 11), (np.int64(13), np.int64(12))), ((14, 11), (np.int64(15), np.int64(11))), ((14, 11), (np.int64(13), np.int64(10))), ((14, 11), (np.int64(14), np.int64(13))), ((14, 11), (np.int64(12), np.int64(11))), ((14, 11), (np.int64(13), np.int64(11))), ((14, 11), (np.int64(15), np.int64(10))), ((14, 11), (np.int64(15), np.int64(12)))]
2025-04-11 19:02:59,408 [INFO] Phase 1 (immediate win): 10 candidate(s) found.
2025-04-11 19:02:59,415 [INFO] Final candidates: []
2025-04-11 19:02:59,415 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:59,416 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:59,453 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:59,453 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(9)), (np.int64(15), np.int64(10)))
2025-04-11 19:02:59,460 [INFO] Final candidates: []
2025-04-11 19:02:59,460 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:59,468 [INFO] Final candidates: []
2025-04-11 19:02:59,468 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:59,468 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:59,538 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:59,538 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(4)), (np.int64(14), np.int64(11)))
2025-04-11 19:02:59,539 [DEBUG] board coords: [(14, 7), (14, 8), (14, 9), (14, 10), (14, 11), (14, 12)]
2025-04-11 19:02:59,539 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(0)]
2025-04-11 19:02:59,539 [DEBUG] check_window_intermediate_custom: empty_cells=[(14, 10), (14, 12)]
2025-04-11 19:02:59,539 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 1 0 1 0] with coords [(14, 7), (14, 8), (14, 9), (14, 10), (14, 11), (14, 12)] triggers candidate.
2025-04-11 19:02:59,546 [INFO] Final candidates: [(14, 12), (14, 10)]
2025-04-11 19:02:59,546 [INFO] Phase win: Collected 1unique candidate(s):[((14, 12), (14, 10))]
2025-04-11 19:02:59,546 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 19:02:59,554 [INFO] Final candidates: []
2025-04-11 19:02:59,554 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:59,554 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:59,814 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:59,814 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(7)), (np.int64(13), np.int64(8)))
2025-04-11 19:02:59,822 [INFO] Final candidates: []
2025-04-11 19:02:59,822 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:59,831 [INFO] Final candidates: []
2025-04-11 19:02:59,831 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:59,831 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:59,912 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:59,912 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(10)), (np.int64(12), np.int64(5)))
2025-04-11 19:02:59,919 [INFO] Final candidates: []
2025-04-11 19:02:59,919 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:59,927 [INFO] Final candidates: []
2025-04-11 19:02:59,927 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:59,927 [INFO] Default policy: Starting random playout.
2025-04-11 19:02:59,962 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:59,962 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(0)), (np.int64(15), np.int64(6)))
2025-04-11 19:02:59,970 [INFO] Final candidates: []
2025-04-11 19:02:59,970 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:02:59,978 [INFO] Final candidates: []
2025-04-11 19:02:59,978 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:02:59,978 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:00,023 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:00,023 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(6)), (np.int64(14), np.int64(5)))
2025-04-11 19:03:00,031 [INFO] Final candidates: []
2025-04-11 19:03:00,032 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:00,039 [INFO] Final candidates: []
2025-04-11 19:03:00,039 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:00,039 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:00,151 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:00,151 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(7)), (np.int64(12), np.int64(8)))
2025-04-11 19:03:00,160 [INFO] Final candidates: []
2025-04-11 19:03:00,160 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:00,168 [INFO] Final candidates: []
2025-04-11 19:03:00,168 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:00,168 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:00,269 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:00,269 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(1)), (np.int64(14), np.int64(10)))
2025-04-11 19:03:00,270 [DEBUG] board coords: [(14, 7), (14, 8), (14, 9), (14, 10), (14, 11), (14, 12)]
2025-04-11 19:03:00,270 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:03:00,270 [DEBUG] check_window_intermediate_custom: empty_cells=[(14, 11), (14, 12)]
2025-04-11 19:03:00,270 [DEBUG] check_window_intermediate_custom (only one inserted(14, 11)): For L=6, window [1 1 1 1 0 0] with coords [(14, 7), (14, 8), (14, 9), (14, 10), (14, 11), (14, 12)] triggers candidate.
2025-04-11 19:03:00,277 [INFO] Final candidates: [(14, 11)]
2025-04-11 19:03:00,277 [INFO] Phase win: Found only one candidate: (14, 11)
2025-04-11 19:03:00,277 [INFO] Phase win: Collected 10unique candidate(s):[((14, 11), (np.int64(14), np.int64(12))), ((14, 11), (np.int64(16), np.int64(11))), ((14, 11), (np.int64(13), np.int64(12))), ((14, 11), (np.int64(15), np.int64(11))), ((14, 11), (np.int64(13), np.int64(10))), ((14, 11), (np.int64(14), np.int64(13))), ((14, 11), (np.int64(12), np.int64(11))), ((14, 11), (np.int64(13), np.int64(11))), ((14, 11), (np.int64(15), np.int64(10))), ((14, 11), (np.int64(15), np.int64(12)))]
2025-04-11 19:03:00,277 [INFO] Phase 1 (immediate win): 10 candidate(s) found.
2025-04-11 19:03:00,284 [INFO] Final candidates: []
2025-04-11 19:03:00,284 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:00,285 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:00,306 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:00,306 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(7)), (np.int64(15), np.int64(1)))
2025-04-11 19:03:00,314 [INFO] Final candidates: []
2025-04-11 19:03:00,314 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:00,322 [INFO] Final candidates: []
2025-04-11 19:03:00,322 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:00,322 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:00,456 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:00,456 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(17), np.int64(0)), (np.int64(14), np.int64(0)))
2025-04-11 19:03:00,463 [INFO] Final candidates: []
2025-04-11 19:03:00,464 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:00,471 [INFO] Final candidates: []
2025-04-11 19:03:00,471 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:00,471 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:00,625 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:00,625 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(5)), (np.int64(15), np.int64(1)))
2025-04-11 19:03:00,633 [INFO] Final candidates: []
2025-04-11 19:03:00,633 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:00,640 [INFO] Final candidates: []
2025-04-11 19:03:00,641 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:00,641 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:00,719 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:00,719 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(7)), (np.int64(11), np.int64(6)))
2025-04-11 19:03:00,727 [INFO] Final candidates: []
2025-04-11 19:03:00,727 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:00,735 [INFO] Final candidates: []
2025-04-11 19:03:00,735 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:00,735 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:00,779 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:00,779 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(7)), (np.int64(15), np.int64(7)))
2025-04-11 19:03:00,787 [INFO] Final candidates: []
2025-04-11 19:03:00,787 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:00,795 [INFO] Final candidates: []
2025-04-11 19:03:00,795 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:00,795 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:00,824 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:00,825 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(4)), (np.int64(12), np.int64(8)))
2025-04-11 19:03:00,832 [INFO] Final candidates: []
2025-04-11 19:03:00,832 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:00,840 [INFO] Final candidates: []
2025-04-11 19:03:00,840 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:00,840 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:00,892 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:00,892 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(0)), (np.int64(15), np.int64(7)))
2025-04-11 19:03:00,899 [INFO] Final candidates: []
2025-04-11 19:03:00,899 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:00,907 [INFO] Final candidates: []
2025-04-11 19:03:00,907 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:00,907 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:01,115 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:01,115 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(10)), (np.int64(13), np.int64(0)))
2025-04-11 19:03:01,122 [INFO] Final candidates: []
2025-04-11 19:03:01,122 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:01,130 [INFO] Final candidates: []
2025-04-11 19:03:01,130 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:01,130 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:01,252 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:01,252 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(1)), (np.int64(14), np.int64(5)))
2025-04-11 19:03:01,260 [INFO] Final candidates: []
2025-04-11 19:03:01,260 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:01,268 [INFO] Final candidates: []
2025-04-11 19:03:01,268 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:01,268 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:01,361 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:01,362 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(10)), (np.int64(16), np.int64(0)))
2025-04-11 19:03:01,363 [DEBUG] board coords: [(14, 7), (14, 8), (14, 9), (14, 10), (14, 11), (14, 12)]
2025-04-11 19:03:01,363 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:03:01,363 [DEBUG] check_window_intermediate_custom: empty_cells=[(14, 11), (14, 12)]
2025-04-11 19:03:01,363 [DEBUG] check_window_intermediate_custom (only one inserted(14, 11)): For L=6, window [1 1 1 1 0 0] with coords [(14, 7), (14, 8), (14, 9), (14, 10), (14, 11), (14, 12)] triggers candidate.
2025-04-11 19:03:01,369 [INFO] Final candidates: [(14, 11)]
2025-04-11 19:03:01,369 [INFO] Phase win: Found only one candidate: (14, 11)
2025-04-11 19:03:01,370 [INFO] Phase win: Collected 10unique candidate(s):[((14, 11), (np.int64(14), np.int64(12))), ((14, 11), (np.int64(16), np.int64(11))), ((14, 11), (np.int64(13), np.int64(12))), ((14, 11), (np.int64(15), np.int64(11))), ((14, 11), (np.int64(13), np.int64(10))), ((14, 11), (np.int64(14), np.int64(13))), ((14, 11), (np.int64(12), np.int64(11))), ((14, 11), (np.int64(13), np.int64(11))), ((14, 11), (np.int64(15), np.int64(10))), ((14, 11), (np.int64(15), np.int64(12)))]
2025-04-11 19:03:01,370 [INFO] Phase 1 (immediate win): 10 candidate(s) found.
2025-04-11 19:03:01,377 [INFO] Final candidates: []
2025-04-11 19:03:01,377 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:01,377 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:01,387 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:01,387 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(7)), (np.int64(15), np.int64(9)))
2025-04-11 19:03:01,394 [INFO] Final candidates: []
2025-04-11 19:03:01,394 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:01,402 [INFO] Final candidates: []
2025-04-11 19:03:01,402 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:01,402 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:01,571 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:01,571 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(9)), (np.int64(12), np.int64(5)))
2025-04-11 19:03:01,580 [INFO] Final candidates: []
2025-04-11 19:03:01,580 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:01,591 [INFO] Final candidates: []
2025-04-11 19:03:01,591 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:01,591 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:01,753 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:01,753 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(9)), (np.int64(13), np.int64(10)))
2025-04-11 19:03:01,761 [INFO] Final candidates: []
2025-04-11 19:03:01,761 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:01,769 [INFO] Final candidates: []
2025-04-11 19:03:01,769 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:01,769 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:01,903 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:01,903 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(7)), (np.int64(15), np.int64(10)))
2025-04-11 19:03:01,911 [INFO] Final candidates: []
2025-04-11 19:03:01,912 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:01,919 [INFO] Final candidates: []
2025-04-11 19:03:01,919 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:01,919 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:01,981 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:01,982 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(9)), (np.int64(16), np.int64(8)))
2025-04-11 19:03:01,989 [INFO] Final candidates: []
2025-04-11 19:03:01,989 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:01,998 [INFO] Final candidates: []
2025-04-11 19:03:01,998 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:01,998 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:02,021 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:02,021 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(9)), (np.int64(15), np.int64(1)))
2025-04-11 19:03:02,029 [INFO] Final candidates: []
2025-04-11 19:03:02,029 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:02,036 [INFO] Final candidates: []
2025-04-11 19:03:02,036 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:02,037 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:02,041 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:02,041 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(5)), (np.int64(15), np.int64(9)))
2025-04-11 19:03:02,049 [INFO] Final candidates: []
2025-04-11 19:03:02,049 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:02,057 [INFO] Final candidates: []
2025-04-11 19:03:02,057 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:02,057 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:02,118 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:02,118 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(10)), (np.int64(15), np.int64(2)))
2025-04-11 19:03:02,119 [DEBUG] board coords: [(14, 7), (14, 8), (14, 9), (14, 10), (14, 11), (14, 12)]
2025-04-11 19:03:02,119 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:03:02,119 [DEBUG] check_window_intermediate_custom: empty_cells=[(14, 11), (14, 12)]
2025-04-11 19:03:02,119 [DEBUG] check_window_intermediate_custom (only one inserted(14, 11)): For L=6, window [1 1 1 1 0 0] with coords [(14, 7), (14, 8), (14, 9), (14, 10), (14, 11), (14, 12)] triggers candidate.
2025-04-11 19:03:02,126 [INFO] Final candidates: [(14, 11)]
2025-04-11 19:03:02,126 [INFO] Phase win: Found only one candidate: (14, 11)
2025-04-11 19:03:02,126 [INFO] Phase win: Collected 10unique candidate(s):[((14, 11), (np.int64(14), np.int64(12))), ((14, 11), (np.int64(16), np.int64(11))), ((14, 11), (np.int64(13), np.int64(12))), ((14, 11), (np.int64(15), np.int64(11))), ((14, 11), (np.int64(13), np.int64(10))), ((14, 11), (np.int64(14), np.int64(13))), ((14, 11), (np.int64(12), np.int64(11))), ((14, 11), (np.int64(13), np.int64(11))), ((14, 11), (np.int64(15), np.int64(10))), ((14, 11), (np.int64(15), np.int64(12)))]
2025-04-11 19:03:02,126 [INFO] Phase 1 (immediate win): 10 candidate(s) found.
2025-04-11 19:03:02,134 [INFO] Final candidates: []
2025-04-11 19:03:02,134 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:02,134 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:02,138 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:02,138 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(5)), (np.int64(16), np.int64(8)))
2025-04-11 19:03:02,146 [INFO] Final candidates: []
2025-04-11 19:03:02,146 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:02,153 [INFO] Final candidates: []
2025-04-11 19:03:02,153 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:02,154 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:02,234 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:02,234 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(2)), (np.int64(13), np.int64(10)))
2025-04-11 19:03:02,242 [INFO] Final candidates: []
2025-04-11 19:03:02,242 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:02,250 [INFO] Final candidates: []
2025-04-11 19:03:02,250 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:02,250 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:02,303 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:02,303 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(7)), (np.int64(14), np.int64(1)))
2025-04-11 19:03:02,311 [INFO] Final candidates: []
2025-04-11 19:03:02,311 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:02,319 [INFO] Final candidates: []
2025-04-11 19:03:02,319 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:02,319 [DEBUG] MCTS iteration 50: reached a node with 0 visits.
2025-04-11 19:03:02,319 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:02,340 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:02,340 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(1)), (np.int64(15), np.int64(5)))
2025-04-11 19:03:02,348 [INFO] Final candidates: []
2025-04-11 19:03:02,348 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:02,356 [INFO] Final candidates: []
2025-04-11 19:03:02,356 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:02,356 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:02,602 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:02,602 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(5)), (np.int64(13), np.int64(0)))
2025-04-11 19:03:02,609 [INFO] Final candidates: []
2025-04-11 19:03:02,609 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:02,617 [INFO] Final candidates: []
2025-04-11 19:03:02,617 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:02,617 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:02,773 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:02,773 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(7)), (np.int64(16), np.int64(8)))
2025-04-11 19:03:02,781 [INFO] Final candidates: []
2025-04-11 19:03:02,781 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:02,789 [INFO] Final candidates: []
2025-04-11 19:03:02,789 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:02,790 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:02,912 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:02,913 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(4)), (np.int64(15), np.int64(1)))
2025-04-11 19:03:02,920 [INFO] Final candidates: []
2025-04-11 19:03:02,920 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:02,928 [INFO] Final candidates: []
2025-04-11 19:03:02,928 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:02,928 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:03,006 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:03,006 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(8)), (np.int64(13), np.int64(0)))
2025-04-11 19:03:03,014 [INFO] Final candidates: []
2025-04-11 19:03:03,014 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:03,022 [INFO] Final candidates: []
2025-04-11 19:03:03,022 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:03,022 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:03,182 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:03,183 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(5)), (np.int64(13), np.int64(0)))
2025-04-11 19:03:03,191 [INFO] Final candidates: []
2025-04-11 19:03:03,191 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:03,198 [INFO] Final candidates: []
2025-04-11 19:03:03,198 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:03,198 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:03,300 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:03,300 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(7)), (np.int64(15), np.int64(1)))
2025-04-11 19:03:03,308 [INFO] Final candidates: []
2025-04-11 19:03:03,308 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:03,315 [INFO] Final candidates: []
2025-04-11 19:03:03,315 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:03,315 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:03,513 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:03,514 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(17), np.int64(0)), (np.int64(16), np.int64(0)))
2025-04-11 19:03:03,521 [INFO] Final candidates: []
2025-04-11 19:03:03,521 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:03,529 [INFO] Final candidates: []
2025-04-11 19:03:03,529 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:03,529 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:03,605 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:03,605 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(2)), (np.int64(16), np.int64(8)))
2025-04-11 19:03:03,613 [INFO] Final candidates: []
2025-04-11 19:03:03,613 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:03,620 [INFO] Final candidates: []
2025-04-11 19:03:03,620 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:03,621 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:03,732 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:03,732 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(7)), (np.int64(16), np.int64(9)))
2025-04-11 19:03:03,740 [INFO] Final candidates: []
2025-04-11 19:03:03,740 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:03,748 [INFO] Final candidates: []
2025-04-11 19:03:03,748 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:03,748 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:04,022 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:04,022 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(6)), (np.int64(13), np.int64(6)))
2025-04-11 19:03:04,030 [INFO] Final candidates: []
2025-04-11 19:03:04,031 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:04,038 [INFO] Final candidates: []
2025-04-11 19:03:04,038 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:04,038 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:04,172 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:04,173 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(2)), (np.int64(15), np.int64(5)))
2025-04-11 19:03:04,193 [INFO] Final candidates: []
2025-04-11 19:03:04,193 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:04,204 [INFO] Final candidates: []
2025-04-11 19:03:04,204 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:04,205 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:04,268 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:04,268 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(7)), (np.int64(13), np.int64(10)))
2025-04-11 19:03:04,276 [INFO] Final candidates: []
2025-04-11 19:03:04,276 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:04,283 [INFO] Final candidates: []
2025-04-11 19:03:04,283 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:04,284 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:04,472 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:04,472 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(5)), (np.int64(15), np.int64(6)))
2025-04-11 19:03:04,480 [INFO] Final candidates: []
2025-04-11 19:03:04,480 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:04,487 [INFO] Final candidates: []
2025-04-11 19:03:04,487 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:04,488 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:04,555 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:04,556 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(8)), (np.int64(16), np.int64(6)))
2025-04-11 19:03:04,564 [INFO] Final candidates: []
2025-04-11 19:03:04,564 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:04,571 [INFO] Final candidates: []
2025-04-11 19:03:04,571 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:04,572 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:04,640 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:04,640 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(10)), (np.int64(14), np.int64(11)))
2025-04-11 19:03:04,641 [DEBUG] board coords: [(14, 7), (14, 8), (14, 9), (14, 10), (14, 11), (14, 12)]
2025-04-11 19:03:04,641 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(0)]
2025-04-11 19:03:04,641 [DEBUG] check_window_intermediate_custom: empty_cells=[(14, 10), (14, 12)]
2025-04-11 19:03:04,641 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 1 0 1 0] with coords [(14, 7), (14, 8), (14, 9), (14, 10), (14, 11), (14, 12)] triggers candidate.
2025-04-11 19:03:04,648 [INFO] Final candidates: [(14, 12), (14, 10)]
2025-04-11 19:03:04,648 [INFO] Phase win: Collected 1unique candidate(s):[((14, 12), (14, 10))]
2025-04-11 19:03:04,648 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 19:03:04,657 [INFO] Final candidates: []
2025-04-11 19:03:04,657 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:04,657 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:04,677 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:04,677 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(10)), (np.int64(15), np.int64(6)))
2025-04-11 19:03:04,685 [INFO] Final candidates: []
2025-04-11 19:03:04,685 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:04,692 [INFO] Final candidates: []
2025-04-11 19:03:04,692 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:04,693 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:04,731 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:04,731 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(5)), (np.int64(11), np.int64(6)))
2025-04-11 19:03:04,739 [INFO] Final candidates: []
2025-04-11 19:03:04,739 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:04,746 [INFO] Final candidates: []
2025-04-11 19:03:04,746 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:04,747 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:04,840 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:04,840 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(7)), (np.int64(13), np.int64(9)))
2025-04-11 19:03:04,848 [INFO] Final candidates: []
2025-04-11 19:03:04,848 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:04,855 [INFO] Final candidates: []
2025-04-11 19:03:04,855 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:04,856 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:05,041 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:05,042 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(7)), (np.int64(15), np.int64(8)))
2025-04-11 19:03:05,049 [INFO] Final candidates: []
2025-04-11 19:03:05,049 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:05,057 [INFO] Final candidates: []
2025-04-11 19:03:05,057 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:05,057 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:05,154 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:05,154 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(6)), (np.int64(15), np.int64(9)))
2025-04-11 19:03:05,163 [INFO] Final candidates: []
2025-04-11 19:03:05,163 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:05,171 [INFO] Final candidates: []
2025-04-11 19:03:05,171 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:05,172 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:05,182 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:05,182 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(1)), (np.int64(15), np.int64(9)))
2025-04-11 19:03:05,190 [INFO] Final candidates: []
2025-04-11 19:03:05,190 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:05,197 [INFO] Final candidates: []
2025-04-11 19:03:05,197 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:05,198 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:05,375 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:05,375 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(11)), (np.int64(13), np.int64(0)))
2025-04-11 19:03:05,376 [DEBUG] board coords: [(14, 7), (14, 8), (14, 9), (14, 10), (14, 11), (14, 12)]
2025-04-11 19:03:05,376 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(0)]
2025-04-11 19:03:05,376 [DEBUG] check_window_intermediate_custom: empty_cells=[(14, 10), (14, 12)]
2025-04-11 19:03:05,376 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 1 0 1 0] with coords [(14, 7), (14, 8), (14, 9), (14, 10), (14, 11), (14, 12)] triggers candidate.
2025-04-11 19:03:05,383 [INFO] Final candidates: [(14, 12), (14, 10)]
2025-04-11 19:03:05,383 [INFO] Phase win: Collected 1unique candidate(s):[((14, 12), (14, 10))]
2025-04-11 19:03:05,383 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 19:03:05,391 [INFO] Final candidates: []
2025-04-11 19:03:05,391 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:05,391 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:05,457 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:05,458 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(6)), (np.int64(15), np.int64(10)))
2025-04-11 19:03:05,465 [INFO] Final candidates: []
2025-04-11 19:03:05,465 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:05,473 [INFO] Final candidates: []
2025-04-11 19:03:05,473 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:05,473 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:05,585 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:05,585 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(10)), (np.int64(12), np.int64(5)))
2025-04-11 19:03:05,593 [INFO] Final candidates: []
2025-04-11 19:03:05,593 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:05,600 [INFO] Final candidates: []
2025-04-11 19:03:05,600 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:05,601 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:05,686 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:05,686 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(7)), (np.int64(11), np.int64(5)))
2025-04-11 19:03:05,694 [INFO] Final candidates: []
2025-04-11 19:03:05,694 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:05,701 [INFO] Final candidates: []
2025-04-11 19:03:05,701 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:05,701 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:05,823 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:05,823 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(7)), (np.int64(14), np.int64(11)))
2025-04-11 19:03:05,824 [DEBUG] board coords: [(14, 7), (14, 8), (14, 9), (14, 10), (14, 11), (14, 12)]
2025-04-11 19:03:05,824 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(0)]
2025-04-11 19:03:05,824 [DEBUG] check_window_intermediate_custom: empty_cells=[(14, 10), (14, 12)]
2025-04-11 19:03:05,824 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 1 0 1 0] with coords [(14, 7), (14, 8), (14, 9), (14, 10), (14, 11), (14, 12)] triggers candidate.
2025-04-11 19:03:05,831 [INFO] Final candidates: [(14, 12), (14, 10)]
2025-04-11 19:03:05,831 [INFO] Phase win: Collected 1unique candidate(s):[((14, 12), (14, 10))]
2025-04-11 19:03:05,831 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 19:03:05,839 [INFO] Final candidates: []
2025-04-11 19:03:05,839 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:05,839 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:05,880 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:05,880 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(6)), (np.int64(14), np.int64(0)))
2025-04-11 19:03:05,888 [INFO] Final candidates: []
2025-04-11 19:03:05,888 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:05,895 [INFO] Final candidates: []
2025-04-11 19:03:05,895 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:05,896 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:06,013 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:06,014 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(7)), (np.int64(13), np.int64(6)))
2025-04-11 19:03:06,021 [INFO] Final candidates: []
2025-04-11 19:03:06,021 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:06,029 [INFO] Final candidates: []
2025-04-11 19:03:06,029 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:06,029 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:06,245 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:06,245 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(17), np.int64(0)), (np.int64(11), np.int64(7)))
2025-04-11 19:03:06,253 [INFO] Final candidates: []
2025-04-11 19:03:06,253 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:06,260 [INFO] Final candidates: []
2025-04-11 19:03:06,260 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:06,261 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:06,359 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:06,359 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(5)), (np.int64(15), np.int64(6)))
2025-04-11 19:03:06,367 [INFO] Final candidates: []
2025-04-11 19:03:06,367 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:06,375 [INFO] Final candidates: []
2025-04-11 19:03:06,375 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:06,375 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:06,639 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:06,639 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(11)), (np.int64(15), np.int64(9)))
2025-04-11 19:03:06,640 [DEBUG] board coords: [(14, 7), (14, 8), (14, 9), (14, 10), (14, 11), (14, 12)]
2025-04-11 19:03:06,640 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(0)]
2025-04-11 19:03:06,640 [DEBUG] check_window_intermediate_custom: empty_cells=[(14, 10), (14, 12)]
2025-04-11 19:03:06,640 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 1 0 1 0] with coords [(14, 7), (14, 8), (14, 9), (14, 10), (14, 11), (14, 12)] triggers candidate.
2025-04-11 19:03:06,648 [INFO] Final candidates: [(14, 12), (14, 10)]
2025-04-11 19:03:06,648 [INFO] Phase win: Collected 1unique candidate(s):[((14, 12), (14, 10))]
2025-04-11 19:03:06,648 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 19:03:06,655 [INFO] Final candidates: []
2025-04-11 19:03:06,655 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:06,656 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:06,879 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:06,879 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(0)), (np.int64(16), np.int64(9)))
2025-04-11 19:03:06,890 [INFO] Final candidates: []
2025-04-11 19:03:06,890 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:06,903 [INFO] Final candidates: []
2025-04-11 19:03:06,903 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:06,903 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:06,936 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:06,936 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(8)), (np.int64(14), np.int64(5)))
2025-04-11 19:03:06,944 [INFO] Final candidates: []
2025-04-11 19:03:06,944 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:06,951 [INFO] Final candidates: []
2025-04-11 19:03:06,951 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:06,952 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:07,089 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:07,089 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(1)), (np.int64(14), np.int64(5)))
2025-04-11 19:03:07,097 [INFO] Final candidates: []
2025-04-11 19:03:07,097 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:07,104 [INFO] Final candidates: []
2025-04-11 19:03:07,104 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:07,105 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:07,217 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:07,217 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(5)), (np.int64(15), np.int64(10)))
2025-04-11 19:03:07,225 [INFO] Final candidates: []
2025-04-11 19:03:07,225 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:07,233 [INFO] Final candidates: []
2025-04-11 19:03:07,233 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:07,233 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:07,286 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:07,287 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(10)), (np.int64(15), np.int64(8)))
2025-04-11 19:03:07,288 [DEBUG] board coords: [(14, 7), (14, 8), (14, 9), (14, 10), (14, 11), (14, 12)]
2025-04-11 19:03:07,288 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:03:07,288 [DEBUG] check_window_intermediate_custom: empty_cells=[(14, 11), (14, 12)]
2025-04-11 19:03:07,288 [DEBUG] check_window_intermediate_custom (only one inserted(14, 11)): For L=6, window [1 1 1 1 0 0] with coords [(14, 7), (14, 8), (14, 9), (14, 10), (14, 11), (14, 12)] triggers candidate.
2025-04-11 19:03:07,295 [INFO] Final candidates: [(14, 11)]
2025-04-11 19:03:07,295 [INFO] Phase win: Found only one candidate: (14, 11)
2025-04-11 19:03:07,295 [INFO] Phase win: Collected 10unique candidate(s):[((14, 11), (np.int64(14), np.int64(12))), ((14, 11), (np.int64(16), np.int64(11))), ((14, 11), (np.int64(13), np.int64(12))), ((14, 11), (np.int64(15), np.int64(11))), ((14, 11), (np.int64(13), np.int64(10))), ((14, 11), (np.int64(14), np.int64(13))), ((14, 11), (np.int64(12), np.int64(11))), ((14, 11), (np.int64(13), np.int64(11))), ((14, 11), (np.int64(15), np.int64(10))), ((14, 11), (np.int64(15), np.int64(12)))]
2025-04-11 19:03:07,295 [INFO] Phase 1 (immediate win): 10 candidate(s) found.
2025-04-11 19:03:07,303 [INFO] Final candidates: []
2025-04-11 19:03:07,303 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:07,303 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:07,482 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:07,482 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(9)), (np.int64(14), np.int64(5)))
2025-04-11 19:03:07,490 [INFO] Final candidates: []
2025-04-11 19:03:07,490 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:07,498 [INFO] Final candidates: []
2025-04-11 19:03:07,498 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:07,498 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:07,548 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:07,548 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(10)), (np.int64(13), np.int64(6)))
2025-04-11 19:03:07,549 [DEBUG] board coords: [(14, 7), (14, 8), (14, 9), (14, 10), (14, 11), (14, 12)]
2025-04-11 19:03:07,549 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:03:07,549 [DEBUG] check_window_intermediate_custom: empty_cells=[(14, 11), (14, 12)]
2025-04-11 19:03:07,549 [DEBUG] check_window_intermediate_custom (only one inserted(14, 11)): For L=6, window [1 1 1 1 0 0] with coords [(14, 7), (14, 8), (14, 9), (14, 10), (14, 11), (14, 12)] triggers candidate.
2025-04-11 19:03:07,560 [INFO] Final candidates: [(14, 11)]
2025-04-11 19:03:07,560 [INFO] Phase win: Found only one candidate: (14, 11)
2025-04-11 19:03:07,560 [INFO] Phase win: Collected 10unique candidate(s):[((14, 11), (np.int64(14), np.int64(12))), ((14, 11), (np.int64(16), np.int64(11))), ((14, 11), (np.int64(13), np.int64(12))), ((14, 11), (np.int64(15), np.int64(11))), ((14, 11), (np.int64(13), np.int64(10))), ((14, 11), (np.int64(14), np.int64(13))), ((14, 11), (np.int64(12), np.int64(11))), ((14, 11), (np.int64(13), np.int64(11))), ((14, 11), (np.int64(15), np.int64(10))), ((14, 11), (np.int64(15), np.int64(12)))]
2025-04-11 19:03:07,560 [INFO] Phase 1 (immediate win): 10 candidate(s) found.
2025-04-11 19:03:07,568 [INFO] Final candidates: []
2025-04-11 19:03:07,568 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:07,569 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:07,627 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:07,627 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(2)), (np.int64(13), np.int64(6)))
2025-04-11 19:03:07,635 [INFO] Final candidates: []
2025-04-11 19:03:07,635 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:07,643 [INFO] Final candidates: []
2025-04-11 19:03:07,643 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:07,643 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:07,681 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:07,681 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(4)), (np.int64(13), np.int64(9)))
2025-04-11 19:03:07,689 [INFO] Final candidates: []
2025-04-11 19:03:07,689 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:07,697 [INFO] Final candidates: []
2025-04-11 19:03:07,697 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:07,697 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:07,729 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:07,729 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(0)), (np.int64(12), np.int64(5)))
2025-04-11 19:03:07,737 [INFO] Final candidates: []
2025-04-11 19:03:07,737 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:07,745 [INFO] Final candidates: []
2025-04-11 19:03:07,745 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:07,745 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:07,816 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:07,816 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(1)), (np.int64(13), np.int64(6)))
2025-04-11 19:03:07,824 [INFO] Final candidates: []
2025-04-11 19:03:07,824 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:07,831 [INFO] Final candidates: []
2025-04-11 19:03:07,831 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:07,832 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:07,981 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:07,981 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(10)), (np.int64(12), np.int64(8)))
2025-04-11 19:03:07,989 [INFO] Final candidates: []
2025-04-11 19:03:07,989 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:07,996 [INFO] Final candidates: []
2025-04-11 19:03:07,996 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:07,996 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:08,112 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:08,112 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(7)), (np.int64(14), np.int64(5)))
2025-04-11 19:03:08,120 [INFO] Final candidates: []
2025-04-11 19:03:08,120 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:08,127 [INFO] Final candidates: []
2025-04-11 19:03:08,127 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:08,128 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:08,254 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:08,254 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(6)), (np.int64(15), np.int64(9)))
2025-04-11 19:03:08,263 [INFO] Final candidates: []
2025-04-11 19:03:08,263 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:08,270 [INFO] Final candidates: []
2025-04-11 19:03:08,270 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:08,271 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:08,302 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:08,302 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(4)), (np.int64(16), np.int64(8)))
2025-04-11 19:03:08,310 [INFO] Final candidates: []
2025-04-11 19:03:08,310 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:08,318 [INFO] Final candidates: []
2025-04-11 19:03:08,318 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:08,318 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:08,377 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:08,377 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(17), np.int64(0)), (np.int64(15), np.int64(7)))
2025-04-11 19:03:08,385 [INFO] Final candidates: []
2025-04-11 19:03:08,385 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:08,393 [INFO] Final candidates: []
2025-04-11 19:03:08,393 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:08,394 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:08,477 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:08,477 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(17), np.int64(0)), (np.int64(16), np.int64(9)))
2025-04-11 19:03:08,485 [INFO] Final candidates: []
2025-04-11 19:03:08,485 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:08,493 [INFO] Final candidates: []
2025-04-11 19:03:08,493 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:08,493 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:08,532 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:08,532 [INFO] MCTS: Search finished. Best move selected with 1 visits.
2025-04-11 19:03:08,532 [INFO] MCTS selected move: A18,J14
2025-04-11 19:03:08,532 [INFO] ===============NEW MOVE================
2025-04-11 19:03:08,697 [INFO] Starting pre-MCTS candidate collection.
2025-04-11 19:03:08,705 [INFO] Final candidates: []
2025-04-11 19:03:08,705 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:08,712 [INFO] Final candidates: []
2025-04-11 19:03:08,712 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:08,712 [INFO] No candidate found in Phase 1 or 2; using full legal moves for MCTS.
2025-04-11 19:03:08,713 [INFO] MCTS: Starting search for 100 iterations.
2025-04-11 19:03:08,713 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(10)), (np.int64(15), np.int64(5)))
2025-04-11 19:03:08,720 [INFO] Final candidates: []
2025-04-11 19:03:08,721 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:08,728 [INFO] Final candidates: []
2025-04-11 19:03:08,728 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:08,728 [DEBUG] MCTS iteration 0: reached a node with 0 visits.
2025-04-11 19:03:08,728 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:08,798 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:08,798 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(0), np.int64(2)), (np.int64(13), np.int64(6)))
2025-04-11 19:03:08,806 [INFO] Final candidates: []
2025-04-11 19:03:08,806 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:08,814 [INFO] Final candidates: []
2025-04-11 19:03:08,814 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:08,815 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:09,051 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:09,051 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(9)), (np.int64(15), np.int64(6)))
2025-04-11 19:03:09,059 [INFO] Final candidates: []
2025-04-11 19:03:09,059 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:09,066 [INFO] Final candidates: []
2025-04-11 19:03:09,066 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:09,067 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:09,160 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:09,161 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(1)), (np.int64(11), np.int64(8)))
2025-04-11 19:03:09,168 [INFO] Final candidates: []
2025-04-11 19:03:09,168 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:09,176 [INFO] Final candidates: []
2025-04-11 19:03:09,176 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:09,177 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:09,279 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:09,279 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(10)), (np.int64(18), np.int64(0)))
2025-04-11 19:03:09,287 [INFO] Final candidates: []
2025-04-11 19:03:09,287 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:09,295 [INFO] Final candidates: []
2025-04-11 19:03:09,295 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:09,295 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:09,436 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:09,436 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(7)), (np.int64(0), np.int64(3)))
2025-04-11 19:03:09,444 [INFO] Final candidates: []
2025-04-11 19:03:09,444 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:09,451 [INFO] Final candidates: []
2025-04-11 19:03:09,451 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:09,452 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:09,595 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:09,595 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(5)), (np.int64(2), np.int64(3)))
2025-04-11 19:03:09,602 [INFO] Final candidates: []
2025-04-11 19:03:09,602 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:09,610 [INFO] Final candidates: []
2025-04-11 19:03:09,610 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:09,610 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:09,726 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:09,726 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(1), np.int64(3)), (np.int64(0), np.int64(3)))
2025-04-11 19:03:09,734 [INFO] Final candidates: []
2025-04-11 19:03:09,734 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:09,742 [INFO] Final candidates: []
2025-04-11 19:03:09,742 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:09,743 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:09,876 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:09,876 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(9)), (np.int64(17), np.int64(1)))
2025-04-11 19:03:09,884 [INFO] Final candidates: []
2025-04-11 19:03:09,884 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:09,891 [INFO] Final candidates: []
2025-04-11 19:03:09,891 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:09,892 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:09,989 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:09,989 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(0)), (np.int64(11), np.int64(6)))
2025-04-11 19:03:09,997 [INFO] Final candidates: []
2025-04-11 19:03:09,997 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:10,005 [INFO] Final candidates: []
2025-04-11 19:03:10,005 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:10,005 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:10,170 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:10,170 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(10)), (np.int64(16), np.int64(8)))
2025-04-11 19:03:10,178 [INFO] Final candidates: []
2025-04-11 19:03:10,178 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:10,185 [INFO] Final candidates: []
2025-04-11 19:03:10,185 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:10,186 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:10,389 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:10,389 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(6)), (np.int64(13), np.int64(0)))
2025-04-11 19:03:10,397 [INFO] Final candidates: []
2025-04-11 19:03:10,397 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:10,404 [INFO] Final candidates: []
2025-04-11 19:03:10,404 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:10,405 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:10,607 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:10,607 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(7)), (np.int64(16), np.int64(10)))
2025-04-11 19:03:10,615 [INFO] Final candidates: []
2025-04-11 19:03:10,615 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:10,623 [INFO] Final candidates: []
2025-04-11 19:03:10,623 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:10,624 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:10,949 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:10,949 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(1)), (np.int64(16), np.int64(8)))
2025-04-11 19:03:10,957 [INFO] Final candidates: []
2025-04-11 19:03:10,957 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:10,965 [INFO] Final candidates: []
2025-04-11 19:03:10,965 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:10,965 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:11,181 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:11,181 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(8)), (np.int64(18), np.int64(0)))
2025-04-11 19:03:11,189 [INFO] Final candidates: []
2025-04-11 19:03:11,189 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:11,196 [INFO] Final candidates: []
2025-04-11 19:03:11,196 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:11,196 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:11,322 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:11,323 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(8)), (np.int64(15), np.int64(2)))
2025-04-11 19:03:11,330 [INFO] Final candidates: []
2025-04-11 19:03:11,330 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:11,338 [INFO] Final candidates: []
2025-04-11 19:03:11,338 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:11,338 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:11,463 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:11,463 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(8)), (np.int64(13), np.int64(9)))
2025-04-11 19:03:11,471 [INFO] Final candidates: []
2025-04-11 19:03:11,471 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:11,478 [INFO] Final candidates: []
2025-04-11 19:03:11,478 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:11,479 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:11,647 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:11,648 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(3), np.int64(2)), (np.int64(1), np.int64(4)))
2025-04-11 19:03:11,655 [INFO] Final candidates: []
2025-04-11 19:03:11,655 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:11,663 [INFO] Final candidates: []
2025-04-11 19:03:11,663 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:11,663 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:11,779 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:11,779 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(2)), (np.int64(14), np.int64(0)))
2025-04-11 19:03:11,787 [INFO] Final candidates: []
2025-04-11 19:03:11,787 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:11,795 [INFO] Final candidates: []
2025-04-11 19:03:11,795 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:11,795 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:11,995 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:11,996 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(2), np.int64(2)), (np.int64(15), np.int64(11)))
2025-04-11 19:03:12,003 [INFO] Final candidates: []
2025-04-11 19:03:12,003 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:12,011 [INFO] Final candidates: []
2025-04-11 19:03:12,011 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:12,011 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:12,091 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:12,092 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(10)), (np.int64(14), np.int64(1)))
2025-04-11 19:03:12,100 [INFO] Final candidates: []
2025-04-11 19:03:12,100 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:12,114 [INFO] Final candidates: []
2025-04-11 19:03:12,114 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:12,115 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:12,189 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:12,189 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(10)), (np.int64(3), np.int64(2)))
2025-04-11 19:03:12,197 [INFO] Final candidates: []
2025-04-11 19:03:12,197 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:12,205 [INFO] Final candidates: []
2025-04-11 19:03:12,205 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:12,205 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:12,272 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:12,273 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(1), np.int64(3)), (np.int64(15), np.int64(9)))
2025-04-11 19:03:12,281 [INFO] Final candidates: []
2025-04-11 19:03:12,281 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:12,290 [INFO] Final candidates: []
2025-04-11 19:03:12,290 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:12,290 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:12,308 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:12,308 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(8)), (np.int64(13), np.int64(5)))
2025-04-11 19:03:12,316 [INFO] Final candidates: []
2025-04-11 19:03:12,316 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:12,323 [INFO] Final candidates: []
2025-04-11 19:03:12,323 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:12,324 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:12,333 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:12,333 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(1), np.int64(1)), (np.int64(2), np.int64(3)))
2025-04-11 19:03:12,341 [INFO] Final candidates: []
2025-04-11 19:03:12,341 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:12,349 [INFO] Final candidates: []
2025-04-11 19:03:12,349 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:12,349 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:12,442 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:12,443 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(10)), (np.int64(13), np.int64(0)))
2025-04-11 19:03:12,450 [INFO] Final candidates: []
2025-04-11 19:03:12,450 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:12,458 [INFO] Final candidates: []
2025-04-11 19:03:12,458 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:12,458 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:12,578 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:12,579 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(2)), (np.int64(15), np.int64(11)))
2025-04-11 19:03:12,586 [INFO] Final candidates: []
2025-04-11 19:03:12,586 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:12,594 [INFO] Final candidates: []
2025-04-11 19:03:12,594 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:12,594 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:12,752 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:12,753 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(1)), (np.int64(14), np.int64(0)))
2025-04-11 19:03:12,761 [INFO] Final candidates: []
2025-04-11 19:03:12,762 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:12,769 [INFO] Final candidates: []
2025-04-11 19:03:12,769 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:12,769 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:12,923 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:12,923 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(0), np.int64(1)), (np.int64(14), np.int64(5)))
2025-04-11 19:03:12,932 [INFO] Final candidates: []
2025-04-11 19:03:12,932 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:12,941 [INFO] Final candidates: []
2025-04-11 19:03:12,941 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:12,941 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:13,129 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:13,129 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(2)), (np.int64(15), np.int64(1)))
2025-04-11 19:03:13,136 [INFO] Final candidates: []
2025-04-11 19:03:13,136 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:13,144 [INFO] Final candidates: []
2025-04-11 19:03:13,144 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:13,144 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:13,307 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:13,307 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(7)), (np.int64(15), np.int64(6)))
2025-04-11 19:03:13,315 [INFO] Final candidates: []
2025-04-11 19:03:13,315 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:13,322 [INFO] Final candidates: []
2025-04-11 19:03:13,322 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:13,323 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:13,442 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:13,442 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(9)), (np.int64(15), np.int64(1)))
2025-04-11 19:03:13,450 [INFO] Final candidates: []
2025-04-11 19:03:13,450 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:13,458 [INFO] Final candidates: []
2025-04-11 19:03:13,458 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:13,458 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:13,485 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:13,485 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(10)), (np.int64(13), np.int64(9)))
2025-04-11 19:03:13,493 [INFO] Final candidates: []
2025-04-11 19:03:13,493 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:13,500 [INFO] Final candidates: []
2025-04-11 19:03:13,500 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:13,501 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:13,583 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:13,583 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(10)), (np.int64(16), np.int64(9)))
2025-04-11 19:03:13,591 [INFO] Final candidates: []
2025-04-11 19:03:13,591 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:13,598 [INFO] Final candidates: []
2025-04-11 19:03:13,598 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:13,598 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:13,703 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:13,704 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(2), np.int64(1)), (np.int64(1), np.int64(1)))
2025-04-11 19:03:13,711 [INFO] Final candidates: []
2025-04-11 19:03:13,711 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:13,719 [INFO] Final candidates: []
2025-04-11 19:03:13,719 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:13,719 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:13,777 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:13,778 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(18), np.int64(1)), (np.int64(17), np.int64(2)))
2025-04-11 19:03:13,785 [INFO] Final candidates: []
2025-04-11 19:03:13,785 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:13,795 [INFO] Final candidates: []
2025-04-11 19:03:13,795 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:13,795 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:13,816 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:13,816 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(8)), (np.int64(1), np.int64(4)))
2025-04-11 19:03:13,824 [INFO] Final candidates: []
2025-04-11 19:03:13,824 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:13,832 [INFO] Final candidates: []
2025-04-11 19:03:13,832 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:13,833 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:14,007 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:14,007 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(0)), (np.int64(13), np.int64(6)))
2025-04-11 19:03:14,014 [INFO] Final candidates: []
2025-04-11 19:03:14,014 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:14,022 [INFO] Final candidates: []
2025-04-11 19:03:14,022 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:14,022 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:14,047 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:14,047 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(9)), (np.int64(18), np.int64(0)))
2025-04-11 19:03:14,054 [INFO] Final candidates: []
2025-04-11 19:03:14,055 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:14,062 [INFO] Final candidates: []
2025-04-11 19:03:14,062 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:14,063 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:14,127 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:14,127 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(4)), (np.int64(16), np.int64(9)))
2025-04-11 19:03:14,135 [INFO] Final candidates: []
2025-04-11 19:03:14,135 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:14,142 [INFO] Final candidates: []
2025-04-11 19:03:14,142 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:14,143 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:14,201 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:14,201 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(10)), (np.int64(14), np.int64(0)))
2025-04-11 19:03:14,209 [INFO] Final candidates: []
2025-04-11 19:03:14,209 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:14,216 [INFO] Final candidates: []
2025-04-11 19:03:14,216 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:14,216 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:14,303 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:14,303 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(10)), (np.int64(13), np.int64(0)))
2025-04-11 19:03:14,311 [INFO] Final candidates: []
2025-04-11 19:03:14,311 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:14,318 [INFO] Final candidates: []
2025-04-11 19:03:14,318 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:14,318 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:14,496 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:14,496 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(7)), (np.int64(1), np.int64(4)))
2025-04-11 19:03:14,504 [INFO] Final candidates: []
2025-04-11 19:03:14,504 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:14,511 [INFO] Final candidates: []
2025-04-11 19:03:14,512 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:14,512 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:14,567 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:14,568 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(2)), (np.int64(15), np.int64(8)))
2025-04-11 19:03:14,575 [INFO] Final candidates: []
2025-04-11 19:03:14,575 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:14,583 [INFO] Final candidates: []
2025-04-11 19:03:14,583 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:14,583 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:14,650 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:14,650 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(5)), (np.int64(15), np.int64(8)))
2025-04-11 19:03:14,658 [INFO] Final candidates: []
2025-04-11 19:03:14,658 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:14,665 [INFO] Final candidates: []
2025-04-11 19:03:14,665 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:14,666 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:14,838 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:14,838 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(5)), (np.int64(11), np.int64(6)))
2025-04-11 19:03:14,846 [INFO] Final candidates: []
2025-04-11 19:03:14,846 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:14,855 [INFO] Final candidates: []
2025-04-11 19:03:14,855 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:14,856 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:15,000 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:15,000 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(8)), (np.int64(15), np.int64(10)))
2025-04-11 19:03:15,008 [INFO] Final candidates: []
2025-04-11 19:03:15,008 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:15,015 [INFO] Final candidates: []
2025-04-11 19:03:15,015 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:15,016 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:15,173 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:15,173 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(1), np.int64(0)), (np.int64(15), np.int64(1)))
2025-04-11 19:03:15,181 [INFO] Final candidates: []
2025-04-11 19:03:15,181 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:15,189 [INFO] Final candidates: []
2025-04-11 19:03:15,189 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:15,189 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:15,303 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:15,304 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(6)), (np.int64(12), np.int64(8)))
2025-04-11 19:03:15,312 [INFO] Final candidates: []
2025-04-11 19:03:15,312 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:15,320 [INFO] Final candidates: []
2025-04-11 19:03:15,320 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:15,320 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:15,398 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:15,399 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(11)), (np.int64(15), np.int64(6)))
2025-04-11 19:03:15,406 [INFO] Final candidates: []
2025-04-11 19:03:15,406 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:15,414 [INFO] Final candidates: []
2025-04-11 19:03:15,414 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:15,414 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:15,667 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:15,667 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(1), np.int64(3)), (np.int64(15), np.int64(5)))
2025-04-11 19:03:15,675 [INFO] Final candidates: []
2025-04-11 19:03:15,675 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:15,683 [INFO] Final candidates: []
2025-04-11 19:03:15,683 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:15,683 [DEBUG] MCTS iteration 50: reached a node with 0 visits.
2025-04-11 19:03:15,683 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:15,810 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:15,810 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(4)), (np.int64(1), np.int64(0)))
2025-04-11 19:03:15,818 [INFO] Final candidates: []
2025-04-11 19:03:15,818 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:15,825 [INFO] Final candidates: []
2025-04-11 19:03:15,825 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:15,826 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:15,975 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:15,975 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(2), np.int64(1)), (np.int64(16), np.int64(9)))
2025-04-11 19:03:15,983 [INFO] Final candidates: []
2025-04-11 19:03:15,983 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:15,991 [INFO] Final candidates: []
2025-04-11 19:03:15,991 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:15,991 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:16,197 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:16,197 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(5)), (np.int64(13), np.int64(9)))
2025-04-11 19:03:16,205 [INFO] Final candidates: []
2025-04-11 19:03:16,205 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:16,212 [INFO] Final candidates: []
2025-04-11 19:03:16,212 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:16,213 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:16,245 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:16,245 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(0)), (np.int64(16), np.int64(6)))
2025-04-11 19:03:16,253 [INFO] Final candidates: []
2025-04-11 19:03:16,253 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:16,260 [INFO] Final candidates: []
2025-04-11 19:03:16,260 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:16,261 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:16,362 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:16,362 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(10)), (np.int64(14), np.int64(11)))
2025-04-11 19:03:16,370 [INFO] Final candidates: []
2025-04-11 19:03:16,370 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:16,377 [INFO] Final candidates: []
2025-04-11 19:03:16,377 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:16,378 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:16,586 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:16,586 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(1), np.int64(3)), (np.int64(13), np.int64(9)))
2025-04-11 19:03:16,594 [INFO] Final candidates: []
2025-04-11 19:03:16,594 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:16,602 [INFO] Final candidates: []
2025-04-11 19:03:16,602 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:16,603 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:16,621 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:16,622 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(6)), (np.int64(3), np.int64(2)))
2025-04-11 19:03:16,629 [INFO] Final candidates: []
2025-04-11 19:03:16,629 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:16,637 [INFO] Final candidates: []
2025-04-11 19:03:16,637 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:16,637 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:16,692 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:16,693 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(2), np.int64(2)), (np.int64(3), np.int64(2)))
2025-04-11 19:03:16,700 [INFO] Final candidates: []
2025-04-11 19:03:16,700 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:16,708 [INFO] Final candidates: []
2025-04-11 19:03:16,708 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:16,709 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:16,732 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:16,732 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(6)), (np.int64(13), np.int64(9)))
2025-04-11 19:03:16,740 [INFO] Final candidates: []
2025-04-11 19:03:16,740 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:16,748 [INFO] Final candidates: []
2025-04-11 19:03:16,748 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:16,748 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:17,058 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:17,058 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(18), np.int64(0)), (np.int64(11), np.int64(6)))
2025-04-11 19:03:17,066 [INFO] Final candidates: []
2025-04-11 19:03:17,066 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:17,073 [INFO] Final candidates: []
2025-04-11 19:03:17,074 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:17,074 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:17,196 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:17,196 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(18), np.int64(0)), (np.int64(3), np.int64(2)))
2025-04-11 19:03:17,204 [INFO] Final candidates: []
2025-04-11 19:03:17,204 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:17,212 [INFO] Final candidates: []
2025-04-11 19:03:17,212 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:17,212 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:17,252 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:17,253 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(6)), (np.int64(18), np.int64(0)))
2025-04-11 19:03:17,260 [INFO] Final candidates: []
2025-04-11 19:03:17,260 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:17,268 [INFO] Final candidates: []
2025-04-11 19:03:17,268 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:17,268 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:17,368 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:17,368 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(11)), (np.int64(11), np.int64(6)))
2025-04-11 19:03:17,376 [INFO] Final candidates: []
2025-04-11 19:03:17,376 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:17,383 [INFO] Final candidates: []
2025-04-11 19:03:17,383 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:17,383 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:17,433 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:17,433 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(1), np.int64(3)), (np.int64(12), np.int64(9)))
2025-04-11 19:03:17,441 [INFO] Final candidates: []
2025-04-11 19:03:17,441 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:17,448 [INFO] Final candidates: []
2025-04-11 19:03:17,448 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:17,448 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:17,743 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:17,744 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(1)), (np.int64(16), np.int64(10)))
2025-04-11 19:03:17,751 [INFO] Final candidates: []
2025-04-11 19:03:17,751 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:17,759 [INFO] Final candidates: []
2025-04-11 19:03:17,759 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:17,759 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:17,890 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:17,891 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(4)), (np.int64(3), np.int64(2)))
2025-04-11 19:03:17,901 [INFO] Final candidates: []
2025-04-11 19:03:17,901 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:17,908 [INFO] Final candidates: []
2025-04-11 19:03:17,908 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:17,909 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:17,975 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:17,975 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(11)), (np.int64(17), np.int64(2)))
2025-04-11 19:03:17,983 [INFO] Final candidates: []
2025-04-11 19:03:17,983 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:17,991 [INFO] Final candidates: []
2025-04-11 19:03:17,991 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:17,991 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:18,092 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:18,092 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(8)), (np.int64(16), np.int64(0)))
2025-04-11 19:03:18,100 [INFO] Final candidates: []
2025-04-11 19:03:18,100 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:18,107 [INFO] Final candidates: []
2025-04-11 19:03:18,107 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:18,108 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:18,193 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:18,193 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(0), np.int64(2)), (np.int64(12), np.int64(9)))
2025-04-11 19:03:18,201 [INFO] Final candidates: []
2025-04-11 19:03:18,201 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:18,208 [INFO] Final candidates: []
2025-04-11 19:03:18,208 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:18,209 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:18,225 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:18,225 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(18), np.int64(1)), (np.int64(16), np.int64(8)))
2025-04-11 19:03:18,233 [INFO] Final candidates: []
2025-04-11 19:03:18,233 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:18,240 [INFO] Final candidates: []
2025-04-11 19:03:18,240 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:18,241 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:18,465 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:18,465 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(0), np.int64(1)), (np.int64(1), np.int64(4)))
2025-04-11 19:03:18,473 [INFO] Final candidates: []
2025-04-11 19:03:18,473 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:18,480 [INFO] Final candidates: []
2025-04-11 19:03:18,480 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:18,480 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:18,750 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:18,750 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(7)), (np.int64(18), np.int64(0)))
2025-04-11 19:03:18,757 [INFO] Final candidates: []
2025-04-11 19:03:18,757 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:18,765 [INFO] Final candidates: []
2025-04-11 19:03:18,765 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:18,765 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:18,905 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:18,905 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(6)), (np.int64(16), np.int64(1)))
2025-04-11 19:03:18,913 [INFO] Final candidates: []
2025-04-11 19:03:18,913 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:18,920 [INFO] Final candidates: []
2025-04-11 19:03:18,920 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:18,921 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:19,020 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:19,020 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(0), np.int64(2)), (np.int64(13), np.int64(5)))
2025-04-11 19:03:19,028 [INFO] Final candidates: []
2025-04-11 19:03:19,028 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:19,035 [INFO] Final candidates: []
2025-04-11 19:03:19,035 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:19,036 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:19,057 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:19,057 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(5)), (np.int64(16), np.int64(8)))
2025-04-11 19:03:19,065 [INFO] Final candidates: []
2025-04-11 19:03:19,065 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:19,073 [INFO] Final candidates: []
2025-04-11 19:03:19,073 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:19,073 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:19,151 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:19,151 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(6)), (np.int64(16), np.int64(8)))
2025-04-11 19:03:19,159 [INFO] Final candidates: []
2025-04-11 19:03:19,159 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:19,167 [INFO] Final candidates: []
2025-04-11 19:03:19,167 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:19,167 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:19,195 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:19,195 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(2)), (np.int64(16), np.int64(6)))
2025-04-11 19:03:19,203 [INFO] Final candidates: []
2025-04-11 19:03:19,203 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:19,210 [INFO] Final candidates: []
2025-04-11 19:03:19,210 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:19,211 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:19,278 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:19,278 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(9)), (np.int64(15), np.int64(10)))
2025-04-11 19:03:19,285 [INFO] Final candidates: []
2025-04-11 19:03:19,286 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:19,293 [INFO] Final candidates: []
2025-04-11 19:03:19,293 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:19,293 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:19,576 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:19,576 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(11)), (np.int64(2), np.int64(3)))
2025-04-11 19:03:19,584 [INFO] Final candidates: []
2025-04-11 19:03:19,584 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:19,591 [INFO] Final candidates: []
2025-04-11 19:03:19,591 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:19,591 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:19,767 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:19,768 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(7)), (np.int64(12), np.int64(5)))
2025-04-11 19:03:19,775 [INFO] Final candidates: []
2025-04-11 19:03:19,775 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:19,783 [INFO] Final candidates: []
2025-04-11 19:03:19,783 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:19,783 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:19,844 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:19,845 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(8)), (np.int64(2), np.int64(3)))
2025-04-11 19:03:19,853 [INFO] Final candidates: []
2025-04-11 19:03:19,853 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:19,861 [INFO] Final candidates: []
2025-04-11 19:03:19,861 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:19,861 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:20,121 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:20,121 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(5)), (np.int64(15), np.int64(6)))
2025-04-11 19:03:20,129 [INFO] Final candidates: []
2025-04-11 19:03:20,129 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:20,136 [INFO] Final candidates: []
2025-04-11 19:03:20,136 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:20,137 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:20,220 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:20,220 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(8)), (np.int64(14), np.int64(11)))
2025-04-11 19:03:20,228 [INFO] Final candidates: []
2025-04-11 19:03:20,228 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:20,235 [INFO] Final candidates: []
2025-04-11 19:03:20,235 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:20,236 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:20,351 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:20,351 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(6)), (np.int64(18), np.int64(0)))
2025-04-11 19:03:20,360 [INFO] Final candidates: []
2025-04-11 19:03:20,360 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:20,368 [INFO] Final candidates: []
2025-04-11 19:03:20,368 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:20,368 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:20,562 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:20,562 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(0), np.int64(2)), (np.int64(15), np.int64(9)))
2025-04-11 19:03:20,576 [INFO] Final candidates: []
2025-04-11 19:03:20,576 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:20,586 [INFO] Final candidates: []
2025-04-11 19:03:20,586 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:20,586 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:20,860 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:20,860 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(5)), (np.int64(0), np.int64(3)))
2025-04-11 19:03:20,868 [INFO] Final candidates: []
2025-04-11 19:03:20,868 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:20,876 [INFO] Final candidates: []
2025-04-11 19:03:20,876 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:20,876 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:20,898 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:20,898 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(2), np.int64(2)), (np.int64(13), np.int64(5)))
2025-04-11 19:03:20,906 [INFO] Final candidates: []
2025-04-11 19:03:20,906 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:20,913 [INFO] Final candidates: []
2025-04-11 19:03:20,914 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:20,914 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:21,166 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:21,166 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(7)), (np.int64(16), np.int64(0)))
2025-04-11 19:03:21,174 [INFO] Final candidates: []
2025-04-11 19:03:21,174 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:21,181 [INFO] Final candidates: []
2025-04-11 19:03:21,181 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:21,182 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:21,306 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:21,307 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(8)), (np.int64(15), np.int64(11)))
2025-04-11 19:03:21,315 [INFO] Final candidates: []
2025-04-11 19:03:21,315 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:21,322 [INFO] Final candidates: []
2025-04-11 19:03:21,322 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:21,322 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:21,492 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:21,493 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(6)), (np.int64(12), np.int64(5)))
2025-04-11 19:03:21,500 [INFO] Final candidates: []
2025-04-11 19:03:21,500 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:21,508 [INFO] Final candidates: []
2025-04-11 19:03:21,508 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:21,508 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:21,625 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:21,626 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(4)), (np.int64(13), np.int64(10)))
2025-04-11 19:03:21,633 [INFO] Final candidates: []
2025-04-11 19:03:21,633 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:21,641 [INFO] Final candidates: []
2025-04-11 19:03:21,641 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:21,641 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:21,733 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:21,734 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(9)), (np.int64(16), np.int64(8)))
2025-04-11 19:03:21,741 [INFO] Final candidates: []
2025-04-11 19:03:21,741 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:21,749 [INFO] Final candidates: []
2025-04-11 19:03:21,749 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:21,749 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:21,936 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:21,936 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(0), np.int64(2)), (np.int64(13), np.int64(9)))
2025-04-11 19:03:21,944 [INFO] Final candidates: []
2025-04-11 19:03:21,944 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:21,952 [INFO] Final candidates: []
2025-04-11 19:03:21,952 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:21,952 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:22,025 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:22,025 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(2)), (np.int64(0), np.int64(1)))
2025-04-11 19:03:22,033 [INFO] Final candidates: []
2025-04-11 19:03:22,033 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:22,041 [INFO] Final candidates: []
2025-04-11 19:03:22,041 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:22,041 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:22,086 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:22,086 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(2), np.int64(2)), (np.int64(13), np.int64(10)))
2025-04-11 19:03:22,094 [INFO] Final candidates: []
2025-04-11 19:03:22,094 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:22,101 [INFO] Final candidates: []
2025-04-11 19:03:22,101 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:22,102 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:22,242 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:22,242 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(7)), (np.int64(0), np.int64(3)))
2025-04-11 19:03:22,250 [INFO] Final candidates: []
2025-04-11 19:03:22,250 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:22,257 [INFO] Final candidates: []
2025-04-11 19:03:22,257 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:22,257 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:22,291 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:22,291 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(0)), (np.int64(1), np.int64(4)))
2025-04-11 19:03:22,298 [INFO] Final candidates: []
2025-04-11 19:03:22,298 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:22,306 [INFO] Final candidates: []
2025-04-11 19:03:22,306 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:22,306 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:22,366 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:22,366 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(1), np.int64(3)), (np.int64(13), np.int64(5)))
2025-04-11 19:03:22,374 [INFO] Final candidates: []
2025-04-11 19:03:22,374 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:22,382 [INFO] Final candidates: []
2025-04-11 19:03:22,382 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:22,382 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:22,452 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:22,452 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(8)), (np.int64(15), np.int64(7)))
2025-04-11 19:03:22,463 [INFO] Final candidates: []
2025-04-11 19:03:22,463 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:22,471 [INFO] Final candidates: []
2025-04-11 19:03:22,471 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:22,471 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:22,610 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:22,610 [INFO] MCTS: Search finished. Best move selected with 1 visits.
2025-04-11 19:03:22,610 [INFO] MCTS selected move: L13,F16
2025-04-11 19:03:22,610 [INFO] ===============NEW MOVE================
2025-04-11 19:03:22,802 [INFO] Starting pre-MCTS candidate collection.
2025-04-11 19:03:22,809 [INFO] Final candidates: []
2025-04-11 19:03:22,809 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:22,817 [INFO] Final candidates: []
2025-04-11 19:03:22,817 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:22,817 [INFO] No candidate found in Phase 1 or 2; using full legal moves for MCTS.
2025-04-11 19:03:22,817 [INFO] MCTS: Starting search for 100 iterations.
2025-04-11 19:03:22,817 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(8)), (np.int64(16), np.int64(8)))
2025-04-11 19:03:22,820 [DEBUG] board coords: [(13, 8), (14, 8), (15, 8), (16, 8), (17, 8), (18, 8)]
2025-04-11 19:03:22,820 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:03:22,820 [DEBUG] check_window_intermediate_custom: empty_cells=[(17, 8), (18, 8)]
2025-04-11 19:03:22,820 [DEBUG] check_window_intermediate_custom (only one inserted(17, 8)): For L=6, window [1 1 1 1 0 0] with coords [(13, 8), (14, 8), (15, 8), (16, 8), (17, 8), (18, 8)] triggers candidate.
2025-04-11 19:03:22,825 [INFO] Final candidates: [(17, 8)]
2025-04-11 19:03:22,825 [INFO] Phase win: Found only one candidate: (17, 8)
2025-04-11 19:03:22,825 [INFO] Phase win: Collected 9unique candidate(s):[((17, 8), (np.int64(17), np.int64(9))), ((17, 8), (np.int64(16), np.int64(9))), ((17, 8), (np.int64(18), np.int64(8))), ((17, 8), (np.int64(17), np.int64(6))), ((17, 8), (np.int64(18), np.int64(7))), ((17, 8), (np.int64(17), np.int64(10))), ((17, 8), (np.int64(18), np.int64(9))), ((17, 8), (np.int64(17), np.int64(7))), ((17, 8), (np.int64(16), np.int64(7)))]
2025-04-11 19:03:22,825 [INFO] Phase 1 (immediate win): 9 candidate(s) found.
2025-04-11 19:03:22,833 [INFO] Final candidates: []
2025-04-11 19:03:22,833 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:22,833 [DEBUG] MCTS iteration 0: reached a node with 0 visits.
2025-04-11 19:03:22,833 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:22,950 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:22,950 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(0), np.int64(2)), (np.int64(1), np.int64(3)))
2025-04-11 19:03:22,958 [INFO] Final candidates: []
2025-04-11 19:03:22,958 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:22,965 [INFO] Final candidates: []
2025-04-11 19:03:22,965 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:22,966 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:23,094 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:23,095 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(12)), (np.int64(0), np.int64(3)))
2025-04-11 19:03:23,102 [INFO] Final candidates: []
2025-04-11 19:03:23,102 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:23,109 [INFO] Final candidates: []
2025-04-11 19:03:23,109 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:23,110 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:23,332 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:23,332 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(2), np.int64(1)), (np.int64(11), np.int64(6)))
2025-04-11 19:03:23,340 [INFO] Final candidates: []
2025-04-11 19:03:23,340 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:23,347 [INFO] Final candidates: []
2025-04-11 19:03:23,347 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:23,347 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:23,511 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:23,511 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(2)), (np.int64(16), np.int64(4)))
2025-04-11 19:03:23,518 [INFO] Final candidates: []
2025-04-11 19:03:23,518 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:23,526 [INFO] Final candidates: []
2025-04-11 19:03:23,526 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:23,526 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:23,636 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:23,636 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(11)), (np.int64(14), np.int64(5)))
2025-04-11 19:03:23,645 [INFO] Final candidates: []
2025-04-11 19:03:23,645 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:23,653 [INFO] Final candidates: []
2025-04-11 19:03:23,653 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:23,653 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:23,690 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:23,690 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(2), np.int64(2)), (np.int64(13), np.int64(11)))
2025-04-11 19:03:23,697 [INFO] Final candidates: []
2025-04-11 19:03:23,697 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:23,705 [INFO] Final candidates: []
2025-04-11 19:03:23,705 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:23,705 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:23,837 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:23,837 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(0)), (np.int64(15), np.int64(6)))
2025-04-11 19:03:23,845 [INFO] Final candidates: []
2025-04-11 19:03:23,845 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:23,852 [INFO] Final candidates: []
2025-04-11 19:03:23,852 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:23,853 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:23,921 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:23,921 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(5)), (np.int64(12), np.int64(11)))
2025-04-11 19:03:23,928 [INFO] Final candidates: []
2025-04-11 19:03:23,928 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:23,936 [INFO] Final candidates: []
2025-04-11 19:03:23,936 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:23,936 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:23,947 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:23,947 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(10)), (np.int64(15), np.int64(9)))
2025-04-11 19:03:23,955 [INFO] Final candidates: []
2025-04-11 19:03:23,955 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:23,962 [INFO] Final candidates: []
2025-04-11 19:03:23,962 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:23,963 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:24,123 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:24,123 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(8)), (np.int64(11), np.int64(10)))
2025-04-11 19:03:24,131 [INFO] Final candidates: []
2025-04-11 19:03:24,131 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:24,138 [INFO] Final candidates: []
2025-04-11 19:03:24,138 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:24,138 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:24,202 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:24,202 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(7)), (np.int64(14), np.int64(5)))
2025-04-11 19:03:24,210 [INFO] Final candidates: []
2025-04-11 19:03:24,210 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:24,217 [INFO] Final candidates: []
2025-04-11 19:03:24,217 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:24,217 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:24,433 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:24,434 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(1), np.int64(3)), (np.int64(18), np.int64(0)))
2025-04-11 19:03:24,441 [INFO] Final candidates: []
2025-04-11 19:03:24,441 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:24,449 [INFO] Final candidates: []
2025-04-11 19:03:24,449 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:24,449 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:24,542 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:24,542 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(4)), (np.int64(0), np.int64(3)))
2025-04-11 19:03:24,550 [INFO] Final candidates: []
2025-04-11 19:03:24,550 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:24,557 [INFO] Final candidates: []
2025-04-11 19:03:24,557 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:24,558 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:24,694 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:24,694 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(0), np.int64(2)), (np.int64(15), np.int64(2)))
2025-04-11 19:03:24,702 [INFO] Final candidates: []
2025-04-11 19:03:24,702 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:24,709 [INFO] Final candidates: []
2025-04-11 19:03:24,709 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:24,709 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:24,758 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:24,758 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(12)), (np.int64(13), np.int64(0)))
2025-04-11 19:03:24,765 [INFO] Final candidates: []
2025-04-11 19:03:24,765 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:24,773 [INFO] Final candidates: []
2025-04-11 19:03:24,773 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:24,773 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:24,824 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:24,824 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(0)), (np.int64(15), np.int64(9)))
2025-04-11 19:03:24,832 [INFO] Final candidates: []
2025-04-11 19:03:24,832 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:24,840 [INFO] Final candidates: []
2025-04-11 19:03:24,840 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:24,840 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:24,969 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:24,970 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(8)), (np.int64(16), np.int64(4)))
2025-04-11 19:03:24,977 [INFO] Final candidates: []
2025-04-11 19:03:24,977 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:24,984 [INFO] Final candidates: []
2025-04-11 19:03:24,984 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:24,985 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:25,104 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:25,105 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(8)), (np.int64(14), np.int64(5)))
2025-04-11 19:03:25,112 [INFO] Final candidates: []
2025-04-11 19:03:25,112 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:25,119 [INFO] Final candidates: []
2025-04-11 19:03:25,119 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:25,120 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:25,264 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:25,264 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(18), np.int64(1)), (np.int64(15), np.int64(1)))
2025-04-11 19:03:25,271 [INFO] Final candidates: []
2025-04-11 19:03:25,271 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:25,279 [INFO] Final candidates: []
2025-04-11 19:03:25,279 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:25,280 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:25,362 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:25,362 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(0)), (np.int64(15), np.int64(7)))
2025-04-11 19:03:25,369 [INFO] Final candidates: []
2025-04-11 19:03:25,369 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:25,377 [INFO] Final candidates: []
2025-04-11 19:03:25,377 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:25,378 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:25,551 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:25,551 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(12)), (np.int64(15), np.int64(7)))
2025-04-11 19:03:25,570 [INFO] Final candidates: []
2025-04-11 19:03:25,570 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:25,578 [INFO] Final candidates: []
2025-04-11 19:03:25,579 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:25,579 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:25,634 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:25,634 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(18), np.int64(0)), (np.int64(13), np.int64(6)))
2025-04-11 19:03:25,642 [INFO] Final candidates: []
2025-04-11 19:03:25,642 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:25,650 [INFO] Final candidates: []
2025-04-11 19:03:25,650 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:25,650 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:25,698 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:25,698 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(2)), (np.int64(15), np.int64(9)))
2025-04-11 19:03:25,706 [INFO] Final candidates: []
2025-04-11 19:03:25,706 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:25,713 [INFO] Final candidates: []
2025-04-11 19:03:25,714 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:25,714 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:25,789 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:25,789 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(7)), (np.int64(15), np.int64(2)))
2025-04-11 19:03:25,798 [INFO] Final candidates: []
2025-04-11 19:03:25,798 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:25,805 [INFO] Final candidates: []
2025-04-11 19:03:25,805 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:25,806 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:26,000 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:26,001 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(5)), (np.int64(16), np.int64(10)))
2025-04-11 19:03:26,011 [INFO] Final candidates: []
2025-04-11 19:03:26,011 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:26,018 [INFO] Final candidates: []
2025-04-11 19:03:26,018 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:26,019 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:26,055 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:26,056 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(5)), (np.int64(13), np.int64(0)))
2025-04-11 19:03:26,063 [INFO] Final candidates: []
2025-04-11 19:03:26,063 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:26,071 [INFO] Final candidates: []
2025-04-11 19:03:26,071 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:26,071 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:26,155 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:26,156 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(1)), (np.int64(11), np.int64(5)))
2025-04-11 19:03:26,164 [INFO] Final candidates: []
2025-04-11 19:03:26,164 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:26,171 [INFO] Final candidates: []
2025-04-11 19:03:26,171 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:26,171 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:26,317 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:26,317 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(0)), (np.int64(16), np.int64(6)))
2025-04-11 19:03:26,324 [INFO] Final candidates: []
2025-04-11 19:03:26,325 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:26,332 [INFO] Final candidates: []
2025-04-11 19:03:26,332 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:26,332 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:26,443 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:26,443 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(8)), (np.int64(15), np.int64(1)))
2025-04-11 19:03:26,450 [INFO] Final candidates: []
2025-04-11 19:03:26,450 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:26,458 [INFO] Final candidates: []
2025-04-11 19:03:26,458 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:26,458 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:26,587 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:26,587 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(1)), (np.int64(10), np.int64(8)))
2025-04-11 19:03:26,595 [INFO] Final candidates: []
2025-04-11 19:03:26,595 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:26,602 [INFO] Final candidates: []
2025-04-11 19:03:26,602 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:26,603 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:26,734 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:26,734 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(4)), (np.int64(15), np.int64(10)))
2025-04-11 19:03:26,742 [INFO] Final candidates: []
2025-04-11 19:03:26,742 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:26,749 [INFO] Final candidates: []
2025-04-11 19:03:26,749 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:26,750 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:27,004 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:27,004 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(1)), (np.int64(17), np.int64(1)))
2025-04-11 19:03:27,011 [INFO] Final candidates: []
2025-04-11 19:03:27,011 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:27,019 [INFO] Final candidates: []
2025-04-11 19:03:27,019 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:27,019 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:27,034 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:27,034 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(0), np.int64(1)), (np.int64(2), np.int64(1)))
2025-04-11 19:03:27,043 [INFO] Final candidates: []
2025-04-11 19:03:27,043 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:27,051 [INFO] Final candidates: []
2025-04-11 19:03:27,051 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:27,052 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:27,157 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:27,157 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(0), np.int64(2)), (np.int64(10), np.int64(6)))
2025-04-11 19:03:27,165 [INFO] Final candidates: []
2025-04-11 19:03:27,165 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:27,172 [INFO] Final candidates: []
2025-04-11 19:03:27,172 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:27,173 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:27,289 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:27,289 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(5)), (np.int64(16), np.int64(4)))
2025-04-11 19:03:27,296 [INFO] Final candidates: []
2025-04-11 19:03:27,296 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:27,304 [INFO] Final candidates: []
2025-04-11 19:03:27,304 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:27,304 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:27,432 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:27,432 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(0)), (np.int64(16), np.int64(6)))
2025-04-11 19:03:27,440 [INFO] Final candidates: []
2025-04-11 19:03:27,440 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:27,447 [INFO] Final candidates: []
2025-04-11 19:03:27,447 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:27,448 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:27,541 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:27,541 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(0)), (np.int64(16), np.int64(5)))
2025-04-11 19:03:27,548 [INFO] Final candidates: []
2025-04-11 19:03:27,548 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:27,556 [INFO] Final candidates: []
2025-04-11 19:03:27,556 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:27,556 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:27,576 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:27,576 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(1), np.int64(3)), (np.int64(16), np.int64(9)))
2025-04-11 19:03:27,583 [INFO] Final candidates: []
2025-04-11 19:03:27,583 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:27,591 [INFO] Final candidates: []
2025-04-11 19:03:27,591 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:27,591 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:27,663 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:27,664 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(4)), (np.int64(14), np.int64(5)))
2025-04-11 19:03:27,671 [INFO] Final candidates: []
2025-04-11 19:03:27,671 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:27,678 [INFO] Final candidates: []
2025-04-11 19:03:27,678 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:27,679 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:27,986 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:27,987 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(4)), (np.int64(11), np.int64(6)))
2025-04-11 19:03:27,994 [INFO] Final candidates: []
2025-04-11 19:03:27,994 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:28,003 [INFO] Final candidates: []
2025-04-11 19:03:28,003 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:28,004 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:28,074 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:28,074 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(0), np.int64(1)), (np.int64(15), np.int64(10)))
2025-04-11 19:03:28,082 [INFO] Final candidates: []
2025-04-11 19:03:28,082 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:28,090 [INFO] Final candidates: []
2025-04-11 19:03:28,090 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:28,090 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:28,118 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:28,118 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(11)), (np.int64(12), np.int64(11)))
2025-04-11 19:03:28,126 [INFO] Final candidates: []
2025-04-11 19:03:28,126 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:28,133 [INFO] Final candidates: []
2025-04-11 19:03:28,133 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:28,134 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:28,236 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:28,236 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(0), np.int64(2)), (np.int64(14), np.int64(5)))
2025-04-11 19:03:28,244 [INFO] Final candidates: []
2025-04-11 19:03:28,244 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:28,251 [INFO] Final candidates: []
2025-04-11 19:03:28,251 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:28,252 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:28,527 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:28,527 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(4)), (np.int64(3), np.int64(2)))
2025-04-11 19:03:28,534 [INFO] Final candidates: []
2025-04-11 19:03:28,535 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:28,542 [INFO] Final candidates: []
2025-04-11 19:03:28,542 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:28,543 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:28,743 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:28,743 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(1)), (np.int64(3), np.int64(2)))
2025-04-11 19:03:28,752 [INFO] Final candidates: []
2025-04-11 19:03:28,752 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:28,761 [INFO] Final candidates: []
2025-04-11 19:03:28,761 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:28,761 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:28,876 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:28,877 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(2), np.int64(2)), (np.int64(12), np.int64(11)))
2025-04-11 19:03:28,887 [INFO] Final candidates: []
2025-04-11 19:03:28,887 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:28,897 [INFO] Final candidates: []
2025-04-11 19:03:28,897 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:28,898 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:29,063 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:29,063 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(4)), (np.int64(13), np.int64(11)))
2025-04-11 19:03:29,071 [INFO] Final candidates: []
2025-04-11 19:03:29,071 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:29,078 [INFO] Final candidates: []
2025-04-11 19:03:29,079 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:29,079 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:29,266 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:29,266 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(1), np.int64(0)), (np.int64(15), np.int64(1)))
2025-04-11 19:03:29,274 [INFO] Final candidates: []
2025-04-11 19:03:29,274 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:29,281 [INFO] Final candidates: []
2025-04-11 19:03:29,281 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:29,282 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:29,559 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:29,559 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(1), np.int64(0)), (np.int64(16), np.int64(0)))
2025-04-11 19:03:29,567 [INFO] Final candidates: []
2025-04-11 19:03:29,567 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:29,574 [INFO] Final candidates: []
2025-04-11 19:03:29,574 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:29,575 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:29,615 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:29,615 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(1), np.int64(3)), (np.int64(14), np.int64(0)))
2025-04-11 19:03:29,623 [INFO] Final candidates: []
2025-04-11 19:03:29,623 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:29,630 [INFO] Final candidates: []
2025-04-11 19:03:29,630 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:29,631 [DEBUG] MCTS iteration 50: reached a node with 0 visits.
2025-04-11 19:03:29,631 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:29,902 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:29,902 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(7)), (np.int64(16), np.int64(9)))
2025-04-11 19:03:29,909 [INFO] Final candidates: []
2025-04-11 19:03:29,909 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:29,917 [INFO] Final candidates: []
2025-04-11 19:03:29,917 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:29,917 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:30,004 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:30,004 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(11)), (np.int64(16), np.int64(6)))
2025-04-11 19:03:30,012 [INFO] Final candidates: []
2025-04-11 19:03:30,012 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:30,019 [INFO] Final candidates: []
2025-04-11 19:03:30,019 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:30,020 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:30,112 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:30,113 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(8)), (np.int64(14), np.int64(0)))
2025-04-11 19:03:30,120 [INFO] Final candidates: []
2025-04-11 19:03:30,120 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:30,128 [INFO] Final candidates: []
2025-04-11 19:03:30,128 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:30,128 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:30,378 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:30,379 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(8)), (np.int64(16), np.int64(9)))
2025-04-11 19:03:30,386 [INFO] Final candidates: []
2025-04-11 19:03:30,386 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:30,393 [INFO] Final candidates: []
2025-04-11 19:03:30,394 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:30,394 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:30,485 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:30,485 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(8)), (np.int64(15), np.int64(1)))
2025-04-11 19:03:30,505 [INFO] Final candidates: []
2025-04-11 19:03:30,505 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:30,524 [INFO] Final candidates: []
2025-04-11 19:03:30,524 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:30,525 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:30,659 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:30,659 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(11)), (np.int64(17), np.int64(5)))
2025-04-11 19:03:30,667 [INFO] Final candidates: []
2025-04-11 19:03:30,667 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:30,674 [INFO] Final candidates: []
2025-04-11 19:03:30,674 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:30,675 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:30,777 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:30,777 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(4)), (np.int64(15), np.int64(11)))
2025-04-11 19:03:30,784 [INFO] Final candidates: []
2025-04-11 19:03:30,784 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:30,792 [INFO] Final candidates: []
2025-04-11 19:03:30,792 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:30,792 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:30,925 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:30,925 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(5)), (np.int64(15), np.int64(4)))
2025-04-11 19:03:30,932 [INFO] Final candidates: []
2025-04-11 19:03:30,932 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:30,940 [INFO] Final candidates: []
2025-04-11 19:03:30,940 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:30,940 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:31,075 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:31,076 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(8)), (np.int64(13), np.int64(10)))
2025-04-11 19:03:31,083 [INFO] Final candidates: []
2025-04-11 19:03:31,083 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:31,091 [INFO] Final candidates: []
2025-04-11 19:03:31,091 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:31,091 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:31,290 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:31,290 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(10)), (np.int64(10), np.int64(10)))
2025-04-11 19:03:31,298 [INFO] Final candidates: []
2025-04-11 19:03:31,298 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:31,305 [INFO] Final candidates: []
2025-04-11 19:03:31,305 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:31,305 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:31,370 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:31,370 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(1), np.int64(0)), (np.int64(0), np.int64(1)))
2025-04-11 19:03:31,378 [INFO] Final candidates: []
2025-04-11 19:03:31,378 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:31,385 [INFO] Final candidates: []
2025-04-11 19:03:31,385 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:31,386 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:31,477 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:31,477 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(10)), (np.int64(12), np.int64(11)))
2025-04-11 19:03:31,485 [INFO] Final candidates: []
2025-04-11 19:03:31,485 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:31,492 [INFO] Final candidates: []
2025-04-11 19:03:31,492 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:31,492 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:31,720 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:31,720 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(9)), (np.int64(3), np.int64(2)))
2025-04-11 19:03:31,728 [INFO] Final candidates: []
2025-04-11 19:03:31,728 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:31,735 [INFO] Final candidates: []
2025-04-11 19:03:31,735 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:31,736 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:31,863 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:31,863 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(11)), (np.int64(15), np.int64(7)))
2025-04-11 19:03:31,871 [INFO] Final candidates: []
2025-04-11 19:03:31,871 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:31,879 [INFO] Final candidates: []
2025-04-11 19:03:31,879 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:31,880 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:32,110 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:32,110 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(10)), (np.int64(13), np.int64(6)))
2025-04-11 19:03:32,118 [INFO] Final candidates: []
2025-04-11 19:03:32,118 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:32,127 [INFO] Final candidates: []
2025-04-11 19:03:32,127 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:32,128 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:32,211 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:32,211 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(1), np.int64(3)), (np.int64(11), np.int64(6)))
2025-04-11 19:03:32,219 [INFO] Final candidates: []
2025-04-11 19:03:32,219 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:32,227 [INFO] Final candidates: []
2025-04-11 19:03:32,227 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:32,227 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:32,299 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:32,300 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(8)), (np.int64(16), np.int64(0)))
2025-04-11 19:03:32,308 [INFO] Final candidates: []
2025-04-11 19:03:32,308 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:32,316 [INFO] Final candidates: []
2025-04-11 19:03:32,316 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:32,316 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:32,534 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:32,534 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(7)), (np.int64(13), np.int64(6)))
2025-04-11 19:03:32,543 [INFO] Final candidates: []
2025-04-11 19:03:32,544 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:32,551 [INFO] Final candidates: []
2025-04-11 19:03:32,551 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:32,551 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:32,707 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:32,707 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(7)), (np.int64(15), np.int64(8)))
2025-04-11 19:03:32,715 [INFO] Final candidates: []
2025-04-11 19:03:32,715 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:32,722 [INFO] Final candidates: []
2025-04-11 19:03:32,722 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:32,723 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:32,946 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:32,946 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(6)), (np.int64(15), np.int64(4)))
2025-04-11 19:03:32,954 [INFO] Final candidates: []
2025-04-11 19:03:32,954 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:32,961 [INFO] Final candidates: []
2025-04-11 19:03:32,961 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:32,961 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:33,138 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:33,138 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(4)), (np.int64(13), np.int64(6)))
2025-04-11 19:03:33,146 [INFO] Final candidates: []
2025-04-11 19:03:33,146 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:33,153 [INFO] Final candidates: []
2025-04-11 19:03:33,153 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:33,153 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:33,215 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:33,216 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(12)), (np.int64(15), np.int64(6)))
2025-04-11 19:03:33,223 [INFO] Final candidates: []
2025-04-11 19:03:33,223 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:33,230 [INFO] Final candidates: []
2025-04-11 19:03:33,230 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:33,231 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:33,425 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:33,425 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(0), np.int64(2)), (np.int64(13), np.int64(10)))
2025-04-11 19:03:33,433 [INFO] Final candidates: []
2025-04-11 19:03:33,433 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:33,440 [INFO] Final candidates: []
2025-04-11 19:03:33,441 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:33,441 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:33,582 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:33,582 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(8)), (np.int64(2), np.int64(1)))
2025-04-11 19:03:33,592 [INFO] Final candidates: []
2025-04-11 19:03:33,592 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:33,599 [INFO] Final candidates: []
2025-04-11 19:03:33,599 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:33,600 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:33,633 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:33,633 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(7)), (np.int64(0), np.int64(3)))
2025-04-11 19:03:33,641 [INFO] Final candidates: []
2025-04-11 19:03:33,641 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:33,648 [INFO] Final candidates: []
2025-04-11 19:03:33,648 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:33,648 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:33,694 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:33,695 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(17), np.int64(2)), (np.int64(0), np.int64(1)))
2025-04-11 19:03:33,702 [INFO] Final candidates: []
2025-04-11 19:03:33,702 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:33,709 [INFO] Final candidates: []
2025-04-11 19:03:33,709 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:33,710 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:33,798 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:33,799 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(6)), (np.int64(17), np.int64(1)))
2025-04-11 19:03:33,807 [INFO] Final candidates: []
2025-04-11 19:03:33,807 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:33,814 [INFO] Final candidates: []
2025-04-11 19:03:33,814 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:33,815 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:33,934 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:33,934 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(17), np.int64(5)), (np.int64(11), np.int64(7)))
2025-04-11 19:03:33,942 [INFO] Final candidates: []
2025-04-11 19:03:33,942 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:33,950 [INFO] Final candidates: []
2025-04-11 19:03:33,950 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:33,950 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:34,159 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:34,159 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(1)), (np.int64(12), np.int64(12)))
2025-04-11 19:03:34,166 [INFO] Final candidates: []
2025-04-11 19:03:34,167 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:34,174 [INFO] Final candidates: []
2025-04-11 19:03:34,174 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:34,174 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:34,260 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:34,260 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(2)), (np.int64(14), np.int64(5)))
2025-04-11 19:03:34,268 [INFO] Final candidates: []
2025-04-11 19:03:34,268 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:34,275 [INFO] Final candidates: []
2025-04-11 19:03:34,275 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:34,276 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:34,508 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:34,508 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(1)), (np.int64(16), np.int64(0)))
2025-04-11 19:03:34,515 [INFO] Final candidates: []
2025-04-11 19:03:34,515 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:34,523 [INFO] Final candidates: []
2025-04-11 19:03:34,523 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:34,523 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:34,648 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:34,649 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(18), np.int64(1)), (np.int64(17), np.int64(1)))
2025-04-11 19:03:34,656 [INFO] Final candidates: []
2025-04-11 19:03:34,656 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:34,664 [INFO] Final candidates: []
2025-04-11 19:03:34,664 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:34,664 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:34,684 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:34,684 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(17), np.int64(1)), (np.int64(11), np.int64(6)))
2025-04-11 19:03:34,692 [INFO] Final candidates: []
2025-04-11 19:03:34,692 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:34,699 [INFO] Final candidates: []
2025-04-11 19:03:34,699 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:34,699 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:34,825 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:34,825 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(1)), (np.int64(15), np.int64(4)))
2025-04-11 19:03:34,832 [INFO] Final candidates: []
2025-04-11 19:03:34,832 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:34,840 [INFO] Final candidates: []
2025-04-11 19:03:34,840 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:34,841 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:34,895 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:34,895 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(3), np.int64(2)), (np.int64(0), np.int64(3)))
2025-04-11 19:03:34,903 [INFO] Final candidates: []
2025-04-11 19:03:34,903 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:34,910 [INFO] Final candidates: []
2025-04-11 19:03:34,910 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:34,910 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:34,997 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:34,997 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(9)), (np.int64(12), np.int64(11)))
2025-04-11 19:03:35,004 [INFO] Final candidates: []
2025-04-11 19:03:35,004 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:35,012 [INFO] Final candidates: []
2025-04-11 19:03:35,012 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:35,012 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:35,095 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:35,095 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(0)), (np.int64(16), np.int64(4)))
2025-04-11 19:03:35,103 [INFO] Final candidates: []
2025-04-11 19:03:35,103 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:35,110 [INFO] Final candidates: []
2025-04-11 19:03:35,110 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:35,111 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:35,139 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:35,139 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(7)), (np.int64(15), np.int64(10)))
2025-04-11 19:03:35,147 [INFO] Final candidates: []
2025-04-11 19:03:35,147 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:35,154 [INFO] Final candidates: []
2025-04-11 19:03:35,154 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:35,155 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:35,336 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:35,336 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(4)), (np.int64(0), np.int64(1)))
2025-04-11 19:03:35,344 [INFO] Final candidates: []
2025-04-11 19:03:35,344 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:35,351 [INFO] Final candidates: []
2025-04-11 19:03:35,351 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:35,352 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:35,427 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:35,427 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(9)), (np.int64(2), np.int64(1)))
2025-04-11 19:03:35,435 [INFO] Final candidates: []
2025-04-11 19:03:35,435 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:35,443 [INFO] Final candidates: []
2025-04-11 19:03:35,443 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:35,443 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:35,534 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:35,534 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(9)), (np.int64(10), np.int64(10)))
2025-04-11 19:03:35,542 [INFO] Final candidates: []
2025-04-11 19:03:35,542 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:35,550 [INFO] Final candidates: []
2025-04-11 19:03:35,550 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:35,550 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:35,690 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:35,690 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(18), np.int64(1)), (np.int64(0), np.int64(3)))
2025-04-11 19:03:35,698 [INFO] Final candidates: []
2025-04-11 19:03:35,698 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:35,705 [INFO] Final candidates: []
2025-04-11 19:03:35,705 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:35,706 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:35,912 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:35,912 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(7)), (np.int64(13), np.int64(0)))
2025-04-11 19:03:35,920 [INFO] Final candidates: []
2025-04-11 19:03:35,920 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:35,927 [INFO] Final candidates: []
2025-04-11 19:03:35,927 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:35,927 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:35,956 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:35,956 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(17), np.int64(2)), (np.int64(16), np.int64(8)))
2025-04-11 19:03:35,964 [INFO] Final candidates: []
2025-04-11 19:03:35,964 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:35,971 [INFO] Final candidates: []
2025-04-11 19:03:35,971 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:35,971 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:36,181 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:36,181 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(5)), (np.int64(17), np.int64(5)))
2025-04-11 19:03:36,188 [INFO] Final candidates: []
2025-04-11 19:03:36,188 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:36,196 [INFO] Final candidates: []
2025-04-11 19:03:36,196 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:36,196 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:36,419 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:36,419 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(10)), (np.int64(10), np.int64(10)))
2025-04-11 19:03:36,427 [INFO] Final candidates: []
2025-04-11 19:03:36,427 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:36,434 [INFO] Final candidates: []
2025-04-11 19:03:36,434 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:36,435 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:36,604 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:36,605 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(7)), (np.int64(11), np.int64(9)))
2025-04-11 19:03:36,612 [INFO] Final candidates: []
2025-04-11 19:03:36,612 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:36,619 [INFO] Final candidates: []
2025-04-11 19:03:36,619 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:36,620 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:36,716 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:36,716 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(11)), (np.int64(13), np.int64(0)))
2025-04-11 19:03:36,724 [INFO] Final candidates: []
2025-04-11 19:03:36,724 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:36,731 [INFO] Final candidates: []
2025-04-11 19:03:36,731 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:36,732 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:36,768 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:36,768 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(12)), (np.int64(15), np.int64(3)))
2025-04-11 19:03:36,776 [INFO] Final candidates: []
2025-04-11 19:03:36,776 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:36,783 [INFO] Final candidates: []
2025-04-11 19:03:36,783 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:36,784 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:37,004 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:37,004 [INFO] MCTS: Search finished. Best move selected with 1 visits.
2025-04-11 19:03:37,005 [INFO] MCTS selected move: J16,J17
2025-04-11 19:03:37,005 [INFO] ===============NEW MOVE================
2025-04-11 19:03:37,183 [INFO] Starting pre-MCTS candidate collection.
2025-04-11 19:03:37,191 [INFO] Final candidates: []
2025-04-11 19:03:37,192 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:37,199 [INFO] Final candidates: []
2025-04-11 19:03:37,199 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:37,199 [INFO] No candidate found in Phase 1 or 2; using full legal moves for MCTS.
2025-04-11 19:03:37,200 [INFO] MCTS: Starting search for 100 iterations.
2025-04-11 19:03:37,200 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(18), np.int64(1)), (np.int64(12), np.int64(17)))
2025-04-11 19:03:37,207 [INFO] Final candidates: []
2025-04-11 19:03:37,207 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:37,214 [INFO] Final candidates: []
2025-04-11 19:03:37,214 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:37,215 [DEBUG] MCTS iteration 0: reached a node with 0 visits.
2025-04-11 19:03:37,215 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:37,429 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:37,429 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(12)), (np.int64(18), np.int64(8)))
2025-04-11 19:03:37,437 [INFO] Final candidates: []
2025-04-11 19:03:37,437 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:37,444 [INFO] Final candidates: []
2025-04-11 19:03:37,444 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:37,445 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:37,687 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:37,687 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(4)), (np.int64(16), np.int64(4)))
2025-04-11 19:03:37,696 [INFO] Final candidates: []
2025-04-11 19:03:37,696 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:37,703 [INFO] Final candidates: []
2025-04-11 19:03:37,704 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:37,704 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:37,962 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:37,962 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(9)), (np.int64(12), np.int64(16)))
2025-04-11 19:03:37,968 [DEBUG] board coords: [(9, 11), (10, 10), (11, 9), (12, 8), (13, 7), (14, 6)]
2025-04-11 19:03:37,968 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:03:37,968 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 11), (10, 10)]
2025-04-11 19:03:37,968 [DEBUG] check_window_intermediate_custom (only one inserted(10, 10)): For L=6, window [0 0 2 2 2 2] with coords [(9, 11), (10, 10), (11, 9), (12, 8), (13, 7), (14, 6)] triggers candidate.
2025-04-11 19:03:37,969 [INFO] Final candidates: [(10, 10)]
2025-04-11 19:03:37,969 [INFO] Phase win: Found only one candidate: (10, 10)
2025-04-11 19:03:37,970 [INFO] Phase win: Collected 10unique candidate(s):[((10, 10), (np.int64(10), np.int64(11))), ((10, 10), (np.int64(9), np.int64(11))), ((10, 10), (np.int64(9), np.int64(10))), ((10, 10), (np.int64(8), np.int64(10))), ((10, 10), (np.int64(10), np.int64(8))), ((10, 10), (np.int64(10), np.int64(12))), ((10, 10), (np.int64(11), np.int64(11))), ((10, 10), (np.int64(11), np.int64(10))), ((10, 10), (np.int64(9), np.int64(9))), ((10, 10), (np.int64(10), np.int64(9)))]
2025-04-11 19:03:37,970 [INFO] Phase 1 (immediate win): 10 candidate(s) found.
2025-04-11 19:03:37,977 [INFO] Final candidates: []
2025-04-11 19:03:37,977 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:37,977 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:38,126 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:38,126 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(4)), (np.int64(13), np.int64(15)))
2025-04-11 19:03:38,134 [INFO] Final candidates: []
2025-04-11 19:03:38,134 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:38,141 [INFO] Final candidates: []
2025-04-11 19:03:38,141 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:38,141 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:38,344 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:38,345 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(18)), (np.int64(15), np.int64(3)))
2025-04-11 19:03:38,353 [INFO] Final candidates: []
2025-04-11 19:03:38,353 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:38,360 [INFO] Final candidates: []
2025-04-11 19:03:38,360 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:38,360 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:38,532 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:38,533 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(6)), (np.int64(11), np.int64(17)))
2025-04-11 19:03:38,540 [INFO] Final candidates: []
2025-04-11 19:03:38,540 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:38,549 [INFO] Final candidates: []
2025-04-11 19:03:38,549 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:38,550 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:38,639 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:38,639 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(9)), (np.int64(14), np.int64(4)))
2025-04-11 19:03:38,647 [INFO] Final candidates: []
2025-04-11 19:03:38,647 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:38,654 [INFO] Final candidates: []
2025-04-11 19:03:38,654 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:38,654 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:38,763 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:38,763 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(11)), (np.int64(11), np.int64(10)))
2025-04-11 19:03:38,770 [INFO] Final candidates: []
2025-04-11 19:03:38,770 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:38,778 [INFO] Final candidates: []
2025-04-11 19:03:38,778 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:38,779 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:38,921 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:38,921 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(18), np.int64(7)), (np.int64(16), np.int64(4)))
2025-04-11 19:03:38,931 [INFO] Final candidates: []
2025-04-11 19:03:38,932 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:38,939 [INFO] Final candidates: []
2025-04-11 19:03:38,939 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:38,939 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:38,989 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:38,990 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(11)), (np.int64(3), np.int64(2)))
2025-04-11 19:03:38,998 [INFO] Final candidates: []
2025-04-11 19:03:38,998 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:39,005 [INFO] Final candidates: []
2025-04-11 19:03:39,005 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:39,006 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:39,182 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:39,182 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(17), np.int64(1)), (np.int64(13), np.int64(15)))
2025-04-11 19:03:39,189 [INFO] Final candidates: []
2025-04-11 19:03:39,190 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:39,197 [INFO] Final candidates: []
2025-04-11 19:03:39,197 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:39,197 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:39,461 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:39,461 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(17)), (np.int64(11), np.int64(11)))
2025-04-11 19:03:39,469 [INFO] Final candidates: []
2025-04-11 19:03:39,469 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:39,476 [INFO] Final candidates: []
2025-04-11 19:03:39,476 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:39,476 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:39,764 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:39,764 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(16)), (np.int64(15), np.int64(6)))
2025-04-11 19:03:39,771 [INFO] Final candidates: []
2025-04-11 19:03:39,771 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:39,778 [INFO] Final candidates: []
2025-04-11 19:03:39,778 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:39,779 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:40,033 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:40,033 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(9)), (np.int64(2), np.int64(3)))
2025-04-11 19:03:40,041 [INFO] Final candidates: []
2025-04-11 19:03:40,041 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:40,049 [INFO] Final candidates: []
2025-04-11 19:03:40,049 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:40,049 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:40,109 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:40,110 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(7)), (np.int64(13), np.int64(15)))
2025-04-11 19:03:40,119 [DEBUG] board coords: [(9, 5), (10, 6), (11, 7), (12, 8), (13, 9), (14, 10)]
2025-04-11 19:03:40,119 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:03:40,119 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 5), (10, 6)]
2025-04-11 19:03:40,119 [DEBUG] check_window_intermediate_custom (only one inserted(10, 6)): For L=6, window [0 0 2 2 2 2] with coords [(9, 5), (10, 6), (11, 7), (12, 8), (13, 9), (14, 10)] triggers candidate.
2025-04-11 19:03:40,119 [DEBUG] check_window_margin_custom: For L=6, window [0 2 2 2 2 0] with coords [(10, 6), (11, 7), (12, 8), (13, 9), (14, 10), (15, 11)] triggers candidate.
2025-04-11 19:03:40,119 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:03:40,119 [DEBUG] board coords: [(11, 7), (12, 8), (13, 9), (14, 10), (15, 11), (16, 12)]
2025-04-11 19:03:40,119 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:03:40,120 [DEBUG] check_window_intermediate_custom: empty_cells=[(15, 11), (16, 12)]
2025-04-11 19:03:40,120 [DEBUG] check_window_intermediate_custom (only one inserted(15, 11)): For L=6, window [2 2 2 2 0 0] with coords [(11, 7), (12, 8), (13, 9), (14, 10), (15, 11), (16, 12)] triggers candidate.
2025-04-11 19:03:40,122 [INFO] Final candidates: [(15, 11), (10, 6)]
2025-04-11 19:03:40,122 [INFO] Phase win: Collected 1unique candidate(s):[((15, 11), (10, 6))]
2025-04-11 19:03:40,122 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 19:03:40,129 [INFO] Final candidates: []
2025-04-11 19:03:40,129 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:40,130 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:40,425 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:40,425 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(17), np.int64(2)), (np.int64(12), np.int64(9)))
2025-04-11 19:03:40,433 [INFO] Final candidates: []
2025-04-11 19:03:40,433 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:40,440 [INFO] Final candidates: []
2025-04-11 19:03:40,440 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:40,441 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:40,565 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:40,565 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(2)), (np.int64(16), np.int64(1)))
2025-04-11 19:03:40,573 [INFO] Final candidates: []
2025-04-11 19:03:40,573 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:40,580 [INFO] Final candidates: []
2025-04-11 19:03:40,580 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:40,581 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:40,682 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:40,682 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(0), np.int64(2)), (np.int64(1), np.int64(0)))
2025-04-11 19:03:40,690 [INFO] Final candidates: []
2025-04-11 19:03:40,690 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:40,697 [INFO] Final candidates: []
2025-04-11 19:03:40,697 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:40,698 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:40,787 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:40,787 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(18)), (np.int64(16), np.int64(4)))
2025-04-11 19:03:40,796 [INFO] Final candidates: []
2025-04-11 19:03:40,796 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:40,803 [INFO] Final candidates: []
2025-04-11 19:03:40,803 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:40,804 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:40,965 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:40,965 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(8)), (np.int64(12), np.int64(9)))
2025-04-11 19:03:40,973 [INFO] Final candidates: []
2025-04-11 19:03:40,973 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:40,980 [INFO] Final candidates: []
2025-04-11 19:03:40,980 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:40,980 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:41,078 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:41,079 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(1), np.int64(1)), (np.int64(0), np.int64(3)))
2025-04-11 19:03:41,086 [INFO] Final candidates: []
2025-04-11 19:03:41,086 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:41,093 [INFO] Final candidates: []
2025-04-11 19:03:41,093 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:41,093 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:41,476 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:41,476 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(18), np.int64(7)), (np.int64(11), np.int64(11)))
2025-04-11 19:03:41,484 [INFO] Final candidates: []
2025-04-11 19:03:41,484 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:41,494 [INFO] Final candidates: []
2025-04-11 19:03:41,494 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:41,494 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:41,630 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:41,630 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(9)), (np.int64(0), np.int64(3)))
2025-04-11 19:03:41,638 [INFO] Final candidates: []
2025-04-11 19:03:41,638 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:41,646 [INFO] Final candidates: []
2025-04-11 19:03:41,646 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:41,647 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:41,683 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:41,684 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(18)), (np.int64(16), np.int64(1)))
2025-04-11 19:03:41,693 [INFO] Final candidates: []
2025-04-11 19:03:41,693 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:41,706 [INFO] Final candidates: []
2025-04-11 19:03:41,706 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:41,707 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:41,809 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:41,809 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(10)), (np.int64(14), np.int64(18)))
2025-04-11 19:03:41,816 [DEBUG] board coords: [(9, 11), (10, 10), (11, 9), (12, 8), (13, 7), (14, 6)]
2025-04-11 19:03:41,816 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:03:41,816 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 11), (11, 9)]
2025-04-11 19:03:41,816 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 0 2 2 2] with coords [(9, 11), (10, 10), (11, 9), (12, 8), (13, 7), (14, 6)] triggers candidate.
2025-04-11 19:03:41,817 [INFO] Final candidates: [(9, 11), (11, 9)]
2025-04-11 19:03:41,817 [INFO] Phase win: Collected 1unique candidate(s):[((9, 11), (11, 9))]
2025-04-11 19:03:41,817 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 19:03:41,824 [INFO] Final candidates: []
2025-04-11 19:03:41,824 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:41,825 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:41,843 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:41,843 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(17)), (np.int64(13), np.int64(15)))
2025-04-11 19:03:41,851 [INFO] Final candidates: []
2025-04-11 19:03:41,851 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:41,858 [INFO] Final candidates: []
2025-04-11 19:03:41,858 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:41,859 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:41,936 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:41,937 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(10)), (np.int64(15), np.int64(10)))
2025-04-11 19:03:41,944 [INFO] Final candidates: []
2025-04-11 19:03:41,944 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:41,951 [INFO] Final candidates: []
2025-04-11 19:03:41,951 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:41,952 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:42,083 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:42,083 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(2), np.int64(1)), (np.int64(13), np.int64(6)))
2025-04-11 19:03:42,091 [INFO] Final candidates: []
2025-04-11 19:03:42,091 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:42,098 [INFO] Final candidates: []
2025-04-11 19:03:42,098 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:42,099 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:42,147 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:42,147 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(16)), (np.int64(3), np.int64(2)))
2025-04-11 19:03:42,154 [INFO] Final candidates: []
2025-04-11 19:03:42,154 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:42,161 [INFO] Final candidates: []
2025-04-11 19:03:42,161 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:42,162 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:42,223 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:42,223 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(10)), (np.int64(14), np.int64(0)))
2025-04-11 19:03:42,231 [DEBUG] board coords: [(9, 11), (10, 10), (11, 9), (12, 8), (13, 7), (14, 6)]
2025-04-11 19:03:42,231 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:03:42,231 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 11), (11, 9)]
2025-04-11 19:03:42,231 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 0 2 2 2] with coords [(9, 11), (10, 10), (11, 9), (12, 8), (13, 7), (14, 6)] triggers candidate.
2025-04-11 19:03:42,232 [INFO] Final candidates: [(9, 11), (11, 9)]
2025-04-11 19:03:42,232 [INFO] Phase win: Collected 1unique candidate(s):[((9, 11), (11, 9))]
2025-04-11 19:03:42,232 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 19:03:42,239 [INFO] Final candidates: []
2025-04-11 19:03:42,239 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:42,240 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:42,340 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:42,340 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(5)), (np.int64(16), np.int64(7)))
2025-04-11 19:03:42,348 [INFO] Final candidates: []
2025-04-11 19:03:42,348 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:42,355 [INFO] Final candidates: []
2025-04-11 19:03:42,355 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:42,356 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:42,520 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:42,520 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(5)), (np.int64(12), np.int64(7)))
2025-04-11 19:03:42,528 [INFO] Final candidates: []
2025-04-11 19:03:42,528 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:42,535 [INFO] Final candidates: []
2025-04-11 19:03:42,535 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:42,535 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:42,646 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:42,647 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(4)), (np.int64(14), np.int64(17)))
2025-04-11 19:03:42,654 [INFO] Final candidates: []
2025-04-11 19:03:42,654 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:42,661 [INFO] Final candidates: []
2025-04-11 19:03:42,661 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:42,662 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:42,897 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:42,897 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(9)), (np.int64(11), np.int64(6)))
2025-04-11 19:03:42,904 [INFO] Final candidates: []
2025-04-11 19:03:42,904 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:42,912 [INFO] Final candidates: []
2025-04-11 19:03:42,912 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:42,912 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:43,030 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:43,031 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(18)), (np.int64(18), np.int64(8)))
2025-04-11 19:03:43,038 [INFO] Final candidates: []
2025-04-11 19:03:43,039 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:43,046 [INFO] Final candidates: []
2025-04-11 19:03:43,046 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:43,046 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:43,237 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:43,237 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(17), np.int64(2)), (np.int64(16), np.int64(0)))
2025-04-11 19:03:43,244 [INFO] Final candidates: []
2025-04-11 19:03:43,244 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:43,252 [INFO] Final candidates: []
2025-04-11 19:03:43,252 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:43,252 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:43,361 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:43,361 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(1)), (np.int64(16), np.int64(4)))
2025-04-11 19:03:43,369 [INFO] Final candidates: []
2025-04-11 19:03:43,369 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:43,376 [INFO] Final candidates: []
2025-04-11 19:03:43,376 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:43,376 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:43,582 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:43,582 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(17)), (np.int64(0), np.int64(1)))
2025-04-11 19:03:43,590 [INFO] Final candidates: []
2025-04-11 19:03:43,590 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:43,597 [INFO] Final candidates: []
2025-04-11 19:03:43,597 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:43,597 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:43,629 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:43,629 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(2), np.int64(3)), (np.int64(13), np.int64(15)))
2025-04-11 19:03:43,637 [INFO] Final candidates: []
2025-04-11 19:03:43,637 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:43,644 [INFO] Final candidates: []
2025-04-11 19:03:43,644 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:43,644 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:43,771 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:43,771 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(8)), (np.int64(12), np.int64(5)))
2025-04-11 19:03:43,779 [INFO] Final candidates: []
2025-04-11 19:03:43,779 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:43,786 [INFO] Final candidates: []
2025-04-11 19:03:43,786 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:43,786 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:43,966 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:43,966 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(9)), (np.int64(11), np.int64(10)))
2025-04-11 19:03:43,973 [DEBUG] board coords: [(9, 11), (10, 10), (11, 9), (12, 8), (13, 7), (14, 6)]
2025-04-11 19:03:43,973 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:03:43,973 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 11), (10, 10)]
2025-04-11 19:03:43,973 [DEBUG] check_window_intermediate_custom (only one inserted(10, 10)): For L=6, window [0 0 2 2 2 2] with coords [(9, 11), (10, 10), (11, 9), (12, 8), (13, 7), (14, 6)] triggers candidate.
2025-04-11 19:03:43,974 [INFO] Final candidates: [(10, 10)]
2025-04-11 19:03:43,974 [INFO] Phase win: Found only one candidate: (10, 10)
2025-04-11 19:03:43,974 [INFO] Phase win: Collected 9unique candidate(s):[((10, 10), (np.int64(10), np.int64(11))), ((10, 10), (np.int64(9), np.int64(11))), ((10, 10), (np.int64(9), np.int64(10))), ((10, 10), (np.int64(8), np.int64(10))), ((10, 10), (np.int64(10), np.int64(8))), ((10, 10), (np.int64(10), np.int64(12))), ((10, 10), (np.int64(11), np.int64(11))), ((10, 10), (np.int64(9), np.int64(9))), ((10, 10), (np.int64(10), np.int64(9)))]
2025-04-11 19:03:43,974 [INFO] Phase 1 (immediate win): 9 candidate(s) found.
2025-04-11 19:03:43,981 [INFO] Final candidates: []
2025-04-11 19:03:43,981 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:43,982 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:44,117 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:44,117 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(0)), (np.int64(12), np.int64(9)))
2025-04-11 19:03:44,125 [INFO] Final candidates: []
2025-04-11 19:03:44,125 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:44,132 [INFO] Final candidates: []
2025-04-11 19:03:44,132 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:44,133 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:44,150 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:44,150 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(12)), (np.int64(10), np.int64(8)))
2025-04-11 19:03:44,157 [INFO] Final candidates: []
2025-04-11 19:03:44,158 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:44,165 [INFO] Final candidates: []
2025-04-11 19:03:44,165 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:44,165 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:44,311 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:44,312 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(11)), (np.int64(17), np.int64(6)))
2025-04-11 19:03:44,316 [DEBUG] board coords: [(10, 6), (11, 7), (12, 8), (13, 9), (14, 10), (15, 11)]
2025-04-11 19:03:44,316 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:03:44,316 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 6), (11, 7)]
2025-04-11 19:03:44,317 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(10, 6), (11, 7), (12, 8), (13, 9), (14, 10), (15, 11)] triggers candidate.
2025-04-11 19:03:44,317 [DEBUG] check_window_margin_custom: For L=6, window [0 2 2 2 2 0] with coords [(11, 7), (12, 8), (13, 9), (14, 10), (15, 11), (16, 12)] triggers candidate.
2025-04-11 19:03:44,317 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:03:44,317 [DEBUG] board coords: [(12, 8), (13, 9), (14, 10), (15, 11), (16, 12), (17, 13)]
2025-04-11 19:03:44,317 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:03:44,317 [DEBUG] check_window_intermediate_custom: empty_cells=[(16, 12), (17, 13)]
2025-04-11 19:03:44,317 [DEBUG] check_window_intermediate_custom (only one inserted(16, 12)): For L=6, window [2 2 2 2 0 0] with coords [(12, 8), (13, 9), (14, 10), (15, 11), (16, 12), (17, 13)] triggers candidate.
2025-04-11 19:03:44,319 [INFO] Final candidates: [(11, 7), (16, 12)]
2025-04-11 19:03:44,319 [INFO] Phase win: Collected 1unique candidate(s):[((11, 7), (16, 12))]
2025-04-11 19:03:44,319 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 19:03:44,328 [INFO] Final candidates: []
2025-04-11 19:03:44,328 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:44,328 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:44,594 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:44,594 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(7)), (np.int64(14), np.int64(16)))
2025-04-11 19:03:44,601 [DEBUG] board coords: [(9, 5), (10, 6), (11, 7), (12, 8), (13, 9), (14, 10)]
2025-04-11 19:03:44,601 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:03:44,601 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 5), (10, 6)]
2025-04-11 19:03:44,601 [DEBUG] check_window_intermediate_custom (only one inserted(10, 6)): For L=6, window [0 0 2 2 2 2] with coords [(9, 5), (10, 6), (11, 7), (12, 8), (13, 9), (14, 10)] triggers candidate.
2025-04-11 19:03:44,601 [DEBUG] check_window_margin_custom: For L=6, window [0 2 2 2 2 0] with coords [(10, 6), (11, 7), (12, 8), (13, 9), (14, 10), (15, 11)] triggers candidate.
2025-04-11 19:03:44,601 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:03:44,602 [DEBUG] board coords: [(11, 7), (12, 8), (13, 9), (14, 10), (15, 11), (16, 12)]
2025-04-11 19:03:44,602 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:03:44,602 [DEBUG] check_window_intermediate_custom: empty_cells=[(15, 11), (16, 12)]
2025-04-11 19:03:44,602 [DEBUG] check_window_intermediate_custom (only one inserted(15, 11)): For L=6, window [2 2 2 2 0 0] with coords [(11, 7), (12, 8), (13, 9), (14, 10), (15, 11), (16, 12)] triggers candidate.
2025-04-11 19:03:44,608 [INFO] Final candidates: [(15, 11), (10, 6)]
2025-04-11 19:03:44,608 [INFO] Phase win: Collected 1unique candidate(s):[((15, 11), (10, 6))]
2025-04-11 19:03:44,609 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 19:03:44,619 [INFO] Final candidates: []
2025-04-11 19:03:44,619 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:44,620 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:44,666 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:44,666 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(2)), (np.int64(3), np.int64(2)))
2025-04-11 19:03:44,673 [INFO] Final candidates: []
2025-04-11 19:03:44,673 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:44,680 [INFO] Final candidates: []
2025-04-11 19:03:44,680 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:44,681 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:44,802 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:44,803 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(18)), (np.int64(14), np.int64(1)))
2025-04-11 19:03:44,811 [INFO] Final candidates: []
2025-04-11 19:03:44,811 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:44,818 [INFO] Final candidates: []
2025-04-11 19:03:44,818 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:44,819 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:44,897 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:44,897 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(5)), (np.int64(16), np.int64(4)))
2025-04-11 19:03:44,904 [INFO] Final candidates: []
2025-04-11 19:03:44,905 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:44,912 [INFO] Final candidates: []
2025-04-11 19:03:44,912 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:44,912 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:44,968 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:44,968 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(6)), (np.int64(13), np.int64(10)))
2025-04-11 19:03:44,973 [DEBUG] board coords: [(9, 5), (10, 6), (11, 7), (12, 8), (13, 9), (14, 10)]
2025-04-11 19:03:44,973 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:03:44,973 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 5), (11, 7)]
2025-04-11 19:03:44,973 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 0 2 2 2] with coords [(9, 5), (10, 6), (11, 7), (12, 8), (13, 9), (14, 10)] triggers candidate.
2025-04-11 19:03:44,973 [DEBUG] board coords: [(10, 6), (11, 7), (12, 8), (13, 9), (14, 10), (15, 11)]
2025-04-11 19:03:44,973 [DEBUG] board values[np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 19:03:44,973 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 7), (15, 11)]
2025-04-11 19:03:44,973 [DEBUG] check_window_intermediate_custom: For L=6, window [2 0 2 2 2 0] with coords [(10, 6), (11, 7), (12, 8), (13, 9), (14, 10), (15, 11)] triggers candidate.
2025-04-11 19:03:44,976 [INFO] Final candidates: [(11, 7), (9, 5), (15, 11)]
2025-04-11 19:03:44,976 [INFO] Phase win: Collected 3unique candidate(s):[((9, 5), (15, 11)), ((11, 7), (9, 5)), ((11, 7), (15, 11))]
2025-04-11 19:03:44,976 [INFO] Phase 1 (immediate win): 3 candidate(s) found.
2025-04-11 19:03:44,983 [INFO] Final candidates: []
2025-04-11 19:03:44,983 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:44,983 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:45,154 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:45,154 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(17)), (np.int64(12), np.int64(9)))
2025-04-11 19:03:45,161 [INFO] Final candidates: []
2025-04-11 19:03:45,161 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:45,168 [INFO] Final candidates: []
2025-04-11 19:03:45,169 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:45,169 [DEBUG] MCTS iteration 50: reached a node with 0 visits.
2025-04-11 19:03:45,169 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:45,237 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:45,238 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(4)), (np.int64(0), np.int64(3)))
2025-04-11 19:03:45,245 [INFO] Final candidates: []
2025-04-11 19:03:45,245 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:45,252 [INFO] Final candidates: []
2025-04-11 19:03:45,252 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:45,253 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:45,435 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:45,436 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(0)), (np.int64(15), np.int64(17)))
2025-04-11 19:03:45,443 [INFO] Final candidates: []
2025-04-11 19:03:45,443 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:45,451 [INFO] Final candidates: []
2025-04-11 19:03:45,451 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:45,452 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:45,692 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:45,692 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(5)), (np.int64(15), np.int64(10)))
2025-04-11 19:03:45,700 [INFO] Final candidates: []
2025-04-11 19:03:45,700 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:45,707 [INFO] Final candidates: []
2025-04-11 19:03:45,707 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:45,707 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:45,797 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:45,797 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(10)), (np.int64(12), np.int64(9)))
2025-04-11 19:03:45,804 [INFO] Final candidates: []
2025-04-11 19:03:45,804 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:45,811 [INFO] Final candidates: []
2025-04-11 19:03:45,811 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:45,812 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:45,921 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:45,922 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(7)), (np.int64(14), np.int64(18)))
2025-04-11 19:03:45,926 [DEBUG] board coords: [(9, 5), (10, 6), (11, 7), (12, 8), (13, 9), (14, 10)]
2025-04-11 19:03:45,926 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:03:45,926 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 5), (10, 6)]
2025-04-11 19:03:45,926 [DEBUG] check_window_intermediate_custom (only one inserted(10, 6)): For L=6, window [0 0 2 2 2 2] with coords [(9, 5), (10, 6), (11, 7), (12, 8), (13, 9), (14, 10)] triggers candidate.
2025-04-11 19:03:45,926 [DEBUG] check_window_margin_custom: For L=6, window [0 2 2 2 2 0] with coords [(10, 6), (11, 7), (12, 8), (13, 9), (14, 10), (15, 11)] triggers candidate.
2025-04-11 19:03:45,927 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:03:45,927 [DEBUG] board coords: [(11, 7), (12, 8), (13, 9), (14, 10), (15, 11), (16, 12)]
2025-04-11 19:03:45,927 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:03:45,927 [DEBUG] check_window_intermediate_custom: empty_cells=[(15, 11), (16, 12)]
2025-04-11 19:03:45,927 [DEBUG] check_window_intermediate_custom (only one inserted(15, 11)): For L=6, window [2 2 2 2 0 0] with coords [(11, 7), (12, 8), (13, 9), (14, 10), (15, 11), (16, 12)] triggers candidate.
2025-04-11 19:03:45,929 [INFO] Final candidates: [(15, 11), (10, 6)]
2025-04-11 19:03:45,929 [INFO] Phase win: Collected 1unique candidate(s):[((15, 11), (10, 6))]
2025-04-11 19:03:45,929 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 19:03:45,937 [INFO] Final candidates: []
2025-04-11 19:03:45,937 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:45,937 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:46,078 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:46,078 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(9)), (np.int64(11), np.int64(8)))
2025-04-11 19:03:46,085 [DEBUG] board coords: [(9, 11), (10, 10), (11, 9), (12, 8), (13, 7), (14, 6)]
2025-04-11 19:03:46,085 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:03:46,085 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 11), (10, 10)]
2025-04-11 19:03:46,085 [DEBUG] check_window_intermediate_custom (only one inserted(10, 10)): For L=6, window [0 0 2 2 2 2] with coords [(9, 11), (10, 10), (11, 9), (12, 8), (13, 7), (14, 6)] triggers candidate.
2025-04-11 19:03:46,086 [INFO] Final candidates: [(10, 10)]
2025-04-11 19:03:46,086 [INFO] Phase win: Found only one candidate: (10, 10)
2025-04-11 19:03:46,086 [INFO] Phase win: Collected 10unique candidate(s):[((10, 10), (np.int64(10), np.int64(11))), ((10, 10), (np.int64(9), np.int64(11))), ((10, 10), (np.int64(9), np.int64(10))), ((10, 10), (np.int64(8), np.int64(10))), ((10, 10), (np.int64(10), np.int64(8))), ((10, 10), (np.int64(10), np.int64(12))), ((10, 10), (np.int64(11), np.int64(11))), ((10, 10), (np.int64(11), np.int64(10))), ((10, 10), (np.int64(9), np.int64(9))), ((10, 10), (np.int64(10), np.int64(9)))]
2025-04-11 19:03:46,086 [INFO] Phase 1 (immediate win): 10 candidate(s) found.
2025-04-11 19:03:46,093 [INFO] Final candidates: []
2025-04-11 19:03:46,093 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:46,094 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:46,212 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:46,212 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(5)), (np.int64(13), np.int64(0)))
2025-04-11 19:03:46,220 [INFO] Final candidates: []
2025-04-11 19:03:46,220 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:46,227 [INFO] Final candidates: []
2025-04-11 19:03:46,227 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:46,227 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:46,324 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:46,324 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(1), np.int64(4)), (np.int64(18), np.int64(8)))
2025-04-11 19:03:46,331 [INFO] Final candidates: []
2025-04-11 19:03:46,331 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:46,338 [INFO] Final candidates: []
2025-04-11 19:03:46,338 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:46,339 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:46,364 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:46,364 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(16)), (np.int64(2), np.int64(3)))
2025-04-11 19:03:46,371 [INFO] Final candidates: []
2025-04-11 19:03:46,371 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:46,378 [INFO] Final candidates: []
2025-04-11 19:03:46,378 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:46,379 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:46,542 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:46,542 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(0), np.int64(2)), (np.int64(12), np.int64(9)))
2025-04-11 19:03:46,550 [INFO] Final candidates: []
2025-04-11 19:03:46,550 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:46,558 [INFO] Final candidates: []
2025-04-11 19:03:46,558 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:46,558 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:46,683 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:46,683 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(6)), (np.int64(14), np.int64(4)))
2025-04-11 19:03:46,690 [INFO] Final candidates: []
2025-04-11 19:03:46,690 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:46,698 [INFO] Final candidates: []
2025-04-11 19:03:46,698 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:46,698 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:46,979 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:46,979 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(2)), (np.int64(0), np.int64(3)))
2025-04-11 19:03:46,987 [INFO] Final candidates: []
2025-04-11 19:03:46,987 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:46,994 [INFO] Final candidates: []
2025-04-11 19:03:46,994 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:46,995 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:47,178 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:47,178 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(7)), (np.int64(12), np.int64(12)))
2025-04-11 19:03:47,185 [INFO] Final candidates: []
2025-04-11 19:03:47,185 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:47,192 [INFO] Final candidates: []
2025-04-11 19:03:47,192 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:47,193 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:47,312 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:47,312 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(4)), (np.int64(17), np.int64(7)))
2025-04-11 19:03:47,319 [INFO] Final candidates: []
2025-04-11 19:03:47,319 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:47,327 [INFO] Final candidates: []
2025-04-11 19:03:47,327 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:47,327 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:47,462 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:47,462 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(3), np.int64(2)), (np.int64(15), np.int64(10)))
2025-04-11 19:03:47,470 [INFO] Final candidates: []
2025-04-11 19:03:47,470 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:47,477 [INFO] Final candidates: []
2025-04-11 19:03:47,477 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:47,477 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:47,591 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:47,592 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(0)), (np.int64(15), np.int64(3)))
2025-04-11 19:03:47,599 [INFO] Final candidates: []
2025-04-11 19:03:47,599 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:47,606 [INFO] Final candidates: []
2025-04-11 19:03:47,606 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:47,607 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:47,653 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:47,653 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(4)), (np.int64(14), np.int64(5)))
2025-04-11 19:03:47,660 [INFO] Final candidates: []
2025-04-11 19:03:47,660 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:47,668 [INFO] Final candidates: []
2025-04-11 19:03:47,668 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:47,668 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:47,943 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:47,943 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(17), np.int64(5)), (np.int64(16), np.int64(6)))
2025-04-11 19:03:47,951 [INFO] Final candidates: []
2025-04-11 19:03:47,951 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:47,958 [INFO] Final candidates: []
2025-04-11 19:03:47,958 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:47,958 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:48,196 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:48,196 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(12)), (np.int64(18), np.int64(9)))
2025-04-11 19:03:48,203 [INFO] Final candidates: []
2025-04-11 19:03:48,203 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:48,211 [INFO] Final candidates: []
2025-04-11 19:03:48,211 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:48,211 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:48,347 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:48,347 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(0)), (np.int64(13), np.int64(6)))
2025-04-11 19:03:48,354 [INFO] Final candidates: []
2025-04-11 19:03:48,354 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:48,362 [INFO] Final candidates: []
2025-04-11 19:03:48,362 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:48,362 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:48,420 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:48,420 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(5)), (np.int64(15), np.int64(10)))
2025-04-11 19:03:48,428 [INFO] Final candidates: []
2025-04-11 19:03:48,428 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:48,435 [INFO] Final candidates: []
2025-04-11 19:03:48,435 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:48,436 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:48,520 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:48,520 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(11)), (np.int64(16), np.int64(7)))
2025-04-11 19:03:48,528 [INFO] Final candidates: []
2025-04-11 19:03:48,528 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:48,535 [INFO] Final candidates: []
2025-04-11 19:03:48,535 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:48,535 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:48,640 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:48,641 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(2)), (np.int64(13), np.int64(16)))
2025-04-11 19:03:48,648 [INFO] Final candidates: []
2025-04-11 19:03:48,648 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:48,655 [INFO] Final candidates: []
2025-04-11 19:03:48,655 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:48,656 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:48,866 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:48,866 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(1)), (np.int64(14), np.int64(11)))
2025-04-11 19:03:48,873 [INFO] Final candidates: []
2025-04-11 19:03:48,873 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:48,880 [INFO] Final candidates: []
2025-04-11 19:03:48,881 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:48,881 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:49,062 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:49,063 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(18), np.int64(1)), (np.int64(13), np.int64(15)))
2025-04-11 19:03:49,070 [INFO] Final candidates: []
2025-04-11 19:03:49,070 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:49,077 [INFO] Final candidates: []
2025-04-11 19:03:49,077 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:49,078 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:49,166 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:49,166 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(18), np.int64(7)), (np.int64(13), np.int64(0)))
2025-04-11 19:03:49,173 [INFO] Final candidates: []
2025-04-11 19:03:49,174 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:49,181 [INFO] Final candidates: []
2025-04-11 19:03:49,181 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:49,181 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:49,260 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:49,260 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(12)), (np.int64(11), np.int64(10)))
2025-04-11 19:03:49,267 [INFO] Final candidates: []
2025-04-11 19:03:49,267 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:49,274 [INFO] Final candidates: []
2025-04-11 19:03:49,274 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:49,275 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:49,296 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:49,296 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(17), np.int64(7)), (np.int64(12), np.int64(7)))
2025-04-11 19:03:49,304 [INFO] Final candidates: []
2025-04-11 19:03:49,304 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:49,311 [INFO] Final candidates: []
2025-04-11 19:03:49,311 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:49,311 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:49,552 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:49,552 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(5)), (np.int64(12), np.int64(11)))
2025-04-11 19:03:49,561 [INFO] Final candidates: []
2025-04-11 19:03:49,561 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:49,568 [INFO] Final candidates: []
2025-04-11 19:03:49,568 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:49,569 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:49,652 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:49,652 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(17), np.int64(7)), (np.int64(13), np.int64(16)))
2025-04-11 19:03:49,660 [INFO] Final candidates: []
2025-04-11 19:03:49,660 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:49,667 [INFO] Final candidates: []
2025-04-11 19:03:49,667 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:49,668 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:49,867 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:49,867 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(7)), (np.int64(16), np.int64(9)))
2025-04-11 19:03:49,875 [INFO] Final candidates: []
2025-04-11 19:03:49,875 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:49,882 [INFO] Final candidates: []
2025-04-11 19:03:49,882 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:49,882 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:49,911 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:49,912 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(5)), (np.int64(1), np.int64(1)))
2025-04-11 19:03:49,919 [INFO] Final candidates: []
2025-04-11 19:03:49,919 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:49,926 [INFO] Final candidates: []
2025-04-11 19:03:49,926 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:49,927 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:49,968 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:49,969 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(7)), (np.int64(17), np.int64(9)))
2025-04-11 19:03:49,977 [INFO] Final candidates: []
2025-04-11 19:03:49,977 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:49,984 [INFO] Final candidates: []
2025-04-11 19:03:49,984 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:49,985 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:50,207 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:50,207 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(5)), (np.int64(15), np.int64(17)))
2025-04-11 19:03:50,214 [INFO] Final candidates: []
2025-04-11 19:03:50,214 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:50,222 [INFO] Final candidates: []
2025-04-11 19:03:50,222 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:50,222 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:50,340 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:50,340 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(17)), (np.int64(14), np.int64(1)))
2025-04-11 19:03:50,351 [INFO] Final candidates: []
2025-04-11 19:03:50,351 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:50,365 [INFO] Final candidates: []
2025-04-11 19:03:50,365 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:50,366 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:50,485 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:50,485 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(6)), (np.int64(12), np.int64(7)))
2025-04-11 19:03:50,493 [INFO] Final candidates: []
2025-04-11 19:03:50,493 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:50,500 [INFO] Final candidates: []
2025-04-11 19:03:50,500 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:50,501 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:50,628 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:50,628 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(16)), (np.int64(11), np.int64(6)))
2025-04-11 19:03:50,636 [INFO] Final candidates: []
2025-04-11 19:03:50,636 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:50,643 [INFO] Final candidates: []
2025-04-11 19:03:50,643 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:50,643 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:50,713 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:50,713 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(12)), (np.int64(11), np.int64(8)))
2025-04-11 19:03:50,720 [INFO] Final candidates: []
2025-04-11 19:03:50,720 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:50,727 [INFO] Final candidates: []
2025-04-11 19:03:50,727 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:50,728 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:50,956 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:50,956 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(18), np.int64(0)), (np.int64(15), np.int64(17)))
2025-04-11 19:03:50,963 [INFO] Final candidates: []
2025-04-11 19:03:50,963 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:50,970 [INFO] Final candidates: []
2025-04-11 19:03:50,970 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:50,971 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:51,051 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:51,051 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(18)), (np.int64(14), np.int64(4)))
2025-04-11 19:03:51,059 [INFO] Final candidates: []
2025-04-11 19:03:51,059 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:51,066 [INFO] Final candidates: []
2025-04-11 19:03:51,066 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:51,066 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:51,261 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:51,261 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(4)), (np.int64(13), np.int64(6)))
2025-04-11 19:03:51,268 [INFO] Final candidates: []
2025-04-11 19:03:51,268 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:51,276 [INFO] Final candidates: []
2025-04-11 19:03:51,276 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:51,276 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:51,521 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:51,522 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(5)), (np.int64(3), np.int64(2)))
2025-04-11 19:03:51,529 [INFO] Final candidates: []
2025-04-11 19:03:51,529 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:51,536 [INFO] Final candidates: []
2025-04-11 19:03:51,536 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:51,537 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:51,605 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:51,605 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(17), np.int64(2)), (np.int64(12), np.int64(7)))
2025-04-11 19:03:51,613 [INFO] Final candidates: []
2025-04-11 19:03:51,613 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:51,620 [INFO] Final candidates: []
2025-04-11 19:03:51,620 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:51,620 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:51,936 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:51,936 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(4)), (np.int64(1), np.int64(1)))
2025-04-11 19:03:51,944 [INFO] Final candidates: []
2025-04-11 19:03:51,944 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:51,951 [INFO] Final candidates: []
2025-04-11 19:03:51,951 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:51,952 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:51,992 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:51,992 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(3), np.int64(2)), (np.int64(11), np.int64(8)))
2025-04-11 19:03:51,999 [INFO] Final candidates: []
2025-04-11 19:03:51,999 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:52,007 [INFO] Final candidates: []
2025-04-11 19:03:52,007 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:52,007 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:52,084 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:52,084 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(17), np.int64(9)), (np.int64(0), np.int64(2)))
2025-04-11 19:03:52,092 [INFO] Final candidates: []
2025-04-11 19:03:52,092 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:52,101 [INFO] Final candidates: []
2025-04-11 19:03:52,101 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:52,102 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:52,294 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:52,294 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(17)), (np.int64(13), np.int64(6)))
2025-04-11 19:03:52,302 [INFO] Final candidates: []
2025-04-11 19:03:52,302 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:52,309 [INFO] Final candidates: []
2025-04-11 19:03:52,309 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:52,310 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:52,457 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:52,457 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(9)), (np.int64(15), np.int64(3)))
2025-04-11 19:03:52,464 [INFO] Final candidates: []
2025-04-11 19:03:52,464 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:52,471 [INFO] Final candidates: []
2025-04-11 19:03:52,471 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:52,472 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:52,631 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:52,631 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(18)), (np.int64(13), np.int64(15)))
2025-04-11 19:03:52,638 [INFO] Final candidates: []
2025-04-11 19:03:52,638 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:52,645 [INFO] Final candidates: []
2025-04-11 19:03:52,645 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:52,646 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:52,892 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:52,893 [INFO] MCTS: Search finished. Best move selected with 1 visits.
2025-04-11 19:03:52,893 [INFO] MCTS selected move: B19,S13
2025-04-11 19:03:52,893 [INFO] ===============NEW MOVE================
2025-04-11 19:03:53,093 [INFO] Starting pre-MCTS candidate collection.
2025-04-11 19:03:53,101 [INFO] Final candidates: []
2025-04-11 19:03:53,101 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:53,105 [DEBUG] board coords: [(8, 4), (9, 5), (10, 6), (11, 7), (12, 8), (13, 9)]
2025-04-11 19:03:53,105 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:03:53,105 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 4), (9, 5)]
2025-04-11 19:03:53,105 [DEBUG] check_window_intermediate_custom (only one inserted(9, 5)): For L=6, window [0 0 2 2 2 2] with coords [(8, 4), (9, 5), (10, 6), (11, 7), (12, 8), (13, 9)] triggers candidate.
2025-04-11 19:03:53,105 [DEBUG] board coords: [(11, 7), (12, 8), (13, 9), (14, 10), (15, 11), (16, 12)]
2025-04-11 19:03:53,105 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:03:53,105 [DEBUG] check_window_intermediate_custom: empty_cells=[(15, 11), (16, 12)]
2025-04-11 19:03:53,106 [DEBUG] check_window_intermediate_custom (only one inserted(15, 11)): For L=6, window [2 2 2 2 0 0] with coords [(11, 7), (12, 8), (13, 9), (14, 10), (15, 11), (16, 12)] triggers candidate.
2025-04-11 19:03:53,106 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 5), (10, 6), (11, 7), (12, 8), (13, 9), (14, 10), (15, 11)] triggers candidate.
2025-04-11 19:03:53,108 [INFO] Final candidates: [(9, 5), (15, 11)]
2025-04-11 19:03:53,108 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 5), (15, 11))]
2025-04-11 19:03:53,108 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:03:53,108 [INFO] MCTS: Starting search for 100 iterations.
2025-04-11 19:03:53,109 [DEBUG] Tree_policy iteration 1: Expanding move ((9, 5), (15, 11))
2025-04-11 19:03:53,116 [INFO] Final candidates: []
2025-04-11 19:03:53,116 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:53,123 [INFO] Final candidates: []
2025-04-11 19:03:53,123 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:53,124 [DEBUG] MCTS iteration 0: reached a node with 0 visits.
2025-04-11 19:03:53,124 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:53,128 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:53,128 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:03:53,128 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(15)), (np.int64(15), np.int64(12)))
2025-04-11 19:03:53,135 [INFO] Final candidates: []
2025-04-11 19:03:53,135 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:53,142 [INFO] Final candidates: []
2025-04-11 19:03:53,143 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:53,143 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:53,256 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:53,256 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:03:53,256 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(4)), (np.int64(1), np.int64(4)))
2025-04-11 19:03:53,263 [INFO] Final candidates: []
2025-04-11 19:03:53,263 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:53,270 [INFO] Final candidates: []
2025-04-11 19:03:53,270 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:53,271 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:53,477 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:53,477 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:03:53,478 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(5)), (np.int64(13), np.int64(6)))
2025-04-11 19:03:53,480 [DEBUG] board coords: [(9, 6), (10, 6), (11, 6), (12, 6), (13, 6), (14, 6)]
2025-04-11 19:03:53,480 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:03:53,480 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (11, 6)]
2025-04-11 19:03:53,480 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 0 2 2 2] with coords [(9, 6), (10, 6), (11, 6), (12, 6), (13, 6), (14, 6)] triggers candidate.
2025-04-11 19:03:53,480 [DEBUG] board coords: [(10, 6), (11, 6), (12, 6), (13, 6), (14, 6), (15, 6)]
2025-04-11 19:03:53,480 [DEBUG] board values[np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 19:03:53,480 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (15, 6)]
2025-04-11 19:03:53,480 [DEBUG] check_window_intermediate_custom: For L=6, window [2 0 2 2 2 0] with coords [(10, 6), (11, 6), (12, 6), (13, 6), (14, 6), (15, 6)] triggers candidate.
2025-04-11 19:03:53,485 [INFO] Final candidates: [(9, 6), (15, 6), (11, 6)]
2025-04-11 19:03:53,485 [INFO] Phase win: Collected 3unique candidate(s):[((9, 6), (11, 6)), ((9, 6), (15, 6)), ((15, 6), (11, 6))]
2025-04-11 19:03:53,485 [INFO] Phase 1 (immediate win): 3 candidate(s) found.
2025-04-11 19:03:53,492 [INFO] Final candidates: []
2025-04-11 19:03:53,493 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:53,493 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:53,773 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:53,773 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:03:53,773 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(16)), (np.int64(0), np.int64(2)))
2025-04-11 19:03:53,780 [INFO] Final candidates: []
2025-04-11 19:03:53,780 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:53,787 [INFO] Final candidates: []
2025-04-11 19:03:53,787 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:53,788 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:53,870 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:53,870 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:03:53,870 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(5)), (np.int64(15), np.int64(12)))
2025-04-11 19:03:53,878 [INFO] Final candidates: []
2025-04-11 19:03:53,878 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:53,885 [INFO] Final candidates: []
2025-04-11 19:03:53,885 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:53,885 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:54,130 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:54,130 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:03:54,130 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(1)), (np.int64(12), np.int64(7)))
2025-04-11 19:03:54,137 [INFO] Final candidates: []
2025-04-11 19:03:54,137 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:54,144 [INFO] Final candidates: []
2025-04-11 19:03:54,145 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:54,145 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:54,209 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:54,209 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:03:54,209 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(4)), (np.int64(17), np.int64(6)))
2025-04-11 19:03:54,216 [INFO] Final candidates: []
2025-04-11 19:03:54,216 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:54,223 [INFO] Final candidates: []
2025-04-11 19:03:54,223 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:54,224 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:54,407 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:54,407 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:03:54,407 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(11)), (np.int64(8), np.int64(5)))
2025-04-11 19:03:54,415 [INFO] Final candidates: []
2025-04-11 19:03:54,415 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:54,421 [INFO] Final candidates: []
2025-04-11 19:03:54,421 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:54,422 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:54,591 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:54,591 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:03:54,591 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(17), np.int64(2)), (np.int64(15), np.int64(10)))
2025-04-11 19:03:54,598 [INFO] Final candidates: []
2025-04-11 19:03:54,598 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:54,605 [INFO] Final candidates: []
2025-04-11 19:03:54,605 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:54,606 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:54,882 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:54,882 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:03:54,883 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(6)), (np.int64(11), np.int64(6)))
2025-04-11 19:03:54,885 [DEBUG] board coords: [(9, 6), (10, 6), (11, 6), (12, 6), (13, 6), (14, 6)]
2025-04-11 19:03:54,885 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(2)]
2025-04-11 19:03:54,885 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (13, 6)]
2025-04-11 19:03:54,885 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 2 0 2] with coords [(9, 6), (10, 6), (11, 6), (12, 6), (13, 6), (14, 6)] triggers candidate.
2025-04-11 19:03:54,885 [DEBUG] board coords: [(11, 6), (12, 6), (13, 6), (14, 6), (15, 6), (16, 6)]
2025-04-11 19:03:54,885 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 19:03:54,885 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 6), (16, 6)]
2025-04-11 19:03:54,885 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 6), (12, 6), (13, 6), (14, 6), (15, 6), (16, 6)] triggers candidate.
2025-04-11 19:03:54,890 [INFO] Final candidates: [(9, 6), (13, 6), (16, 6)]
2025-04-11 19:03:54,890 [INFO] Phase win: Collected 3unique candidate(s):[((9, 6), (16, 6)), ((9, 6), (13, 6)), ((13, 6), (16, 6))]
2025-04-11 19:03:54,890 [INFO] Phase 1 (immediate win): 3 candidate(s) found.
2025-04-11 19:03:54,897 [INFO] Final candidates: []
2025-04-11 19:03:54,897 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:54,897 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:54,912 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:54,912 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:03:54,912 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(0), np.int64(2)), (np.int64(8), np.int64(6)))
2025-04-11 19:03:54,919 [INFO] Final candidates: []
2025-04-11 19:03:54,919 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:54,926 [INFO] Final candidates: []
2025-04-11 19:03:54,926 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:54,927 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:54,976 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:54,976 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:03:54,976 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(4)), (np.int64(15), np.int64(9)))
2025-04-11 19:03:54,983 [INFO] Final candidates: []
2025-04-11 19:03:54,983 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:54,990 [INFO] Final candidates: []
2025-04-11 19:03:54,990 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:54,991 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:55,240 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:55,240 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:03:55,241 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(10)), (np.int64(11), np.int64(9)))
2025-04-11 19:03:55,247 [DEBUG] board coords: [(9, 11), (10, 10), (11, 9), (12, 8), (13, 7), (14, 6)]
2025-04-11 19:03:55,247 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:03:55,247 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 11), (10, 10)]
2025-04-11 19:03:55,247 [DEBUG] check_window_intermediate_custom (only one inserted(10, 10)): For L=6, window [0 0 2 2 2 2] with coords [(9, 11), (10, 10), (11, 9), (12, 8), (13, 7), (14, 6)] triggers candidate.
2025-04-11 19:03:55,248 [INFO] Final candidates: [(10, 10)]
2025-04-11 19:03:55,248 [INFO] Phase win: Found only one candidate: (10, 10)
2025-04-11 19:03:55,248 [INFO] Phase win: Collected 10unique candidate(s):[((10, 10), (np.int64(10), np.int64(11))), ((10, 10), (np.int64(9), np.int64(11))), ((10, 10), (np.int64(9), np.int64(10))), ((10, 10), (np.int64(8), np.int64(10))), ((10, 10), (np.int64(10), np.int64(8))), ((10, 10), (np.int64(10), np.int64(12))), ((10, 10), (np.int64(11), np.int64(11))), ((10, 10), (np.int64(11), np.int64(10))), ((10, 10), (np.int64(9), np.int64(9))), ((10, 10), (np.int64(10), np.int64(9)))]
2025-04-11 19:03:55,248 [INFO] Phase 1 (immediate win): 10 candidate(s) found.
2025-04-11 19:03:55,255 [INFO] Final candidates: []
2025-04-11 19:03:55,255 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:55,256 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:55,497 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:55,498 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:03:55,498 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(5)), (np.int64(14), np.int64(4)))
2025-04-11 19:03:55,505 [INFO] Final candidates: []
2025-04-11 19:03:55,505 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:55,512 [INFO] Final candidates: []
2025-04-11 19:03:55,512 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:55,513 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:55,690 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:55,690 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:03:55,690 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(7)), (np.int64(15), np.int64(3)))
2025-04-11 19:03:55,698 [INFO] Final candidates: []
2025-04-11 19:03:55,698 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:55,705 [INFO] Final candidates: []
2025-04-11 19:03:55,705 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:55,705 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:55,717 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:55,717 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:03:55,717 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(5)), (np.int64(16), np.int64(10)))
2025-04-11 19:03:55,724 [INFO] Final candidates: []
2025-04-11 19:03:55,724 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:55,731 [INFO] Final candidates: []
2025-04-11 19:03:55,731 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:55,732 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:55,865 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:55,865 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:03:55,865 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(3), np.int64(2)), (np.int64(12), np.int64(7)))
2025-04-11 19:03:55,872 [INFO] Final candidates: []
2025-04-11 19:03:55,872 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:55,879 [INFO] Final candidates: []
2025-04-11 19:03:55,879 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:55,880 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:55,992 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:55,992 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:03:55,992 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(0), np.int64(2)), (np.int64(16), np.int64(0)))
2025-04-11 19:03:55,999 [INFO] Final candidates: []
2025-04-11 19:03:55,999 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:56,006 [INFO] Final candidates: []
2025-04-11 19:03:56,006 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:56,007 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:56,198 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:56,198 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:03:56,198 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(13)), (np.int64(11), np.int64(10)))
2025-04-11 19:03:56,205 [INFO] Final candidates: []
2025-04-11 19:03:56,205 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:56,212 [INFO] Final candidates: []
2025-04-11 19:03:56,212 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:56,213 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:56,428 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:56,428 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:03:56,428 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(18), np.int64(3)), (np.int64(17), np.int64(11)))
2025-04-11 19:03:56,435 [INFO] Final candidates: []
2025-04-11 19:03:56,435 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:56,442 [INFO] Final candidates: []
2025-04-11 19:03:56,442 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:56,443 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:56,581 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:56,581 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:03:56,581 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(6)), (np.int64(16), np.int64(1)))
2025-04-11 19:03:56,588 [INFO] Final candidates: []
2025-04-11 19:03:56,588 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:56,595 [INFO] Final candidates: []
2025-04-11 19:03:56,595 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:56,596 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:56,674 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:56,674 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:03:56,674 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(1)), (np.int64(16), np.int64(0)))
2025-04-11 19:03:56,681 [INFO] Final candidates: []
2025-04-11 19:03:56,681 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:56,688 [INFO] Final candidates: []
2025-04-11 19:03:56,688 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:56,689 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:56,843 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:56,843 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:03:56,843 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(4)), (np.int64(17), np.int64(1)))
2025-04-11 19:03:56,850 [INFO] Final candidates: []
2025-04-11 19:03:56,850 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:56,857 [INFO] Final candidates: []
2025-04-11 19:03:56,857 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:56,858 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:56,990 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:56,990 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:03:56,990 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(18)), (np.int64(12), np.int64(9)))
2025-04-11 19:03:56,997 [INFO] Final candidates: []
2025-04-11 19:03:56,997 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:57,004 [INFO] Final candidates: []
2025-04-11 19:03:57,004 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:57,005 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:57,094 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:57,094 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:03:57,094 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(17), np.int64(5)), (np.int64(16), np.int64(6)))
2025-04-11 19:03:57,101 [INFO] Final candidates: []
2025-04-11 19:03:57,101 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:57,108 [INFO] Final candidates: []
2025-04-11 19:03:57,108 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:57,109 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:57,166 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:57,166 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:03:57,166 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(17), np.int64(7)), (np.int64(9), np.int64(6)))
2025-04-11 19:03:57,168 [DEBUG] board coords: [(9, 6), (10, 6), (11, 6), (12, 6), (13, 6), (14, 6)]
2025-04-11 19:03:57,168 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(0), np.int64(2)]
2025-04-11 19:03:57,168 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (13, 6)]
2025-04-11 19:03:57,168 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 0 2] with coords [(9, 6), (10, 6), (11, 6), (12, 6), (13, 6), (14, 6)] triggers candidate.
2025-04-11 19:03:57,173 [INFO] Final candidates: [(13, 6), (11, 6)]
2025-04-11 19:03:57,173 [INFO] Phase win: Collected 1unique candidate(s):[((13, 6), (11, 6))]
2025-04-11 19:03:57,173 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 19:03:57,180 [INFO] Final candidates: []
2025-04-11 19:03:57,180 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:57,181 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:57,230 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:57,230 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:03:57,230 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(12)), (np.int64(18), np.int64(8)))
2025-04-11 19:03:57,237 [INFO] Final candidates: []
2025-04-11 19:03:57,237 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:57,244 [INFO] Final candidates: []
2025-04-11 19:03:57,244 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:57,245 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:57,394 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:57,395 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:03:57,395 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(11)), (np.int64(0), np.int64(1)))
2025-04-11 19:03:57,402 [INFO] Final candidates: []
2025-04-11 19:03:57,402 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:57,409 [INFO] Final candidates: []
2025-04-11 19:03:57,409 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:57,410 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:57,654 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:57,654 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:03:57,655 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(17), np.int64(9)), (np.int64(9), np.int64(4)))
2025-04-11 19:03:57,662 [INFO] Final candidates: []
2025-04-11 19:03:57,662 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:57,669 [INFO] Final candidates: []
2025-04-11 19:03:57,669 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:57,669 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:57,749 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:57,750 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:03:57,750 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(8)), (np.int64(3), np.int64(2)))
2025-04-11 19:03:57,757 [INFO] Final candidates: []
2025-04-11 19:03:57,757 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:57,764 [INFO] Final candidates: []
2025-04-11 19:03:57,764 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:57,764 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:57,911 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:57,911 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:03:57,911 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(3)), (np.int64(11), np.int64(17)))
2025-04-11 19:03:57,919 [INFO] Final candidates: []
2025-04-11 19:03:57,919 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:57,925 [INFO] Final candidates: []
2025-04-11 19:03:57,925 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:57,926 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:58,016 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:58,016 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:03:58,016 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(13)), (np.int64(10), np.int64(7)))
2025-04-11 19:03:58,023 [INFO] Final candidates: []
2025-04-11 19:03:58,023 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:58,030 [INFO] Final candidates: []
2025-04-11 19:03:58,030 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:58,031 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:58,164 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:58,165 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:03:58,165 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(7)), (np.int64(14), np.int64(0)))
2025-04-11 19:03:58,172 [INFO] Final candidates: []
2025-04-11 19:03:58,172 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:58,179 [INFO] Final candidates: []
2025-04-11 19:03:58,179 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:58,180 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:58,376 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:58,377 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:03:58,377 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(15)), (np.int64(2), np.int64(3)))
2025-04-11 19:03:58,387 [INFO] Final candidates: []
2025-04-11 19:03:58,387 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:58,394 [INFO] Final candidates: []
2025-04-11 19:03:58,394 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:58,395 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:58,622 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:58,622 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:03:58,622 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(17)), (np.int64(7), np.int64(5)))
2025-04-11 19:03:58,630 [INFO] Final candidates: []
2025-04-11 19:03:58,630 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:58,638 [INFO] Final candidates: []
2025-04-11 19:03:58,638 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:58,639 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:58,686 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:58,686 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:03:58,686 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(17)), (np.int64(17), np.int64(10)))
2025-04-11 19:03:58,693 [INFO] Final candidates: []
2025-04-11 19:03:58,694 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:58,700 [INFO] Final candidates: []
2025-04-11 19:03:58,700 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:58,701 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:58,831 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:58,831 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:03:58,831 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(17)), (np.int64(18), np.int64(2)))
2025-04-11 19:03:58,838 [INFO] Final candidates: []
2025-04-11 19:03:58,838 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:58,845 [INFO] Final candidates: []
2025-04-11 19:03:58,846 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:58,846 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:58,875 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:58,875 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:03:58,875 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(8)), (np.int64(12), np.int64(7)))
2025-04-11 19:03:58,882 [INFO] Final candidates: []
2025-04-11 19:03:58,882 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:58,889 [INFO] Final candidates: []
2025-04-11 19:03:58,889 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:58,890 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:58,972 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:58,973 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:03:58,973 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(18)), (np.int64(12), np.int64(7)))
2025-04-11 19:03:58,980 [INFO] Final candidates: []
2025-04-11 19:03:58,980 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:58,987 [INFO] Final candidates: []
2025-04-11 19:03:58,987 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:58,988 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:59,007 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:59,007 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:03:59,008 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(18)), (np.int64(15), np.int64(17)))
2025-04-11 19:03:59,015 [INFO] Final candidates: []
2025-04-11 19:03:59,015 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:59,022 [INFO] Final candidates: []
2025-04-11 19:03:59,022 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:59,022 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:59,224 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:59,224 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:03:59,224 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(4)), (np.int64(12), np.int64(12)))
2025-04-11 19:03:59,232 [INFO] Final candidates: []
2025-04-11 19:03:59,232 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:59,238 [INFO] Final candidates: []
2025-04-11 19:03:59,238 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:59,239 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:59,398 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:59,398 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:03:59,398 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(5)), (np.int64(13), np.int64(18)))
2025-04-11 19:03:59,405 [INFO] Final candidates: []
2025-04-11 19:03:59,405 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:59,412 [INFO] Final candidates: []
2025-04-11 19:03:59,412 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:59,413 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:59,613 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:03:59,614 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:03:59,614 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(18)), (np.int64(0), np.int64(2)))
2025-04-11 19:03:59,621 [INFO] Final candidates: []
2025-04-11 19:03:59,621 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:59,628 [INFO] Final candidates: []
2025-04-11 19:03:59,628 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:59,628 [INFO] Default policy: Starting random playout.
2025-04-11 19:03:59,820 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:03:59,820 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:03:59,820 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(16)), (np.int64(13), np.int64(16)))
2025-04-11 19:03:59,827 [INFO] Final candidates: []
2025-04-11 19:03:59,827 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:03:59,834 [INFO] Final candidates: []
2025-04-11 19:03:59,834 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:03:59,835 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:00,009 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:00,009 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:00,009 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(6)), (np.int64(14), np.int64(18)))
2025-04-11 19:04:00,016 [INFO] Final candidates: []
2025-04-11 19:04:00,016 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:00,023 [INFO] Final candidates: []
2025-04-11 19:04:00,023 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:00,024 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:00,173 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:00,173 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:00,173 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(4)), (np.int64(13), np.int64(18)))
2025-04-11 19:04:00,180 [INFO] Final candidates: []
2025-04-11 19:04:00,180 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:00,187 [INFO] Final candidates: []
2025-04-11 19:04:00,187 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:00,188 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:00,342 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:00,342 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:00,342 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(9)), (np.int64(16), np.int64(4)))
2025-04-11 19:04:00,348 [DEBUG] board coords: [(9, 11), (10, 10), (11, 9), (12, 8), (13, 7), (14, 6)]
2025-04-11 19:04:00,348 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:00,348 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 11), (10, 10)]
2025-04-11 19:04:00,348 [DEBUG] check_window_intermediate_custom (only one inserted(10, 10)): For L=6, window [0 0 2 2 2 2] with coords [(9, 11), (10, 10), (11, 9), (12, 8), (13, 7), (14, 6)] triggers candidate.
2025-04-11 19:04:00,349 [INFO] Final candidates: [(10, 10)]
2025-04-11 19:04:00,349 [INFO] Phase win: Found only one candidate: (10, 10)
2025-04-11 19:04:00,349 [INFO] Phase win: Collected 10unique candidate(s):[((10, 10), (np.int64(10), np.int64(11))), ((10, 10), (np.int64(9), np.int64(11))), ((10, 10), (np.int64(9), np.int64(10))), ((10, 10), (np.int64(8), np.int64(10))), ((10, 10), (np.int64(10), np.int64(8))), ((10, 10), (np.int64(10), np.int64(12))), ((10, 10), (np.int64(11), np.int64(11))), ((10, 10), (np.int64(11), np.int64(10))), ((10, 10), (np.int64(9), np.int64(9))), ((10, 10), (np.int64(10), np.int64(9)))]
2025-04-11 19:04:00,349 [INFO] Phase 1 (immediate win): 10 candidate(s) found.
2025-04-11 19:04:00,357 [INFO] Final candidates: []
2025-04-11 19:04:00,357 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:00,357 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:00,518 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:00,519 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:00,519 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(2), np.int64(3)), (np.int64(18), np.int64(8)))
2025-04-11 19:04:00,526 [INFO] Final candidates: []
2025-04-11 19:04:00,526 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:00,533 [INFO] Final candidates: []
2025-04-11 19:04:00,533 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:00,534 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:00,752 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:00,752 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:00,752 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(5)), (np.int64(15), np.int64(1)))
2025-04-11 19:04:00,759 [INFO] Final candidates: []
2025-04-11 19:04:00,759 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:00,766 [INFO] Final candidates: []
2025-04-11 19:04:00,766 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:00,767 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:00,869 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:00,870 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:00,870 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(6)), (np.int64(14), np.int64(11)))
2025-04-11 19:04:00,877 [INFO] Final candidates: []
2025-04-11 19:04:00,877 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:00,884 [INFO] Final candidates: []
2025-04-11 19:04:00,884 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:00,885 [DEBUG] MCTS iteration 50: reached a node with 0 visits.
2025-04-11 19:04:00,885 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:00,939 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:00,939 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:00,939 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(17)), (np.int64(16), np.int64(0)))
2025-04-11 19:04:00,946 [INFO] Final candidates: []
2025-04-11 19:04:00,946 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:00,953 [INFO] Final candidates: []
2025-04-11 19:04:00,953 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:00,954 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:01,100 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:01,100 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:01,100 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(18)), (np.int64(9), np.int64(6)))
2025-04-11 19:04:01,103 [DEBUG] board coords: [(9, 6), (10, 6), (11, 6), (12, 6), (13, 6), (14, 6)]
2025-04-11 19:04:01,103 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(0), np.int64(2)]
2025-04-11 19:04:01,103 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (13, 6)]
2025-04-11 19:04:01,103 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 0 2] with coords [(9, 6), (10, 6), (11, 6), (12, 6), (13, 6), (14, 6)] triggers candidate.
2025-04-11 19:04:01,107 [INFO] Final candidates: [(13, 6), (11, 6)]
2025-04-11 19:04:01,107 [INFO] Phase win: Collected 1unique candidate(s):[((13, 6), (11, 6))]
2025-04-11 19:04:01,107 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 19:04:01,114 [INFO] Final candidates: []
2025-04-11 19:04:01,114 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:01,115 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:01,228 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:01,228 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:01,228 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(1), np.int64(4)), (np.int64(11), np.int64(10)))
2025-04-11 19:04:01,235 [INFO] Final candidates: []
2025-04-11 19:04:01,235 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:01,242 [INFO] Final candidates: []
2025-04-11 19:04:01,242 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:01,243 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:01,346 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:01,346 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:01,346 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(1)), (np.int64(0), np.int64(3)))
2025-04-11 19:04:01,355 [INFO] Final candidates: []
2025-04-11 19:04:01,355 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:01,362 [INFO] Final candidates: []
2025-04-11 19:04:01,362 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:01,362 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:01,627 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:01,628 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:01,628 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(17), np.int64(2)), (np.int64(15), np.int64(6)))
2025-04-11 19:04:01,630 [DEBUG] board coords: [(10, 6), (11, 6), (12, 6), (13, 6), (14, 6), (15, 6)]
2025-04-11 19:04:01,630 [DEBUG] board values[np.int64(2), np.int64(0), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:04:01,630 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (13, 6)]
2025-04-11 19:04:01,631 [DEBUG] check_window_intermediate_custom: For L=6, window [2 0 2 0 2 2] with coords [(10, 6), (11, 6), (12, 6), (13, 6), (14, 6), (15, 6)] triggers candidate.
2025-04-11 19:04:01,636 [INFO] Final candidates: [(13, 6), (11, 6)]
2025-04-11 19:04:01,636 [INFO] Phase win: Collected 1unique candidate(s):[((13, 6), (11, 6))]
2025-04-11 19:04:01,636 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 19:04:01,643 [INFO] Final candidates: []
2025-04-11 19:04:01,643 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:01,644 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:01,773 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:01,773 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:01,774 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(17), np.int64(9)), (np.int64(13), np.int64(18)))
2025-04-11 19:04:01,780 [INFO] Final candidates: []
2025-04-11 19:04:01,781 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:01,787 [INFO] Final candidates: []
2025-04-11 19:04:01,787 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:01,788 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:01,884 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:01,885 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:01,885 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(0), np.int64(2)), (np.int64(14), np.int64(4)))
2025-04-11 19:04:01,892 [INFO] Final candidates: []
2025-04-11 19:04:01,892 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:01,908 [INFO] Final candidates: []
2025-04-11 19:04:01,908 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:01,909 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:02,031 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:02,032 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:02,032 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(15)), (np.int64(12), np.int64(16)))
2025-04-11 19:04:02,039 [INFO] Final candidates: []
2025-04-11 19:04:02,039 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:02,046 [INFO] Final candidates: []
2025-04-11 19:04:02,046 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:02,047 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:02,192 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:02,193 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:02,193 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(3), np.int64(2)), (np.int64(12), np.int64(9)))
2025-04-11 19:04:02,200 [INFO] Final candidates: []
2025-04-11 19:04:02,200 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:02,207 [INFO] Final candidates: []
2025-04-11 19:04:02,207 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:02,208 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:02,418 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:02,418 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:02,418 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(17), np.int64(5)), (np.int64(16), np.int64(7)))
2025-04-11 19:04:02,425 [INFO] Final candidates: []
2025-04-11 19:04:02,425 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:02,433 [INFO] Final candidates: []
2025-04-11 19:04:02,433 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:02,433 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:02,728 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:02,729 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:02,729 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(11)), (np.int64(11), np.int64(11)))
2025-04-11 19:04:02,736 [INFO] Final candidates: []
2025-04-11 19:04:02,736 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:02,743 [INFO] Final candidates: []
2025-04-11 19:04:02,743 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:02,744 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:02,936 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:02,936 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:02,937 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(16)), (np.int64(11), np.int64(11)))
2025-04-11 19:04:02,944 [INFO] Final candidates: []
2025-04-11 19:04:02,944 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:02,951 [INFO] Final candidates: []
2025-04-11 19:04:02,951 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:02,951 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:03,227 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:03,227 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:03,227 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(12)), (np.int64(14), np.int64(11)))
2025-04-11 19:04:03,234 [INFO] Final candidates: []
2025-04-11 19:04:03,234 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:03,241 [INFO] Final candidates: []
2025-04-11 19:04:03,241 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:03,242 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:03,347 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:03,348 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:03,348 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(3)), (np.int64(16), np.int64(4)))
2025-04-11 19:04:03,355 [INFO] Final candidates: []
2025-04-11 19:04:03,356 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:03,363 [INFO] Final candidates: []
2025-04-11 19:04:03,363 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:03,363 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:03,653 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:03,653 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:03,653 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(16)), (np.int64(17), np.int64(2)))
2025-04-11 19:04:03,660 [INFO] Final candidates: []
2025-04-11 19:04:03,661 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:03,668 [INFO] Final candidates: []
2025-04-11 19:04:03,668 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:03,669 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:03,732 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:03,732 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:03,732 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(9)), (np.int64(17), np.int64(6)))
2025-04-11 19:04:03,739 [INFO] Final candidates: []
2025-04-11 19:04:03,739 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:03,746 [INFO] Final candidates: []
2025-04-11 19:04:03,746 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:03,747 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:03,920 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:03,921 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:03,921 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(18)), (np.int64(11), np.int64(6)))
2025-04-11 19:04:03,923 [DEBUG] board coords: [(9, 6), (10, 6), (11, 6), (12, 6), (13, 6), (14, 6)]
2025-04-11 19:04:03,923 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(2)]
2025-04-11 19:04:03,923 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (13, 6)]
2025-04-11 19:04:03,923 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 2 0 2] with coords [(9, 6), (10, 6), (11, 6), (12, 6), (13, 6), (14, 6)] triggers candidate.
2025-04-11 19:04:03,923 [DEBUG] board coords: [(10, 6), (11, 6), (12, 6), (13, 6), (14, 6), (15, 6)]
2025-04-11 19:04:03,923 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(0)]
2025-04-11 19:04:03,923 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 6), (15, 6)]
2025-04-11 19:04:03,923 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 0 2 0] with coords [(10, 6), (11, 6), (12, 6), (13, 6), (14, 6), (15, 6)] triggers candidate.
2025-04-11 19:04:03,928 [INFO] Final candidates: [(9, 6), (15, 6), (13, 6)]
2025-04-11 19:04:03,928 [INFO] Phase win: Collected 3unique candidate(s):[((9, 6), (15, 6)), ((9, 6), (13, 6)), ((15, 6), (13, 6))]
2025-04-11 19:04:03,928 [INFO] Phase 1 (immediate win): 3 candidate(s) found.
2025-04-11 19:04:03,935 [INFO] Final candidates: []
2025-04-11 19:04:03,935 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:03,936 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:04,093 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:04,093 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:04,093 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(4)), (np.int64(11), np.int64(6)))
2025-04-11 19:04:04,096 [DEBUG] board coords: [(9, 6), (10, 6), (11, 6), (12, 6), (13, 6), (14, 6)]
2025-04-11 19:04:04,096 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(2)]
2025-04-11 19:04:04,096 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (13, 6)]
2025-04-11 19:04:04,096 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 2 0 2] with coords [(9, 6), (10, 6), (11, 6), (12, 6), (13, 6), (14, 6)] triggers candidate.
2025-04-11 19:04:04,096 [DEBUG] board coords: [(10, 6), (11, 6), (12, 6), (13, 6), (14, 6), (15, 6)]
2025-04-11 19:04:04,096 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(0)]
2025-04-11 19:04:04,096 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 6), (15, 6)]
2025-04-11 19:04:04,096 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 0 2 0] with coords [(10, 6), (11, 6), (12, 6), (13, 6), (14, 6), (15, 6)] triggers candidate.
2025-04-11 19:04:04,101 [INFO] Final candidates: [(9, 6), (15, 6), (13, 6)]
2025-04-11 19:04:04,101 [INFO] Phase win: Collected 3unique candidate(s):[((9, 6), (15, 6)), ((9, 6), (13, 6)), ((15, 6), (13, 6))]
2025-04-11 19:04:04,101 [INFO] Phase 1 (immediate win): 3 candidate(s) found.
2025-04-11 19:04:04,108 [INFO] Final candidates: []
2025-04-11 19:04:04,108 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:04,108 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:04,265 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:04,265 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:04,266 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(17)), (np.int64(11), np.int64(11)))
2025-04-11 19:04:04,273 [INFO] Final candidates: []
2025-04-11 19:04:04,273 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:04,280 [INFO] Final candidates: []
2025-04-11 19:04:04,280 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:04,280 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:04,400 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:04,400 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:04,400 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(17)), (np.int64(15), np.int64(13)))
2025-04-11 19:04:04,407 [INFO] Final candidates: []
2025-04-11 19:04:04,407 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:04,414 [INFO] Final candidates: []
2025-04-11 19:04:04,414 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:04,415 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:04,624 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:04,624 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:04,624 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(9)), (np.int64(3), np.int64(2)))
2025-04-11 19:04:04,630 [DEBUG] board coords: [(9, 11), (10, 10), (11, 9), (12, 8), (13, 7), (14, 6)]
2025-04-11 19:04:04,630 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:04,630 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 11), (10, 10)]
2025-04-11 19:04:04,630 [DEBUG] check_window_intermediate_custom (only one inserted(10, 10)): For L=6, window [0 0 2 2 2 2] with coords [(9, 11), (10, 10), (11, 9), (12, 8), (13, 7), (14, 6)] triggers candidate.
2025-04-11 19:04:04,631 [INFO] Final candidates: [(10, 10)]
2025-04-11 19:04:04,631 [INFO] Phase win: Found only one candidate: (10, 10)
2025-04-11 19:04:04,631 [INFO] Phase win: Collected 10unique candidate(s):[((10, 10), (np.int64(10), np.int64(11))), ((10, 10), (np.int64(9), np.int64(11))), ((10, 10), (np.int64(9), np.int64(10))), ((10, 10), (np.int64(8), np.int64(10))), ((10, 10), (np.int64(10), np.int64(8))), ((10, 10), (np.int64(10), np.int64(12))), ((10, 10), (np.int64(11), np.int64(11))), ((10, 10), (np.int64(11), np.int64(10))), ((10, 10), (np.int64(9), np.int64(9))), ((10, 10), (np.int64(10), np.int64(9)))]
2025-04-11 19:04:04,631 [INFO] Phase 1 (immediate win): 10 candidate(s) found.
2025-04-11 19:04:04,638 [INFO] Final candidates: []
2025-04-11 19:04:04,638 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:04,639 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:04,835 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:04,835 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:04,836 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(2), np.int64(3)), (np.int64(15), np.int64(3)))
2025-04-11 19:04:04,843 [INFO] Final candidates: []
2025-04-11 19:04:04,843 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:04,850 [INFO] Final candidates: []
2025-04-11 19:04:04,850 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:04,851 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:04,953 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:04,954 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:04,954 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(17), np.int64(2)), (np.int64(1), np.int64(0)))
2025-04-11 19:04:04,961 [INFO] Final candidates: []
2025-04-11 19:04:04,961 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:04,968 [INFO] Final candidates: []
2025-04-11 19:04:04,968 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:04,968 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:05,176 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:05,176 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:05,176 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(4)), (np.int64(11), np.int64(5)))
2025-04-11 19:04:05,183 [INFO] Final candidates: []
2025-04-11 19:04:05,183 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:05,190 [INFO] Final candidates: []
2025-04-11 19:04:05,190 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:05,191 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:05,265 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:05,265 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:05,265 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(5)), (np.int64(16), np.int64(9)))
2025-04-11 19:04:05,272 [INFO] Final candidates: []
2025-04-11 19:04:05,272 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:05,279 [INFO] Final candidates: []
2025-04-11 19:04:05,279 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:05,280 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:05,566 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:05,566 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:05,566 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(5)), (np.int64(9), np.int64(6)))
2025-04-11 19:04:05,569 [DEBUG] board coords: [(9, 6), (10, 6), (11, 6), (12, 6), (13, 6), (14, 6)]
2025-04-11 19:04:05,569 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(0), np.int64(2)]
2025-04-11 19:04:05,569 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (13, 6)]
2025-04-11 19:04:05,569 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 0 2] with coords [(9, 6), (10, 6), (11, 6), (12, 6), (13, 6), (14, 6)] triggers candidate.
2025-04-11 19:04:05,575 [INFO] Final candidates: [(13, 6), (11, 6)]
2025-04-11 19:04:05,575 [INFO] Phase win: Collected 1unique candidate(s):[((13, 6), (11, 6))]
2025-04-11 19:04:05,575 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 19:04:05,582 [INFO] Final candidates: []
2025-04-11 19:04:05,583 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:05,583 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:05,829 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:05,829 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:05,829 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(5)), (np.int64(11), np.int64(17)))
2025-04-11 19:04:05,836 [INFO] Final candidates: []
2025-04-11 19:04:05,836 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:05,843 [INFO] Final candidates: []
2025-04-11 19:04:05,843 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:05,844 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:05,902 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:05,902 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:05,903 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(17), np.int64(9)), (np.int64(14), np.int64(18)))
2025-04-11 19:04:05,910 [INFO] Final candidates: []
2025-04-11 19:04:05,910 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:05,917 [INFO] Final candidates: []
2025-04-11 19:04:05,917 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:05,917 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:06,013 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:06,013 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:06,014 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(10)), (np.int64(10), np.int64(5)))
2025-04-11 19:04:06,021 [INFO] Final candidates: []
2025-04-11 19:04:06,021 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:06,028 [INFO] Final candidates: []
2025-04-11 19:04:06,028 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:06,028 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:06,060 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:06,061 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:06,061 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(17), np.int64(11)), (np.int64(14), np.int64(18)))
2025-04-11 19:04:06,068 [INFO] Final candidates: []
2025-04-11 19:04:06,068 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:06,075 [INFO] Final candidates: []
2025-04-11 19:04:06,075 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:06,075 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:06,121 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:06,121 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:06,121 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(1)), (np.int64(16), np.int64(9)))
2025-04-11 19:04:06,128 [INFO] Final candidates: []
2025-04-11 19:04:06,128 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:06,135 [INFO] Final candidates: []
2025-04-11 19:04:06,135 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:06,136 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:06,275 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:06,276 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:06,276 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(9)), (np.int64(0), np.int64(1)))
2025-04-11 19:04:06,282 [DEBUG] board coords: [(9, 11), (10, 10), (11, 9), (12, 8), (13, 7), (14, 6)]
2025-04-11 19:04:06,282 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:06,282 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 11), (10, 10)]
2025-04-11 19:04:06,282 [DEBUG] check_window_intermediate_custom (only one inserted(10, 10)): For L=6, window [0 0 2 2 2 2] with coords [(9, 11), (10, 10), (11, 9), (12, 8), (13, 7), (14, 6)] triggers candidate.
2025-04-11 19:04:06,283 [INFO] Final candidates: [(10, 10)]
2025-04-11 19:04:06,283 [INFO] Phase win: Found only one candidate: (10, 10)
2025-04-11 19:04:06,283 [INFO] Phase win: Collected 10unique candidate(s):[((10, 10), (np.int64(10), np.int64(11))), ((10, 10), (np.int64(9), np.int64(11))), ((10, 10), (np.int64(9), np.int64(10))), ((10, 10), (np.int64(8), np.int64(10))), ((10, 10), (np.int64(10), np.int64(8))), ((10, 10), (np.int64(10), np.int64(12))), ((10, 10), (np.int64(11), np.int64(11))), ((10, 10), (np.int64(11), np.int64(10))), ((10, 10), (np.int64(9), np.int64(9))), ((10, 10), (np.int64(10), np.int64(9)))]
2025-04-11 19:04:06,283 [INFO] Phase 1 (immediate win): 10 candidate(s) found.
2025-04-11 19:04:06,290 [INFO] Final candidates: []
2025-04-11 19:04:06,290 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:06,291 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:06,506 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:06,506 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:06,506 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(5)), (np.int64(13), np.int64(10)))
2025-04-11 19:04:06,514 [INFO] Final candidates: []
2025-04-11 19:04:06,514 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:06,521 [INFO] Final candidates: []
2025-04-11 19:04:06,521 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:06,521 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:06,641 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:06,642 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:06,642 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(5)), (np.int64(11), np.int64(10)))
2025-04-11 19:04:06,649 [INFO] Final candidates: []
2025-04-11 19:04:06,649 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:06,656 [INFO] Final candidates: []
2025-04-11 19:04:06,656 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:06,657 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:06,919 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:06,919 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:06,919 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(7)), (np.int64(15), np.int64(12)))
2025-04-11 19:04:06,926 [INFO] Final candidates: []
2025-04-11 19:04:06,926 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:06,933 [INFO] Final candidates: []
2025-04-11 19:04:06,933 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:06,934 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:07,046 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:07,047 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:07,047 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(9)), (np.int64(13), np.int64(11)))
2025-04-11 19:04:07,054 [INFO] Final candidates: []
2025-04-11 19:04:07,054 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:07,061 [INFO] Final candidates: []
2025-04-11 19:04:07,061 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:07,062 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:07,199 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:07,199 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:07,199 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(6)), (np.int64(11), np.int64(8)))
2025-04-11 19:04:07,202 [DEBUG] board coords: [(9, 6), (10, 6), (11, 6), (12, 6), (13, 6), (14, 6)]
2025-04-11 19:04:07,202 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(2)]
2025-04-11 19:04:07,202 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (13, 6)]
2025-04-11 19:04:07,202 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 2 0 2] with coords [(9, 6), (10, 6), (11, 6), (12, 6), (13, 6), (14, 6)] triggers candidate.
2025-04-11 19:04:07,202 [DEBUG] board coords: [(10, 6), (11, 6), (12, 6), (13, 6), (14, 6), (15, 6)]
2025-04-11 19:04:07,202 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(0)]
2025-04-11 19:04:07,202 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 6), (15, 6)]
2025-04-11 19:04:07,202 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 0 2 0] with coords [(10, 6), (11, 6), (12, 6), (13, 6), (14, 6), (15, 6)] triggers candidate.
2025-04-11 19:04:07,207 [INFO] Final candidates: [(9, 6), (15, 6), (13, 6)]
2025-04-11 19:04:07,207 [INFO] Phase win: Collected 3unique candidate(s):[((9, 6), (15, 6)), ((9, 6), (13, 6)), ((15, 6), (13, 6))]
2025-04-11 19:04:07,207 [INFO] Phase 1 (immediate win): 3 candidate(s) found.
2025-04-11 19:04:07,214 [INFO] Final candidates: []
2025-04-11 19:04:07,214 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:07,215 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:07,286 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:07,286 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:07,286 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(7)), (np.int64(10), np.int64(8)))
2025-04-11 19:04:07,293 [INFO] Final candidates: []
2025-04-11 19:04:07,293 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:07,300 [INFO] Final candidates: []
2025-04-11 19:04:07,300 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:07,301 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:07,444 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:07,444 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:07,444 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(5)), (np.int64(0), np.int64(1)))
2025-04-11 19:04:07,452 [INFO] Final candidates: []
2025-04-11 19:04:07,452 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:07,459 [INFO] Final candidates: []
2025-04-11 19:04:07,459 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:07,460 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:07,757 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:07,757 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:07,757 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(6)), (np.int64(3), np.int64(2)))
2025-04-11 19:04:07,765 [INFO] Final candidates: []
2025-04-11 19:04:07,765 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:07,772 [INFO] Final candidates: []
2025-04-11 19:04:07,772 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:07,773 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:07,972 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:07,972 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:07,972 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(17), np.int64(11)), (np.int64(8), np.int64(5)))
2025-04-11 19:04:07,979 [INFO] Final candidates: []
2025-04-11 19:04:07,979 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:07,986 [INFO] Final candidates: []
2025-04-11 19:04:07,986 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:07,987 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:08,165 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:08,165 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:08,165 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(18)), (np.int64(2), np.int64(3)))
2025-04-11 19:04:08,172 [INFO] Final candidates: []
2025-04-11 19:04:08,172 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:08,180 [INFO] Final candidates: []
2025-04-11 19:04:08,180 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:08,180 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:08,439 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:08,440 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:08,440 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(1)), (np.int64(0), np.int64(1)))
2025-04-11 19:04:08,447 [INFO] Final candidates: []
2025-04-11 19:04:08,447 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:08,454 [INFO] Final candidates: []
2025-04-11 19:04:08,454 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:08,455 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:08,529 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:08,530 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:08,530 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(9)), (np.int64(15), np.int64(6)))
2025-04-11 19:04:08,532 [DEBUG] board coords: [(10, 6), (11, 6), (12, 6), (13, 6), (14, 6), (15, 6)]
2025-04-11 19:04:08,532 [DEBUG] board values[np.int64(2), np.int64(0), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:04:08,532 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (13, 6)]
2025-04-11 19:04:08,532 [DEBUG] check_window_intermediate_custom: For L=6, window [2 0 2 0 2 2] with coords [(10, 6), (11, 6), (12, 6), (13, 6), (14, 6), (15, 6)] triggers candidate.
2025-04-11 19:04:08,536 [DEBUG] board coords: [(9, 11), (10, 10), (11, 9), (12, 8), (13, 7), (14, 6)]
2025-04-11 19:04:08,536 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:08,536 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 11), (10, 10)]
2025-04-11 19:04:08,536 [DEBUG] check_window_intermediate_custom (only one inserted(10, 10)): For L=6, window [0 0 2 2 2 2] with coords [(9, 11), (10, 10), (11, 9), (12, 8), (13, 7), (14, 6)] triggers candidate.
2025-04-11 19:04:08,537 [INFO] Final candidates: [(10, 10), (13, 6), (11, 6)]
2025-04-11 19:04:08,537 [INFO] Phase win: Collected 3unique candidate(s):[((10, 10), (13, 6)), ((13, 6), (11, 6)), ((10, 10), (11, 6))]
2025-04-11 19:04:08,537 [INFO] Phase 1 (immediate win): 3 candidate(s) found.
2025-04-11 19:04:08,544 [INFO] Final candidates: []
2025-04-11 19:04:08,544 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:08,545 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:08,731 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:08,731 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:08,731 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(10)), (np.int64(16), np.int64(0)))
2025-04-11 19:04:08,739 [INFO] Final candidates: []
2025-04-11 19:04:08,739 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:08,746 [INFO] Final candidates: []
2025-04-11 19:04:08,746 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:08,746 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:08,905 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:08,905 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:08,905 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(11)), (np.int64(11), np.int64(6)))
2025-04-11 19:04:08,908 [DEBUG] board coords: [(9, 6), (10, 6), (11, 6), (12, 6), (13, 6), (14, 6)]
2025-04-11 19:04:08,908 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(2)]
2025-04-11 19:04:08,908 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (13, 6)]
2025-04-11 19:04:08,908 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 2 0 2] with coords [(9, 6), (10, 6), (11, 6), (12, 6), (13, 6), (14, 6)] triggers candidate.
2025-04-11 19:04:08,908 [DEBUG] board coords: [(10, 6), (11, 6), (12, 6), (13, 6), (14, 6), (15, 6)]
2025-04-11 19:04:08,908 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(0)]
2025-04-11 19:04:08,908 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 6), (15, 6)]
2025-04-11 19:04:08,908 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 0 2 0] with coords [(10, 6), (11, 6), (12, 6), (13, 6), (14, 6), (15, 6)] triggers candidate.
2025-04-11 19:04:08,913 [INFO] Final candidates: [(9, 6), (15, 6), (13, 6)]
2025-04-11 19:04:08,913 [INFO] Phase win: Collected 3unique candidate(s):[((9, 6), (15, 6)), ((9, 6), (13, 6)), ((15, 6), (13, 6))]
2025-04-11 19:04:08,913 [INFO] Phase 1 (immediate win): 3 candidate(s) found.
2025-04-11 19:04:08,920 [INFO] Final candidates: []
2025-04-11 19:04:08,920 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:08,920 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:09,077 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:09,077 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:09,077 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(7)), (np.int64(17), np.int64(1)))
2025-04-11 19:04:09,084 [INFO] Final candidates: []
2025-04-11 19:04:09,084 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:09,091 [INFO] Final candidates: []
2025-04-11 19:04:09,091 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:09,092 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:09,275 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:09,275 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:09,275 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(12)), (np.int64(18), np.int64(2)))
2025-04-11 19:04:09,282 [INFO] Final candidates: []
2025-04-11 19:04:09,282 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:09,289 [INFO] Final candidates: []
2025-04-11 19:04:09,289 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:09,290 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:09,529 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:09,529 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:09,529 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(6)), (np.int64(17), np.int64(1)))
2025-04-11 19:04:09,532 [DEBUG] board coords: [(10, 6), (11, 6), (12, 6), (13, 6), (14, 6), (15, 6)]
2025-04-11 19:04:09,532 [DEBUG] board values[np.int64(2), np.int64(0), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:04:09,532 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (13, 6)]
2025-04-11 19:04:09,532 [DEBUG] check_window_intermediate_custom: For L=6, window [2 0 2 0 2 2] with coords [(10, 6), (11, 6), (12, 6), (13, 6), (14, 6), (15, 6)] triggers candidate.
2025-04-11 19:04:09,536 [INFO] Final candidates: [(13, 6), (11, 6)]
2025-04-11 19:04:09,536 [INFO] Phase win: Collected 1unique candidate(s):[((13, 6), (11, 6))]
2025-04-11 19:04:09,536 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 19:04:09,544 [INFO] Final candidates: []
2025-04-11 19:04:09,544 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:09,544 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:09,664 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:09,664 [INFO] MCTS: Search finished. Best move selected with 100 visits.
2025-04-11 19:04:09,664 [INFO] Phase 2 (defense): MCTS selected move: ((9, 5), (15, 11))
2025-04-11 19:04:09,664 [INFO] Phase 2 (defense): MCTS selected move string : F10,M16
2025-04-11 19:04:09,664 [INFO] MCTS (defense candidates) selected move: F10,M16
2025-04-11 19:04:09,854 [INFO] Starting pre-MCTS candidate collection.
2025-04-11 19:04:09,862 [INFO] Final candidates: []
2025-04-11 19:04:09,862 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:09,868 [DEBUG] board coords: [(9, 11), (10, 10), (11, 9), (12, 8), (13, 7), (14, 6)]
2025-04-11 19:04:09,868 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:09,868 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 11), (10, 10)]
2025-04-11 19:04:09,868 [DEBUG] check_window_intermediate_custom (only one inserted(10, 10)): For L=6, window [0 0 2 2 2 2] with coords [(9, 11), (10, 10), (11, 9), (12, 8), (13, 7), (14, 6)] triggers candidate.
2025-04-11 19:04:09,869 [INFO] Final candidates: [(10, 10)]
2025-04-11 19:04:09,869 [INFO] Phase defense: Found only one candidate: (10, 10)
2025-04-11 19:04:09,869 [INFO] Phase defense: Collected 10unique candidate(s):[((10, 10), (np.int64(10), np.int64(11))), ((10, 10), (np.int64(9), np.int64(11))), ((10, 10), (np.int64(9), np.int64(10))), ((10, 10), (np.int64(8), np.int64(10))), ((10, 10), (np.int64(10), np.int64(8))), ((10, 10), (np.int64(10), np.int64(12))), ((10, 10), (np.int64(11), np.int64(11))), ((10, 10), (np.int64(11), np.int64(10))), ((10, 10), (np.int64(9), np.int64(9))), ((10, 10), (np.int64(10), np.int64(9)))]
2025-04-11 19:04:09,869 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:09,869 [INFO] MCTS: Starting search for 100 iterations.
2025-04-11 19:04:09,869 [DEBUG] Tree_policy iteration 1: Expanding move ((10, 10), (np.int64(10), np.int64(8)))
2025-04-11 19:04:09,875 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:09,875 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:09,875 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:09,875 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:09,876 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:09,876 [INFO] Phase win: Found only one candidate: (9, 11)
2025-04-11 19:04:09,876 [INFO] Phase win: Collected 11unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(11), np.int64(11))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:09,876 [INFO] Phase 1 (immediate win): 11 candidate(s) found.
2025-04-11 19:04:09,883 [INFO] Final candidates: []
2025-04-11 19:04:09,883 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:09,884 [DEBUG] MCTS iteration 0: reached a node with 0 visits.
2025-04-11 19:04:09,884 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:10,044 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:10,045 [DEBUG] Tree_policy iteration 1: Expanding move ((10, 10), (np.int64(11), np.int64(11)))
2025-04-11 19:04:10,051 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:10,051 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:10,051 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:10,051 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:10,052 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:10,052 [INFO] Phase win: Found only one candidate: (9, 11)
2025-04-11 19:04:10,052 [INFO] Phase win: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:10,052 [INFO] Phase 1 (immediate win): 10 candidate(s) found.
2025-04-11 19:04:10,059 [INFO] Final candidates: []
2025-04-11 19:04:10,059 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:10,060 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:10,180 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:10,180 [DEBUG] Tree_policy iteration 1: Expanding move ((10, 10), (np.int64(9), np.int64(9)))
2025-04-11 19:04:10,187 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:10,187 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:10,187 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:10,187 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:10,188 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:10,188 [INFO] Phase win: Found only one candidate: (9, 11)
2025-04-11 19:04:10,188 [INFO] Phase win: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(11), np.int64(11))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(8), np.int64(11))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(9), np.int64(10)))]
2025-04-11 19:04:10,188 [INFO] Phase 1 (immediate win): 10 candidate(s) found.
2025-04-11 19:04:10,195 [INFO] Final candidates: []
2025-04-11 19:04:10,195 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:10,196 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:10,497 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:10,497 [DEBUG] Tree_policy iteration 1: Expanding move ((10, 10), (np.int64(9), np.int64(10)))
2025-04-11 19:04:10,503 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:10,503 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:10,503 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:10,503 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:10,504 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:10,504 [INFO] Phase win: Found only one candidate: (9, 11)
2025-04-11 19:04:10,504 [INFO] Phase win: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(11), np.int64(11))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:10,504 [INFO] Phase 1 (immediate win): 10 candidate(s) found.
2025-04-11 19:04:10,511 [INFO] Final candidates: []
2025-04-11 19:04:10,511 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:10,512 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:10,544 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:10,544 [DEBUG] Tree_policy iteration 1: Expanding move ((10, 10), (np.int64(11), np.int64(10)))
2025-04-11 19:04:10,550 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:10,550 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:10,550 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:10,550 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:10,551 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:10,551 [INFO] Phase win: Found only one candidate: (9, 11)
2025-04-11 19:04:10,551 [INFO] Phase win: Collected 11unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(11), np.int64(11))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:10,551 [INFO] Phase 1 (immediate win): 11 candidate(s) found.
2025-04-11 19:04:10,559 [INFO] Final candidates: []
2025-04-11 19:04:10,559 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:10,559 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:10,690 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:10,690 [DEBUG] Tree_policy iteration 1: Expanding move ((10, 10), (np.int64(10), np.int64(11)))
2025-04-11 19:04:10,696 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:10,696 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:10,696 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:10,696 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:10,697 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:10,697 [INFO] Phase win: Found only one candidate: (9, 11)
2025-04-11 19:04:10,697 [INFO] Phase win: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(11), np.int64(11))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:10,697 [INFO] Phase 1 (immediate win): 10 candidate(s) found.
2025-04-11 19:04:10,704 [INFO] Final candidates: []
2025-04-11 19:04:10,704 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:10,705 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:10,852 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:10,852 [DEBUG] Tree_policy iteration 1: Expanding move ((10, 10), (np.int64(10), np.int64(12)))
2025-04-11 19:04:10,858 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:10,858 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:10,858 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:10,858 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:10,859 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:10,859 [INFO] Phase win: Found only one candidate: (9, 11)
2025-04-11 19:04:10,860 [INFO] Phase win: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(11), np.int64(11))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:10,860 [INFO] Phase 1 (immediate win): 10 candidate(s) found.
2025-04-11 19:04:10,866 [INFO] Final candidates: []
2025-04-11 19:04:10,866 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:10,867 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:10,940 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:10,940 [DEBUG] Tree_policy iteration 1: Expanding move ((10, 10), (np.int64(10), np.int64(9)))
2025-04-11 19:04:10,946 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:10,946 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:10,946 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:10,947 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:10,948 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:10,948 [INFO] Phase win: Found only one candidate: (9, 11)
2025-04-11 19:04:10,948 [INFO] Phase win: Collected 11unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(11), np.int64(11))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:10,948 [INFO] Phase 1 (immediate win): 11 candidate(s) found.
2025-04-11 19:04:10,954 [INFO] Final candidates: []
2025-04-11 19:04:10,954 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:10,955 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:11,099 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:11,099 [DEBUG] Tree_policy iteration 1: Expanding move ((10, 10), (np.int64(8), np.int64(10)))
2025-04-11 19:04:11,105 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:11,105 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:11,105 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:11,105 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:11,106 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:11,106 [INFO] Phase win: Found only one candidate: (9, 11)
2025-04-11 19:04:11,106 [INFO] Phase win: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(11), np.int64(11))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(11))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(9), np.int64(10)))]
2025-04-11 19:04:11,106 [INFO] Phase 1 (immediate win): 10 candidate(s) found.
2025-04-11 19:04:11,113 [INFO] Final candidates: []
2025-04-11 19:04:11,113 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:11,114 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:11,295 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:11,295 [DEBUG] Tree_policy iteration 1: Expanding move ((10, 10), (np.int64(9), np.int64(11)))
2025-04-11 19:04:11,301 [DEBUG] board coords: [(7, 13), (8, 12), (9, 11), (10, 10), (11, 9), (12, 8)]
2025-04-11 19:04:11,301 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:11,301 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 13), (8, 12)]
2025-04-11 19:04:11,301 [DEBUG] check_window_intermediate_custom (only one inserted(8, 12)): For L=6, window [0 0 2 2 2 2] with coords [(7, 13), (8, 12), (9, 11), (10, 10), (11, 9), (12, 8)] triggers candidate.
2025-04-11 19:04:11,303 [INFO] Final candidates: [(8, 12)]
2025-04-11 19:04:11,303 [INFO] Phase win: Found only one candidate: (8, 12)
2025-04-11 19:04:11,303 [INFO] Phase win: Collected 11unique candidate(s):[((8, 12), (np.int64(7), np.int64(12))), ((8, 12), (np.int64(8), np.int64(11))), ((8, 12), (np.int64(9), np.int64(12))), ((8, 12), (np.int64(7), np.int64(11))), ((8, 12), (np.int64(7), np.int64(13))), ((8, 12), (np.int64(8), np.int64(13))), ((8, 12), (np.int64(10), np.int64(12))), ((8, 12), (np.int64(6), np.int64(12))), ((8, 12), (np.int64(8), np.int64(10))), ((8, 12), (np.int64(9), np.int64(13))), ((8, 12), (np.int64(8), np.int64(14)))]
2025-04-11 19:04:11,303 [INFO] Phase 1 (immediate win): 11 candidate(s) found.
2025-04-11 19:04:11,310 [INFO] Final candidates: []
2025-04-11 19:04:11,310 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:11,310 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:11,311 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:11,311 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:11,311 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(0), np.int64(1)), (np.int64(15), np.int64(3)))
2025-04-11 19:04:11,318 [INFO] Final candidates: []
2025-04-11 19:04:11,318 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:11,323 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:11,324 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:11,324 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:11,324 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:11,325 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:11,325 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:11,325 [INFO] Phase defense: Collected 11unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(11), np.int64(11))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:11,325 [INFO] Phase 2 (defense): 11 candidate(s) found.
2025-04-11 19:04:11,325 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:11,514 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:11,514 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:11,514 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(10)), (np.int64(12), np.int64(11)))
2025-04-11 19:04:11,520 [DEBUG] board coords: [(10, 13), (11, 12), (12, 11), (13, 10), (14, 9), (15, 8)]
2025-04-11 19:04:11,520 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:11,520 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 13), (11, 12)]
2025-04-11 19:04:11,520 [DEBUG] check_window_intermediate_custom (only one inserted(11, 12)): For L=6, window [0 0 1 1 1 1] with coords [(10, 13), (11, 12), (12, 11), (13, 10), (14, 9), (15, 8)] triggers candidate.
2025-04-11 19:04:11,520 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(11, 12), (12, 11), (13, 10), (14, 9), (15, 8), (16, 7)] triggers candidate.
2025-04-11 19:04:11,520 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:11,520 [DEBUG] board coords: [(12, 11), (13, 10), (14, 9), (15, 8), (16, 7), (17, 6)]
2025-04-11 19:04:11,520 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:04:11,520 [DEBUG] check_window_intermediate_custom: empty_cells=[(16, 7), (17, 6)]
2025-04-11 19:04:11,521 [DEBUG] check_window_intermediate_custom (only one inserted(16, 7)): For L=6, window [1 1 1 1 0 0] with coords [(12, 11), (13, 10), (14, 9), (15, 8), (16, 7), (17, 6)] triggers candidate.
2025-04-11 19:04:11,521 [INFO] Final candidates: [(11, 12), (16, 7)]
2025-04-11 19:04:11,521 [INFO] Phase win: Collected 1unique candidate(s):[((11, 12), (16, 7))]
2025-04-11 19:04:11,521 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 19:04:11,527 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:11,527 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:11,527 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:11,527 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:11,528 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:11,528 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:11,528 [INFO] Phase defense: Collected 11unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(11), np.int64(11))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:11,528 [INFO] Phase 2 (defense): 11 candidate(s) found.
2025-04-11 19:04:11,528 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:11,542 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:11,543 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:11,543 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(5)), (np.int64(9), np.int64(11)))
2025-04-11 19:04:11,550 [INFO] Final candidates: []
2025-04-11 19:04:11,550 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:11,557 [INFO] Final candidates: []
2025-04-11 19:04:11,557 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:11,557 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:11,703 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:11,704 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:11,704 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(18), np.int64(7)), (np.int64(14), np.int64(4)))
2025-04-11 19:04:11,711 [INFO] Final candidates: []
2025-04-11 19:04:11,711 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:11,717 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:11,717 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:11,717 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:11,717 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:11,718 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:11,718 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:11,718 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:11,718 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:11,718 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:11,831 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:11,832 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:11,832 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(18), np.int64(3)), (np.int64(13), np.int64(15)))
2025-04-11 19:04:11,839 [INFO] Final candidates: []
2025-04-11 19:04:11,839 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:11,845 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:11,845 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:11,845 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:11,845 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:11,846 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:11,846 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:11,846 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:11,846 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:11,846 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:11,892 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:11,892 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:11,893 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(11)), (np.int64(1), np.int64(4)))
2025-04-11 19:04:11,900 [INFO] Final candidates: []
2025-04-11 19:04:11,900 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:11,906 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:11,906 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:11,906 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:11,906 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:11,907 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:11,907 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:11,907 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:11,907 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:11,907 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:12,037 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:12,037 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:12,037 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(10)), (np.int64(15), np.int64(12)))
2025-04-11 19:04:12,044 [INFO] Final candidates: []
2025-04-11 19:04:12,044 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:12,051 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:12,051 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:12,051 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:12,051 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:12,052 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:12,052 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:12,052 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:12,052 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:12,052 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:12,053 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:12,054 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:12,054 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(9)), (np.int64(15), np.int64(17)))
2025-04-11 19:04:12,061 [INFO] Final candidates: []
2025-04-11 19:04:12,061 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:12,068 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:12,068 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:12,068 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:12,068 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:12,069 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:12,069 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:12,069 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:12,069 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:12,069 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:12,186 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:12,186 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:12,186 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(10)), (np.int64(11), np.int64(17)))
2025-04-11 19:04:12,193 [INFO] Final candidates: []
2025-04-11 19:04:12,193 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:12,199 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:12,199 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:12,199 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:12,199 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:12,201 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:12,201 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:12,201 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:12,201 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:12,201 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:12,246 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:12,246 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:12,246 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(18), np.int64(9)), (np.int64(15), np.int64(10)))
2025-04-11 19:04:12,253 [INFO] Final candidates: []
2025-04-11 19:04:12,253 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:12,259 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:12,259 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:12,259 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:12,259 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:12,260 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:12,260 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:12,260 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:12,260 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:12,260 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:12,480 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:12,480 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:12,480 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(8)), (np.int64(15), np.int64(13)))
2025-04-11 19:04:12,487 [INFO] Final candidates: []
2025-04-11 19:04:12,487 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:12,493 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:12,493 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:12,493 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:12,493 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:12,494 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:12,494 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:12,494 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:12,494 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:12,494 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:12,547 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:12,547 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:12,547 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(5)), (np.int64(15), np.int64(6)))
2025-04-11 19:04:12,554 [INFO] Final candidates: []
2025-04-11 19:04:12,554 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:12,561 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:12,561 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:12,561 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:12,561 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:12,562 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:12,562 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:12,562 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:12,562 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:12,562 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:12,691 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:12,691 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:12,691 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(6)), (np.int64(15), np.int64(12)))
2025-04-11 19:04:12,698 [INFO] Final candidates: []
2025-04-11 19:04:12,698 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:12,704 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:12,704 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:12,704 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:12,704 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:12,705 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:12,705 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:12,705 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:12,705 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:12,705 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:12,884 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:12,884 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:12,885 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(0)), (np.int64(14), np.int64(16)))
2025-04-11 19:04:12,893 [INFO] Final candidates: []
2025-04-11 19:04:12,893 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:12,899 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:12,899 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:12,899 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:12,899 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:12,900 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:12,900 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:12,901 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:12,901 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:12,901 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:12,980 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:12,980 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:12,980 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(6)), (np.int64(11), np.int64(6)))
2025-04-11 19:04:12,987 [INFO] Final candidates: []
2025-04-11 19:04:12,987 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:12,993 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:12,993 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:12,993 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:12,993 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:12,994 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:12,994 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:12,994 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:12,994 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:12,994 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:13,111 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:13,112 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:13,112 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(16)), (np.int64(9), np.int64(4)))
2025-04-11 19:04:13,118 [INFO] Final candidates: []
2025-04-11 19:04:13,119 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:13,127 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:13,127 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:13,127 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:13,127 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:13,128 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:13,128 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:13,128 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:13,128 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:13,128 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:13,227 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:13,227 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:13,228 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(5)), (np.int64(12), np.int64(9)))
2025-04-11 19:04:13,234 [INFO] Final candidates: []
2025-04-11 19:04:13,234 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:13,240 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:13,240 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:13,240 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:13,240 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:13,241 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:13,241 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:13,242 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:13,242 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:13,242 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:13,263 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:13,263 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:13,263 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(6)), (np.int64(8), np.int64(6)))
2025-04-11 19:04:13,270 [INFO] Final candidates: []
2025-04-11 19:04:13,270 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:13,276 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:13,276 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:13,276 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:13,276 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:13,277 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:13,277 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:13,277 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:13,277 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:13,277 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:13,375 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:13,376 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:13,376 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(2), np.int64(1)), (np.int64(11), np.int64(13)))
2025-04-11 19:04:13,383 [INFO] Final candidates: []
2025-04-11 19:04:13,383 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:13,388 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:13,388 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:13,388 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:13,389 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:13,390 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:13,390 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:13,390 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:13,390 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:13,390 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:13,510 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:13,510 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:13,510 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(18), np.int64(0)), (np.int64(14), np.int64(4)))
2025-04-11 19:04:13,517 [INFO] Final candidates: []
2025-04-11 19:04:13,517 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:13,523 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:13,523 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:13,523 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:13,523 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:13,524 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:13,524 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:13,524 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:13,524 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:13,524 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:13,674 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:13,675 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:13,675 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(15)), (np.int64(14), np.int64(18)))
2025-04-11 19:04:13,682 [INFO] Final candidates: []
2025-04-11 19:04:13,682 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:13,688 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:13,688 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:13,688 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:13,688 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:13,689 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:13,689 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:13,689 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:13,689 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:13,689 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:13,704 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:13,704 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:13,704 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(6)), (np.int64(11), np.int64(8)))
2025-04-11 19:04:13,711 [INFO] Final candidates: []
2025-04-11 19:04:13,711 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:13,717 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:13,717 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:13,717 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:13,717 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:13,718 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:13,718 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:13,718 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:13,718 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:13,718 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:13,785 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:13,785 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:13,785 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(4)), (np.int64(15), np.int64(1)))
2025-04-11 19:04:13,792 [INFO] Final candidates: []
2025-04-11 19:04:13,792 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:13,798 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:13,798 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:13,798 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:13,798 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:13,799 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:13,799 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:13,799 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:13,799 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:13,799 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:14,092 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:14,092 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:14,092 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(17), np.int64(6)), (np.int64(16), np.int64(11)))
2025-04-11 19:04:14,099 [INFO] Final candidates: []
2025-04-11 19:04:14,099 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:14,105 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:14,105 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:14,105 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:14,105 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:14,106 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:14,106 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:14,106 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:14,106 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:14,106 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:14,268 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:14,268 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:14,268 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(3)), (np.int64(15), np.int64(10)))
2025-04-11 19:04:14,275 [INFO] Final candidates: []
2025-04-11 19:04:14,275 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:14,281 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:14,281 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:14,281 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:14,281 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:14,282 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:14,282 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:14,282 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:14,282 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:14,282 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:14,385 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:14,386 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:14,386 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(10)), (np.int64(14), np.int64(18)))
2025-04-11 19:04:14,392 [INFO] Final candidates: []
2025-04-11 19:04:14,392 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:14,398 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:14,398 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:14,398 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:14,398 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:14,400 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:14,400 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:14,400 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:14,400 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:14,400 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:14,536 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:14,536 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:14,536 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(5)), (np.int64(10), np.int64(4)))
2025-04-11 19:04:14,543 [INFO] Final candidates: []
2025-04-11 19:04:14,543 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:14,549 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:14,549 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:14,549 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:14,549 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:14,550 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:14,550 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:14,550 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:14,550 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:14,550 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:14,656 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:14,656 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:14,656 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(13)), (np.int64(16), np.int64(9)))
2025-04-11 19:04:14,663 [INFO] Final candidates: []
2025-04-11 19:04:14,663 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:14,669 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:14,669 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:14,669 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:14,669 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:14,670 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:14,670 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:14,670 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:14,670 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:14,670 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:14,856 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:14,856 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:14,856 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(2), np.int64(1)), (np.int64(17), np.int64(1)))
2025-04-11 19:04:14,863 [INFO] Final candidates: []
2025-04-11 19:04:14,863 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:14,869 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:14,869 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:14,869 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:14,869 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:14,870 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:14,870 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:14,870 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:14,870 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:14,870 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:15,020 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:15,020 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:15,021 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(7)), (np.int64(11), np.int64(18)))
2025-04-11 19:04:15,031 [INFO] Final candidates: []
2025-04-11 19:04:15,031 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:15,036 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:15,036 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:15,037 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:15,037 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:15,038 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:15,038 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:15,038 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:15,038 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:15,038 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:15,040 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:15,041 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:15,041 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(3)), (np.int64(7), np.int64(2)))
2025-04-11 19:04:15,048 [INFO] Final candidates: []
2025-04-11 19:04:15,048 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:15,054 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:15,054 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:15,054 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:15,054 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:15,055 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:15,055 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:15,055 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:15,055 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:15,055 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:15,116 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:15,116 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:15,116 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(3)), (np.int64(13), np.int64(6)))
2025-04-11 19:04:15,124 [INFO] Final candidates: []
2025-04-11 19:04:15,124 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:15,130 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:15,130 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:15,130 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:15,130 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:15,131 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:15,131 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:15,131 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:15,131 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:15,131 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:15,205 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:15,205 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:15,205 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(9)), (np.int64(13), np.int64(11)))
2025-04-11 19:04:15,212 [INFO] Final candidates: []
2025-04-11 19:04:15,212 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:15,219 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:15,219 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:15,219 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:15,219 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:15,220 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:15,220 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:15,220 [INFO] Phase defense: Collected 9unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(8), np.int64(11))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(9), np.int64(10)))]
2025-04-11 19:04:15,220 [INFO] Phase 2 (defense): 9 candidate(s) found.
2025-04-11 19:04:15,220 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:15,460 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:15,460 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:15,460 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(7)), (np.int64(0), np.int64(3)))
2025-04-11 19:04:15,467 [INFO] Final candidates: []
2025-04-11 19:04:15,467 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:15,473 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:15,473 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:15,473 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:15,473 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:15,474 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:15,474 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:15,474 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:15,474 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:15,474 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:15,580 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:15,580 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:15,580 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(9)), (np.int64(14), np.int64(18)))
2025-04-11 19:04:15,587 [INFO] Final candidates: []
2025-04-11 19:04:15,587 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:15,594 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:15,594 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:15,594 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:15,594 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:15,595 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:15,595 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:15,595 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:15,595 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:15,595 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:15,615 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:15,615 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:15,615 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(18), np.int64(9)), (np.int64(10), np.int64(2)))
2025-04-11 19:04:15,622 [INFO] Final candidates: []
2025-04-11 19:04:15,622 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:15,630 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:15,630 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:15,630 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:15,630 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:15,631 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:15,631 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:15,631 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:15,631 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:15,631 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:15,743 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:15,744 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:15,744 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(17), np.int64(2)), (np.int64(11), np.int64(18)))
2025-04-11 19:04:15,750 [INFO] Final candidates: []
2025-04-11 19:04:15,750 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:15,756 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:15,756 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:15,756 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:15,756 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:15,758 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:15,758 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:15,758 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:15,758 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:15,758 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:15,826 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:15,826 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:15,826 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(5)), (np.int64(15), np.int64(9)))
2025-04-11 19:04:15,833 [INFO] Final candidates: []
2025-04-11 19:04:15,833 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:15,839 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:15,839 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:15,839 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:15,839 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:15,840 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:15,840 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:15,840 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:15,840 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:15,840 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:15,844 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:15,845 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:15,845 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(13)), (np.int64(12), np.int64(11)))
2025-04-11 19:04:15,852 [INFO] Final candidates: []
2025-04-11 19:04:15,852 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:15,858 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:15,858 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:15,858 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:15,858 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:15,859 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:15,859 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:15,859 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:15,859 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:15,859 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:15,863 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:15,864 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:15,864 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(10)), (np.int64(16), np.int64(12)))
2025-04-11 19:04:15,871 [INFO] Final candidates: []
2025-04-11 19:04:15,871 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:15,877 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:15,877 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:15,877 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:15,877 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:15,878 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:15,878 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:15,878 [INFO] Phase defense: Collected 9unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:15,878 [INFO] Phase 2 (defense): 9 candidate(s) found.
2025-04-11 19:04:15,878 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:16,062 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:16,062 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:16,062 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(4)), (np.int64(16), np.int64(11)))
2025-04-11 19:04:16,069 [INFO] Final candidates: []
2025-04-11 19:04:16,069 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:16,075 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:16,075 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:16,075 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:16,075 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:16,076 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:16,076 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:16,076 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:16,076 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:16,076 [DEBUG] MCTS iteration 50: reached a node with 0 visits.
2025-04-11 19:04:16,076 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:16,176 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:16,176 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:16,176 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(3)), (np.int64(12), np.int64(11)))
2025-04-11 19:04:16,183 [INFO] Final candidates: []
2025-04-11 19:04:16,183 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:16,189 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:16,189 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:16,189 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:16,190 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:16,191 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:16,191 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:16,191 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:16,191 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:16,191 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:16,192 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:16,192 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:16,192 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(2)), (np.int64(15), np.int64(3)))
2025-04-11 19:04:16,199 [INFO] Final candidates: []
2025-04-11 19:04:16,199 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:16,205 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:16,205 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:16,205 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:16,205 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:16,206 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:16,206 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:16,206 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:16,206 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:16,206 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:16,330 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:16,330 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:16,330 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(2), np.int64(2)), (np.int64(14), np.int64(11)))
2025-04-11 19:04:16,337 [INFO] Final candidates: []
2025-04-11 19:04:16,337 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:16,343 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:16,343 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:16,343 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:16,343 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:16,344 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:16,344 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:16,344 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:16,344 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:16,344 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:16,571 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:16,572 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:16,572 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(5)), (np.int64(10), np.int64(12)))
2025-04-11 19:04:16,579 [INFO] Final candidates: []
2025-04-11 19:04:16,579 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:16,585 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:16,585 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:16,585 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:16,585 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:16,586 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:16,586 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:16,586 [INFO] Phase defense: Collected 9unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:16,586 [INFO] Phase 2 (defense): 9 candidate(s) found.
2025-04-11 19:04:16,586 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:16,788 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:16,788 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:16,788 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(1), np.int64(0)), (np.int64(15), np.int64(17)))
2025-04-11 19:04:16,795 [INFO] Final candidates: []
2025-04-11 19:04:16,795 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:16,801 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:16,801 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:16,801 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:16,801 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:16,802 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:16,802 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:16,803 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:16,803 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:16,803 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:16,949 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:16,949 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:16,949 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(7)), (np.int64(14), np.int64(4)))
2025-04-11 19:04:16,956 [INFO] Final candidates: []
2025-04-11 19:04:16,956 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:16,962 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:16,962 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:16,962 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:16,962 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:16,963 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:16,963 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:16,963 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:16,963 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:16,963 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:17,013 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:17,013 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:17,013 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(12)), (np.int64(16), np.int64(11)))
2025-04-11 19:04:17,020 [INFO] Final candidates: []
2025-04-11 19:04:17,020 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:17,026 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:17,026 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:17,026 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:17,026 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:17,027 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:17,027 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:17,027 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:17,027 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:17,027 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:17,069 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:17,069 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:17,069 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(10)), (np.int64(15), np.int64(17)))
2025-04-11 19:04:17,076 [INFO] Final candidates: []
2025-04-11 19:04:17,076 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:17,082 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:17,082 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:17,082 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:17,083 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:17,084 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:17,084 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:17,084 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:17,084 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:17,084 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:17,252 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:17,252 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:17,252 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(7)), (np.int64(10), np.int64(4)))
2025-04-11 19:04:17,265 [INFO] Final candidates: []
2025-04-11 19:04:17,265 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:17,272 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:17,272 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:17,272 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:17,272 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:17,273 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:17,273 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:17,273 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:17,273 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:17,273 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:17,369 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:17,370 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:17,370 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(1)), (np.int64(10), np.int64(9)))
2025-04-11 19:04:17,378 [INFO] Final candidates: []
2025-04-11 19:04:17,378 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:17,384 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:17,384 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:17,384 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:17,384 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:17,385 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:17,385 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:17,385 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:17,385 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:17,385 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:17,499 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:17,499 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:17,499 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(7)), (np.int64(10), np.int64(12)))
2025-04-11 19:04:17,506 [INFO] Final candidates: []
2025-04-11 19:04:17,506 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:17,512 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:17,512 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:17,512 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:17,512 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:17,513 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:17,513 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:17,513 [INFO] Phase defense: Collected 9unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:17,513 [INFO] Phase 2 (defense): 9 candidate(s) found.
2025-04-11 19:04:17,513 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:17,669 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:17,670 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:17,670 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(3)), (np.int64(11), np.int64(10)))
2025-04-11 19:04:17,676 [INFO] Final candidates: []
2025-04-11 19:04:17,676 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:17,682 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:17,682 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:17,682 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:17,682 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:17,683 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:17,684 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:17,684 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:17,684 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:17,684 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:17,693 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:17,693 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:17,693 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(9)), (np.int64(12), np.int64(9)))
2025-04-11 19:04:17,700 [INFO] Final candidates: []
2025-04-11 19:04:17,700 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:17,706 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:17,706 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:17,706 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:17,706 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:17,707 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:17,707 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:17,707 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:17,707 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:17,707 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:17,729 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:17,729 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:17,730 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(1)), (np.int64(15), np.int64(3)))
2025-04-11 19:04:17,736 [INFO] Final candidates: []
2025-04-11 19:04:17,737 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:17,743 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:17,743 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:17,743 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:17,743 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:17,744 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:17,744 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:17,744 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:17,744 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:17,744 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:17,847 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:17,848 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:17,848 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(10)), (np.int64(13), np.int64(16)))
2025-04-11 19:04:17,855 [INFO] Final candidates: []
2025-04-11 19:04:17,855 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:17,860 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:17,860 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:17,861 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:17,861 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:17,862 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:17,862 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:17,862 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:17,862 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:17,862 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:17,971 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:17,971 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:17,971 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(17), np.int64(5)), (np.int64(15), np.int64(13)))
2025-04-11 19:04:17,979 [INFO] Final candidates: []
2025-04-11 19:04:17,979 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:17,985 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:17,985 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:17,985 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:17,985 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:17,986 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:17,986 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:17,986 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:17,986 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:17,986 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:18,115 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:18,115 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:18,115 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(5)), (np.int64(15), np.int64(17)))
2025-04-11 19:04:18,122 [INFO] Final candidates: []
2025-04-11 19:04:18,122 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:18,128 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:18,128 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:18,128 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:18,128 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:18,129 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:18,129 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:18,129 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:18,129 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:18,129 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:18,241 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:18,242 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:18,242 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(3), np.int64(2)), (np.int64(12), np.int64(11)))
2025-04-11 19:04:18,249 [INFO] Final candidates: []
2025-04-11 19:04:18,249 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:18,255 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:18,255 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:18,255 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:18,255 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:18,256 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:18,256 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:18,256 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:18,256 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:18,256 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:18,452 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:18,452 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:18,452 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(1)), (np.int64(15), np.int64(12)))
2025-04-11 19:04:18,459 [INFO] Final candidates: []
2025-04-11 19:04:18,459 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:18,465 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:18,465 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:18,465 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:18,465 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:18,466 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:18,466 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:18,466 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:18,466 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:18,466 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:18,698 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:18,698 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:18,698 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(2), np.int64(2)), (np.int64(18), np.int64(9)))
2025-04-11 19:04:18,714 [INFO] Final candidates: []
2025-04-11 19:04:18,714 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:18,730 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:18,730 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:18,730 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:18,730 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:18,732 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:18,732 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:18,733 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:18,733 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:18,733 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:18,954 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:18,954 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:18,955 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(0)), (np.int64(12), np.int64(11)))
2025-04-11 19:04:18,961 [INFO] Final candidates: []
2025-04-11 19:04:18,961 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:18,967 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:18,967 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:18,967 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:18,967 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:18,968 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:18,968 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:18,969 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:18,969 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:18,969 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:19,008 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:19,008 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:19,008 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(2)), (np.int64(11), np.int64(12)))
2025-04-11 19:04:19,015 [INFO] Final candidates: []
2025-04-11 19:04:19,016 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:19,022 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:19,022 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:19,022 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:19,022 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:19,023 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:19,023 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:19,023 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:19,023 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:19,023 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:19,112 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:19,112 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:19,113 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(5)), (np.int64(14), np.int64(4)))
2025-04-11 19:04:19,122 [INFO] Final candidates: []
2025-04-11 19:04:19,122 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:19,128 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:19,128 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:19,128 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:19,128 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:19,129 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:19,129 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:19,129 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:19,129 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:19,129 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:19,192 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:19,192 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:19,192 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(9)), (np.int64(16), np.int64(4)))
2025-04-11 19:04:19,199 [INFO] Final candidates: []
2025-04-11 19:04:19,199 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:19,205 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:19,205 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:19,205 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:19,205 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:19,206 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:19,206 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:19,206 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:19,206 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:19,206 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:19,251 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:19,252 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:19,252 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(17), np.int64(7)), (np.int64(18), np.int64(0)))
2025-04-11 19:04:19,259 [INFO] Final candidates: []
2025-04-11 19:04:19,259 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:19,265 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:19,265 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:19,265 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:19,265 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:19,266 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:19,266 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:19,266 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:19,266 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:19,266 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:19,397 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:19,397 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:19,397 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(17)), (np.int64(13), np.int64(16)))
2025-04-11 19:04:19,404 [INFO] Final candidates: []
2025-04-11 19:04:19,404 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:19,410 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:19,410 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:19,410 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:19,410 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:19,411 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:19,411 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:19,411 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:19,411 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:19,411 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:19,673 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:19,673 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:19,673 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(18)), (np.int64(15), np.int64(17)))
2025-04-11 19:04:19,680 [INFO] Final candidates: []
2025-04-11 19:04:19,680 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:19,686 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:19,686 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:19,686 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:19,687 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:19,688 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:19,688 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:19,688 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:19,688 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:19,688 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:19,885 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:19,885 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:19,885 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(11)), (np.int64(15), np.int64(3)))
2025-04-11 19:04:19,892 [INFO] Final candidates: []
2025-04-11 19:04:19,892 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:19,898 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:19,898 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:19,898 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:19,898 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:19,899 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:19,899 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:19,899 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:19,899 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:19,899 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:19,988 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:19,988 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:19,988 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(3)), (np.int64(14), np.int64(0)))
2025-04-11 19:04:19,995 [INFO] Final candidates: []
2025-04-11 19:04:19,995 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:20,001 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:20,001 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:20,001 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:20,001 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:20,002 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:20,002 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:20,002 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:20,002 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:20,002 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:20,099 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:20,100 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:20,100 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(0), np.int64(2)), (np.int64(0), np.int64(1)))
2025-04-11 19:04:20,107 [INFO] Final candidates: []
2025-04-11 19:04:20,107 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:20,113 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:20,113 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:20,113 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:20,113 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:20,114 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:20,114 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:20,114 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:20,114 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:20,114 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:20,189 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:20,189 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:20,189 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(9)), (np.int64(11), np.int64(12)))
2025-04-11 19:04:20,196 [INFO] Final candidates: []
2025-04-11 19:04:20,196 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:20,202 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:20,202 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:20,202 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:20,202 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:20,203 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:20,203 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:20,203 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:20,203 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:20,203 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:20,359 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:20,359 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:20,360 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(9)), (np.int64(10), np.int64(4)))
2025-04-11 19:04:20,366 [INFO] Final candidates: []
2025-04-11 19:04:20,366 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:20,372 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:20,372 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:20,372 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:20,372 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:20,373 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:20,373 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:20,373 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:20,374 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:20,374 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:20,446 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:20,446 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:20,447 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(11)), (np.int64(0), np.int64(3)))
2025-04-11 19:04:20,453 [INFO] Final candidates: []
2025-04-11 19:04:20,453 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:20,460 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:20,460 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:20,460 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:20,460 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:20,461 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:20,461 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:20,461 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:20,461 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:20,461 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:20,484 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:20,485 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:20,485 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(4)), (np.int64(0), np.int64(3)))
2025-04-11 19:04:20,492 [INFO] Final candidates: []
2025-04-11 19:04:20,492 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:20,498 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:20,498 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:20,498 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:20,498 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:20,499 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:20,499 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:20,499 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:20,499 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:20,499 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:20,549 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:20,549 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:20,549 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(12)), (np.int64(12), np.int64(7)))
2025-04-11 19:04:20,556 [INFO] Final candidates: []
2025-04-11 19:04:20,556 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:20,562 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:20,562 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:20,562 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:20,562 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:20,563 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:20,563 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:20,563 [INFO] Phase defense: Collected 9unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:20,563 [INFO] Phase 2 (defense): 9 candidate(s) found.
2025-04-11 19:04:20,563 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:20,581 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:20,582 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:20,582 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(3)), (np.int64(13), np.int64(15)))
2025-04-11 19:04:20,589 [INFO] Final candidates: []
2025-04-11 19:04:20,589 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:20,595 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:20,595 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:20,595 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:20,595 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:20,596 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:20,596 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:20,596 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:20,596 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:20,596 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:20,646 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:20,647 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:20,647 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(5)), (np.int64(8), np.int64(5)))
2025-04-11 19:04:20,654 [INFO] Final candidates: []
2025-04-11 19:04:20,654 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:20,659 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:20,659 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:20,659 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:20,660 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:20,661 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:20,661 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:20,661 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:20,661 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:20,661 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:20,942 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:20,942 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:20,942 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(18), np.int64(0)), (np.int64(10), np.int64(9)))
2025-04-11 19:04:20,949 [INFO] Final candidates: []
2025-04-11 19:04:20,949 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:20,955 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:20,955 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:20,955 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:20,955 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:20,956 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:20,956 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:20,956 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:20,956 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:20,956 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:21,154 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:21,155 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:21,155 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(10)), (np.int64(9), np.int64(4)))
2025-04-11 19:04:21,162 [INFO] Final candidates: []
2025-04-11 19:04:21,162 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:21,168 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:21,168 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:21,168 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:21,168 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:21,169 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:21,169 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:21,169 [INFO] Phase defense: Collected 9unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(11))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(9), np.int64(10)))]
2025-04-11 19:04:21,169 [INFO] Phase 2 (defense): 9 candidate(s) found.
2025-04-11 19:04:21,169 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:21,361 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:21,362 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:21,362 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(17), np.int64(11)), (np.int64(8), np.int64(5)))
2025-04-11 19:04:21,369 [INFO] Final candidates: []
2025-04-11 19:04:21,369 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:21,375 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:21,375 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:21,375 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:21,375 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:21,376 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:21,376 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:21,376 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:21,376 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:21,376 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:21,383 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:21,384 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:21,384 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(3)), (np.int64(17), np.int64(6)))
2025-04-11 19:04:21,391 [INFO] Final candidates: []
2025-04-11 19:04:21,391 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:21,397 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:21,397 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:21,397 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:21,397 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:21,398 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:21,398 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:21,398 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:21,398 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:21,398 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:21,511 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:21,511 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:21,511 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(10)), (np.int64(9), np.int64(6)))
2025-04-11 19:04:21,518 [INFO] Final candidates: []
2025-04-11 19:04:21,518 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:21,524 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:21,524 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:21,524 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:21,524 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:21,525 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:21,525 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:21,525 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:21,525 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:21,525 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:21,650 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:21,650 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:21,650 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(17), np.int64(9)), (np.int64(10), np.int64(11)))
2025-04-11 19:04:21,657 [INFO] Final candidates: []
2025-04-11 19:04:21,657 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:21,663 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:21,663 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:21,663 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:21,663 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:21,664 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:21,664 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:21,664 [INFO] Phase defense: Collected 9unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:21,664 [INFO] Phase 2 (defense): 9 candidate(s) found.
2025-04-11 19:04:21,664 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:21,665 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:21,665 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:21,665 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(10)), (np.int64(8), np.int64(3)))
2025-04-11 19:04:21,673 [INFO] Final candidates: []
2025-04-11 19:04:21,673 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:21,679 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:21,679 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:21,679 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:21,679 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:21,680 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:21,680 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:21,680 [INFO] Phase defense: Collected 9unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:21,680 [INFO] Phase 2 (defense): 9 candidate(s) found.
2025-04-11 19:04:21,680 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:21,737 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:21,737 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:21,737 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(10)), (np.int64(13), np.int64(18)))
2025-04-11 19:04:21,744 [INFO] Final candidates: []
2025-04-11 19:04:21,744 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:21,750 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:21,750 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:21,750 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:21,750 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:21,751 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:21,751 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:21,751 [INFO] Phase defense: Collected 9unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:21,751 [INFO] Phase 2 (defense): 9 candidate(s) found.
2025-04-11 19:04:21,751 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:22,136 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:22,136 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:22,136 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(2), np.int64(2)), (np.int64(10), np.int64(2)))
2025-04-11 19:04:22,143 [INFO] Final candidates: []
2025-04-11 19:04:22,143 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:22,150 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:22,150 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:22,150 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:22,150 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:22,151 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:22,151 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:22,151 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:22,151 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:22,151 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:22,222 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:22,222 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:22,222 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(7)), (np.int64(13), np.int64(15)))
2025-04-11 19:04:22,229 [INFO] Final candidates: []
2025-04-11 19:04:22,229 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:22,235 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:22,235 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:22,235 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:22,235 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:22,236 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:22,236 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:22,236 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:22,236 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:22,236 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:22,324 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:22,324 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:22,324 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(6)), (np.int64(10), np.int64(7)))
2025-04-11 19:04:22,331 [INFO] Final candidates: []
2025-04-11 19:04:22,331 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:22,337 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:22,337 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:22,337 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:22,337 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:22,338 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:22,338 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:22,338 [INFO] Phase defense: Collected 10unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(10))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(10))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(8), np.int64(11)))]
2025-04-11 19:04:22,338 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:22,338 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:22,339 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:22,339 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:22,339 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(3)), (np.int64(8), np.int64(10)))
2025-04-11 19:04:22,346 [INFO] Final candidates: []
2025-04-11 19:04:22,346 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:22,353 [DEBUG] board coords: [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)]
2025-04-11 19:04:22,353 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:22,353 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (9, 11)]
2025-04-11 19:04:22,353 [DEBUG] check_window_intermediate_custom (only one inserted(9, 11)): For L=6, window [0 0 2 2 2 2] with coords [(8, 12), (9, 11), (10, 10), (11, 9), (12, 8), (13, 7)] triggers candidate.
2025-04-11 19:04:22,354 [INFO] Final candidates: [(9, 11)]
2025-04-11 19:04:22,354 [INFO] Phase defense: Found only one candidate: (9, 11)
2025-04-11 19:04:22,354 [INFO] Phase defense: Collected 9unique candidate(s):[((9, 11), (np.int64(9), np.int64(12))), ((9, 11), (np.int64(10), np.int64(12))), ((9, 11), (np.int64(7), np.int64(11))), ((9, 11), (np.int64(9), np.int64(9))), ((9, 11), (np.int64(8), np.int64(11))), ((9, 11), (np.int64(10), np.int64(11))), ((9, 11), (np.int64(9), np.int64(13))), ((9, 11), (np.int64(8), np.int64(12))), ((9, 11), (np.int64(9), np.int64(10)))]
2025-04-11 19:04:22,354 [INFO] Phase 2 (defense): 9 candidate(s) found.
2025-04-11 19:04:22,354 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:22,514 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:22,514 [INFO] MCTS: Search finished. Best move selected with 2 visits.
2025-04-11 19:04:22,514 [INFO] Phase 2 (defense): MCTS selected move: ((10, 10), (np.int64(10), np.int64(8)))
2025-04-11 19:04:22,514 [INFO] Phase 2 (defense): MCTS selected move string : L11,J11
2025-04-11 19:04:22,514 [INFO] MCTS (defense candidates) selected move: L11,J11
2025-04-11 19:04:22,722 [INFO] Starting pre-MCTS candidate collection.
2025-04-11 19:04:22,728 [INFO] Final candidates: []
2025-04-11 19:04:22,729 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:22,729 [DEBUG] board coords: [(12, 4), (12, 5), (12, 6), (12, 7), (12, 8), (12, 9)]
2025-04-11 19:04:22,729 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:22,729 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 4), (12, 5)]
2025-04-11 19:04:22,729 [DEBUG] check_window_intermediate_custom (only one inserted(12, 5)): For L=6, window [0 0 2 2 2 2] with coords [(12, 4), (12, 5), (12, 6), (12, 7), (12, 8), (12, 9)] triggers candidate.
2025-04-11 19:04:22,736 [INFO] Final candidates: [(12, 5)]
2025-04-11 19:04:22,736 [INFO] Phase defense: Found only one candidate: (12, 5)
2025-04-11 19:04:22,736 [INFO] Phase defense: Collected 10unique candidate(s):[((12, 5), (np.int64(12), np.int64(3))), ((12, 5), (np.int64(13), np.int64(5))), ((12, 5), (np.int64(11), np.int64(5))), ((12, 5), (np.int64(13), np.int64(4))), ((12, 5), (np.int64(13), np.int64(6))), ((12, 5), (np.int64(11), np.int64(4))), ((12, 5), (np.int64(12), np.int64(4))), ((12, 5), (np.int64(11), np.int64(6))), ((12, 5), (np.int64(14), np.int64(5))), ((12, 5), (np.int64(10), np.int64(5)))]
2025-04-11 19:04:22,736 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:22,736 [INFO] MCTS: Starting search for 100 iterations.
2025-04-11 19:04:22,736 [DEBUG] Tree_policy iteration 1: Expanding move ((12, 5), (np.int64(10), np.int64(5)))
2025-04-11 19:04:22,743 [INFO] Final candidates: []
2025-04-11 19:04:22,743 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:22,749 [INFO] Final candidates: []
2025-04-11 19:04:22,749 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:22,750 [DEBUG] MCTS iteration 0: reached a node with 0 visits.
2025-04-11 19:04:22,750 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:22,832 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:22,832 [DEBUG] Tree_policy iteration 1: Expanding move ((12, 5), (np.int64(11), np.int64(5)))
2025-04-11 19:04:22,839 [INFO] Final candidates: []
2025-04-11 19:04:22,839 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:22,846 [INFO] Final candidates: []
2025-04-11 19:04:22,846 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:22,847 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:22,954 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:22,955 [DEBUG] Tree_policy iteration 1: Expanding move ((12, 5), (np.int64(11), np.int64(4)))
2025-04-11 19:04:22,959 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:22,959 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1)]
2025-04-11 19:04:22,959 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (13, 6)]
2025-04-11 19:04:22,959 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 1 0 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:22,959 [DEBUG] board coords: [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)]
2025-04-11 19:04:22,959 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 19:04:22,959 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 6), (16, 9)]
2025-04-11 19:04:22,959 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 0 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:22,962 [INFO] Final candidates: [(16, 9), (13, 6), (10, 3)]
2025-04-11 19:04:22,962 [INFO] Phase win: Collected 3unique candidate(s):[((16, 9), (13, 6)), ((13, 6), (10, 3)), ((16, 9), (10, 3))]
2025-04-11 19:04:22,962 [INFO] Phase 1 (immediate win): 3 candidate(s) found.
2025-04-11 19:04:22,968 [INFO] Final candidates: []
2025-04-11 19:04:22,968 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:22,969 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:23,059 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:23,059 [DEBUG] Tree_policy iteration 1: Expanding move ((12, 5), (np.int64(14), np.int64(5)))
2025-04-11 19:04:23,066 [INFO] Final candidates: []
2025-04-11 19:04:23,066 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:23,073 [INFO] Final candidates: []
2025-04-11 19:04:23,073 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:23,074 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:23,420 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:23,421 [DEBUG] Tree_policy iteration 1: Expanding move ((12, 5), (np.int64(13), np.int64(6)))
2025-04-11 19:04:23,432 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:23,432 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:23,432 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (11, 4)]
2025-04-11 19:04:23,432 [DEBUG] check_window_intermediate_custom (only one inserted(11, 4)): For L=6, window [0 0 1 1 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:23,432 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:23,432 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:23,433 [DEBUG] board coords: [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)]
2025-04-11 19:04:23,433 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:04:23,433 [DEBUG] check_window_intermediate_custom: empty_cells=[(16, 9), (17, 10)]
2025-04-11 19:04:23,433 [DEBUG] check_window_intermediate_custom (only one inserted(16, 9)): For L=6, window [1 1 1 1 0 0] with coords [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)] triggers candidate.
2025-04-11 19:04:23,439 [INFO] Final candidates: [(16, 9), (11, 4)]
2025-04-11 19:04:23,439 [INFO] Phase win: Collected 1unique candidate(s):[((16, 9), (11, 4))]
2025-04-11 19:04:23,439 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 19:04:23,457 [INFO] Final candidates: []
2025-04-11 19:04:23,457 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:23,464 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:23,521 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:23,521 [DEBUG] Tree_policy iteration 1: Expanding move ((12, 5), (np.int64(11), np.int64(6)))
2025-04-11 19:04:23,528 [INFO] Final candidates: []
2025-04-11 19:04:23,528 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:23,535 [INFO] Final candidates: []
2025-04-11 19:04:23,535 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:23,535 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:23,764 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:23,764 [DEBUG] Tree_policy iteration 1: Expanding move ((12, 5), (np.int64(12), np.int64(3)))
2025-04-11 19:04:23,771 [INFO] Final candidates: []
2025-04-11 19:04:23,771 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:23,777 [INFO] Final candidates: []
2025-04-11 19:04:23,777 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:23,778 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:23,911 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:23,911 [DEBUG] Tree_policy iteration 1: Expanding move ((12, 5), (np.int64(13), np.int64(4)))
2025-04-11 19:04:23,918 [INFO] Final candidates: []
2025-04-11 19:04:23,918 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:23,925 [INFO] Final candidates: []
2025-04-11 19:04:23,925 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:23,925 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:24,042 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:24,042 [DEBUG] Tree_policy iteration 1: Expanding move ((12, 5), (np.int64(12), np.int64(4)))
2025-04-11 19:04:24,049 [INFO] Final candidates: []
2025-04-11 19:04:24,049 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:24,056 [INFO] Final candidates: []
2025-04-11 19:04:24,056 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:24,057 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:24,284 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:24,284 [DEBUG] Tree_policy iteration 1: Expanding move ((12, 5), (np.int64(13), np.int64(5)))
2025-04-11 19:04:24,291 [INFO] Final candidates: []
2025-04-11 19:04:24,291 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:24,297 [INFO] Final candidates: []
2025-04-11 19:04:24,297 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:24,298 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:24,398 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:24,398 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:24,398 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(18)), (np.int64(2), np.int64(1)))
2025-04-11 19:04:24,406 [INFO] Final candidates: []
2025-04-11 19:04:24,406 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:24,413 [INFO] Final candidates: []
2025-04-11 19:04:24,413 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:24,413 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:24,449 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:24,449 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:24,449 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(2)), (np.int64(12), np.int64(11)))
2025-04-11 19:04:24,456 [INFO] Final candidates: []
2025-04-11 19:04:24,456 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:24,460 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:24,460 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1)]
2025-04-11 19:04:24,460 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (13, 6)]
2025-04-11 19:04:24,460 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 1 0 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:24,460 [DEBUG] board coords: [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)]
2025-04-11 19:04:24,460 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 19:04:24,460 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 6), (16, 9)]
2025-04-11 19:04:24,461 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 0 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:24,463 [INFO] Final candidates: [(16, 9), (13, 6), (10, 3)]
2025-04-11 19:04:24,463 [INFO] Phase defense: Collected 3unique candidate(s):[((16, 9), (13, 6)), ((13, 6), (10, 3)), ((16, 9), (10, 3))]
2025-04-11 19:04:24,463 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 19:04:24,463 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:24,606 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:24,606 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:24,606 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(2)), (np.int64(8), np.int64(5)))
2025-04-11 19:04:24,613 [INFO] Final candidates: []
2025-04-11 19:04:24,613 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:24,617 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:24,618 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1)]
2025-04-11 19:04:24,618 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (13, 6)]
2025-04-11 19:04:24,618 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 1 0 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:24,618 [DEBUG] board coords: [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)]
2025-04-11 19:04:24,618 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 19:04:24,619 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 6), (16, 9)]
2025-04-11 19:04:24,619 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 0 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:24,621 [INFO] Final candidates: [(16, 9), (13, 6), (10, 3)]
2025-04-11 19:04:24,621 [INFO] Phase defense: Collected 3unique candidate(s):[((16, 9), (13, 6)), ((13, 6), (10, 3)), ((16, 9), (10, 3))]
2025-04-11 19:04:24,621 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 19:04:24,621 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:24,649 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:24,649 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:24,649 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(16)), (np.int64(18), np.int64(8)))
2025-04-11 19:04:24,656 [INFO] Final candidates: []
2025-04-11 19:04:24,656 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:24,660 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:24,660 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1)]
2025-04-11 19:04:24,660 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (13, 6)]
2025-04-11 19:04:24,660 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 1 0 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:24,660 [DEBUG] board coords: [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)]
2025-04-11 19:04:24,660 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 19:04:24,660 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 6), (16, 9)]
2025-04-11 19:04:24,660 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 0 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:24,663 [INFO] Final candidates: [(16, 9), (13, 6), (10, 3)]
2025-04-11 19:04:24,663 [INFO] Phase defense: Collected 3unique candidate(s):[((16, 9), (13, 6)), ((13, 6), (10, 3)), ((16, 9), (10, 3))]
2025-04-11 19:04:24,663 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 19:04:24,663 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:24,868 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:24,868 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:24,868 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(11)), (np.int64(9), np.int64(6)))
2025-04-11 19:04:24,871 [DEBUG] board coords: [(9, 6), (10, 6), (11, 6), (12, 6), (13, 6), (14, 6)]
2025-04-11 19:04:24,871 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(0), np.int64(2)]
2025-04-11 19:04:24,871 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (13, 6)]
2025-04-11 19:04:24,871 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 0 2] with coords [(9, 6), (10, 6), (11, 6), (12, 6), (13, 6), (14, 6)] triggers candidate.
2025-04-11 19:04:24,875 [INFO] Final candidates: [(13, 6), (11, 6)]
2025-04-11 19:04:24,876 [INFO] Phase win: Collected 1unique candidate(s):[((13, 6), (11, 6))]
2025-04-11 19:04:24,876 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 19:04:24,880 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:24,880 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1)]
2025-04-11 19:04:24,880 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (13, 6)]
2025-04-11 19:04:24,880 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 1 0 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:24,880 [DEBUG] board coords: [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)]
2025-04-11 19:04:24,880 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 19:04:24,880 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 6), (16, 9)]
2025-04-11 19:04:24,880 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 0 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:24,882 [INFO] Final candidates: [(16, 9), (13, 6), (10, 3)]
2025-04-11 19:04:24,882 [INFO] Phase defense: Collected 3unique candidate(s):[((16, 9), (13, 6)), ((13, 6), (10, 3)), ((16, 9), (10, 3))]
2025-04-11 19:04:24,882 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 19:04:24,882 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:25,155 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:25,156 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:25,156 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(5)), (np.int64(16), np.int64(4)))
2025-04-11 19:04:25,163 [INFO] Final candidates: []
2025-04-11 19:04:25,163 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:25,167 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:25,167 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1)]
2025-04-11 19:04:25,167 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (13, 6)]
2025-04-11 19:04:25,167 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 1 0 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:25,167 [DEBUG] board coords: [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)]
2025-04-11 19:04:25,167 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 19:04:25,167 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 6), (16, 9)]
2025-04-11 19:04:25,167 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 0 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:25,170 [INFO] Final candidates: [(16, 9), (13, 6), (10, 3)]
2025-04-11 19:04:25,170 [INFO] Phase defense: Collected 3unique candidate(s):[((16, 9), (13, 6)), ((13, 6), (10, 3)), ((16, 9), (10, 3))]
2025-04-11 19:04:25,170 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 19:04:25,170 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:25,295 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:25,295 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:25,296 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(2)), (np.int64(17), np.int64(9)))
2025-04-11 19:04:25,302 [INFO] Final candidates: []
2025-04-11 19:04:25,302 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:25,307 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:25,307 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1)]
2025-04-11 19:04:25,307 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (13, 6)]
2025-04-11 19:04:25,307 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 1 0 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:25,307 [DEBUG] board coords: [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)]
2025-04-11 19:04:25,307 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 19:04:25,307 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 6), (16, 9)]
2025-04-11 19:04:25,307 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 0 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:25,309 [INFO] Final candidates: [(16, 9), (13, 6), (10, 3)]
2025-04-11 19:04:25,309 [INFO] Phase defense: Collected 3unique candidate(s):[((16, 9), (13, 6)), ((13, 6), (10, 3)), ((16, 9), (10, 3))]
2025-04-11 19:04:25,309 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 19:04:25,309 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:25,413 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:25,413 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:25,413 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(4)), (np.int64(13), np.int64(0)))
2025-04-11 19:04:25,420 [INFO] Final candidates: []
2025-04-11 19:04:25,420 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:25,424 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:25,424 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1)]
2025-04-11 19:04:25,424 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (13, 6)]
2025-04-11 19:04:25,424 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 1 0 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:25,424 [DEBUG] board coords: [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)]
2025-04-11 19:04:25,424 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 19:04:25,424 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 6), (16, 9)]
2025-04-11 19:04:25,424 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 0 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:25,427 [INFO] Final candidates: [(16, 9), (13, 6), (10, 3)]
2025-04-11 19:04:25,427 [INFO] Phase defense: Collected 3unique candidate(s):[((16, 9), (13, 6)), ((13, 6), (10, 3)), ((16, 9), (10, 3))]
2025-04-11 19:04:25,427 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 19:04:25,427 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:25,553 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:25,553 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:25,553 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(10)), (np.int64(8), np.int64(5)))
2025-04-11 19:04:25,560 [INFO] Final candidates: []
2025-04-11 19:04:25,560 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:25,565 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:25,565 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1)]
2025-04-11 19:04:25,565 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (13, 6)]
2025-04-11 19:04:25,565 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 1 0 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:25,565 [DEBUG] board coords: [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)]
2025-04-11 19:04:25,565 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 19:04:25,565 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 6), (16, 9)]
2025-04-11 19:04:25,565 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 0 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:25,567 [INFO] Final candidates: [(16, 9), (13, 6), (10, 3)]
2025-04-11 19:04:25,567 [INFO] Phase defense: Collected 3unique candidate(s):[((16, 9), (13, 6)), ((13, 6), (10, 3)), ((16, 9), (10, 3))]
2025-04-11 19:04:25,567 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 19:04:25,567 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:25,829 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:25,830 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:25,830 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(16)), (np.int64(15), np.int64(17)))
2025-04-11 19:04:25,836 [INFO] Final candidates: []
2025-04-11 19:04:25,837 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:25,841 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:25,841 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1)]
2025-04-11 19:04:25,841 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (13, 6)]
2025-04-11 19:04:25,841 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 1 0 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:25,841 [DEBUG] board coords: [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)]
2025-04-11 19:04:25,841 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 19:04:25,841 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 6), (16, 9)]
2025-04-11 19:04:25,841 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 0 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:25,844 [INFO] Final candidates: [(16, 9), (13, 6), (10, 3)]
2025-04-11 19:04:25,844 [INFO] Phase defense: Collected 3unique candidate(s):[((16, 9), (13, 6)), ((13, 6), (10, 3)), ((16, 9), (10, 3))]
2025-04-11 19:04:25,844 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 19:04:25,844 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:26,067 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:26,068 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:26,068 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(4)), (np.int64(8), np.int64(5)))
2025-04-11 19:04:26,075 [INFO] Final candidates: []
2025-04-11 19:04:26,075 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:26,079 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:26,079 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1)]
2025-04-11 19:04:26,079 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (13, 6)]
2025-04-11 19:04:26,079 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 1 0 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:26,079 [DEBUG] board coords: [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)]
2025-04-11 19:04:26,079 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 19:04:26,079 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 6), (16, 9)]
2025-04-11 19:04:26,079 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 0 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:26,082 [INFO] Final candidates: [(16, 9), (13, 6), (10, 3)]
2025-04-11 19:04:26,082 [INFO] Phase defense: Collected 3unique candidate(s):[((16, 9), (13, 6)), ((13, 6), (10, 3)), ((16, 9), (10, 3))]
2025-04-11 19:04:26,082 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 19:04:26,082 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:26,272 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:26,272 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:26,272 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(17), np.int64(5)), (np.int64(14), np.int64(5)))
2025-04-11 19:04:26,281 [INFO] Final candidates: []
2025-04-11 19:04:26,281 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:26,285 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:26,285 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1)]
2025-04-11 19:04:26,285 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (13, 6)]
2025-04-11 19:04:26,285 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 1 0 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:26,285 [DEBUG] board coords: [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)]
2025-04-11 19:04:26,285 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 19:04:26,285 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 6), (16, 9)]
2025-04-11 19:04:26,285 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 0 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:26,288 [INFO] Final candidates: [(16, 9), (13, 6), (10, 3)]
2025-04-11 19:04:26,288 [INFO] Phase defense: Collected 3unique candidate(s):[((16, 9), (13, 6)), ((13, 6), (10, 3)), ((16, 9), (10, 3))]
2025-04-11 19:04:26,288 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 19:04:26,288 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:26,481 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:26,481 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:26,481 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(6)), (np.int64(8), np.int64(6)))
2025-04-11 19:04:26,484 [DEBUG] board coords: [(10, 6), (11, 6), (12, 6), (13, 6), (14, 6), (15, 6)]
2025-04-11 19:04:26,484 [DEBUG] board values[np.int64(2), np.int64(0), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:04:26,484 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (13, 6)]
2025-04-11 19:04:26,484 [DEBUG] check_window_intermediate_custom: For L=6, window [2 0 2 0 2 2] with coords [(10, 6), (11, 6), (12, 6), (13, 6), (14, 6), (15, 6)] triggers candidate.
2025-04-11 19:04:26,488 [INFO] Final candidates: [(13, 6), (11, 6)]
2025-04-11 19:04:26,488 [INFO] Phase win: Collected 1unique candidate(s):[((13, 6), (11, 6))]
2025-04-11 19:04:26,488 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 19:04:26,493 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:26,493 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1)]
2025-04-11 19:04:26,493 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (13, 6)]
2025-04-11 19:04:26,493 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 1 0 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:26,493 [DEBUG] board coords: [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)]
2025-04-11 19:04:26,493 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 19:04:26,493 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 6), (16, 9)]
2025-04-11 19:04:26,493 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 0 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:26,495 [INFO] Final candidates: [(16, 9), (13, 6), (10, 3)]
2025-04-11 19:04:26,495 [INFO] Phase defense: Collected 3unique candidate(s):[((16, 9), (13, 6)), ((13, 6), (10, 3)), ((16, 9), (10, 3))]
2025-04-11 19:04:26,495 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 19:04:26,495 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:26,739 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:26,739 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:26,739 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(12)), (np.int64(13), np.int64(18)))
2025-04-11 19:04:26,746 [INFO] Final candidates: []
2025-04-11 19:04:26,746 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:26,751 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:26,751 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1)]
2025-04-11 19:04:26,751 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (13, 6)]
2025-04-11 19:04:26,751 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 1 0 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:26,751 [DEBUG] board coords: [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)]
2025-04-11 19:04:26,751 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 19:04:26,751 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 6), (16, 9)]
2025-04-11 19:04:26,751 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 0 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:26,753 [INFO] Final candidates: [(16, 9), (13, 6), (10, 3)]
2025-04-11 19:04:26,753 [INFO] Phase defense: Collected 3unique candidate(s):[((16, 9), (13, 6)), ((13, 6), (10, 3)), ((16, 9), (10, 3))]
2025-04-11 19:04:26,753 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 19:04:26,753 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:26,941 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:26,941 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:26,941 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(17)), (np.int64(16), np.int64(5)))
2025-04-11 19:04:26,948 [INFO] Final candidates: []
2025-04-11 19:04:26,948 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:26,953 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:26,953 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1)]
2025-04-11 19:04:26,953 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (13, 6)]
2025-04-11 19:04:26,953 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 1 0 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:26,953 [DEBUG] board coords: [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)]
2025-04-11 19:04:26,953 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 19:04:26,953 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 6), (16, 9)]
2025-04-11 19:04:26,953 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 0 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:26,955 [INFO] Final candidates: [(16, 9), (13, 6), (10, 3)]
2025-04-11 19:04:26,955 [INFO] Phase defense: Collected 3unique candidate(s):[((16, 9), (13, 6)), ((13, 6), (10, 3)), ((16, 9), (10, 3))]
2025-04-11 19:04:26,955 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 19:04:26,955 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:27,032 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:27,033 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:27,033 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(0), np.int64(2)), (np.int64(9), np.int64(2)))
2025-04-11 19:04:27,039 [INFO] Final candidates: []
2025-04-11 19:04:27,039 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:27,044 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:27,044 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1)]
2025-04-11 19:04:27,044 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (13, 6)]
2025-04-11 19:04:27,044 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 1 0 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:27,044 [DEBUG] board coords: [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)]
2025-04-11 19:04:27,044 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 19:04:27,044 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 6), (16, 9)]
2025-04-11 19:04:27,044 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 0 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:27,047 [INFO] Final candidates: [(16, 9), (13, 6), (10, 3)]
2025-04-11 19:04:27,047 [INFO] Phase defense: Collected 3unique candidate(s):[((16, 9), (13, 6)), ((13, 6), (10, 3)), ((16, 9), (10, 3))]
2025-04-11 19:04:27,047 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 19:04:27,047 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:27,069 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:27,070 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:27,070 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(1)), (np.int64(13), np.int64(6)))
2025-04-11 19:04:27,072 [DEBUG] board coords: [(9, 6), (10, 6), (11, 6), (12, 6), (13, 6), (14, 6)]
2025-04-11 19:04:27,072 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:27,072 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (11, 6)]
2025-04-11 19:04:27,072 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 0 2 2 2] with coords [(9, 6), (10, 6), (11, 6), (12, 6), (13, 6), (14, 6)] triggers candidate.
2025-04-11 19:04:27,072 [DEBUG] board coords: [(10, 6), (11, 6), (12, 6), (13, 6), (14, 6), (15, 6)]
2025-04-11 19:04:27,072 [DEBUG] board values[np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 19:04:27,072 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (15, 6)]
2025-04-11 19:04:27,072 [DEBUG] check_window_intermediate_custom: For L=6, window [2 0 2 2 2 0] with coords [(10, 6), (11, 6), (12, 6), (13, 6), (14, 6), (15, 6)] triggers candidate.
2025-04-11 19:04:27,077 [INFO] Final candidates: [(9, 6), (15, 6), (11, 6)]
2025-04-11 19:04:27,077 [INFO] Phase win: Collected 3unique candidate(s):[((9, 6), (11, 6)), ((9, 6), (15, 6)), ((15, 6), (11, 6))]
2025-04-11 19:04:27,077 [INFO] Phase 1 (immediate win): 3 candidate(s) found.
2025-04-11 19:04:27,084 [INFO] Final candidates: []
2025-04-11 19:04:27,084 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:27,085 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:27,141 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:27,141 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:27,141 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(15)), (np.int64(18), np.int64(9)))
2025-04-11 19:04:27,148 [INFO] Final candidates: []
2025-04-11 19:04:27,148 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:27,152 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:27,152 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:27,152 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (11, 4)]
2025-04-11 19:04:27,152 [DEBUG] check_window_intermediate_custom (only one inserted(11, 4)): For L=6, window [0 0 1 1 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:27,152 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:27,152 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:27,153 [DEBUG] board coords: [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)]
2025-04-11 19:04:27,153 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:04:27,153 [DEBUG] check_window_intermediate_custom: empty_cells=[(16, 9), (17, 10)]
2025-04-11 19:04:27,153 [DEBUG] check_window_intermediate_custom (only one inserted(16, 9)): For L=6, window [1 1 1 1 0 0] with coords [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)] triggers candidate.
2025-04-11 19:04:27,155 [INFO] Final candidates: [(16, 9), (11, 4)]
2025-04-11 19:04:27,155 [INFO] Phase defense: Collected 1unique candidate(s):[((16, 9), (11, 4))]
2025-04-11 19:04:27,155 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:04:27,155 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:27,323 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:27,323 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:27,323 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(7)), (np.int64(10), np.int64(5)))
2025-04-11 19:04:27,330 [INFO] Final candidates: []
2025-04-11 19:04:27,330 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:27,335 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:27,335 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:27,335 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (11, 4)]
2025-04-11 19:04:27,335 [DEBUG] check_window_intermediate_custom (only one inserted(11, 4)): For L=6, window [0 0 1 1 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:27,335 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:27,335 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:27,335 [DEBUG] board coords: [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)]
2025-04-11 19:04:27,335 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:04:27,335 [DEBUG] check_window_intermediate_custom: empty_cells=[(16, 9), (17, 10)]
2025-04-11 19:04:27,335 [DEBUG] check_window_intermediate_custom (only one inserted(16, 9)): For L=6, window [1 1 1 1 0 0] with coords [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)] triggers candidate.
2025-04-11 19:04:27,337 [INFO] Final candidates: [(16, 9), (11, 4)]
2025-04-11 19:04:27,337 [INFO] Phase defense: Collected 1unique candidate(s):[((16, 9), (11, 4))]
2025-04-11 19:04:27,337 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:04:27,337 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:27,387 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:27,387 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:27,387 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(6)), (np.int64(11), np.int64(10)))
2025-04-11 19:04:27,394 [INFO] Final candidates: []
2025-04-11 19:04:27,394 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:27,399 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:27,399 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:27,399 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (11, 4)]
2025-04-11 19:04:27,399 [DEBUG] check_window_intermediate_custom (only one inserted(11, 4)): For L=6, window [0 0 1 1 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:27,399 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:27,399 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:27,399 [DEBUG] board coords: [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)]
2025-04-11 19:04:27,399 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:04:27,399 [DEBUG] check_window_intermediate_custom: empty_cells=[(16, 9), (17, 10)]
2025-04-11 19:04:27,399 [DEBUG] check_window_intermediate_custom (only one inserted(16, 9)): For L=6, window [1 1 1 1 0 0] with coords [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)] triggers candidate.
2025-04-11 19:04:27,401 [INFO] Final candidates: [(16, 9), (11, 4)]
2025-04-11 19:04:27,401 [INFO] Phase defense: Collected 1unique candidate(s):[((16, 9), (11, 4))]
2025-04-11 19:04:27,401 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:04:27,401 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:27,602 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:27,603 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:27,603 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(4)), (np.int64(1), np.int64(1)))
2025-04-11 19:04:27,610 [INFO] Final candidates: []
2025-04-11 19:04:27,610 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:27,614 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:27,614 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:27,614 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (11, 4)]
2025-04-11 19:04:27,614 [DEBUG] check_window_intermediate_custom (only one inserted(11, 4)): For L=6, window [0 0 1 1 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:27,614 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:27,614 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:27,614 [DEBUG] board coords: [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)]
2025-04-11 19:04:27,614 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:04:27,614 [DEBUG] check_window_intermediate_custom: empty_cells=[(16, 9), (17, 10)]
2025-04-11 19:04:27,614 [DEBUG] check_window_intermediate_custom (only one inserted(16, 9)): For L=6, window [1 1 1 1 0 0] with coords [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)] triggers candidate.
2025-04-11 19:04:27,617 [INFO] Final candidates: [(16, 9), (11, 4)]
2025-04-11 19:04:27,617 [INFO] Phase defense: Collected 1unique candidate(s):[((16, 9), (11, 4))]
2025-04-11 19:04:27,617 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:04:27,617 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:27,749 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:27,750 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:27,750 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(0), np.int64(2)), (np.int64(12), np.int64(16)))
2025-04-11 19:04:27,756 [INFO] Final candidates: []
2025-04-11 19:04:27,757 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:27,761 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:27,761 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:27,761 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (11, 4)]
2025-04-11 19:04:27,761 [DEBUG] check_window_intermediate_custom (only one inserted(11, 4)): For L=6, window [0 0 1 1 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:27,761 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:27,761 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:27,761 [DEBUG] board coords: [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)]
2025-04-11 19:04:27,761 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:04:27,761 [DEBUG] check_window_intermediate_custom: empty_cells=[(16, 9), (17, 10)]
2025-04-11 19:04:27,761 [DEBUG] check_window_intermediate_custom (only one inserted(16, 9)): For L=6, window [1 1 1 1 0 0] with coords [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)] triggers candidate.
2025-04-11 19:04:27,764 [INFO] Final candidates: [(16, 9), (11, 4)]
2025-04-11 19:04:27,764 [INFO] Phase defense: Collected 1unique candidate(s):[((16, 9), (11, 4))]
2025-04-11 19:04:27,764 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:04:27,764 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:27,828 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:27,828 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:27,828 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(10)), (np.int64(8), np.int64(3)))
2025-04-11 19:04:27,835 [INFO] Final candidates: []
2025-04-11 19:04:27,836 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:27,840 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:27,840 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:27,840 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (11, 4)]
2025-04-11 19:04:27,840 [DEBUG] check_window_intermediate_custom (only one inserted(11, 4)): For L=6, window [0 0 1 1 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:27,840 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:27,840 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:27,840 [DEBUG] board coords: [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)]
2025-04-11 19:04:27,840 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:04:27,840 [DEBUG] check_window_intermediate_custom: empty_cells=[(16, 9), (17, 10)]
2025-04-11 19:04:27,840 [DEBUG] check_window_intermediate_custom (only one inserted(16, 9)): For L=6, window [1 1 1 1 0 0] with coords [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)] triggers candidate.
2025-04-11 19:04:27,843 [INFO] Final candidates: [(16, 9), (11, 4)]
2025-04-11 19:04:27,843 [INFO] Phase defense: Collected 1unique candidate(s):[((16, 9), (11, 4))]
2025-04-11 19:04:27,843 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:04:27,843 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:28,048 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:28,048 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:28,048 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(2)), (np.int64(13), np.int64(15)))
2025-04-11 19:04:28,055 [INFO] Final candidates: []
2025-04-11 19:04:28,055 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:28,059 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:28,059 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:28,059 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (11, 4)]
2025-04-11 19:04:28,059 [DEBUG] check_window_intermediate_custom (only one inserted(11, 4)): For L=6, window [0 0 1 1 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:28,059 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:28,059 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:28,060 [DEBUG] board coords: [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)]
2025-04-11 19:04:28,060 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:04:28,060 [DEBUG] check_window_intermediate_custom: empty_cells=[(16, 9), (17, 10)]
2025-04-11 19:04:28,060 [DEBUG] check_window_intermediate_custom (only one inserted(16, 9)): For L=6, window [1 1 1 1 0 0] with coords [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)] triggers candidate.
2025-04-11 19:04:28,062 [INFO] Final candidates: [(16, 9), (11, 4)]
2025-04-11 19:04:28,062 [INFO] Phase defense: Collected 1unique candidate(s):[((16, 9), (11, 4))]
2025-04-11 19:04:28,062 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:04:28,062 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:28,339 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:28,340 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:28,340 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(16)), (np.int64(9), np.int64(6)))
2025-04-11 19:04:28,347 [INFO] Final candidates: []
2025-04-11 19:04:28,347 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:28,351 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:28,351 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:28,351 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (11, 4)]
2025-04-11 19:04:28,351 [DEBUG] check_window_intermediate_custom (only one inserted(11, 4)): For L=6, window [0 0 1 1 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:28,351 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:28,351 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:28,351 [DEBUG] board coords: [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)]
2025-04-11 19:04:28,352 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:04:28,352 [DEBUG] check_window_intermediate_custom: empty_cells=[(16, 9), (17, 10)]
2025-04-11 19:04:28,352 [DEBUG] check_window_intermediate_custom (only one inserted(16, 9)): For L=6, window [1 1 1 1 0 0] with coords [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)] triggers candidate.
2025-04-11 19:04:28,354 [INFO] Final candidates: [(16, 9), (11, 4)]
2025-04-11 19:04:28,354 [INFO] Phase defense: Collected 1unique candidate(s):[((16, 9), (11, 4))]
2025-04-11 19:04:28,354 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:04:28,354 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:28,487 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:28,487 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:28,487 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(17)), (np.int64(17), np.int64(10)))
2025-04-11 19:04:28,494 [INFO] Final candidates: []
2025-04-11 19:04:28,494 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:28,498 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:28,498 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:28,499 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (11, 4)]
2025-04-11 19:04:28,499 [DEBUG] check_window_intermediate_custom (only one inserted(11, 4)): For L=6, window [0 0 1 1 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:28,499 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:28,499 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:28,501 [INFO] Final candidates: [(16, 9), (11, 4)]
2025-04-11 19:04:28,501 [INFO] Phase defense: Collected 1unique candidate(s):[((16, 9), (11, 4))]
2025-04-11 19:04:28,501 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:04:28,501 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:28,653 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:28,653 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:28,653 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(7)), (np.int64(12), np.int64(11)))
2025-04-11 19:04:28,660 [INFO] Final candidates: []
2025-04-11 19:04:28,660 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:28,664 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:28,664 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:28,664 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (11, 4)]
2025-04-11 19:04:28,665 [DEBUG] check_window_intermediate_custom (only one inserted(11, 4)): For L=6, window [0 0 1 1 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:28,665 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:28,665 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:28,665 [DEBUG] board coords: [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)]
2025-04-11 19:04:28,665 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:04:28,665 [DEBUG] check_window_intermediate_custom: empty_cells=[(16, 9), (17, 10)]
2025-04-11 19:04:28,665 [DEBUG] check_window_intermediate_custom (only one inserted(16, 9)): For L=6, window [1 1 1 1 0 0] with coords [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)] triggers candidate.
2025-04-11 19:04:28,667 [INFO] Final candidates: [(16, 9), (11, 4)]
2025-04-11 19:04:28,667 [INFO] Phase defense: Collected 1unique candidate(s):[((16, 9), (11, 4))]
2025-04-11 19:04:28,667 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:04:28,667 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:28,772 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:28,772 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:28,772 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(2)), (np.int64(3), np.int64(2)))
2025-04-11 19:04:28,779 [INFO] Final candidates: []
2025-04-11 19:04:28,779 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:28,783 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:28,783 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:28,783 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (11, 4)]
2025-04-11 19:04:28,783 [DEBUG] check_window_intermediate_custom (only one inserted(11, 4)): For L=6, window [0 0 1 1 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:28,783 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:28,783 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:28,784 [DEBUG] board coords: [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)]
2025-04-11 19:04:28,784 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:04:28,784 [DEBUG] check_window_intermediate_custom: empty_cells=[(16, 9), (17, 10)]
2025-04-11 19:04:28,784 [DEBUG] check_window_intermediate_custom (only one inserted(16, 9)): For L=6, window [1 1 1 1 0 0] with coords [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)] triggers candidate.
2025-04-11 19:04:28,786 [INFO] Final candidates: [(16, 9), (11, 4)]
2025-04-11 19:04:28,786 [INFO] Phase defense: Collected 1unique candidate(s):[((16, 9), (11, 4))]
2025-04-11 19:04:28,786 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:04:28,786 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:28,930 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:28,930 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:28,930 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(18)), (np.int64(14), np.int64(16)))
2025-04-11 19:04:28,937 [INFO] Final candidates: []
2025-04-11 19:04:28,937 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:28,941 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:28,941 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:28,941 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (11, 4)]
2025-04-11 19:04:28,941 [DEBUG] check_window_intermediate_custom (only one inserted(11, 4)): For L=6, window [0 0 1 1 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:28,941 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:28,941 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:28,941 [DEBUG] board coords: [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)]
2025-04-11 19:04:28,941 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:04:28,941 [DEBUG] check_window_intermediate_custom: empty_cells=[(16, 9), (17, 10)]
2025-04-11 19:04:28,941 [DEBUG] check_window_intermediate_custom (only one inserted(16, 9)): For L=6, window [1 1 1 1 0 0] with coords [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)] triggers candidate.
2025-04-11 19:04:28,944 [INFO] Final candidates: [(16, 9), (11, 4)]
2025-04-11 19:04:28,944 [INFO] Phase defense: Collected 1unique candidate(s):[((16, 9), (11, 4))]
2025-04-11 19:04:28,944 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:04:28,944 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:29,185 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:29,185 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:29,185 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(11)), (np.int64(15), np.int64(10)))
2025-04-11 19:04:29,192 [INFO] Final candidates: []
2025-04-11 19:04:29,192 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:29,196 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:29,196 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:29,196 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (11, 4)]
2025-04-11 19:04:29,196 [DEBUG] check_window_intermediate_custom (only one inserted(11, 4)): For L=6, window [0 0 1 1 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:29,196 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:29,196 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:29,196 [DEBUG] board coords: [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)]
2025-04-11 19:04:29,196 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:04:29,196 [DEBUG] check_window_intermediate_custom: empty_cells=[(16, 9), (17, 10)]
2025-04-11 19:04:29,196 [DEBUG] check_window_intermediate_custom (only one inserted(16, 9)): For L=6, window [1 1 1 1 0 0] with coords [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)] triggers candidate.
2025-04-11 19:04:29,199 [INFO] Final candidates: [(16, 9), (11, 4)]
2025-04-11 19:04:29,199 [INFO] Phase defense: Collected 1unique candidate(s):[((16, 9), (11, 4))]
2025-04-11 19:04:29,199 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:04:29,199 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:29,428 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:29,429 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:29,429 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(0)), (np.int64(10), np.int64(11)))
2025-04-11 19:04:29,436 [INFO] Final candidates: []
2025-04-11 19:04:29,436 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:29,442 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:29,442 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:29,442 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (11, 4)]
2025-04-11 19:04:29,442 [DEBUG] check_window_intermediate_custom (only one inserted(11, 4)): For L=6, window [0 0 1 1 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:29,442 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:29,442 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:29,442 [DEBUG] board coords: [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)]
2025-04-11 19:04:29,442 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:04:29,443 [DEBUG] check_window_intermediate_custom: empty_cells=[(16, 9), (17, 10)]
2025-04-11 19:04:29,443 [DEBUG] check_window_intermediate_custom (only one inserted(16, 9)): For L=6, window [1 1 1 1 0 0] with coords [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)] triggers candidate.
2025-04-11 19:04:29,445 [INFO] Final candidates: [(16, 9), (11, 4)]
2025-04-11 19:04:29,445 [INFO] Phase defense: Collected 1unique candidate(s):[((16, 9), (11, 4))]
2025-04-11 19:04:29,445 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:04:29,445 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:29,667 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:29,667 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:29,668 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(8)), (np.int64(7), np.int64(5)))
2025-04-11 19:04:29,674 [INFO] Final candidates: []
2025-04-11 19:04:29,674 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:29,679 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:29,679 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:29,679 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (11, 4)]
2025-04-11 19:04:29,679 [DEBUG] check_window_intermediate_custom (only one inserted(11, 4)): For L=6, window [0 0 1 1 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:29,679 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:29,679 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:29,679 [DEBUG] board coords: [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)]
2025-04-11 19:04:29,679 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:04:29,679 [DEBUG] check_window_intermediate_custom: empty_cells=[(16, 9), (17, 10)]
2025-04-11 19:04:29,679 [DEBUG] check_window_intermediate_custom (only one inserted(16, 9)): For L=6, window [1 1 1 1 0 0] with coords [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)] triggers candidate.
2025-04-11 19:04:29,682 [INFO] Final candidates: [(16, 9), (11, 4)]
2025-04-11 19:04:29,682 [INFO] Phase defense: Collected 1unique candidate(s):[((16, 9), (11, 4))]
2025-04-11 19:04:29,682 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:04:29,682 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:29,736 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:29,736 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:29,736 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(0)), (np.int64(8), np.int64(10)))
2025-04-11 19:04:29,744 [INFO] Final candidates: []
2025-04-11 19:04:29,744 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:29,748 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:29,748 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:29,748 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (11, 4)]
2025-04-11 19:04:29,749 [DEBUG] check_window_intermediate_custom (only one inserted(11, 4)): For L=6, window [0 0 1 1 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:29,749 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:29,749 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:29,749 [DEBUG] board coords: [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)]
2025-04-11 19:04:29,749 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:04:29,749 [DEBUG] check_window_intermediate_custom: empty_cells=[(16, 9), (17, 10)]
2025-04-11 19:04:29,749 [DEBUG] check_window_intermediate_custom (only one inserted(16, 9)): For L=6, window [1 1 1 1 0 0] with coords [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)] triggers candidate.
2025-04-11 19:04:29,751 [INFO] Final candidates: [(16, 9), (11, 4)]
2025-04-11 19:04:29,751 [INFO] Phase defense: Collected 1unique candidate(s):[((16, 9), (11, 4))]
2025-04-11 19:04:29,751 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:04:29,751 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:29,871 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:29,872 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:29,872 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(2)), (np.int64(8), np.int64(10)))
2025-04-11 19:04:29,878 [INFO] Final candidates: []
2025-04-11 19:04:29,879 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:29,885 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:29,885 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:29,885 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (11, 4)]
2025-04-11 19:04:29,885 [DEBUG] check_window_intermediate_custom (only one inserted(11, 4)): For L=6, window [0 0 1 1 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:29,885 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:29,885 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:29,885 [DEBUG] board coords: [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)]
2025-04-11 19:04:29,886 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:04:29,886 [DEBUG] check_window_intermediate_custom: empty_cells=[(16, 9), (17, 10)]
2025-04-11 19:04:29,886 [DEBUG] check_window_intermediate_custom (only one inserted(16, 9)): For L=6, window [1 1 1 1 0 0] with coords [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)] triggers candidate.
2025-04-11 19:04:29,888 [INFO] Final candidates: [(16, 9), (11, 4)]
2025-04-11 19:04:29,888 [INFO] Phase defense: Collected 1unique candidate(s):[((16, 9), (11, 4))]
2025-04-11 19:04:29,888 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:04:29,888 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:30,009 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:30,010 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:30,010 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(18)), (np.int64(13), np.int64(11)))
2025-04-11 19:04:30,016 [INFO] Final candidates: []
2025-04-11 19:04:30,017 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:30,021 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:30,021 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:30,021 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (11, 4)]
2025-04-11 19:04:30,021 [DEBUG] check_window_intermediate_custom (only one inserted(11, 4)): For L=6, window [0 0 1 1 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:30,021 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:30,021 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:30,021 [DEBUG] board coords: [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)]
2025-04-11 19:04:30,021 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:04:30,021 [DEBUG] check_window_intermediate_custom: empty_cells=[(16, 9), (17, 10)]
2025-04-11 19:04:30,021 [DEBUG] check_window_intermediate_custom (only one inserted(16, 9)): For L=6, window [1 1 1 1 0 0] with coords [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)] triggers candidate.
2025-04-11 19:04:30,023 [INFO] Final candidates: [(16, 9), (11, 4)]
2025-04-11 19:04:30,024 [INFO] Phase defense: Collected 1unique candidate(s):[((16, 9), (11, 4))]
2025-04-11 19:04:30,024 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:04:30,024 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:30,286 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:30,286 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:30,286 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(9)), (np.int64(10), np.int64(9)))
2025-04-11 19:04:30,289 [DEBUG] board coords: [(8, 9), (9, 9), (10, 9), (11, 9), (12, 9), (13, 9)]
2025-04-11 19:04:30,289 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:30,289 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 9), (9, 9)]
2025-04-11 19:04:30,289 [DEBUG] check_window_intermediate_custom (only one inserted(9, 9)): For L=6, window [0 0 2 2 2 2] with coords [(8, 9), (9, 9), (10, 9), (11, 9), (12, 9), (13, 9)] triggers candidate.
2025-04-11 19:04:30,293 [INFO] Final candidates: [(9, 9)]
2025-04-11 19:04:30,293 [INFO] Phase win: Found only one candidate: (9, 9)
2025-04-11 19:04:30,293 [INFO] Phase win: Collected 8unique candidate(s):[((9, 9), (np.int64(9), np.int64(10))), ((9, 9), (np.int64(7), np.int64(9))), ((9, 9), (np.int64(8), np.int64(9))), ((9, 9), (np.int64(9), np.int64(8))), ((9, 9), (np.int64(9), np.int64(7))), ((9, 9), (np.int64(8), np.int64(10))), ((9, 9), (np.int64(8), np.int64(8))), ((9, 9), (np.int64(9), np.int64(11)))]
2025-04-11 19:04:30,293 [INFO] Phase 1 (immediate win): 8 candidate(s) found.
2025-04-11 19:04:30,298 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:30,298 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:30,298 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (11, 4)]
2025-04-11 19:04:30,298 [DEBUG] check_window_intermediate_custom (only one inserted(11, 4)): For L=6, window [0 0 1 1 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:30,298 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:30,298 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:30,298 [DEBUG] board coords: [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)]
2025-04-11 19:04:30,298 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:04:30,298 [DEBUG] check_window_intermediate_custom: empty_cells=[(16, 9), (17, 10)]
2025-04-11 19:04:30,298 [DEBUG] check_window_intermediate_custom (only one inserted(16, 9)): For L=6, window [1 1 1 1 0 0] with coords [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)] triggers candidate.
2025-04-11 19:04:30,300 [INFO] Final candidates: [(16, 9), (11, 4)]
2025-04-11 19:04:30,300 [INFO] Phase defense: Collected 1unique candidate(s):[((16, 9), (11, 4))]
2025-04-11 19:04:30,300 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:04:30,300 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:30,355 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:30,355 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:30,356 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(16)), (np.int64(1), np.int64(1)))
2025-04-11 19:04:30,362 [INFO] Final candidates: []
2025-04-11 19:04:30,362 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:30,367 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:30,367 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:30,367 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (11, 4)]
2025-04-11 19:04:30,367 [DEBUG] check_window_intermediate_custom (only one inserted(11, 4)): For L=6, window [0 0 1 1 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:30,367 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:30,367 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:30,367 [DEBUG] board coords: [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)]
2025-04-11 19:04:30,367 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:04:30,367 [DEBUG] check_window_intermediate_custom: empty_cells=[(16, 9), (17, 10)]
2025-04-11 19:04:30,367 [DEBUG] check_window_intermediate_custom (only one inserted(16, 9)): For L=6, window [1 1 1 1 0 0] with coords [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)] triggers candidate.
2025-04-11 19:04:30,369 [INFO] Final candidates: [(16, 9), (11, 4)]
2025-04-11 19:04:30,369 [INFO] Phase defense: Collected 1unique candidate(s):[((16, 9), (11, 4))]
2025-04-11 19:04:30,369 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:04:30,369 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:30,536 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:30,536 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:30,536 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(4)), (np.int64(3), np.int64(2)))
2025-04-11 19:04:30,543 [INFO] Final candidates: []
2025-04-11 19:04:30,543 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:30,547 [DEBUG] board coords: [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)]
2025-04-11 19:04:30,548 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:04:30,548 [DEBUG] check_window_intermediate_custom: empty_cells=[(16, 9), (17, 10)]
2025-04-11 19:04:30,548 [DEBUG] check_window_intermediate_custom (only one inserted(16, 9)): For L=6, window [1 1 1 1 0 0] with coords [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)] triggers candidate.
2025-04-11 19:04:30,550 [INFO] Final candidates: [(16, 9)]
2025-04-11 19:04:30,550 [INFO] Phase defense: Found only one candidate: (16, 9)
2025-04-11 19:04:30,550 [INFO] Phase defense: Collected 8unique candidate(s):[((16, 9), (np.int64(16), np.int64(10))), ((16, 9), (np.int64(17), np.int64(10))), ((16, 9), (np.int64(18), np.int64(9))), ((16, 9), (np.int64(15), np.int64(9))), ((16, 9), (np.int64(16), np.int64(7))), ((16, 9), (np.int64(17), np.int64(9))), ((16, 9), (np.int64(16), np.int64(11))), ((16, 9), (np.int64(15), np.int64(10)))]
2025-04-11 19:04:30,550 [INFO] Phase 2 (defense): 8 candidate(s) found.
2025-04-11 19:04:30,550 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:30,803 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:30,803 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:30,803 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(17), np.int64(2)), (np.int64(10), np.int64(4)))
2025-04-11 19:04:30,807 [DEBUG] board coords: [(8, 2), (9, 3), (10, 4), (11, 5), (12, 6), (13, 7)]
2025-04-11 19:04:30,807 [DEBUG] board values[np.int64(2), np.int64(0), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:04:30,807 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 3), (11, 5)]
2025-04-11 19:04:30,807 [DEBUG] check_window_intermediate_custom: For L=6, window [2 0 2 0 2 2] with coords [(8, 2), (9, 3), (10, 4), (11, 5), (12, 6), (13, 7)] triggers candidate.
2025-04-11 19:04:30,810 [INFO] Final candidates: [(9, 3), (11, 5)]
2025-04-11 19:04:30,810 [INFO] Phase win: Collected 1unique candidate(s):[((9, 3), (11, 5))]
2025-04-11 19:04:30,810 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 19:04:30,814 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:30,814 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:30,814 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (11, 4)]
2025-04-11 19:04:30,814 [DEBUG] check_window_intermediate_custom (only one inserted(11, 4)): For L=6, window [0 0 1 1 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:30,814 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:30,814 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:30,814 [DEBUG] board coords: [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)]
2025-04-11 19:04:30,814 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:04:30,814 [DEBUG] check_window_intermediate_custom: empty_cells=[(16, 9), (17, 10)]
2025-04-11 19:04:30,814 [DEBUG] check_window_intermediate_custom (only one inserted(16, 9)): For L=6, window [1 1 1 1 0 0] with coords [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)] triggers candidate.
2025-04-11 19:04:30,817 [INFO] Final candidates: [(16, 9), (11, 4)]
2025-04-11 19:04:30,817 [INFO] Phase defense: Collected 1unique candidate(s):[((16, 9), (11, 4))]
2025-04-11 19:04:30,817 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:04:30,817 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:30,968 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:30,968 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:30,968 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(16)), (np.int64(10), np.int64(17)))
2025-04-11 19:04:30,975 [INFO] Final candidates: []
2025-04-11 19:04:30,975 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:30,979 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:30,979 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:30,979 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (11, 4)]
2025-04-11 19:04:30,979 [DEBUG] check_window_intermediate_custom (only one inserted(11, 4)): For L=6, window [0 0 1 1 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:30,979 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:30,979 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:30,980 [DEBUG] board coords: [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)]
2025-04-11 19:04:30,980 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:04:30,980 [DEBUG] check_window_intermediate_custom: empty_cells=[(16, 9), (17, 10)]
2025-04-11 19:04:30,980 [DEBUG] check_window_intermediate_custom (only one inserted(16, 9)): For L=6, window [1 1 1 1 0 0] with coords [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)] triggers candidate.
2025-04-11 19:04:30,982 [INFO] Final candidates: [(16, 9), (11, 4)]
2025-04-11 19:04:30,982 [INFO] Phase defense: Collected 1unique candidate(s):[((16, 9), (11, 4))]
2025-04-11 19:04:30,982 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:04:30,982 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:31,290 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:31,291 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:31,291 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(15)), (np.int64(12), np.int64(12)))
2025-04-11 19:04:31,297 [INFO] Final candidates: []
2025-04-11 19:04:31,297 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:31,302 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:31,302 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:31,302 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (11, 4)]
2025-04-11 19:04:31,302 [DEBUG] check_window_intermediate_custom (only one inserted(11, 4)): For L=6, window [0 0 1 1 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:31,302 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:31,302 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:31,302 [DEBUG] board coords: [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)]
2025-04-11 19:04:31,302 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:04:31,302 [DEBUG] check_window_intermediate_custom: empty_cells=[(16, 9), (17, 10)]
2025-04-11 19:04:31,302 [DEBUG] check_window_intermediate_custom (only one inserted(16, 9)): For L=6, window [1 1 1 1 0 0] with coords [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)] triggers candidate.
2025-04-11 19:04:31,304 [INFO] Final candidates: [(16, 9), (11, 4)]
2025-04-11 19:04:31,304 [INFO] Phase defense: Collected 1unique candidate(s):[((16, 9), (11, 4))]
2025-04-11 19:04:31,304 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:04:31,304 [DEBUG] MCTS iteration 50: reached a node with 0 visits.
2025-04-11 19:04:31,304 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:31,533 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:31,533 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:31,533 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(3)), (np.int64(17), np.int64(1)))
2025-04-11 19:04:31,540 [INFO] Final candidates: []
2025-04-11 19:04:31,540 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:31,544 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:31,544 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:31,544 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (11, 4)]
2025-04-11 19:04:31,544 [DEBUG] check_window_intermediate_custom (only one inserted(11, 4)): For L=6, window [0 0 1 1 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:31,544 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:31,544 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:31,544 [DEBUG] board coords: [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)]
2025-04-11 19:04:31,544 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:04:31,544 [DEBUG] check_window_intermediate_custom: empty_cells=[(16, 9), (17, 10)]
2025-04-11 19:04:31,544 [DEBUG] check_window_intermediate_custom (only one inserted(16, 9)): For L=6, window [1 1 1 1 0 0] with coords [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)] triggers candidate.
2025-04-11 19:04:31,547 [INFO] Final candidates: [(16, 9), (11, 4)]
2025-04-11 19:04:31,547 [INFO] Phase defense: Collected 1unique candidate(s):[((16, 9), (11, 4))]
2025-04-11 19:04:31,547 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:04:31,547 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:31,617 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:31,617 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:31,617 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(18)), (np.int64(2), np.int64(1)))
2025-04-11 19:04:31,628 [INFO] Final candidates: []
2025-04-11 19:04:31,628 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:31,634 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:31,634 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:31,635 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (11, 4)]
2025-04-11 19:04:31,635 [DEBUG] check_window_intermediate_custom (only one inserted(11, 4)): For L=6, window [0 0 1 1 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:31,635 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:31,635 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:31,635 [DEBUG] board coords: [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)]
2025-04-11 19:04:31,635 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:04:31,635 [DEBUG] check_window_intermediate_custom: empty_cells=[(16, 9), (17, 10)]
2025-04-11 19:04:31,635 [DEBUG] check_window_intermediate_custom (only one inserted(16, 9)): For L=6, window [1 1 1 1 0 0] with coords [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)] triggers candidate.
2025-04-11 19:04:31,640 [INFO] Final candidates: [(16, 9), (11, 4)]
2025-04-11 19:04:31,640 [INFO] Phase defense: Collected 1unique candidate(s):[((16, 9), (11, 4))]
2025-04-11 19:04:31,640 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:04:31,640 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:31,831 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:31,831 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:31,831 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(7)), (np.int64(16), np.int64(9)))
2025-04-11 19:04:31,838 [INFO] Final candidates: []
2025-04-11 19:04:31,838 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:31,843 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:31,843 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:31,843 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (11, 4)]
2025-04-11 19:04:31,843 [DEBUG] check_window_intermediate_custom (only one inserted(11, 4)): For L=6, window [0 0 1 1 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:31,846 [INFO] Final candidates: [(11, 4)]
2025-04-11 19:04:31,846 [INFO] Phase defense: Found only one candidate: (11, 4)
2025-04-11 19:04:31,846 [INFO] Phase defense: Collected 11unique candidate(s):[((11, 4), (np.int64(10), np.int64(3))), ((11, 4), (np.int64(12), np.int64(3))), ((11, 4), (np.int64(11), np.int64(5))), ((11, 4), (np.int64(9), np.int64(4))), ((11, 4), (np.int64(10), np.int64(4))), ((11, 4), (np.int64(11), np.int64(3))), ((11, 4), (np.int64(13), np.int64(4))), ((11, 4), (np.int64(12), np.int64(4))), ((11, 4), (np.int64(11), np.int64(2))), ((11, 4), (np.int64(10), np.int64(5))), ((11, 4), (np.int64(11), np.int64(6)))]
2025-04-11 19:04:31,846 [INFO] Phase 2 (defense): 11 candidate(s) found.
2025-04-11 19:04:31,846 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:31,964 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:31,964 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:31,964 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(9)), (np.int64(11), np.int64(18)))
2025-04-11 19:04:31,971 [INFO] Final candidates: []
2025-04-11 19:04:31,971 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:31,975 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:31,975 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:31,975 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (11, 4)]
2025-04-11 19:04:31,976 [DEBUG] check_window_intermediate_custom (only one inserted(11, 4)): For L=6, window [0 0 1 1 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:31,976 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:31,976 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:31,976 [DEBUG] board coords: [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)]
2025-04-11 19:04:31,976 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:04:31,976 [DEBUG] check_window_intermediate_custom: empty_cells=[(16, 9), (17, 10)]
2025-04-11 19:04:31,976 [DEBUG] check_window_intermediate_custom (only one inserted(16, 9)): For L=6, window [1 1 1 1 0 0] with coords [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)] triggers candidate.
2025-04-11 19:04:31,978 [INFO] Final candidates: [(16, 9), (11, 4)]
2025-04-11 19:04:31,978 [INFO] Phase defense: Collected 1unique candidate(s):[((16, 9), (11, 4))]
2025-04-11 19:04:31,978 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:04:31,978 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:32,212 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:32,212 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:32,212 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(3)), (np.int64(13), np.int64(4)))
2025-04-11 19:04:32,217 [DEBUG] board coords: [(8, 2), (9, 3), (10, 4), (11, 5), (12, 6), (13, 7)]
2025-04-11 19:04:32,217 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:04:32,217 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 4), (11, 5)]
2025-04-11 19:04:32,217 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 0 2 2] with coords [(8, 2), (9, 3), (10, 4), (11, 5), (12, 6), (13, 7)] triggers candidate.
2025-04-11 19:04:32,219 [INFO] Final candidates: [(10, 4), (11, 5)]
2025-04-11 19:04:32,219 [INFO] Phase win: Collected 1unique candidate(s):[((10, 4), (11, 5))]
2025-04-11 19:04:32,219 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 19:04:32,224 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:32,224 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:32,224 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (11, 4)]
2025-04-11 19:04:32,224 [DEBUG] check_window_intermediate_custom (only one inserted(11, 4)): For L=6, window [0 0 1 1 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:32,224 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:32,224 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:32,224 [DEBUG] board coords: [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)]
2025-04-11 19:04:32,224 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:04:32,224 [DEBUG] check_window_intermediate_custom: empty_cells=[(16, 9), (17, 10)]
2025-04-11 19:04:32,224 [DEBUG] check_window_intermediate_custom (only one inserted(16, 9)): For L=6, window [1 1 1 1 0 0] with coords [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)] triggers candidate.
2025-04-11 19:04:32,226 [INFO] Final candidates: [(16, 9), (11, 4)]
2025-04-11 19:04:32,226 [INFO] Phase defense: Collected 1unique candidate(s):[((16, 9), (11, 4))]
2025-04-11 19:04:32,226 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:04:32,226 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:32,305 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:32,305 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:32,305 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(9)), (np.int64(16), np.int64(4)))
2025-04-11 19:04:32,307 [DEBUG] board coords: [(8, 9), (9, 9), (10, 9), (11, 9), (12, 9), (13, 9)]
2025-04-11 19:04:32,307 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:32,307 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 9), (9, 9)]
2025-04-11 19:04:32,308 [DEBUG] check_window_intermediate_custom (only one inserted(9, 9)): For L=6, window [0 0 2 2 2 2] with coords [(8, 9), (9, 9), (10, 9), (11, 9), (12, 9), (13, 9)] triggers candidate.
2025-04-11 19:04:32,312 [INFO] Final candidates: [(9, 9)]
2025-04-11 19:04:32,312 [INFO] Phase win: Found only one candidate: (9, 9)
2025-04-11 19:04:32,312 [INFO] Phase win: Collected 8unique candidate(s):[((9, 9), (np.int64(9), np.int64(10))), ((9, 9), (np.int64(7), np.int64(9))), ((9, 9), (np.int64(8), np.int64(9))), ((9, 9), (np.int64(9), np.int64(8))), ((9, 9), (np.int64(9), np.int64(7))), ((9, 9), (np.int64(8), np.int64(10))), ((9, 9), (np.int64(8), np.int64(8))), ((9, 9), (np.int64(9), np.int64(11)))]
2025-04-11 19:04:32,312 [INFO] Phase 1 (immediate win): 8 candidate(s) found.
2025-04-11 19:04:32,316 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:32,316 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:32,316 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (11, 4)]
2025-04-11 19:04:32,316 [DEBUG] check_window_intermediate_custom (only one inserted(11, 4)): For L=6, window [0 0 1 1 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:32,316 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:32,317 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:32,317 [DEBUG] board coords: [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)]
2025-04-11 19:04:32,317 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:04:32,317 [DEBUG] check_window_intermediate_custom: empty_cells=[(16, 9), (17, 10)]
2025-04-11 19:04:32,317 [DEBUG] check_window_intermediate_custom (only one inserted(16, 9)): For L=6, window [1 1 1 1 0 0] with coords [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)] triggers candidate.
2025-04-11 19:04:32,319 [INFO] Final candidates: [(16, 9), (11, 4)]
2025-04-11 19:04:32,319 [INFO] Phase defense: Collected 1unique candidate(s):[((16, 9), (11, 4))]
2025-04-11 19:04:32,319 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:04:32,319 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:32,334 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:32,334 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:32,334 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(5)), (np.int64(9), np.int64(6)))
2025-04-11 19:04:32,341 [INFO] Final candidates: []
2025-04-11 19:04:32,341 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:32,345 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:32,345 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:32,345 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (11, 4)]
2025-04-11 19:04:32,345 [DEBUG] check_window_intermediate_custom (only one inserted(11, 4)): For L=6, window [0 0 1 1 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:32,345 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:32,346 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:32,346 [DEBUG] board coords: [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)]
2025-04-11 19:04:32,346 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:04:32,346 [DEBUG] check_window_intermediate_custom: empty_cells=[(16, 9), (17, 10)]
2025-04-11 19:04:32,346 [DEBUG] check_window_intermediate_custom (only one inserted(16, 9)): For L=6, window [1 1 1 1 0 0] with coords [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)] triggers candidate.
2025-04-11 19:04:32,348 [INFO] Final candidates: [(16, 9), (11, 4)]
2025-04-11 19:04:32,348 [INFO] Phase defense: Collected 1unique candidate(s):[((16, 9), (11, 4))]
2025-04-11 19:04:32,348 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:04:32,348 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:32,521 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:32,522 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:32,522 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(6)), (np.int64(16), np.int64(4)))
2025-04-11 19:04:32,528 [INFO] Final candidates: []
2025-04-11 19:04:32,528 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:32,533 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:32,533 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:32,533 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (11, 4)]
2025-04-11 19:04:32,533 [DEBUG] check_window_intermediate_custom (only one inserted(11, 4)): For L=6, window [0 0 1 1 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:32,533 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:32,533 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:32,533 [DEBUG] board coords: [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)]
2025-04-11 19:04:32,533 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:04:32,533 [DEBUG] check_window_intermediate_custom: empty_cells=[(16, 9), (17, 10)]
2025-04-11 19:04:32,533 [DEBUG] check_window_intermediate_custom (only one inserted(16, 9)): For L=6, window [1 1 1 1 0 0] with coords [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)] triggers candidate.
2025-04-11 19:04:32,535 [INFO] Final candidates: [(16, 9), (11, 4)]
2025-04-11 19:04:32,535 [INFO] Phase defense: Collected 1unique candidate(s):[((16, 9), (11, 4))]
2025-04-11 19:04:32,535 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:04:32,536 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:32,689 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:32,689 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:32,689 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(5)), (np.int64(15), np.int64(17)))
2025-04-11 19:04:32,697 [INFO] Final candidates: []
2025-04-11 19:04:32,697 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:32,701 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:32,701 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:32,701 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (11, 4)]
2025-04-11 19:04:32,701 [DEBUG] check_window_intermediate_custom (only one inserted(11, 4)): For L=6, window [0 0 1 1 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:32,701 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:32,701 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:32,701 [DEBUG] board coords: [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)]
2025-04-11 19:04:32,701 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:04:32,701 [DEBUG] check_window_intermediate_custom: empty_cells=[(16, 9), (17, 10)]
2025-04-11 19:04:32,701 [DEBUG] check_window_intermediate_custom (only one inserted(16, 9)): For L=6, window [1 1 1 1 0 0] with coords [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)] triggers candidate.
2025-04-11 19:04:32,704 [INFO] Final candidates: [(16, 9), (11, 4)]
2025-04-11 19:04:32,704 [INFO] Phase defense: Collected 1unique candidate(s):[((16, 9), (11, 4))]
2025-04-11 19:04:32,704 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:04:32,704 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:32,802 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:32,802 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:32,802 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(3)), (np.int64(18), np.int64(8)))
2025-04-11 19:04:32,809 [INFO] Final candidates: []
2025-04-11 19:04:32,809 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:32,813 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:32,813 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:32,813 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (11, 4)]
2025-04-11 19:04:32,813 [DEBUG] check_window_intermediate_custom (only one inserted(11, 4)): For L=6, window [0 0 1 1 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:32,813 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:32,813 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:32,814 [DEBUG] board coords: [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)]
2025-04-11 19:04:32,814 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:04:32,814 [DEBUG] check_window_intermediate_custom: empty_cells=[(16, 9), (17, 10)]
2025-04-11 19:04:32,814 [DEBUG] check_window_intermediate_custom (only one inserted(16, 9)): For L=6, window [1 1 1 1 0 0] with coords [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)] triggers candidate.
2025-04-11 19:04:32,816 [INFO] Final candidates: [(16, 9), (11, 4)]
2025-04-11 19:04:32,816 [INFO] Phase defense: Collected 1unique candidate(s):[((16, 9), (11, 4))]
2025-04-11 19:04:32,816 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:04:32,816 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:33,049 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:33,049 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:33,049 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(17), np.int64(10)), (np.int64(0), np.int64(3)))
2025-04-11 19:04:33,056 [INFO] Final candidates: []
2025-04-11 19:04:33,056 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:33,060 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:33,060 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:33,060 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (11, 4)]
2025-04-11 19:04:33,061 [DEBUG] check_window_intermediate_custom (only one inserted(11, 4)): For L=6, window [0 0 1 1 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:33,061 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:33,061 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:33,063 [INFO] Final candidates: [(16, 9), (11, 4)]
2025-04-11 19:04:33,063 [INFO] Phase defense: Collected 1unique candidate(s):[((16, 9), (11, 4))]
2025-04-11 19:04:33,063 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:04:33,063 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:33,223 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:33,223 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:33,223 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(17), np.int64(7)), (np.int64(18), np.int64(8)))
2025-04-11 19:04:33,230 [INFO] Final candidates: []
2025-04-11 19:04:33,230 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:33,234 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:33,234 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:33,234 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (11, 4)]
2025-04-11 19:04:33,234 [DEBUG] check_window_intermediate_custom (only one inserted(11, 4)): For L=6, window [0 0 1 1 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:33,234 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:33,234 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:33,234 [DEBUG] board coords: [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)]
2025-04-11 19:04:33,234 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:04:33,234 [DEBUG] check_window_intermediate_custom: empty_cells=[(16, 9), (17, 10)]
2025-04-11 19:04:33,234 [DEBUG] check_window_intermediate_custom (only one inserted(16, 9)): For L=6, window [1 1 1 1 0 0] with coords [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)] triggers candidate.
2025-04-11 19:04:33,237 [INFO] Final candidates: [(16, 9), (11, 4)]
2025-04-11 19:04:33,237 [INFO] Phase defense: Collected 1unique candidate(s):[((16, 9), (11, 4))]
2025-04-11 19:04:33,237 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:04:33,237 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:33,397 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:33,397 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:33,397 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(11)), (np.int64(10), np.int64(9)))
2025-04-11 19:04:33,399 [DEBUG] board coords: [(8, 9), (9, 9), (10, 9), (11, 9), (12, 9), (13, 9)]
2025-04-11 19:04:33,400 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:33,400 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 9), (9, 9)]
2025-04-11 19:04:33,400 [DEBUG] check_window_intermediate_custom (only one inserted(9, 9)): For L=6, window [0 0 2 2 2 2] with coords [(8, 9), (9, 9), (10, 9), (11, 9), (12, 9), (13, 9)] triggers candidate.
2025-04-11 19:04:33,404 [INFO] Final candidates: [(9, 9)]
2025-04-11 19:04:33,404 [INFO] Phase win: Found only one candidate: (9, 9)
2025-04-11 19:04:33,404 [INFO] Phase win: Collected 8unique candidate(s):[((9, 9), (np.int64(9), np.int64(10))), ((9, 9), (np.int64(7), np.int64(9))), ((9, 9), (np.int64(8), np.int64(9))), ((9, 9), (np.int64(9), np.int64(8))), ((9, 9), (np.int64(9), np.int64(7))), ((9, 9), (np.int64(8), np.int64(10))), ((9, 9), (np.int64(8), np.int64(8))), ((9, 9), (np.int64(9), np.int64(11)))]
2025-04-11 19:04:33,404 [INFO] Phase 1 (immediate win): 8 candidate(s) found.
2025-04-11 19:04:33,408 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:33,408 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:33,408 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (11, 4)]
2025-04-11 19:04:33,408 [DEBUG] check_window_intermediate_custom (only one inserted(11, 4)): For L=6, window [0 0 1 1 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:33,409 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:33,409 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:33,409 [DEBUG] board coords: [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)]
2025-04-11 19:04:33,409 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:04:33,409 [DEBUG] check_window_intermediate_custom: empty_cells=[(16, 9), (17, 10)]
2025-04-11 19:04:33,409 [DEBUG] check_window_intermediate_custom (only one inserted(16, 9)): For L=6, window [1 1 1 1 0 0] with coords [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)] triggers candidate.
2025-04-11 19:04:33,411 [INFO] Final candidates: [(16, 9), (11, 4)]
2025-04-11 19:04:33,411 [INFO] Phase defense: Collected 1unique candidate(s):[((16, 9), (11, 4))]
2025-04-11 19:04:33,411 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:04:33,411 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:33,501 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:33,501 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:33,501 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(1)), (np.int64(18), np.int64(9)))
2025-04-11 19:04:33,508 [INFO] Final candidates: []
2025-04-11 19:04:33,508 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:33,512 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:33,513 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:33,513 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (11, 4)]
2025-04-11 19:04:33,513 [DEBUG] check_window_intermediate_custom (only one inserted(11, 4)): For L=6, window [0 0 1 1 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:33,513 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:33,513 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:33,513 [DEBUG] board coords: [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)]
2025-04-11 19:04:33,513 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:04:33,513 [DEBUG] check_window_intermediate_custom: empty_cells=[(16, 9), (17, 10)]
2025-04-11 19:04:33,513 [DEBUG] check_window_intermediate_custom (only one inserted(16, 9)): For L=6, window [1 1 1 1 0 0] with coords [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)] triggers candidate.
2025-04-11 19:04:33,515 [INFO] Final candidates: [(16, 9), (11, 4)]
2025-04-11 19:04:33,515 [INFO] Phase defense: Collected 1unique candidate(s):[((16, 9), (11, 4))]
2025-04-11 19:04:33,515 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:04:33,515 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:33,709 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:33,710 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:33,710 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(6)), (np.int64(8), np.int64(5)))
2025-04-11 19:04:33,717 [INFO] Final candidates: []
2025-04-11 19:04:33,717 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:33,721 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:33,721 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:33,721 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (11, 4)]
2025-04-11 19:04:33,721 [DEBUG] check_window_intermediate_custom (only one inserted(11, 4)): For L=6, window [0 0 1 1 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:33,721 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:33,721 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:33,721 [DEBUG] board coords: [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)]
2025-04-11 19:04:33,721 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:04:33,721 [DEBUG] check_window_intermediate_custom: empty_cells=[(16, 9), (17, 10)]
2025-04-11 19:04:33,721 [DEBUG] check_window_intermediate_custom (only one inserted(16, 9)): For L=6, window [1 1 1 1 0 0] with coords [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)] triggers candidate.
2025-04-11 19:04:33,724 [INFO] Final candidates: [(16, 9), (11, 4)]
2025-04-11 19:04:33,724 [INFO] Phase defense: Collected 1unique candidate(s):[((16, 9), (11, 4))]
2025-04-11 19:04:33,724 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:04:33,724 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:33,879 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:33,880 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:33,880 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(1)), (np.int64(15), np.int64(9)))
2025-04-11 19:04:33,887 [INFO] Final candidates: []
2025-04-11 19:04:33,887 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:33,892 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:33,892 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:33,892 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (11, 4)]
2025-04-11 19:04:33,892 [DEBUG] check_window_intermediate_custom (only one inserted(11, 4)): For L=6, window [0 0 1 1 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:33,892 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:33,892 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:33,892 [DEBUG] board coords: [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)]
2025-04-11 19:04:33,892 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:04:33,892 [DEBUG] check_window_intermediate_custom: empty_cells=[(16, 9), (17, 10)]
2025-04-11 19:04:33,892 [DEBUG] check_window_intermediate_custom (only one inserted(16, 9)): For L=6, window [1 1 1 1 0 0] with coords [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)] triggers candidate.
2025-04-11 19:04:33,895 [INFO] Final candidates: [(16, 9), (11, 4)]
2025-04-11 19:04:33,895 [INFO] Phase defense: Collected 1unique candidate(s):[((16, 9), (11, 4))]
2025-04-11 19:04:33,895 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:04:33,895 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:34,025 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:34,026 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:34,026 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(3), np.int64(2)), (np.int64(11), np.int64(6)))
2025-04-11 19:04:34,032 [INFO] Final candidates: []
2025-04-11 19:04:34,032 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:34,037 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:34,037 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:34,037 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (11, 4)]
2025-04-11 19:04:34,037 [DEBUG] check_window_intermediate_custom (only one inserted(11, 4)): For L=6, window [0 0 1 1 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:34,037 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:34,037 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:34,037 [DEBUG] board coords: [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)]
2025-04-11 19:04:34,037 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:04:34,037 [DEBUG] check_window_intermediate_custom: empty_cells=[(16, 9), (17, 10)]
2025-04-11 19:04:34,037 [DEBUG] check_window_intermediate_custom (only one inserted(16, 9)): For L=6, window [1 1 1 1 0 0] with coords [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)] triggers candidate.
2025-04-11 19:04:34,040 [INFO] Final candidates: [(16, 9), (11, 4)]
2025-04-11 19:04:34,040 [INFO] Phase defense: Collected 1unique candidate(s):[((16, 9), (11, 4))]
2025-04-11 19:04:34,040 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:04:34,040 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:34,179 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:34,179 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:34,179 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(17), np.int64(7)), (np.int64(10), np.int64(11)))
2025-04-11 19:04:34,186 [INFO] Final candidates: []
2025-04-11 19:04:34,186 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:34,190 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:34,190 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:34,190 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (11, 4)]
2025-04-11 19:04:34,190 [DEBUG] check_window_intermediate_custom (only one inserted(11, 4)): For L=6, window [0 0 1 1 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:34,190 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:34,190 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:34,190 [DEBUG] board coords: [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)]
2025-04-11 19:04:34,190 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:04:34,190 [DEBUG] check_window_intermediate_custom: empty_cells=[(16, 9), (17, 10)]
2025-04-11 19:04:34,191 [DEBUG] check_window_intermediate_custom (only one inserted(16, 9)): For L=6, window [1 1 1 1 0 0] with coords [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)] triggers candidate.
2025-04-11 19:04:34,193 [INFO] Final candidates: [(16, 9), (11, 4)]
2025-04-11 19:04:34,193 [INFO] Phase defense: Collected 1unique candidate(s):[((16, 9), (11, 4))]
2025-04-11 19:04:34,193 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:04:34,193 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:34,375 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:34,375 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:34,376 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(4)), (np.int64(10), np.int64(11)))
2025-04-11 19:04:34,382 [INFO] Final candidates: []
2025-04-11 19:04:34,382 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:34,386 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:34,386 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:34,386 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (11, 4)]
2025-04-11 19:04:34,387 [DEBUG] check_window_intermediate_custom (only one inserted(11, 4)): For L=6, window [0 0 1 1 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:34,387 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:34,387 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:34,387 [DEBUG] board coords: [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)]
2025-04-11 19:04:34,387 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:04:34,387 [DEBUG] check_window_intermediate_custom: empty_cells=[(16, 9), (17, 10)]
2025-04-11 19:04:34,387 [DEBUG] check_window_intermediate_custom (only one inserted(16, 9)): For L=6, window [1 1 1 1 0 0] with coords [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)] triggers candidate.
2025-04-11 19:04:34,389 [INFO] Final candidates: [(16, 9), (11, 4)]
2025-04-11 19:04:34,389 [INFO] Phase defense: Collected 1unique candidate(s):[((16, 9), (11, 4))]
2025-04-11 19:04:34,389 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:04:34,389 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:34,472 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:34,473 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:34,473 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(9)), (np.int64(8), np.int64(6)))
2025-04-11 19:04:34,475 [DEBUG] board coords: [(8, 9), (9, 9), (10, 9), (11, 9), (12, 9), (13, 9)]
2025-04-11 19:04:34,475 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:34,475 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 9), (10, 9)]
2025-04-11 19:04:34,475 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 0 2 2 2] with coords [(8, 9), (9, 9), (10, 9), (11, 9), (12, 9), (13, 9)] triggers candidate.
2025-04-11 19:04:34,479 [INFO] Final candidates: [(10, 9), (8, 9)]
2025-04-11 19:04:34,479 [INFO] Phase win: Collected 1unique candidate(s):[((10, 9), (8, 9))]
2025-04-11 19:04:34,479 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 19:04:34,484 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:34,484 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:34,484 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (11, 4)]
2025-04-11 19:04:34,484 [DEBUG] check_window_intermediate_custom (only one inserted(11, 4)): For L=6, window [0 0 1 1 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:34,484 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:34,484 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:34,484 [DEBUG] board coords: [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)]
2025-04-11 19:04:34,484 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:04:34,484 [DEBUG] check_window_intermediate_custom: empty_cells=[(16, 9), (17, 10)]
2025-04-11 19:04:34,484 [DEBUG] check_window_intermediate_custom (only one inserted(16, 9)): For L=6, window [1 1 1 1 0 0] with coords [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)] triggers candidate.
2025-04-11 19:04:34,486 [INFO] Final candidates: [(16, 9), (11, 4)]
2025-04-11 19:04:34,486 [INFO] Phase defense: Collected 1unique candidate(s):[((16, 9), (11, 4))]
2025-04-11 19:04:34,486 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:04:34,486 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:34,681 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:34,681 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:34,681 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(10)), (np.int64(9), np.int64(3)))
2025-04-11 19:04:34,685 [DEBUG] board coords: [(8, 2), (9, 3), (10, 4), (11, 5), (12, 6), (13, 7)]
2025-04-11 19:04:34,685 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:04:34,685 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 4), (11, 5)]
2025-04-11 19:04:34,685 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 0 2 2] with coords [(8, 2), (9, 3), (10, 4), (11, 5), (12, 6), (13, 7)] triggers candidate.
2025-04-11 19:04:34,688 [INFO] Final candidates: [(10, 4), (11, 5)]
2025-04-11 19:04:34,688 [INFO] Phase win: Collected 1unique candidate(s):[((10, 4), (11, 5))]
2025-04-11 19:04:34,688 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 19:04:34,692 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:34,692 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:34,692 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (11, 4)]
2025-04-11 19:04:34,692 [DEBUG] check_window_intermediate_custom (only one inserted(11, 4)): For L=6, window [0 0 1 1 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:34,692 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:34,692 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:34,692 [DEBUG] board coords: [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)]
2025-04-11 19:04:34,692 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:04:34,692 [DEBUG] check_window_intermediate_custom: empty_cells=[(16, 9), (17, 10)]
2025-04-11 19:04:34,692 [DEBUG] check_window_intermediate_custom (only one inserted(16, 9)): For L=6, window [1 1 1 1 0 0] with coords [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)] triggers candidate.
2025-04-11 19:04:34,695 [INFO] Final candidates: [(16, 9), (11, 4)]
2025-04-11 19:04:34,695 [INFO] Phase defense: Collected 1unique candidate(s):[((16, 9), (11, 4))]
2025-04-11 19:04:34,695 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:04:34,695 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:34,762 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:34,762 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:34,762 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(6)), (np.int64(8), np.int64(10)))
2025-04-11 19:04:34,769 [INFO] Final candidates: []
2025-04-11 19:04:34,769 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:34,773 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:34,773 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:34,773 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (11, 4)]
2025-04-11 19:04:34,773 [DEBUG] check_window_intermediate_custom (only one inserted(11, 4)): For L=6, window [0 0 1 1 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:34,773 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:34,773 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:34,773 [DEBUG] board coords: [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)]
2025-04-11 19:04:34,773 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:04:34,773 [DEBUG] check_window_intermediate_custom: empty_cells=[(16, 9), (17, 10)]
2025-04-11 19:04:34,773 [DEBUG] check_window_intermediate_custom (only one inserted(16, 9)): For L=6, window [1 1 1 1 0 0] with coords [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)] triggers candidate.
2025-04-11 19:04:34,776 [INFO] Final candidates: [(16, 9), (11, 4)]
2025-04-11 19:04:34,776 [INFO] Phase defense: Collected 1unique candidate(s):[((16, 9), (11, 4))]
2025-04-11 19:04:34,776 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:04:34,776 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:35,039 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:35,040 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:35,040 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(8)), (np.int64(9), np.int64(7)))
2025-04-11 19:04:35,042 [DEBUG] board coords: [(8, 7), (9, 7), (10, 7), (11, 7), (12, 7), (13, 7)]
2025-04-11 19:04:35,042 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:35,042 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 7), (10, 7)]
2025-04-11 19:04:35,042 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 0 2 2 2] with coords [(8, 7), (9, 7), (10, 7), (11, 7), (12, 7), (13, 7)] triggers candidate.
2025-04-11 19:04:35,046 [INFO] Final candidates: [(8, 7), (10, 7)]
2025-04-11 19:04:35,047 [INFO] Phase win: Collected 1unique candidate(s):[((8, 7), (10, 7))]
2025-04-11 19:04:35,047 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 19:04:35,051 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:35,051 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:35,051 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (11, 4)]
2025-04-11 19:04:35,051 [DEBUG] check_window_intermediate_custom (only one inserted(11, 4)): For L=6, window [0 0 1 1 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:35,051 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:35,051 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:35,051 [DEBUG] board coords: [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)]
2025-04-11 19:04:35,051 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:04:35,051 [DEBUG] check_window_intermediate_custom: empty_cells=[(16, 9), (17, 10)]
2025-04-11 19:04:35,051 [DEBUG] check_window_intermediate_custom (only one inserted(16, 9)): For L=6, window [1 1 1 1 0 0] with coords [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)] triggers candidate.
2025-04-11 19:04:35,053 [INFO] Final candidates: [(16, 9), (11, 4)]
2025-04-11 19:04:35,053 [INFO] Phase defense: Collected 1unique candidate(s):[((16, 9), (11, 4))]
2025-04-11 19:04:35,053 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:04:35,053 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:35,165 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:35,166 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:35,166 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(11)), (np.int64(1), np.int64(4)))
2025-04-11 19:04:35,172 [INFO] Final candidates: []
2025-04-11 19:04:35,172 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:35,177 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:35,177 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:35,177 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (11, 4)]
2025-04-11 19:04:35,177 [DEBUG] check_window_intermediate_custom (only one inserted(11, 4)): For L=6, window [0 0 1 1 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:35,177 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:35,177 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:35,177 [DEBUG] board coords: [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)]
2025-04-11 19:04:35,177 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:04:35,177 [DEBUG] check_window_intermediate_custom: empty_cells=[(16, 9), (17, 10)]
2025-04-11 19:04:35,177 [DEBUG] check_window_intermediate_custom (only one inserted(16, 9)): For L=6, window [1 1 1 1 0 0] with coords [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)] triggers candidate.
2025-04-11 19:04:35,179 [INFO] Final candidates: [(16, 9), (11, 4)]
2025-04-11 19:04:35,179 [INFO] Phase defense: Collected 1unique candidate(s):[((16, 9), (11, 4))]
2025-04-11 19:04:35,179 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:04:35,179 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:35,435 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:35,435 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:35,435 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(18), np.int64(3)), (np.int64(14), np.int64(12)))
2025-04-11 19:04:35,442 [INFO] Final candidates: []
2025-04-11 19:04:35,442 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:35,446 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:35,446 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:35,446 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (11, 4)]
2025-04-11 19:04:35,446 [DEBUG] check_window_intermediate_custom (only one inserted(11, 4)): For L=6, window [0 0 1 1 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:35,446 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:35,446 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:35,447 [DEBUG] board coords: [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)]
2025-04-11 19:04:35,447 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:04:35,447 [DEBUG] check_window_intermediate_custom: empty_cells=[(16, 9), (17, 10)]
2025-04-11 19:04:35,447 [DEBUG] check_window_intermediate_custom (only one inserted(16, 9)): For L=6, window [1 1 1 1 0 0] with coords [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)] triggers candidate.
2025-04-11 19:04:35,449 [INFO] Final candidates: [(16, 9), (11, 4)]
2025-04-11 19:04:35,449 [INFO] Phase defense: Collected 1unique candidate(s):[((16, 9), (11, 4))]
2025-04-11 19:04:35,449 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:04:35,449 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:35,587 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:35,588 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:35,588 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(3)), (np.int64(15), np.int64(17)))
2025-04-11 19:04:35,594 [INFO] Final candidates: []
2025-04-11 19:04:35,594 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:35,599 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:35,599 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:35,599 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (11, 4)]
2025-04-11 19:04:35,599 [DEBUG] check_window_intermediate_custom (only one inserted(11, 4)): For L=6, window [0 0 1 1 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:35,599 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:35,599 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:35,599 [DEBUG] board coords: [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)]
2025-04-11 19:04:35,599 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:04:35,599 [DEBUG] check_window_intermediate_custom: empty_cells=[(16, 9), (17, 10)]
2025-04-11 19:04:35,599 [DEBUG] check_window_intermediate_custom (only one inserted(16, 9)): For L=6, window [1 1 1 1 0 0] with coords [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)] triggers candidate.
2025-04-11 19:04:35,601 [INFO] Final candidates: [(16, 9), (11, 4)]
2025-04-11 19:04:35,601 [INFO] Phase defense: Collected 1unique candidate(s):[((16, 9), (11, 4))]
2025-04-11 19:04:35,602 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:04:35,602 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:35,877 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:35,877 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:35,877 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(4)), (np.int64(11), np.int64(17)))
2025-04-11 19:04:35,884 [INFO] Final candidates: []
2025-04-11 19:04:35,884 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:35,889 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:35,889 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:35,889 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (11, 4)]
2025-04-11 19:04:35,889 [DEBUG] check_window_intermediate_custom (only one inserted(11, 4)): For L=6, window [0 0 1 1 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:35,889 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:35,889 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:35,889 [DEBUG] board coords: [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)]
2025-04-11 19:04:35,889 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:04:35,889 [DEBUG] check_window_intermediate_custom: empty_cells=[(16, 9), (17, 10)]
2025-04-11 19:04:35,889 [DEBUG] check_window_intermediate_custom (only one inserted(16, 9)): For L=6, window [1 1 1 1 0 0] with coords [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)] triggers candidate.
2025-04-11 19:04:35,892 [INFO] Final candidates: [(16, 9), (11, 4)]
2025-04-11 19:04:35,892 [INFO] Phase defense: Collected 1unique candidate(s):[((16, 9), (11, 4))]
2025-04-11 19:04:35,892 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:04:35,892 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:36,005 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:36,005 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:36,005 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(18), np.int64(7)), (np.int64(16), np.int64(11)))
2025-04-11 19:04:36,012 [INFO] Final candidates: []
2025-04-11 19:04:36,012 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:36,016 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:36,016 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:36,016 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (11, 4)]
2025-04-11 19:04:36,016 [DEBUG] check_window_intermediate_custom (only one inserted(11, 4)): For L=6, window [0 0 1 1 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:36,016 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:36,016 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:36,016 [DEBUG] board coords: [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)]
2025-04-11 19:04:36,016 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:04:36,017 [DEBUG] check_window_intermediate_custom: empty_cells=[(16, 9), (17, 10)]
2025-04-11 19:04:36,017 [DEBUG] check_window_intermediate_custom (only one inserted(16, 9)): For L=6, window [1 1 1 1 0 0] with coords [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)] triggers candidate.
2025-04-11 19:04:36,019 [INFO] Final candidates: [(16, 9), (11, 4)]
2025-04-11 19:04:36,019 [INFO] Phase defense: Collected 1unique candidate(s):[((16, 9), (11, 4))]
2025-04-11 19:04:36,019 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:04:36,019 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:36,181 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:36,181 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:36,182 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(5)), (np.int64(16), np.int64(5)))
2025-04-11 19:04:36,188 [INFO] Final candidates: []
2025-04-11 19:04:36,188 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:36,193 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:36,193 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:36,193 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (11, 4)]
2025-04-11 19:04:36,193 [DEBUG] check_window_intermediate_custom (only one inserted(11, 4)): For L=6, window [0 0 1 1 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:36,193 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:36,193 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:36,193 [DEBUG] board coords: [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)]
2025-04-11 19:04:36,193 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:04:36,193 [DEBUG] check_window_intermediate_custom: empty_cells=[(16, 9), (17, 10)]
2025-04-11 19:04:36,193 [DEBUG] check_window_intermediate_custom (only one inserted(16, 9)): For L=6, window [1 1 1 1 0 0] with coords [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)] triggers candidate.
2025-04-11 19:04:36,195 [INFO] Final candidates: [(16, 9), (11, 4)]
2025-04-11 19:04:36,195 [INFO] Phase defense: Collected 1unique candidate(s):[((16, 9), (11, 4))]
2025-04-11 19:04:36,195 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:04:36,196 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:36,334 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:36,334 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:36,335 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(17), np.int64(7)), (np.int64(11), np.int64(11)))
2025-04-11 19:04:36,341 [INFO] Final candidates: []
2025-04-11 19:04:36,341 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:36,346 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:36,346 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:36,346 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (11, 4)]
2025-04-11 19:04:36,346 [DEBUG] check_window_intermediate_custom (only one inserted(11, 4)): For L=6, window [0 0 1 1 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:36,346 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:36,346 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:36,346 [DEBUG] board coords: [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)]
2025-04-11 19:04:36,346 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:04:36,346 [DEBUG] check_window_intermediate_custom: empty_cells=[(16, 9), (17, 10)]
2025-04-11 19:04:36,346 [DEBUG] check_window_intermediate_custom (only one inserted(16, 9)): For L=6, window [1 1 1 1 0 0] with coords [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)] triggers candidate.
2025-04-11 19:04:36,348 [INFO] Final candidates: [(16, 9), (11, 4)]
2025-04-11 19:04:36,348 [INFO] Phase defense: Collected 1unique candidate(s):[((16, 9), (11, 4))]
2025-04-11 19:04:36,348 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:04:36,348 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:36,472 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:36,473 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:36,473 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(10)), (np.int64(13), np.int64(11)))
2025-04-11 19:04:36,479 [INFO] Final candidates: []
2025-04-11 19:04:36,479 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:36,484 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:36,484 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:36,484 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (11, 4)]
2025-04-11 19:04:36,484 [DEBUG] check_window_intermediate_custom (only one inserted(11, 4)): For L=6, window [0 0 1 1 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:36,484 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:36,484 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:36,484 [DEBUG] board coords: [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)]
2025-04-11 19:04:36,484 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:04:36,484 [DEBUG] check_window_intermediate_custom: empty_cells=[(16, 9), (17, 10)]
2025-04-11 19:04:36,484 [DEBUG] check_window_intermediate_custom (only one inserted(16, 9)): For L=6, window [1 1 1 1 0 0] with coords [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)] triggers candidate.
2025-04-11 19:04:36,486 [INFO] Final candidates: [(16, 9), (11, 4)]
2025-04-11 19:04:36,486 [INFO] Phase defense: Collected 1unique candidate(s):[((16, 9), (11, 4))]
2025-04-11 19:04:36,486 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:04:36,486 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:36,704 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:36,704 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:36,704 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(3)), (np.int64(16), np.int64(0)))
2025-04-11 19:04:36,711 [INFO] Final candidates: []
2025-04-11 19:04:36,711 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:36,716 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:36,716 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:36,716 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (11, 4)]
2025-04-11 19:04:36,716 [DEBUG] check_window_intermediate_custom (only one inserted(11, 4)): For L=6, window [0 0 1 1 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:36,716 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:36,716 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:36,716 [DEBUG] board coords: [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)]
2025-04-11 19:04:36,716 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:04:36,716 [DEBUG] check_window_intermediate_custom: empty_cells=[(16, 9), (17, 10)]
2025-04-11 19:04:36,716 [DEBUG] check_window_intermediate_custom (only one inserted(16, 9)): For L=6, window [1 1 1 1 0 0] with coords [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)] triggers candidate.
2025-04-11 19:04:36,718 [INFO] Final candidates: [(16, 9), (11, 4)]
2025-04-11 19:04:36,718 [INFO] Phase defense: Collected 1unique candidate(s):[((16, 9), (11, 4))]
2025-04-11 19:04:36,718 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:04:36,718 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:36,831 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:36,831 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:36,831 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(5)), (np.int64(11), np.int64(8)))
2025-04-11 19:04:36,838 [INFO] Final candidates: []
2025-04-11 19:04:36,838 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:36,844 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:36,844 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:36,844 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (11, 4)]
2025-04-11 19:04:36,844 [DEBUG] check_window_intermediate_custom (only one inserted(11, 4)): For L=6, window [0 0 1 1 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:36,844 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:36,844 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:36,844 [DEBUG] board coords: [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)]
2025-04-11 19:04:36,844 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:04:36,844 [DEBUG] check_window_intermediate_custom: empty_cells=[(16, 9), (17, 10)]
2025-04-11 19:04:36,844 [DEBUG] check_window_intermediate_custom (only one inserted(16, 9)): For L=6, window [1 1 1 1 0 0] with coords [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)] triggers candidate.
2025-04-11 19:04:36,847 [INFO] Final candidates: [(16, 9), (11, 4)]
2025-04-11 19:04:36,847 [INFO] Phase defense: Collected 1unique candidate(s):[((16, 9), (11, 4))]
2025-04-11 19:04:36,847 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:04:36,847 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:36,862 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:36,862 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:36,862 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(18)), (np.int64(8), np.int64(10)))
2025-04-11 19:04:36,869 [INFO] Final candidates: []
2025-04-11 19:04:36,869 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:36,873 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:36,873 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:36,873 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (11, 4)]
2025-04-11 19:04:36,873 [DEBUG] check_window_intermediate_custom (only one inserted(11, 4)): For L=6, window [0 0 1 1 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:36,874 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:36,874 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:36,874 [DEBUG] board coords: [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)]
2025-04-11 19:04:36,874 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:04:36,874 [DEBUG] check_window_intermediate_custom: empty_cells=[(16, 9), (17, 10)]
2025-04-11 19:04:36,874 [DEBUG] check_window_intermediate_custom (only one inserted(16, 9)): For L=6, window [1 1 1 1 0 0] with coords [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)] triggers candidate.
2025-04-11 19:04:36,876 [INFO] Final candidates: [(16, 9), (11, 4)]
2025-04-11 19:04:36,876 [INFO] Phase defense: Collected 1unique candidate(s):[((16, 9), (11, 4))]
2025-04-11 19:04:36,876 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:04:36,876 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:37,111 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:37,111 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:37,112 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(1)), (np.int64(10), np.int64(12)))
2025-04-11 19:04:37,118 [INFO] Final candidates: []
2025-04-11 19:04:37,118 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:37,122 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:37,122 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:37,123 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (11, 4)]
2025-04-11 19:04:37,123 [DEBUG] check_window_intermediate_custom (only one inserted(11, 4)): For L=6, window [0 0 1 1 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:37,123 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:37,123 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:37,123 [DEBUG] board coords: [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)]
2025-04-11 19:04:37,123 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:04:37,123 [DEBUG] check_window_intermediate_custom: empty_cells=[(16, 9), (17, 10)]
2025-04-11 19:04:37,123 [DEBUG] check_window_intermediate_custom (only one inserted(16, 9)): For L=6, window [1 1 1 1 0 0] with coords [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)] triggers candidate.
2025-04-11 19:04:37,125 [INFO] Final candidates: [(16, 9), (11, 4)]
2025-04-11 19:04:37,125 [INFO] Phase defense: Collected 1unique candidate(s):[((16, 9), (11, 4))]
2025-04-11 19:04:37,125 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:04:37,125 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:37,130 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:37,131 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:37,131 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(10)), (np.int64(2), np.int64(3)))
2025-04-11 19:04:37,137 [INFO] Final candidates: []
2025-04-11 19:04:37,137 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:37,141 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:37,142 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:37,142 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (11, 4)]
2025-04-11 19:04:37,142 [DEBUG] check_window_intermediate_custom (only one inserted(11, 4)): For L=6, window [0 0 1 1 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:37,142 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:37,142 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:37,142 [DEBUG] board coords: [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)]
2025-04-11 19:04:37,142 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:04:37,142 [DEBUG] check_window_intermediate_custom: empty_cells=[(16, 9), (17, 10)]
2025-04-11 19:04:37,142 [DEBUG] check_window_intermediate_custom (only one inserted(16, 9)): For L=6, window [1 1 1 1 0 0] with coords [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)] triggers candidate.
2025-04-11 19:04:37,144 [INFO] Final candidates: [(16, 9), (11, 4)]
2025-04-11 19:04:37,144 [INFO] Phase defense: Collected 1unique candidate(s):[((16, 9), (11, 4))]
2025-04-11 19:04:37,144 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:04:37,144 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:37,334 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:37,334 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:37,334 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(6)), (np.int64(15), np.int64(17)))
2025-04-11 19:04:37,341 [INFO] Final candidates: []
2025-04-11 19:04:37,341 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:37,345 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:37,345 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:37,345 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (11, 4)]
2025-04-11 19:04:37,345 [DEBUG] check_window_intermediate_custom (only one inserted(11, 4)): For L=6, window [0 0 1 1 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:37,345 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:37,346 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:37,346 [DEBUG] board coords: [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)]
2025-04-11 19:04:37,346 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:04:37,346 [DEBUG] check_window_intermediate_custom: empty_cells=[(16, 9), (17, 10)]
2025-04-11 19:04:37,346 [DEBUG] check_window_intermediate_custom (only one inserted(16, 9)): For L=6, window [1 1 1 1 0 0] with coords [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)] triggers candidate.
2025-04-11 19:04:37,348 [INFO] Final candidates: [(16, 9), (11, 4)]
2025-04-11 19:04:37,348 [INFO] Phase defense: Collected 1unique candidate(s):[((16, 9), (11, 4))]
2025-04-11 19:04:37,348 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:04:37,348 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:37,435 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:37,436 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:37,436 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(18), np.int64(0)), (np.int64(11), np.int64(18)))
2025-04-11 19:04:37,442 [INFO] Final candidates: []
2025-04-11 19:04:37,443 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:37,447 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:37,447 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:37,447 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (11, 4)]
2025-04-11 19:04:37,447 [DEBUG] check_window_intermediate_custom (only one inserted(11, 4)): For L=6, window [0 0 1 1 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:37,447 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:37,447 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:37,447 [DEBUG] board coords: [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)]
2025-04-11 19:04:37,447 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:04:37,447 [DEBUG] check_window_intermediate_custom: empty_cells=[(16, 9), (17, 10)]
2025-04-11 19:04:37,447 [DEBUG] check_window_intermediate_custom (only one inserted(16, 9)): For L=6, window [1 1 1 1 0 0] with coords [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)] triggers candidate.
2025-04-11 19:04:37,450 [INFO] Final candidates: [(16, 9), (11, 4)]
2025-04-11 19:04:37,450 [INFO] Phase defense: Collected 1unique candidate(s):[((16, 9), (11, 4))]
2025-04-11 19:04:37,450 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:04:37,450 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:37,566 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:37,566 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:37,566 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(2), np.int64(3)), (np.int64(9), np.int64(11)))
2025-04-11 19:04:37,573 [INFO] Final candidates: []
2025-04-11 19:04:37,573 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:37,577 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:37,577 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:37,577 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (11, 4)]
2025-04-11 19:04:37,577 [DEBUG] check_window_intermediate_custom (only one inserted(11, 4)): For L=6, window [0 0 1 1 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:37,577 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:37,577 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:37,577 [DEBUG] board coords: [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)]
2025-04-11 19:04:37,577 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:04:37,577 [DEBUG] check_window_intermediate_custom: empty_cells=[(16, 9), (17, 10)]
2025-04-11 19:04:37,577 [DEBUG] check_window_intermediate_custom (only one inserted(16, 9)): For L=6, window [1 1 1 1 0 0] with coords [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)] triggers candidate.
2025-04-11 19:04:37,580 [INFO] Final candidates: [(16, 9), (11, 4)]
2025-04-11 19:04:37,580 [INFO] Phase defense: Collected 1unique candidate(s):[((16, 9), (11, 4))]
2025-04-11 19:04:37,580 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:04:37,580 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:37,681 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:37,682 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:37,682 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(11)), (np.int64(13), np.int64(15)))
2025-04-11 19:04:37,689 [INFO] Final candidates: []
2025-04-11 19:04:37,689 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:37,693 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:37,693 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:37,693 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (11, 4)]
2025-04-11 19:04:37,693 [DEBUG] check_window_intermediate_custom (only one inserted(11, 4)): For L=6, window [0 0 1 1 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:37,693 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:37,693 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:37,694 [DEBUG] board coords: [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)]
2025-04-11 19:04:37,694 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:04:37,694 [DEBUG] check_window_intermediate_custom: empty_cells=[(16, 9), (17, 10)]
2025-04-11 19:04:37,694 [DEBUG] check_window_intermediate_custom (only one inserted(16, 9)): For L=6, window [1 1 1 1 0 0] with coords [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)] triggers candidate.
2025-04-11 19:04:37,696 [INFO] Final candidates: [(16, 9), (11, 4)]
2025-04-11 19:04:37,696 [INFO] Phase defense: Collected 1unique candidate(s):[((16, 9), (11, 4))]
2025-04-11 19:04:37,696 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:04:37,696 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:37,816 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:37,816 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:37,816 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(5)), (np.int64(18), np.int64(0)))
2025-04-11 19:04:37,823 [INFO] Final candidates: []
2025-04-11 19:04:37,823 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:37,827 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:37,827 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:37,827 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (11, 4)]
2025-04-11 19:04:37,827 [DEBUG] check_window_intermediate_custom (only one inserted(11, 4)): For L=6, window [0 0 1 1 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:37,827 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:37,827 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:37,827 [DEBUG] board coords: [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)]
2025-04-11 19:04:37,827 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:04:37,827 [DEBUG] check_window_intermediate_custom: empty_cells=[(16, 9), (17, 10)]
2025-04-11 19:04:37,827 [DEBUG] check_window_intermediate_custom (only one inserted(16, 9)): For L=6, window [1 1 1 1 0 0] with coords [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)] triggers candidate.
2025-04-11 19:04:37,830 [INFO] Final candidates: [(16, 9), (11, 4)]
2025-04-11 19:04:37,830 [INFO] Phase defense: Collected 1unique candidate(s):[((16, 9), (11, 4))]
2025-04-11 19:04:37,830 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:04:37,830 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:37,975 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:37,975 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:37,975 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(8)), (np.int64(15), np.int64(10)))
2025-04-11 19:04:37,982 [INFO] Final candidates: []
2025-04-11 19:04:37,982 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:37,986 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:37,986 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:37,986 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (11, 4)]
2025-04-11 19:04:37,986 [DEBUG] check_window_intermediate_custom (only one inserted(11, 4)): For L=6, window [0 0 1 1 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:37,987 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:37,987 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:37,987 [DEBUG] board coords: [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)]
2025-04-11 19:04:37,987 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:04:37,987 [DEBUG] check_window_intermediate_custom: empty_cells=[(16, 9), (17, 10)]
2025-04-11 19:04:37,987 [DEBUG] check_window_intermediate_custom (only one inserted(16, 9)): For L=6, window [1 1 1 1 0 0] with coords [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)] triggers candidate.
2025-04-11 19:04:37,989 [INFO] Final candidates: [(16, 9), (11, 4)]
2025-04-11 19:04:37,989 [INFO] Phase defense: Collected 1unique candidate(s):[((16, 9), (11, 4))]
2025-04-11 19:04:37,989 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:04:37,989 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:38,034 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:38,034 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:38,034 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(7)), (np.int64(15), np.int64(12)))
2025-04-11 19:04:38,041 [INFO] Final candidates: []
2025-04-11 19:04:38,041 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:38,045 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:38,046 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:38,046 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (11, 4)]
2025-04-11 19:04:38,046 [DEBUG] check_window_intermediate_custom (only one inserted(11, 4)): For L=6, window [0 0 1 1 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:38,046 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:38,046 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:38,046 [DEBUG] board coords: [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)]
2025-04-11 19:04:38,046 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:04:38,046 [DEBUG] check_window_intermediate_custom: empty_cells=[(16, 9), (17, 10)]
2025-04-11 19:04:38,046 [DEBUG] check_window_intermediate_custom (only one inserted(16, 9)): For L=6, window [1 1 1 1 0 0] with coords [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)] triggers candidate.
2025-04-11 19:04:38,048 [INFO] Final candidates: [(16, 9), (11, 4)]
2025-04-11 19:04:38,048 [INFO] Phase defense: Collected 1unique candidate(s):[((16, 9), (11, 4))]
2025-04-11 19:04:38,048 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:04:38,048 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:38,309 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:38,309 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:38,309 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(16)), (np.int64(0), np.int64(3)))
2025-04-11 19:04:38,316 [INFO] Final candidates: []
2025-04-11 19:04:38,316 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:38,320 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:38,320 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:38,320 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (11, 4)]
2025-04-11 19:04:38,320 [DEBUG] check_window_intermediate_custom (only one inserted(11, 4)): For L=6, window [0 0 1 1 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:38,320 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:38,320 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:38,320 [DEBUG] board coords: [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)]
2025-04-11 19:04:38,320 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:04:38,320 [DEBUG] check_window_intermediate_custom: empty_cells=[(16, 9), (17, 10)]
2025-04-11 19:04:38,320 [DEBUG] check_window_intermediate_custom (only one inserted(16, 9)): For L=6, window [1 1 1 1 0 0] with coords [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)] triggers candidate.
2025-04-11 19:04:38,323 [INFO] Final candidates: [(16, 9), (11, 4)]
2025-04-11 19:04:38,323 [INFO] Phase defense: Collected 1unique candidate(s):[((16, 9), (11, 4))]
2025-04-11 19:04:38,323 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:04:38,323 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:38,347 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:38,347 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:38,347 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(2), np.int64(3)), (np.int64(11), np.int64(10)))
2025-04-11 19:04:38,354 [INFO] Final candidates: []
2025-04-11 19:04:38,354 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:38,358 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:38,358 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:38,358 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (11, 4)]
2025-04-11 19:04:38,358 [DEBUG] check_window_intermediate_custom (only one inserted(11, 4)): For L=6, window [0 0 1 1 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:38,358 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:38,358 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:38,358 [DEBUG] board coords: [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)]
2025-04-11 19:04:38,358 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:04:38,358 [DEBUG] check_window_intermediate_custom: empty_cells=[(16, 9), (17, 10)]
2025-04-11 19:04:38,358 [DEBUG] check_window_intermediate_custom (only one inserted(16, 9)): For L=6, window [1 1 1 1 0 0] with coords [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)] triggers candidate.
2025-04-11 19:04:38,361 [INFO] Final candidates: [(16, 9), (11, 4)]
2025-04-11 19:04:38,361 [INFO] Phase defense: Collected 1unique candidate(s):[((16, 9), (11, 4))]
2025-04-11 19:04:38,361 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:04:38,361 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:38,417 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:38,418 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:38,418 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(12)), (np.int64(11), np.int64(11)))
2025-04-11 19:04:38,424 [INFO] Final candidates: []
2025-04-11 19:04:38,424 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:38,429 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:38,429 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:38,429 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (11, 4)]
2025-04-11 19:04:38,429 [DEBUG] check_window_intermediate_custom (only one inserted(11, 4)): For L=6, window [0 0 1 1 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:38,429 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:38,429 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:38,429 [DEBUG] board coords: [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)]
2025-04-11 19:04:38,429 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:04:38,429 [DEBUG] check_window_intermediate_custom: empty_cells=[(16, 9), (17, 10)]
2025-04-11 19:04:38,429 [DEBUG] check_window_intermediate_custom (only one inserted(16, 9)): For L=6, window [1 1 1 1 0 0] with coords [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)] triggers candidate.
2025-04-11 19:04:38,431 [INFO] Final candidates: [(16, 9), (11, 4)]
2025-04-11 19:04:38,431 [INFO] Phase defense: Collected 1unique candidate(s):[((16, 9), (11, 4))]
2025-04-11 19:04:38,431 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:04:38,432 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:38,449 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:38,449 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:38,450 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(12)), (np.int64(9), np.int64(4)))
2025-04-11 19:04:38,456 [INFO] Final candidates: []
2025-04-11 19:04:38,456 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:38,461 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:38,461 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:38,461 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (11, 4)]
2025-04-11 19:04:38,461 [DEBUG] check_window_intermediate_custom (only one inserted(11, 4)): For L=6, window [0 0 1 1 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:38,461 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:38,461 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:38,461 [DEBUG] board coords: [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)]
2025-04-11 19:04:38,461 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:04:38,461 [DEBUG] check_window_intermediate_custom: empty_cells=[(16, 9), (17, 10)]
2025-04-11 19:04:38,461 [DEBUG] check_window_intermediate_custom (only one inserted(16, 9)): For L=6, window [1 1 1 1 0 0] with coords [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)] triggers candidate.
2025-04-11 19:04:38,463 [INFO] Final candidates: [(16, 9), (11, 4)]
2025-04-11 19:04:38,463 [INFO] Phase defense: Collected 1unique candidate(s):[((16, 9), (11, 4))]
2025-04-11 19:04:38,463 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:04:38,463 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:38,678 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:38,678 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:38,678 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(8)), (np.int64(16), np.int64(7)))
2025-04-11 19:04:38,685 [INFO] Final candidates: []
2025-04-11 19:04:38,685 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:38,689 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:38,689 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:38,689 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (11, 4)]
2025-04-11 19:04:38,689 [DEBUG] check_window_intermediate_custom (only one inserted(11, 4)): For L=6, window [0 0 1 1 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:38,689 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:38,689 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:38,689 [DEBUG] board coords: [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)]
2025-04-11 19:04:38,689 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:04:38,689 [DEBUG] check_window_intermediate_custom: empty_cells=[(16, 9), (17, 10)]
2025-04-11 19:04:38,689 [DEBUG] check_window_intermediate_custom (only one inserted(16, 9)): For L=6, window [1 1 1 1 0 0] with coords [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)] triggers candidate.
2025-04-11 19:04:38,692 [INFO] Final candidates: [(16, 9), (11, 4)]
2025-04-11 19:04:38,692 [INFO] Phase defense: Collected 1unique candidate(s):[((16, 9), (11, 4))]
2025-04-11 19:04:38,692 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:04:38,692 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:38,721 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:38,721 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:38,721 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(10)), (np.int64(18), np.int64(0)))
2025-04-11 19:04:38,735 [INFO] Final candidates: []
2025-04-11 19:04:38,736 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:38,744 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:38,744 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:38,744 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (11, 4)]
2025-04-11 19:04:38,744 [DEBUG] check_window_intermediate_custom (only one inserted(11, 4)): For L=6, window [0 0 1 1 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:38,744 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:38,744 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:38,744 [DEBUG] board coords: [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)]
2025-04-11 19:04:38,744 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:04:38,744 [DEBUG] check_window_intermediate_custom: empty_cells=[(16, 9), (17, 10)]
2025-04-11 19:04:38,744 [DEBUG] check_window_intermediate_custom (only one inserted(16, 9)): For L=6, window [1 1 1 1 0 0] with coords [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)] triggers candidate.
2025-04-11 19:04:38,747 [INFO] Final candidates: [(16, 9), (11, 4)]
2025-04-11 19:04:38,747 [INFO] Phase defense: Collected 1unique candidate(s):[((16, 9), (11, 4))]
2025-04-11 19:04:38,747 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:04:38,747 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,024 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:39,024 [INFO] MCTS: Search finished. Best move selected with 2 visits.
2025-04-11 19:04:39,024 [INFO] Phase 2 (defense): MCTS selected move: ((12, 5), (np.int64(10), np.int64(5)))
2025-04-11 19:04:39,024 [INFO] Phase 2 (defense): MCTS selected move string : F13,F11
2025-04-11 19:04:39,024 [INFO] MCTS (defense candidates) selected move: F13,F11
2025-04-11 19:04:39,284 [INFO] Starting pre-MCTS candidate collection.
2025-04-11 19:04:39,291 [INFO] Final candidates: []
2025-04-11 19:04:39,291 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:39,293 [DEBUG] board coords: [(7, 7), (8, 7), (9, 7), (10, 7), (11, 7), (12, 7)]
2025-04-11 19:04:39,293 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:39,293 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 7), (8, 7)]
2025-04-11 19:04:39,293 [DEBUG] check_window_intermediate_custom (only one inserted(8, 7)): For L=6, window [0 0 2 2 2 2] with coords [(7, 7), (8, 7), (9, 7), (10, 7), (11, 7), (12, 7)] triggers candidate.
2025-04-11 19:04:39,298 [INFO] Final candidates: [(8, 7)]
2025-04-11 19:04:39,298 [INFO] Phase defense: Found only one candidate: (8, 7)
2025-04-11 19:04:39,298 [INFO] Phase defense: Collected 10unique candidate(s):[((8, 7), (np.int64(8), np.int64(8))), ((8, 7), (np.int64(6), np.int64(7))), ((8, 7), (np.int64(9), np.int64(6))), ((8, 7), (np.int64(8), np.int64(5))), ((8, 7), (np.int64(8), np.int64(9))), ((8, 7), (np.int64(9), np.int64(8))), ((8, 7), (np.int64(7), np.int64(7))), ((8, 7), (np.int64(8), np.int64(6))), ((8, 7), (np.int64(7), np.int64(6))), ((8, 7), (np.int64(7), np.int64(8)))]
2025-04-11 19:04:39,298 [INFO] Phase 2 (defense): 10 candidate(s) found.
2025-04-11 19:04:39,298 [INFO] MCTS: Starting search for 100 iterations.
2025-04-11 19:04:39,298 [DEBUG] Tree_policy iteration 1: Expanding move ((8, 7), (np.int64(8), np.int64(9)))
2025-04-11 19:04:39,300 [DEBUG] board coords: [(6, 7), (7, 7), (8, 7), (9, 7), (10, 7), (11, 7)]
2025-04-11 19:04:39,300 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:39,300 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 7), (7, 7)]
2025-04-11 19:04:39,300 [DEBUG] check_window_intermediate_custom (only one inserted(7, 7)): For L=6, window [0 0 2 2 2 2] with coords [(6, 7), (7, 7), (8, 7), (9, 7), (10, 7), (11, 7)] triggers candidate.
2025-04-11 19:04:39,301 [DEBUG] board coords: [(8, 9), (9, 9), (10, 9), (11, 9), (12, 9), (13, 9)]
2025-04-11 19:04:39,301 [DEBUG] board values[np.int64(2), np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:39,301 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 9), (10, 9)]
2025-04-11 19:04:39,301 [DEBUG] check_window_intermediate_custom: For L=6, window [2 0 0 2 2 2] with coords [(8, 9), (9, 9), (10, 9), (11, 9), (12, 9), (13, 9)] triggers candidate.
2025-04-11 19:04:39,305 [INFO] Final candidates: [(10, 9), (7, 7), (9, 9)]
2025-04-11 19:04:39,305 [INFO] Phase win: Collected 3unique candidate(s):[((10, 9), (9, 9)), ((7, 7), (9, 9)), ((10, 9), (7, 7))]
2025-04-11 19:04:39,305 [INFO] Phase 1 (immediate win): 3 candidate(s) found.
2025-04-11 19:04:39,311 [INFO] Final candidates: []
2025-04-11 19:04:39,311 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:39,312 [DEBUG] MCTS iteration 0: reached a node with 0 visits.
2025-04-11 19:04:39,312 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,312 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,313 [DEBUG] Tree_policy iteration 1: Expanding move ((8, 7), (np.int64(8), np.int64(6)))
2025-04-11 19:04:39,315 [DEBUG] board coords: [(6, 7), (7, 7), (8, 7), (9, 7), (10, 7), (11, 7)]
2025-04-11 19:04:39,315 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:39,315 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 7), (7, 7)]
2025-04-11 19:04:39,315 [DEBUG] check_window_intermediate_custom (only one inserted(7, 7)): For L=6, window [0 0 2 2 2 2] with coords [(6, 7), (7, 7), (8, 7), (9, 7), (10, 7), (11, 7)] triggers candidate.
2025-04-11 19:04:39,319 [INFO] Final candidates: [(7, 7)]
2025-04-11 19:04:39,319 [INFO] Phase win: Found only one candidate: (7, 7)
2025-04-11 19:04:39,319 [INFO] Phase win: Collected 9unique candidate(s):[((7, 7), (np.int64(6), np.int64(8))), ((7, 7), (np.int64(6), np.int64(7))), ((7, 7), (np.int64(7), np.int64(6))), ((7, 7), (np.int64(7), np.int64(8))), ((7, 7), (np.int64(8), np.int64(8))), ((7, 7), (np.int64(6), np.int64(6))), ((7, 7), (np.int64(5), np.int64(7))), ((7, 7), (np.int64(7), np.int64(5))), ((7, 7), (np.int64(7), np.int64(9)))]
2025-04-11 19:04:39,319 [INFO] Phase 1 (immediate win): 9 candidate(s) found.
2025-04-11 19:04:39,326 [INFO] Final candidates: []
2025-04-11 19:04:39,326 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:39,327 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,327 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,327 [DEBUG] Tree_policy iteration 1: Expanding move ((8, 7), (np.int64(8), np.int64(5)))
2025-04-11 19:04:39,329 [DEBUG] board coords: [(6, 7), (7, 7), (8, 7), (9, 7), (10, 7), (11, 7)]
2025-04-11 19:04:39,329 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:39,329 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 7), (7, 7)]
2025-04-11 19:04:39,329 [DEBUG] check_window_intermediate_custom (only one inserted(7, 7)): For L=6, window [0 0 2 2 2 2] with coords [(6, 7), (7, 7), (8, 7), (9, 7), (10, 7), (11, 7)] triggers candidate.
2025-04-11 19:04:39,334 [INFO] Final candidates: [(7, 7)]
2025-04-11 19:04:39,334 [INFO] Phase win: Found only one candidate: (7, 7)
2025-04-11 19:04:39,334 [INFO] Phase win: Collected 10unique candidate(s):[((7, 7), (np.int64(8), np.int64(6))), ((7, 7), (np.int64(6), np.int64(8))), ((7, 7), (np.int64(6), np.int64(7))), ((7, 7), (np.int64(7), np.int64(6))), ((7, 7), (np.int64(7), np.int64(8))), ((7, 7), (np.int64(8), np.int64(8))), ((7, 7), (np.int64(6), np.int64(6))), ((7, 7), (np.int64(5), np.int64(7))), ((7, 7), (np.int64(7), np.int64(5))), ((7, 7), (np.int64(7), np.int64(9)))]
2025-04-11 19:04:39,334 [INFO] Phase 1 (immediate win): 10 candidate(s) found.
2025-04-11 19:04:39,341 [INFO] Final candidates: []
2025-04-11 19:04:39,341 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:39,342 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,342 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,342 [DEBUG] Tree_policy iteration 1: Expanding move ((8, 7), (np.int64(7), np.int64(7)))
2025-04-11 19:04:39,344 [DEBUG] board coords: [(5, 7), (6, 7), (7, 7), (8, 7), (9, 7), (10, 7)]
2025-04-11 19:04:39,344 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:39,344 [DEBUG] check_window_intermediate_custom: empty_cells=[(5, 7), (6, 7)]
2025-04-11 19:04:39,344 [DEBUG] check_window_intermediate_custom (only one inserted(6, 7)): For L=6, window [0 0 2 2 2 2] with coords [(5, 7), (6, 7), (7, 7), (8, 7), (9, 7), (10, 7)] triggers candidate.
2025-04-11 19:04:39,349 [INFO] Final candidates: [(6, 7)]
2025-04-11 19:04:39,349 [INFO] Phase win: Found only one candidate: (6, 7)
2025-04-11 19:04:39,349 [INFO] Phase win: Collected 10unique candidate(s):[((6, 7), (np.int64(7), np.int64(8))), ((6, 7), (np.int64(6), np.int64(5))), ((6, 7), (np.int64(4), np.int64(7))), ((6, 7), (np.int64(6), np.int64(9))), ((6, 7), (np.int64(6), np.int64(6))), ((6, 7), (np.int64(5), np.int64(7))), ((6, 7), (np.int64(5), np.int64(6))), ((6, 7), (np.int64(5), np.int64(8))), ((6, 7), (np.int64(6), np.int64(8))), ((6, 7), (np.int64(7), np.int64(6)))]
2025-04-11 19:04:39,349 [INFO] Phase 1 (immediate win): 10 candidate(s) found.
2025-04-11 19:04:39,355 [INFO] Final candidates: []
2025-04-11 19:04:39,355 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:39,356 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,356 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,356 [DEBUG] Tree_policy iteration 1: Expanding move ((8, 7), (np.int64(9), np.int64(6)))
2025-04-11 19:04:39,359 [DEBUG] board coords: [(9, 6), (10, 6), (11, 6), (12, 6), (13, 6), (14, 6)]
2025-04-11 19:04:39,359 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(0), np.int64(2)]
2025-04-11 19:04:39,359 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (13, 6)]
2025-04-11 19:04:39,359 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 0 2] with coords [(9, 6), (10, 6), (11, 6), (12, 6), (13, 6), (14, 6)] triggers candidate.
2025-04-11 19:04:39,359 [DEBUG] board coords: [(6, 7), (7, 7), (8, 7), (9, 7), (10, 7), (11, 7)]
2025-04-11 19:04:39,359 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:39,359 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 7), (7, 7)]
2025-04-11 19:04:39,359 [DEBUG] check_window_intermediate_custom (only one inserted(7, 7)): For L=6, window [0 0 2 2 2 2] with coords [(6, 7), (7, 7), (8, 7), (9, 7), (10, 7), (11, 7)] triggers candidate.
2025-04-11 19:04:39,363 [INFO] Final candidates: [(7, 7), (13, 6), (11, 6)]
2025-04-11 19:04:39,363 [INFO] Phase win: Collected 3unique candidate(s):[((13, 6), (11, 6)), ((7, 7), (11, 6)), ((7, 7), (13, 6))]
2025-04-11 19:04:39,363 [INFO] Phase 1 (immediate win): 3 candidate(s) found.
2025-04-11 19:04:39,370 [INFO] Final candidates: []
2025-04-11 19:04:39,370 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:39,371 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,371 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,371 [DEBUG] Tree_policy iteration 1: Expanding move ((8, 7), (np.int64(6), np.int64(7)))
2025-04-11 19:04:39,373 [DEBUG] board coords: [(5, 7), (6, 7), (7, 7), (8, 7), (9, 7), (10, 7)]
2025-04-11 19:04:39,373 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:39,373 [DEBUG] check_window_intermediate_custom: empty_cells=[(5, 7), (7, 7)]
2025-04-11 19:04:39,373 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 0 2 2 2] with coords [(5, 7), (6, 7), (7, 7), (8, 7), (9, 7), (10, 7)] triggers candidate.
2025-04-11 19:04:39,378 [INFO] Final candidates: [(7, 7), (5, 7)]
2025-04-11 19:04:39,378 [INFO] Phase win: Collected 1unique candidate(s):[((7, 7), (5, 7))]
2025-04-11 19:04:39,378 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 19:04:39,385 [INFO] Final candidates: []
2025-04-11 19:04:39,385 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:39,386 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,386 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,386 [DEBUG] Tree_policy iteration 1: Expanding move ((8, 7), (np.int64(7), np.int64(8)))
2025-04-11 19:04:39,388 [DEBUG] board coords: [(6, 7), (7, 7), (8, 7), (9, 7), (10, 7), (11, 7)]
2025-04-11 19:04:39,388 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:39,388 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 7), (7, 7)]
2025-04-11 19:04:39,388 [DEBUG] check_window_intermediate_custom (only one inserted(7, 7)): For L=6, window [0 0 2 2 2 2] with coords [(6, 7), (7, 7), (8, 7), (9, 7), (10, 7), (11, 7)] triggers candidate.
2025-04-11 19:04:39,393 [INFO] Final candidates: [(7, 7)]
2025-04-11 19:04:39,393 [INFO] Phase win: Found only one candidate: (7, 7)
2025-04-11 19:04:39,393 [INFO] Phase win: Collected 9unique candidate(s):[((7, 7), (np.int64(8), np.int64(6))), ((7, 7), (np.int64(6), np.int64(8))), ((7, 7), (np.int64(6), np.int64(7))), ((7, 7), (np.int64(7), np.int64(6))), ((7, 7), (np.int64(8), np.int64(8))), ((7, 7), (np.int64(6), np.int64(6))), ((7, 7), (np.int64(5), np.int64(7))), ((7, 7), (np.int64(7), np.int64(5))), ((7, 7), (np.int64(7), np.int64(9)))]
2025-04-11 19:04:39,393 [INFO] Phase 1 (immediate win): 9 candidate(s) found.
2025-04-11 19:04:39,399 [INFO] Final candidates: []
2025-04-11 19:04:39,399 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:39,400 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,400 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,400 [DEBUG] Tree_policy iteration 1: Expanding move ((8, 7), (np.int64(7), np.int64(6)))
2025-04-11 19:04:39,403 [DEBUG] board coords: [(6, 7), (7, 7), (8, 7), (9, 7), (10, 7), (11, 7)]
2025-04-11 19:04:39,403 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:39,403 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 7), (7, 7)]
2025-04-11 19:04:39,403 [DEBUG] check_window_intermediate_custom (only one inserted(7, 7)): For L=6, window [0 0 2 2 2 2] with coords [(6, 7), (7, 7), (8, 7), (9, 7), (10, 7), (11, 7)] triggers candidate.
2025-04-11 19:04:39,407 [INFO] Final candidates: [(7, 7)]
2025-04-11 19:04:39,407 [INFO] Phase win: Found only one candidate: (7, 7)
2025-04-11 19:04:39,407 [INFO] Phase win: Collected 9unique candidate(s):[((7, 7), (np.int64(8), np.int64(6))), ((7, 7), (np.int64(6), np.int64(8))), ((7, 7), (np.int64(6), np.int64(7))), ((7, 7), (np.int64(7), np.int64(8))), ((7, 7), (np.int64(8), np.int64(8))), ((7, 7), (np.int64(6), np.int64(6))), ((7, 7), (np.int64(5), np.int64(7))), ((7, 7), (np.int64(7), np.int64(5))), ((7, 7), (np.int64(7), np.int64(9)))]
2025-04-11 19:04:39,407 [INFO] Phase 1 (immediate win): 9 candidate(s) found.
2025-04-11 19:04:39,414 [INFO] Final candidates: []
2025-04-11 19:04:39,414 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:39,414 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,415 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,415 [DEBUG] Tree_policy iteration 1: Expanding move ((8, 7), (np.int64(9), np.int64(8)))
2025-04-11 19:04:39,417 [DEBUG] board coords: [(6, 7), (7, 7), (8, 7), (9, 7), (10, 7), (11, 7)]
2025-04-11 19:04:39,417 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:39,417 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 7), (7, 7)]
2025-04-11 19:04:39,417 [DEBUG] check_window_intermediate_custom (only one inserted(7, 7)): For L=6, window [0 0 2 2 2 2] with coords [(6, 7), (7, 7), (8, 7), (9, 7), (10, 7), (11, 7)] triggers candidate.
2025-04-11 19:04:39,422 [INFO] Final candidates: [(7, 7)]
2025-04-11 19:04:39,422 [INFO] Phase win: Found only one candidate: (7, 7)
2025-04-11 19:04:39,422 [INFO] Phase win: Collected 10unique candidate(s):[((7, 7), (np.int64(8), np.int64(6))), ((7, 7), (np.int64(6), np.int64(8))), ((7, 7), (np.int64(6), np.int64(7))), ((7, 7), (np.int64(7), np.int64(6))), ((7, 7), (np.int64(7), np.int64(8))), ((7, 7), (np.int64(8), np.int64(8))), ((7, 7), (np.int64(6), np.int64(6))), ((7, 7), (np.int64(5), np.int64(7))), ((7, 7), (np.int64(7), np.int64(5))), ((7, 7), (np.int64(7), np.int64(9)))]
2025-04-11 19:04:39,422 [INFO] Phase 1 (immediate win): 10 candidate(s) found.
2025-04-11 19:04:39,428 [INFO] Final candidates: []
2025-04-11 19:04:39,429 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:39,430 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,430 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,430 [DEBUG] Tree_policy iteration 1: Expanding move ((8, 7), (np.int64(8), np.int64(8)))
2025-04-11 19:04:39,432 [DEBUG] board coords: [(6, 7), (7, 7), (8, 7), (9, 7), (10, 7), (11, 7)]
2025-04-11 19:04:39,432 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:39,432 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 7), (7, 7)]
2025-04-11 19:04:39,432 [DEBUG] check_window_intermediate_custom (only one inserted(7, 7)): For L=6, window [0 0 2 2 2 2] with coords [(6, 7), (7, 7), (8, 7), (9, 7), (10, 7), (11, 7)] triggers candidate.
2025-04-11 19:04:39,437 [INFO] Final candidates: [(7, 7)]
2025-04-11 19:04:39,437 [INFO] Phase win: Found only one candidate: (7, 7)
2025-04-11 19:04:39,437 [INFO] Phase win: Collected 9unique candidate(s):[((7, 7), (np.int64(8), np.int64(6))), ((7, 7), (np.int64(6), np.int64(8))), ((7, 7), (np.int64(6), np.int64(7))), ((7, 7), (np.int64(7), np.int64(6))), ((7, 7), (np.int64(7), np.int64(8))), ((7, 7), (np.int64(6), np.int64(6))), ((7, 7), (np.int64(5), np.int64(7))), ((7, 7), (np.int64(7), np.int64(5))), ((7, 7), (np.int64(7), np.int64(9)))]
2025-04-11 19:04:39,437 [INFO] Phase 1 (immediate win): 9 candidate(s) found.
2025-04-11 19:04:39,443 [INFO] Final candidates: []
2025-04-11 19:04:39,443 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:39,444 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,444 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,444 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,444 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,444 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,444 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,445 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,445 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,445 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,445 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,445 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,445 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,445 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,445 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,445 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,445 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,445 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,445 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,445 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,445 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,445 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,445 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,445 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,445 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,445 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,446 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,446 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,446 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,446 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,446 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,446 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,446 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,446 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,446 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,446 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,446 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,446 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,446 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,446 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,446 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,446 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,446 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,446 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,446 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,446 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,447 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,447 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,447 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,447 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,447 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,447 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,447 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,447 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,447 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,447 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,447 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,447 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,447 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,447 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,447 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,447 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,447 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,447 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,447 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,447 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,448 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,448 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,448 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,448 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,448 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,448 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,448 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,448 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,448 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,448 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,448 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,448 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,448 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,448 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,448 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,448 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,448 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,448 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,448 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,449 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,449 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,449 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,449 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,449 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,449 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,449 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,449 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,449 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,449 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,449 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,449 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,449 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,449 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,449 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,449 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,449 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,449 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,449 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,449 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,450 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,450 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,450 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,450 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,450 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,450 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,450 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,450 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,450 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,450 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,450 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,450 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,450 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,450 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,450 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,450 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,450 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,450 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,450 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,451 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,451 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,451 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,451 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,451 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,451 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,451 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,451 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,451 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,451 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,451 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,451 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,451 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,451 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,451 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,451 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,451 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,451 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,451 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,451 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,452 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,452 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,452 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,452 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,452 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,452 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,452 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,452 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,452 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,452 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,452 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,452 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,452 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,452 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,452 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,452 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,452 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,452 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,452 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,453 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,453 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,453 [DEBUG] MCTS iteration 50: reached a node with 5 visits.
2025-04-11 19:04:39,453 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,453 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,453 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,453 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,453 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,453 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,453 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,453 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,453 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,453 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,453 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,453 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,453 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,453 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,453 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,453 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,453 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,453 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,454 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,454 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,454 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,454 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,454 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,454 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,454 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,454 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,454 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,454 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,454 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,454 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,454 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,454 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,454 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,454 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,454 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,454 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,454 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,454 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,455 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,455 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,455 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,455 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,455 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,455 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,455 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,455 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,455 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,455 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,455 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,455 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,455 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,455 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,455 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,455 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,455 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,455 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,455 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,456 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,456 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,456 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,456 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,456 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,456 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,456 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,456 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,456 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,456 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,456 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,456 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,456 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,456 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,456 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,456 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,456 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,456 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,456 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,456 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,457 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,457 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,457 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,457 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,457 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,457 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,457 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,457 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,457 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,457 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,457 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,457 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,457 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,457 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,457 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,457 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,457 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,457 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,457 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,458 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,458 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,458 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,458 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,458 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,458 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,458 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,458 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,458 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,458 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,458 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,458 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,458 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,458 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,458 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,458 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,458 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,458 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,458 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,459 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,459 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,459 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,459 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,459 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,459 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,459 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,459 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,459 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,459 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,459 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,459 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,459 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,459 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,459 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,459 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,459 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,459 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,459 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,459 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,460 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,460 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,460 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,460 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,460 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,460 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,460 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,460 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,460 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,460 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,460 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,460 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,460 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,460 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,460 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,460 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,460 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,460 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,460 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,461 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,461 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,461 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,461 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,461 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,461 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,461 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,461 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,461 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,461 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,461 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,461 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,461 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,461 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,461 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,461 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,461 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,461 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,461 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,461 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,462 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,462 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,462 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,462 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,462 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,462 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,462 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,462 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,462 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,462 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,462 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,462 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,462 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,462 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,462 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,462 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,462 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,462 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,462 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,462 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,463 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:39,463 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 19:04:39,463 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,463 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:39,463 [INFO] MCTS: Search finished. Best move selected with 10 visits.
2025-04-11 19:04:39,463 [INFO] Phase 2 (defense): MCTS selected move: ((8, 7), (np.int64(8), np.int64(9)))
2025-04-11 19:04:39,463 [INFO] Phase 2 (defense): MCTS selected move string : H9,K9
2025-04-11 19:04:39,463 [INFO] MCTS (defense candidates) selected move: H9,K9
2025-04-11 19:04:39,718 [INFO] Starting pre-MCTS candidate collection.
2025-04-11 19:04:39,724 [INFO] Final candidates: []
2025-04-11 19:04:39,724 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:39,731 [INFO] Final candidates: []
2025-04-11 19:04:39,731 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:39,731 [INFO] No candidate found in Phase 1 or 2; using full legal moves for MCTS.
2025-04-11 19:04:39,732 [INFO] MCTS: Starting search for 100 iterations.
2025-04-11 19:04:39,732 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(18), np.int64(7)), (np.int64(13), np.int64(18)))
2025-04-11 19:04:39,739 [INFO] Final candidates: []
2025-04-11 19:04:39,739 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:39,745 [INFO] Final candidates: []
2025-04-11 19:04:39,745 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:39,746 [DEBUG] MCTS iteration 0: reached a node with 0 visits.
2025-04-11 19:04:39,746 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:39,906 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:39,906 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(3)), (np.int64(11), np.int64(17)))
2025-04-11 19:04:39,913 [INFO] Final candidates: []
2025-04-11 19:04:39,913 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:39,921 [INFO] Final candidates: []
2025-04-11 19:04:39,921 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:39,922 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:40,109 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:40,109 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(11)), (np.int64(17), np.int64(1)))
2025-04-11 19:04:40,116 [INFO] Final candidates: []
2025-04-11 19:04:40,116 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:40,122 [INFO] Final candidates: []
2025-04-11 19:04:40,122 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:40,123 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:40,273 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:40,273 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(9)), (np.int64(15), np.int64(17)))
2025-04-11 19:04:40,280 [INFO] Final candidates: []
2025-04-11 19:04:40,280 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:40,287 [INFO] Final candidates: []
2025-04-11 19:04:40,287 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:40,288 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:40,417 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:40,417 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(10)), (np.int64(3), np.int64(2)))
2025-04-11 19:04:40,424 [INFO] Final candidates: []
2025-04-11 19:04:40,424 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:40,430 [INFO] Final candidates: []
2025-04-11 19:04:40,430 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:40,431 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:40,580 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:40,581 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(4)), (np.int64(14), np.int64(18)))
2025-04-11 19:04:40,587 [INFO] Final candidates: []
2025-04-11 19:04:40,587 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:40,594 [INFO] Final candidates: []
2025-04-11 19:04:40,594 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:40,597 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:40,830 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:40,830 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(4)), (np.int64(17), np.int64(1)))
2025-04-11 19:04:40,836 [INFO] Final candidates: []
2025-04-11 19:04:40,836 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:40,843 [INFO] Final candidates: []
2025-04-11 19:04:40,843 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:40,844 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:41,024 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:41,025 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(9)), (np.int64(14), np.int64(11)))
2025-04-11 19:04:41,032 [INFO] Final candidates: []
2025-04-11 19:04:41,032 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:41,038 [INFO] Final candidates: []
2025-04-11 19:04:41,038 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:41,039 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:41,318 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:41,318 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(1)), (np.int64(12), np.int64(11)))
2025-04-11 19:04:41,325 [INFO] Final candidates: []
2025-04-11 19:04:41,325 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:41,331 [INFO] Final candidates: []
2025-04-11 19:04:41,331 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:41,332 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:41,559 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:41,559 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(12)), (np.int64(15), np.int64(12)))
2025-04-11 19:04:41,565 [INFO] Final candidates: []
2025-04-11 19:04:41,565 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:41,572 [INFO] Final candidates: []
2025-04-11 19:04:41,572 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:41,573 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:41,610 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:41,610 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(0)), (np.int64(8), np.int64(5)))
2025-04-11 19:04:41,612 [DEBUG] board coords: [(7, 5), (8, 5), (9, 5), (10, 5), (11, 5), (12, 5)]
2025-04-11 19:04:41,612 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1)]
2025-04-11 19:04:41,612 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 5), (11, 5)]
2025-04-11 19:04:41,613 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 1 1 0 1] with coords [(7, 5), (8, 5), (9, 5), (10, 5), (11, 5), (12, 5)] triggers candidate.
2025-04-11 19:04:41,613 [DEBUG] board coords: [(8, 5), (9, 5), (10, 5), (11, 5), (12, 5), (13, 5)]
2025-04-11 19:04:41,613 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(0)]
2025-04-11 19:04:41,613 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 5), (13, 5)]
2025-04-11 19:04:41,613 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 1 0 1 0] with coords [(8, 5), (9, 5), (10, 5), (11, 5), (12, 5), (13, 5)] triggers candidate.
2025-04-11 19:04:41,617 [INFO] Final candidates: [(7, 5), (13, 5), (11, 5)]
2025-04-11 19:04:41,617 [INFO] Phase win: Collected 3unique candidate(s):[((7, 5), (11, 5)), ((7, 5), (13, 5)), ((13, 5), (11, 5))]
2025-04-11 19:04:41,617 [INFO] Phase 1 (immediate win): 3 candidate(s) found.
2025-04-11 19:04:41,624 [INFO] Final candidates: []
2025-04-11 19:04:41,624 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:41,624 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:41,799 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:41,799 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(0), np.int64(1)), (np.int64(16), np.int64(11)))
2025-04-11 19:04:41,805 [INFO] Final candidates: []
2025-04-11 19:04:41,805 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:41,812 [INFO] Final candidates: []
2025-04-11 19:04:41,812 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:41,813 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:42,005 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:42,006 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(11)), (np.int64(0), np.int64(1)))
2025-04-11 19:04:42,013 [INFO] Final candidates: []
2025-04-11 19:04:42,013 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:42,019 [INFO] Final candidates: []
2025-04-11 19:04:42,019 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:42,020 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:42,255 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:42,255 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(15)), (np.int64(14), np.int64(0)))
2025-04-11 19:04:42,262 [INFO] Final candidates: []
2025-04-11 19:04:42,262 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:42,268 [INFO] Final candidates: []
2025-04-11 19:04:42,268 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:42,269 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:42,447 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:42,448 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(18)), (np.int64(14), np.int64(16)))
2025-04-11 19:04:42,454 [INFO] Final candidates: []
2025-04-11 19:04:42,454 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:42,460 [INFO] Final candidates: []
2025-04-11 19:04:42,460 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:42,461 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:42,564 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:42,564 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(15)), (np.int64(13), np.int64(6)))
2025-04-11 19:04:42,568 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:42,568 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:42,568 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (11, 4)]
2025-04-11 19:04:42,568 [DEBUG] check_window_intermediate_custom (only one inserted(11, 4)): For L=6, window [0 0 1 1 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:42,569 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:42,569 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:42,569 [DEBUG] board coords: [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)]
2025-04-11 19:04:42,569 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:04:42,569 [DEBUG] check_window_intermediate_custom: empty_cells=[(16, 9), (17, 10)]
2025-04-11 19:04:42,569 [DEBUG] check_window_intermediate_custom (only one inserted(16, 9)): For L=6, window [1 1 1 1 0 0] with coords [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)] triggers candidate.
2025-04-11 19:04:42,571 [INFO] Final candidates: [(16, 9), (11, 4)]
2025-04-11 19:04:42,571 [INFO] Phase win: Collected 1unique candidate(s):[((16, 9), (11, 4))]
2025-04-11 19:04:42,571 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 19:04:42,578 [INFO] Final candidates: []
2025-04-11 19:04:42,578 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:42,579 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:42,660 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:42,660 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(4)), (np.int64(1), np.int64(3)))
2025-04-11 19:04:42,667 [INFO] Final candidates: []
2025-04-11 19:04:42,667 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:42,673 [INFO] Final candidates: []
2025-04-11 19:04:42,673 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:42,674 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:42,823 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:42,823 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(12)), (np.int64(15), np.int64(1)))
2025-04-11 19:04:42,829 [INFO] Final candidates: []
2025-04-11 19:04:42,829 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:42,836 [INFO] Final candidates: []
2025-04-11 19:04:42,836 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:42,837 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:43,020 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:43,020 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(6)), (np.int64(7), np.int64(8)))
2025-04-11 19:04:43,027 [INFO] Final candidates: []
2025-04-11 19:04:43,027 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:43,033 [INFO] Final candidates: []
2025-04-11 19:04:43,033 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:43,034 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:43,122 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:43,122 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(15)), (np.int64(16), np.int64(5)))
2025-04-11 19:04:43,129 [INFO] Final candidates: []
2025-04-11 19:04:43,129 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:43,136 [INFO] Final candidates: []
2025-04-11 19:04:43,136 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:43,137 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:43,339 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:43,339 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(1)), (np.int64(9), np.int64(6)))
2025-04-11 19:04:43,347 [INFO] Final candidates: []
2025-04-11 19:04:43,347 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:43,353 [INFO] Final candidates: []
2025-04-11 19:04:43,353 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:43,354 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:43,418 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:43,419 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(0)), (np.int64(14), np.int64(11)))
2025-04-11 19:04:43,425 [INFO] Final candidates: []
2025-04-11 19:04:43,425 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:43,431 [INFO] Final candidates: []
2025-04-11 19:04:43,432 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:43,432 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:43,528 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:43,528 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(8)), (np.int64(15), np.int64(1)))
2025-04-11 19:04:43,535 [INFO] Final candidates: []
2025-04-11 19:04:43,535 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:43,542 [INFO] Final candidates: []
2025-04-11 19:04:43,542 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:43,543 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:43,781 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:43,781 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(3)), (np.int64(0), np.int64(3)))
2025-04-11 19:04:43,788 [INFO] Final candidates: []
2025-04-11 19:04:43,788 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:43,795 [INFO] Final candidates: []
2025-04-11 19:04:43,795 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:43,796 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:44,139 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:44,140 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(3)), (np.int64(11), np.int64(17)))
2025-04-11 19:04:44,148 [INFO] Final candidates: []
2025-04-11 19:04:44,148 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:44,154 [INFO] Final candidates: []
2025-04-11 19:04:44,154 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:44,155 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:44,327 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:44,327 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(7)), (np.int64(8), np.int64(5)))
2025-04-11 19:04:44,329 [DEBUG] board coords: [(7, 5), (8, 5), (9, 5), (10, 5), (11, 5), (12, 5)]
2025-04-11 19:04:44,329 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1)]
2025-04-11 19:04:44,329 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 5), (11, 5)]
2025-04-11 19:04:44,330 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 1 1 0 1] with coords [(7, 5), (8, 5), (9, 5), (10, 5), (11, 5), (12, 5)] triggers candidate.
2025-04-11 19:04:44,330 [DEBUG] board coords: [(8, 5), (9, 5), (10, 5), (11, 5), (12, 5), (13, 5)]
2025-04-11 19:04:44,330 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(0)]
2025-04-11 19:04:44,330 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 5), (13, 5)]
2025-04-11 19:04:44,330 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 1 0 1 0] with coords [(8, 5), (9, 5), (10, 5), (11, 5), (12, 5), (13, 5)] triggers candidate.
2025-04-11 19:04:44,334 [INFO] Final candidates: [(7, 5), (13, 5), (11, 5)]
2025-04-11 19:04:44,334 [INFO] Phase win: Collected 3unique candidate(s):[((7, 5), (11, 5)), ((7, 5), (13, 5)), ((13, 5), (11, 5))]
2025-04-11 19:04:44,334 [INFO] Phase 1 (immediate win): 3 candidate(s) found.
2025-04-11 19:04:44,340 [INFO] Final candidates: []
2025-04-11 19:04:44,340 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:44,341 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:44,408 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:44,408 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(4)), (np.int64(17), np.int64(1)))
2025-04-11 19:04:44,415 [INFO] Final candidates: []
2025-04-11 19:04:44,415 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:44,421 [INFO] Final candidates: []
2025-04-11 19:04:44,421 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:44,422 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:44,687 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:44,687 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(0), np.int64(2)), (np.int64(11), np.int64(10)))
2025-04-11 19:04:44,694 [INFO] Final candidates: []
2025-04-11 19:04:44,694 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:44,700 [INFO] Final candidates: []
2025-04-11 19:04:44,700 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:44,701 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:44,856 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:44,857 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(0)), (np.int64(14), np.int64(4)))
2025-04-11 19:04:44,863 [INFO] Final candidates: []
2025-04-11 19:04:44,863 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:44,870 [INFO] Final candidates: []
2025-04-11 19:04:44,870 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:44,870 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:44,965 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:44,965 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(4)), (np.int64(9), np.int64(8)))
2025-04-11 19:04:44,971 [INFO] Final candidates: []
2025-04-11 19:04:44,971 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:44,978 [INFO] Final candidates: []
2025-04-11 19:04:44,978 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:44,979 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:45,069 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:45,069 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(3), np.int64(2)), (np.int64(8), np.int64(10)))
2025-04-11 19:04:45,076 [INFO] Final candidates: []
2025-04-11 19:04:45,076 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:45,082 [INFO] Final candidates: []
2025-04-11 19:04:45,082 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:45,083 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:45,231 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:45,231 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(13)), (np.int64(2), np.int64(1)))
2025-04-11 19:04:45,237 [INFO] Final candidates: []
2025-04-11 19:04:45,237 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:45,244 [INFO] Final candidates: []
2025-04-11 19:04:45,244 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:45,245 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:45,435 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:45,435 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(15)), (np.int64(17), np.int64(6)))
2025-04-11 19:04:45,441 [INFO] Final candidates: []
2025-04-11 19:04:45,441 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:45,449 [INFO] Final candidates: []
2025-04-11 19:04:45,449 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:45,450 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:45,752 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:45,752 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(17), np.int64(7)), (np.int64(16), np.int64(12)))
2025-04-11 19:04:45,759 [INFO] Final candidates: []
2025-04-11 19:04:45,759 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:45,765 [INFO] Final candidates: []
2025-04-11 19:04:45,765 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:45,766 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:46,000 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:46,001 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(9)), (np.int64(6), np.int64(9)))
2025-04-11 19:04:46,007 [INFO] Final candidates: []
2025-04-11 19:04:46,007 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:46,013 [INFO] Final candidates: []
2025-04-11 19:04:46,014 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:46,014 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:46,325 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:46,325 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(2)), (np.int64(9), np.int64(2)))
2025-04-11 19:04:46,332 [INFO] Final candidates: []
2025-04-11 19:04:46,332 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:46,338 [INFO] Final candidates: []
2025-04-11 19:04:46,338 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:46,339 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:46,449 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:46,449 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(2)), (np.int64(1), np.int64(1)))
2025-04-11 19:04:46,456 [INFO] Final candidates: []
2025-04-11 19:04:46,456 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:46,462 [INFO] Final candidates: []
2025-04-11 19:04:46,462 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:46,463 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:46,689 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:46,689 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(11)), (np.int64(8), np.int64(1)))
2025-04-11 19:04:46,696 [INFO] Final candidates: []
2025-04-11 19:04:46,696 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:46,702 [INFO] Final candidates: []
2025-04-11 19:04:46,702 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:46,703 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:46,827 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:46,827 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(4)), (np.int64(7), np.int64(9)))
2025-04-11 19:04:46,832 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:46,832 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1)]
2025-04-11 19:04:46,832 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (13, 6)]
2025-04-11 19:04:46,832 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 1 0 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:46,832 [DEBUG] board coords: [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)]
2025-04-11 19:04:46,832 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 19:04:46,832 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 6), (16, 9)]
2025-04-11 19:04:46,832 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 0 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:46,834 [INFO] Final candidates: [(16, 9), (13, 6), (10, 3)]
2025-04-11 19:04:46,834 [INFO] Phase win: Collected 3unique candidate(s):[((16, 9), (13, 6)), ((13, 6), (10, 3)), ((16, 9), (10, 3))]
2025-04-11 19:04:46,834 [INFO] Phase 1 (immediate win): 3 candidate(s) found.
2025-04-11 19:04:46,841 [INFO] Final candidates: []
2025-04-11 19:04:46,841 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:46,841 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:47,046 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:47,046 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(4)), (np.int64(6), np.int64(7)))
2025-04-11 19:04:47,051 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:47,051 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1)]
2025-04-11 19:04:47,051 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (13, 6)]
2025-04-11 19:04:47,051 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 1 0 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:47,051 [DEBUG] board coords: [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)]
2025-04-11 19:04:47,051 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 19:04:47,051 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 6), (16, 9)]
2025-04-11 19:04:47,051 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 0 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:47,053 [INFO] Final candidates: [(16, 9), (13, 6), (10, 3)]
2025-04-11 19:04:47,053 [INFO] Phase win: Collected 3unique candidate(s):[((16, 9), (13, 6)), ((13, 6), (10, 3)), ((16, 9), (10, 3))]
2025-04-11 19:04:47,053 [INFO] Phase 1 (immediate win): 3 candidate(s) found.
2025-04-11 19:04:47,060 [INFO] Final candidates: []
2025-04-11 19:04:47,060 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:47,061 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:47,145 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:47,145 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(0)), (np.int64(12), np.int64(11)))
2025-04-11 19:04:47,152 [INFO] Final candidates: []
2025-04-11 19:04:47,152 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:47,159 [INFO] Final candidates: []
2025-04-11 19:04:47,159 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:47,160 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:47,393 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:47,393 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(4)), (np.int64(10), np.int64(4)))
2025-04-11 19:04:47,399 [INFO] Final candidates: []
2025-04-11 19:04:47,399 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:47,406 [INFO] Final candidates: []
2025-04-11 19:04:47,406 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:47,406 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:47,637 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:47,637 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(5)), (np.int64(10), np.int64(3)))
2025-04-11 19:04:47,640 [DEBUG] board coords: [(7, 5), (8, 5), (9, 5), (10, 5), (11, 5), (12, 5)]
2025-04-11 19:04:47,640 [DEBUG] board values[np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(0), np.int64(1)]
2025-04-11 19:04:47,640 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 5), (11, 5)]
2025-04-11 19:04:47,640 [DEBUG] check_window_intermediate_custom: For L=6, window [1 0 1 1 0 1] with coords [(7, 5), (8, 5), (9, 5), (10, 5), (11, 5), (12, 5)] triggers candidate.
2025-04-11 19:04:47,642 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:47,642 [DEBUG] board values[np.int64(1), np.int64(0), np.int64(1), np.int64(0), np.int64(1), np.int64(1)]
2025-04-11 19:04:47,642 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 4), (13, 6)]
2025-04-11 19:04:47,642 [DEBUG] check_window_intermediate_custom: For L=6, window [1 0 1 0 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:47,644 [INFO] Final candidates: [(13, 6), (8, 5), (11, 5), (11, 4)]
2025-04-11 19:04:47,644 [INFO] Phase win: Collected 6unique candidate(s):[((8, 5), (11, 5)), ((13, 6), (11, 5)), ((13, 6), (8, 5)), ((13, 6), (11, 4)), ((8, 5), (11, 4)), ((11, 5), (11, 4))]
2025-04-11 19:04:47,644 [INFO] Phase 1 (immediate win): 6 candidate(s) found.
2025-04-11 19:04:47,650 [INFO] Final candidates: []
2025-04-11 19:04:47,650 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:47,651 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:47,742 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:47,743 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(10)), (np.int64(15), np.int64(10)))
2025-04-11 19:04:47,750 [INFO] Final candidates: []
2025-04-11 19:04:47,750 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:47,756 [INFO] Final candidates: []
2025-04-11 19:04:47,756 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:47,758 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:47,920 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:47,921 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(17)), (np.int64(16), np.int64(4)))
2025-04-11 19:04:47,927 [INFO] Final candidates: []
2025-04-11 19:04:47,927 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:47,933 [INFO] Final candidates: []
2025-04-11 19:04:47,934 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:47,935 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:48,052 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:48,052 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(18)), (np.int64(9), np.int64(4)))
2025-04-11 19:04:48,059 [INFO] Final candidates: []
2025-04-11 19:04:48,059 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:48,065 [INFO] Final candidates: []
2025-04-11 19:04:48,065 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:48,066 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:48,153 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:48,153 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(5)), (np.int64(17), np.int64(7)))
2025-04-11 19:04:48,155 [DEBUG] board coords: [(7, 5), (8, 5), (9, 5), (10, 5), (11, 5), (12, 5)]
2025-04-11 19:04:48,155 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:48,155 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 5), (8, 5)]
2025-04-11 19:04:48,155 [DEBUG] check_window_intermediate_custom (only one inserted(8, 5)): For L=6, window [0 0 1 1 1 1] with coords [(7, 5), (8, 5), (9, 5), (10, 5), (11, 5), (12, 5)] triggers candidate.
2025-04-11 19:04:48,156 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(8, 5), (9, 5), (10, 5), (11, 5), (12, 5), (13, 5)] triggers candidate.
2025-04-11 19:04:48,156 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:48,156 [DEBUG] board coords: [(9, 5), (10, 5), (11, 5), (12, 5), (13, 5), (14, 5)]
2025-04-11 19:04:48,156 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 19:04:48,156 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 5), (14, 5)]
2025-04-11 19:04:48,156 [DEBUG] check_window_intermediate_custom (only one inserted(13, 5)): For L=6, window [1 1 1 1 0 0] with coords [(9, 5), (10, 5), (11, 5), (12, 5), (13, 5), (14, 5)] triggers candidate.
2025-04-11 19:04:48,156 [DEBUG] board coords: [(10, 5), (11, 5), (12, 5), (13, 5), (14, 5), (15, 5)]
2025-04-11 19:04:48,156 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0), np.int64(1)]
2025-04-11 19:04:48,156 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 5), (14, 5)]
2025-04-11 19:04:48,156 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 1 0 0 1] with coords [(10, 5), (11, 5), (12, 5), (13, 5), (14, 5), (15, 5)] triggers candidate.
2025-04-11 19:04:48,160 [INFO] Final candidates: [(13, 5), (8, 5), (14, 5)]
2025-04-11 19:04:48,160 [INFO] Phase win: Collected 3unique candidate(s):[((13, 5), (14, 5)), ((13, 5), (8, 5)), ((8, 5), (14, 5))]
2025-04-11 19:04:48,160 [INFO] Phase 1 (immediate win): 3 candidate(s) found.
2025-04-11 19:04:48,167 [INFO] Final candidates: []
2025-04-11 19:04:48,167 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:48,168 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:48,212 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:48,212 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(16)), (np.int64(15), np.int64(12)))
2025-04-11 19:04:48,219 [INFO] Final candidates: []
2025-04-11 19:04:48,219 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:48,225 [INFO] Final candidates: []
2025-04-11 19:04:48,225 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:48,226 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:48,543 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:48,544 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(0), np.int64(3)), (np.int64(7), np.int64(8)))
2025-04-11 19:04:48,550 [INFO] Final candidates: []
2025-04-11 19:04:48,550 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:48,557 [INFO] Final candidates: []
2025-04-11 19:04:48,557 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:48,557 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:48,698 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:48,698 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(10)), (np.int64(12), np.int64(3)))
2025-04-11 19:04:48,704 [INFO] Final candidates: []
2025-04-11 19:04:48,704 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:48,711 [INFO] Final candidates: []
2025-04-11 19:04:48,711 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:48,712 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:48,869 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:48,870 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(8)), (np.int64(15), np.int64(12)))
2025-04-11 19:04:48,877 [INFO] Final candidates: []
2025-04-11 19:04:48,877 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:48,883 [INFO] Final candidates: []
2025-04-11 19:04:48,883 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:48,884 [DEBUG] MCTS iteration 50: reached a node with 0 visits.
2025-04-11 19:04:48,884 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:49,046 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:49,046 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(11)), (np.int64(10), np.int64(11)))
2025-04-11 19:04:49,055 [INFO] Final candidates: []
2025-04-11 19:04:49,055 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:49,062 [INFO] Final candidates: []
2025-04-11 19:04:49,062 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:49,063 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:49,323 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:49,323 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(6)), (np.int64(6), np.int64(9)))
2025-04-11 19:04:49,329 [INFO] Final candidates: []
2025-04-11 19:04:49,329 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:49,336 [INFO] Final candidates: []
2025-04-11 19:04:49,336 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:49,337 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:49,373 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:49,373 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(3)), (np.int64(1), np.int64(1)))
2025-04-11 19:04:49,379 [INFO] Final candidates: []
2025-04-11 19:04:49,379 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:49,386 [INFO] Final candidates: []
2025-04-11 19:04:49,386 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:49,387 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:49,500 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:49,500 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(18), np.int64(3)), (np.int64(15), np.int64(3)))
2025-04-11 19:04:49,506 [INFO] Final candidates: []
2025-04-11 19:04:49,506 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:49,513 [INFO] Final candidates: []
2025-04-11 19:04:49,513 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:49,514 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:49,639 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:49,639 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(1), np.int64(3)), (np.int64(8), np.int64(6)))
2025-04-11 19:04:49,646 [INFO] Final candidates: []
2025-04-11 19:04:49,646 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:49,652 [INFO] Final candidates: []
2025-04-11 19:04:49,652 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:49,653 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:49,788 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:49,788 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(2)), (np.int64(7), np.int64(2)))
2025-04-11 19:04:49,794 [INFO] Final candidates: []
2025-04-11 19:04:49,794 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:49,801 [INFO] Final candidates: []
2025-04-11 19:04:49,801 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:49,802 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:49,925 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:49,925 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(8)), (np.int64(12), np.int64(15)))
2025-04-11 19:04:49,932 [INFO] Final candidates: []
2025-04-11 19:04:49,932 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:49,938 [INFO] Final candidates: []
2025-04-11 19:04:49,938 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:49,939 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:50,140 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:50,140 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(10)), (np.int64(18), np.int64(2)))
2025-04-11 19:04:50,147 [INFO] Final candidates: []
2025-04-11 19:04:50,147 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:50,153 [INFO] Final candidates: []
2025-04-11 19:04:50,153 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:50,154 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:50,271 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:50,271 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(2)), (np.int64(17), np.int64(2)))
2025-04-11 19:04:50,278 [INFO] Final candidates: []
2025-04-11 19:04:50,278 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:50,284 [INFO] Final candidates: []
2025-04-11 19:04:50,284 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:50,286 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:50,480 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:50,480 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(18)), (np.int64(14), np.int64(11)))
2025-04-11 19:04:50,487 [INFO] Final candidates: []
2025-04-11 19:04:50,487 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:50,493 [INFO] Final candidates: []
2025-04-11 19:04:50,493 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:50,499 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:50,771 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:50,772 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(13)), (np.int64(11), np.int64(10)))
2025-04-11 19:04:50,778 [INFO] Final candidates: []
2025-04-11 19:04:50,778 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:50,785 [INFO] Final candidates: []
2025-04-11 19:04:50,785 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:50,786 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:50,956 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:50,957 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(2)), (np.int64(8), np.int64(10)))
2025-04-11 19:04:50,963 [INFO] Final candidates: []
2025-04-11 19:04:50,963 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:50,970 [INFO] Final candidates: []
2025-04-11 19:04:50,970 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:50,970 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:51,057 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:51,057 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(17)), (np.int64(15), np.int64(13)))
2025-04-11 19:04:51,064 [INFO] Final candidates: []
2025-04-11 19:04:51,064 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:51,070 [INFO] Final candidates: []
2025-04-11 19:04:51,070 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:51,071 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:51,200 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:51,200 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(7)), (np.int64(11), np.int64(17)))
2025-04-11 19:04:51,207 [INFO] Final candidates: []
2025-04-11 19:04:51,207 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:51,214 [INFO] Final candidates: []
2025-04-11 19:04:51,214 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:51,215 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:51,391 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:51,392 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(2)), (np.int64(13), np.int64(15)))
2025-04-11 19:04:51,398 [INFO] Final candidates: []
2025-04-11 19:04:51,398 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:51,405 [INFO] Final candidates: []
2025-04-11 19:04:51,405 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:51,406 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:51,489 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:51,489 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(18), np.int64(9)), (np.int64(16), np.int64(9)))
2025-04-11 19:04:51,494 [DEBUG] board coords: [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)]
2025-04-11 19:04:51,494 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:04:51,494 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 4), (13, 6)]
2025-04-11 19:04:51,494 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 0 1 1 1] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:51,494 [DEBUG] board coords: [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)]
2025-04-11 19:04:51,494 [DEBUG] board values[np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 19:04:51,494 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 6), (17, 10)]
2025-04-11 19:04:51,494 [DEBUG] check_window_intermediate_custom: For L=6, window [1 0 1 1 1 0] with coords [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)] triggers candidate.
2025-04-11 19:04:51,496 [INFO] Final candidates: [(13, 6), (11, 4), (17, 10)]
2025-04-11 19:04:51,496 [INFO] Phase win: Collected 3unique candidate(s):[((13, 6), (11, 4)), ((13, 6), (17, 10)), ((11, 4), (17, 10))]
2025-04-11 19:04:51,496 [INFO] Phase 1 (immediate win): 3 candidate(s) found.
2025-04-11 19:04:51,503 [INFO] Final candidates: []
2025-04-11 19:04:51,503 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:51,504 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:51,564 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:51,565 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(2), np.int64(1)), (np.int64(1), np.int64(1)))
2025-04-11 19:04:51,571 [INFO] Final candidates: []
2025-04-11 19:04:51,571 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:51,577 [INFO] Final candidates: []
2025-04-11 19:04:51,578 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:51,579 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:51,815 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:51,816 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(2)), (np.int64(16), np.int64(5)))
2025-04-11 19:04:51,824 [INFO] Final candidates: []
2025-04-11 19:04:51,824 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:51,830 [INFO] Final candidates: []
2025-04-11 19:04:51,830 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:51,831 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:51,911 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:51,912 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(1)), (np.int64(15), np.int64(1)))
2025-04-11 19:04:51,918 [INFO] Final candidates: []
2025-04-11 19:04:51,919 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:51,925 [INFO] Final candidates: []
2025-04-11 19:04:51,925 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:51,926 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:52,064 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:52,064 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(1)), (np.int64(6), np.int64(7)))
2025-04-11 19:04:52,070 [INFO] Final candidates: []
2025-04-11 19:04:52,071 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:52,077 [INFO] Final candidates: []
2025-04-11 19:04:52,077 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:52,078 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:52,274 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:52,274 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(5)), (np.int64(11), np.int64(18)))
2025-04-11 19:04:52,276 [DEBUG] board coords: [(7, 5), (8, 5), (9, 5), (10, 5), (11, 5), (12, 5)]
2025-04-11 19:04:52,277 [DEBUG] board values[np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(0), np.int64(1)]
2025-04-11 19:04:52,277 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 5), (11, 5)]
2025-04-11 19:04:52,277 [DEBUG] check_window_intermediate_custom: For L=6, window [1 0 1 1 0 1] with coords [(7, 5), (8, 5), (9, 5), (10, 5), (11, 5), (12, 5)] triggers candidate.
2025-04-11 19:04:52,281 [INFO] Final candidates: [(8, 5), (11, 5)]
2025-04-11 19:04:52,281 [INFO] Phase win: Collected 1unique candidate(s):[((8, 5), (11, 5))]
2025-04-11 19:04:52,281 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 19:04:52,287 [INFO] Final candidates: []
2025-04-11 19:04:52,288 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:52,288 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:52,485 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:52,485 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(16)), (np.int64(8), np.int64(5)))
2025-04-11 19:04:52,487 [DEBUG] board coords: [(7, 5), (8, 5), (9, 5), (10, 5), (11, 5), (12, 5)]
2025-04-11 19:04:52,487 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1)]
2025-04-11 19:04:52,487 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 5), (11, 5)]
2025-04-11 19:04:52,487 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 1 1 0 1] with coords [(7, 5), (8, 5), (9, 5), (10, 5), (11, 5), (12, 5)] triggers candidate.
2025-04-11 19:04:52,487 [DEBUG] board coords: [(8, 5), (9, 5), (10, 5), (11, 5), (12, 5), (13, 5)]
2025-04-11 19:04:52,487 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(0)]
2025-04-11 19:04:52,487 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 5), (13, 5)]
2025-04-11 19:04:52,487 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 1 0 1 0] with coords [(8, 5), (9, 5), (10, 5), (11, 5), (12, 5), (13, 5)] triggers candidate.
2025-04-11 19:04:52,492 [INFO] Final candidates: [(7, 5), (13, 5), (11, 5)]
2025-04-11 19:04:52,492 [INFO] Phase win: Collected 3unique candidate(s):[((7, 5), (11, 5)), ((7, 5), (13, 5)), ((13, 5), (11, 5))]
2025-04-11 19:04:52,492 [INFO] Phase 1 (immediate win): 3 candidate(s) found.
2025-04-11 19:04:52,498 [INFO] Final candidates: []
2025-04-11 19:04:52,498 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:52,499 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:52,783 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:52,783 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(18), np.int64(7)), (np.int64(1), np.int64(1)))
2025-04-11 19:04:52,790 [INFO] Final candidates: []
2025-04-11 19:04:52,790 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:52,798 [INFO] Final candidates: []
2025-04-11 19:04:52,798 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:52,799 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:52,927 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:52,927 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(18), np.int64(9)), (np.int64(13), np.int64(4)))
2025-04-11 19:04:52,934 [INFO] Final candidates: []
2025-04-11 19:04:52,934 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:52,940 [INFO] Final candidates: []
2025-04-11 19:04:52,940 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:52,941 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:53,076 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:53,076 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(7)), (np.int64(11), np.int64(6)))
2025-04-11 19:04:53,083 [INFO] Final candidates: []
2025-04-11 19:04:53,083 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:53,089 [INFO] Final candidates: []
2025-04-11 19:04:53,089 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:53,090 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:53,240 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:53,240 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(3)), (np.int64(9), np.int64(11)))
2025-04-11 19:04:53,246 [INFO] Final candidates: []
2025-04-11 19:04:53,246 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:53,253 [INFO] Final candidates: []
2025-04-11 19:04:53,253 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:53,254 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:53,610 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:53,610 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(18), np.int64(2)), (np.int64(8), np.int64(3)))
2025-04-11 19:04:53,616 [INFO] Final candidates: []
2025-04-11 19:04:53,617 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:53,623 [INFO] Final candidates: []
2025-04-11 19:04:53,623 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:53,624 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:53,751 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:53,752 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(17), np.int64(5)), (np.int64(15), np.int64(1)))
2025-04-11 19:04:53,758 [INFO] Final candidates: []
2025-04-11 19:04:53,758 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:53,765 [INFO] Final candidates: []
2025-04-11 19:04:53,765 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:53,765 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:53,900 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:53,900 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(17)), (np.int64(14), np.int64(12)))
2025-04-11 19:04:53,906 [INFO] Final candidates: []
2025-04-11 19:04:53,906 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:53,913 [INFO] Final candidates: []
2025-04-11 19:04:53,913 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:53,914 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:54,077 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:54,077 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(18)), (np.int64(12), np.int64(16)))
2025-04-11 19:04:54,083 [INFO] Final candidates: []
2025-04-11 19:04:54,083 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:54,090 [INFO] Final candidates: []
2025-04-11 19:04:54,090 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:54,091 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:54,214 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:54,214 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(8)), (np.int64(8), np.int64(1)))
2025-04-11 19:04:54,221 [INFO] Final candidates: []
2025-04-11 19:04:54,221 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:54,228 [INFO] Final candidates: []
2025-04-11 19:04:54,228 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:54,229 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:54,366 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:54,366 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(5)), (np.int64(15), np.int64(10)))
2025-04-11 19:04:54,368 [DEBUG] board coords: [(9, 5), (10, 5), (11, 5), (12, 5), (13, 5), (14, 5)]
2025-04-11 19:04:54,368 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(0), np.int64(1)]
2025-04-11 19:04:54,368 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 5), (13, 5)]
2025-04-11 19:04:54,368 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 0 1 0 1] with coords [(9, 5), (10, 5), (11, 5), (12, 5), (13, 5), (14, 5)] triggers candidate.
2025-04-11 19:04:54,368 [DEBUG] board coords: [(10, 5), (11, 5), (12, 5), (13, 5), (14, 5), (15, 5)]
2025-04-11 19:04:54,368 [DEBUG] board values[np.int64(1), np.int64(0), np.int64(1), np.int64(0), np.int64(1), np.int64(1)]
2025-04-11 19:04:54,368 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 5), (13, 5)]
2025-04-11 19:04:54,368 [DEBUG] check_window_intermediate_custom: For L=6, window [1 0 1 0 1 1] with coords [(10, 5), (11, 5), (12, 5), (13, 5), (14, 5), (15, 5)] triggers candidate.
2025-04-11 19:04:54,373 [INFO] Final candidates: [(13, 5), (11, 5)]
2025-04-11 19:04:54,373 [INFO] Phase win: Collected 1unique candidate(s):[((13, 5), (11, 5))]
2025-04-11 19:04:54,373 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 19:04:54,379 [INFO] Final candidates: []
2025-04-11 19:04:54,380 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:54,381 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:54,654 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:54,655 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(2)), (np.int64(3), np.int64(2)))
2025-04-11 19:04:54,661 [INFO] Final candidates: []
2025-04-11 19:04:54,661 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:54,668 [INFO] Final candidates: []
2025-04-11 19:04:54,668 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:54,669 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:54,885 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:54,886 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(6)), (np.int64(6), np.int64(7)))
2025-04-11 19:04:54,892 [INFO] Final candidates: []
2025-04-11 19:04:54,892 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:54,899 [INFO] Final candidates: []
2025-04-11 19:04:54,899 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:54,900 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:55,030 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:55,030 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(6)), (np.int64(15), np.int64(1)))
2025-04-11 19:04:55,037 [INFO] Final candidates: []
2025-04-11 19:04:55,037 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:55,043 [INFO] Final candidates: []
2025-04-11 19:04:55,043 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:55,044 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:55,185 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:55,185 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(2)), (np.int64(9), np.int64(11)))
2025-04-11 19:04:55,192 [INFO] Final candidates: []
2025-04-11 19:04:55,192 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:55,198 [INFO] Final candidates: []
2025-04-11 19:04:55,198 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:55,199 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:55,378 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:55,379 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(1)), (np.int64(18), np.int64(0)))
2025-04-11 19:04:55,385 [INFO] Final candidates: []
2025-04-11 19:04:55,385 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:55,392 [INFO] Final candidates: []
2025-04-11 19:04:55,392 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:55,393 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:55,528 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:55,528 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(4)), (np.int64(14), np.int64(16)))
2025-04-11 19:04:55,535 [INFO] Final candidates: []
2025-04-11 19:04:55,535 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:55,541 [INFO] Final candidates: []
2025-04-11 19:04:55,541 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:55,542 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:55,617 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:55,617 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(18), np.int64(9)), (np.int64(6), np.int64(9)))
2025-04-11 19:04:55,624 [INFO] Final candidates: []
2025-04-11 19:04:55,624 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:55,630 [INFO] Final candidates: []
2025-04-11 19:04:55,630 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:55,631 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:55,810 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:55,810 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(18), np.int64(3)), (np.int64(17), np.int64(2)))
2025-04-11 19:04:55,817 [INFO] Final candidates: []
2025-04-11 19:04:55,817 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:55,823 [INFO] Final candidates: []
2025-04-11 19:04:55,823 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:55,824 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:55,951 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:55,951 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(18)), (np.int64(16), np.int64(10)))
2025-04-11 19:04:55,958 [INFO] Final candidates: []
2025-04-11 19:04:55,958 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:55,964 [INFO] Final candidates: []
2025-04-11 19:04:55,964 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:55,965 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:56,198 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:56,198 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(15)), (np.int64(9), np.int64(6)))
2025-04-11 19:04:56,205 [INFO] Final candidates: []
2025-04-11 19:04:56,205 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:56,211 [INFO] Final candidates: []
2025-04-11 19:04:56,211 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:56,212 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:56,235 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:56,235 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(11)), (np.int64(6), np.int64(7)))
2025-04-11 19:04:56,241 [INFO] Final candidates: []
2025-04-11 19:04:56,242 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:56,248 [INFO] Final candidates: []
2025-04-11 19:04:56,248 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:56,249 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:56,363 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:56,364 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(2)), (np.int64(15), np.int64(1)))
2025-04-11 19:04:56,370 [INFO] Final candidates: []
2025-04-11 19:04:56,370 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:56,377 [INFO] Final candidates: []
2025-04-11 19:04:56,377 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:56,385 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:56,447 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:56,447 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(17)), (np.int64(15), np.int64(10)))
2025-04-11 19:04:56,454 [INFO] Final candidates: []
2025-04-11 19:04:56,454 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:56,461 [INFO] Final candidates: []
2025-04-11 19:04:56,461 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:56,462 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:56,842 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:56,842 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(5)), (np.int64(7), np.int64(2)))
2025-04-11 19:04:56,844 [DEBUG] board coords: [(7, 5), (8, 5), (9, 5), (10, 5), (11, 5), (12, 5)]
2025-04-11 19:04:56,844 [DEBUG] board values[np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(0), np.int64(1)]
2025-04-11 19:04:56,844 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 5), (11, 5)]
2025-04-11 19:04:56,844 [DEBUG] check_window_intermediate_custom: For L=6, window [1 0 1 1 0 1] with coords [(7, 5), (8, 5), (9, 5), (10, 5), (11, 5), (12, 5)] triggers candidate.
2025-04-11 19:04:56,849 [INFO] Final candidates: [(8, 5), (11, 5)]
2025-04-11 19:04:56,849 [INFO] Phase win: Collected 1unique candidate(s):[((8, 5), (11, 5))]
2025-04-11 19:04:56,849 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 19:04:56,855 [INFO] Final candidates: []
2025-04-11 19:04:56,855 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:56,856 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:57,023 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:57,023 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(4)), (np.int64(11), np.int64(10)))
2025-04-11 19:04:57,030 [INFO] Final candidates: []
2025-04-11 19:04:57,030 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:57,036 [INFO] Final candidates: []
2025-04-11 19:04:57,036 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:57,037 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:57,292 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:57,292 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(0)), (np.int64(15), np.int64(6)))
2025-04-11 19:04:57,298 [INFO] Final candidates: []
2025-04-11 19:04:57,298 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:57,305 [INFO] Final candidates: []
2025-04-11 19:04:57,305 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:57,306 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:57,354 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:57,354 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(18), np.int64(7)), (np.int64(18), np.int64(0)))
2025-04-11 19:04:57,361 [INFO] Final candidates: []
2025-04-11 19:04:57,361 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:57,367 [INFO] Final candidates: []
2025-04-11 19:04:57,367 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:57,368 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:57,540 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:57,540 [INFO] MCTS: Search finished. Best move selected with 1 visits.
2025-04-11 19:04:57,540 [INFO] MCTS selected move: H19,T14
2025-04-11 19:04:57,540 [INFO] ===============NEW MOVE================
2025-04-11 19:04:57,750 [INFO] Starting pre-MCTS candidate collection.
2025-04-11 19:04:57,756 [INFO] Final candidates: []
2025-04-11 19:04:57,756 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:57,760 [DEBUG] board coords: [(8, 2), (9, 3), (10, 4), (11, 5), (12, 6), (13, 7)]
2025-04-11 19:04:57,760 [DEBUG] board values[np.int64(2), np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:57,760 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 3), (10, 4)]
2025-04-11 19:04:57,760 [DEBUG] check_window_intermediate_custom: For L=6, window [2 0 0 2 2 2] with coords [(8, 2), (9, 3), (10, 4), (11, 5), (12, 6), (13, 7)] triggers candidate.
2025-04-11 19:04:57,761 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:04:57,761 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:57,762 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:04:57,762 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:04:57,762 [DEBUG] check_window_margin_custom: For L=6, window [0 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4)] triggers candidate.
2025-04-11 19:04:57,762 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:57,762 [DEBUG] board coords: [(8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)]
2025-04-11 19:04:57,762 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:04:57,762 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 4), (13, 3)]
2025-04-11 19:04:57,762 [DEBUG] check_window_intermediate_custom (only one inserted(12, 4)): For L=6, window [2 2 2 2 0 0] with coords [(8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:04:57,763 [INFO] Final candidates: [(7, 9), (10, 4), (9, 3), (12, 4)]
2025-04-11 19:04:57,763 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (9, 3)), ((10, 4), (12, 4)), ((10, 4), (9, 3)), ((9, 3), (12, 4)), ((7, 9), (10, 4)), ((7, 9), (12, 4))]
2025-04-11 19:04:57,763 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:04:57,763 [INFO] MCTS: Starting search for 100 iterations.
2025-04-11 19:04:57,763 [DEBUG] Tree_policy iteration 1: Expanding move ((9, 3), (12, 4))
2025-04-11 19:04:57,767 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:04:57,767 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:04:57,767 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:04:57,767 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:04:57,769 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:04:57,769 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:57,769 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:04:57,769 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:04:57,769 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:04:57,769 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:04:57,769 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:04:57,769 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:04:57,770 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:04:57,770 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:04:57,770 [INFO] Phase win: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:04:57,770 [INFO] Phase 1 (immediate win): 6 candidate(s) found.
2025-04-11 19:04:57,776 [INFO] Final candidates: []
2025-04-11 19:04:57,776 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:57,777 [DEBUG] MCTS iteration 0: reached a node with 0 visits.
2025-04-11 19:04:57,777 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:57,866 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:57,866 [DEBUG] Tree_policy iteration 1: Expanding move ((7, 9), (9, 3))
2025-04-11 19:04:57,870 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:04:57,870 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:04:57,870 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:04:57,870 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:04:57,872 [DEBUG] board coords: [(5, 11), (6, 10), (7, 9), (8, 8), (9, 7), (10, 6)]
2025-04-11 19:04:57,872 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:57,872 [DEBUG] check_window_intermediate_custom: empty_cells=[(5, 11), (6, 10)]
2025-04-11 19:04:57,872 [DEBUG] check_window_intermediate_custom (only one inserted(6, 10)): For L=6, window [0 0 2 2 2 2] with coords [(5, 11), (6, 10), (7, 9), (8, 8), (9, 7), (10, 6)] triggers candidate.
2025-04-11 19:04:57,872 [DEBUG] board coords: [(8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)]
2025-04-11 19:04:57,872 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:04:57,872 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 4), (13, 3)]
2025-04-11 19:04:57,872 [DEBUG] check_window_intermediate_custom (only one inserted(12, 4)): For L=6, window [2 2 2 2 0 0] with coords [(8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:04:57,873 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4)] triggers candidate.
2025-04-11 19:04:57,873 [INFO] Final candidates: [(12, 4), (10, 4), (7, 1), (6, 10)]
2025-04-11 19:04:57,873 [INFO] Phase win: Collected 6unique candidate(s):[((12, 4), (7, 1)), ((12, 4), (10, 4)), ((10, 4), (6, 10)), ((7, 1), (6, 10)), ((12, 4), (6, 10)), ((10, 4), (7, 1))]
2025-04-11 19:04:57,873 [INFO] Phase 1 (immediate win): 6 candidate(s) found.
2025-04-11 19:04:57,879 [INFO] Final candidates: []
2025-04-11 19:04:57,879 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:57,880 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:58,151 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:58,152 [DEBUG] Tree_policy iteration 1: Expanding move ((7, 9), (10, 4))
2025-04-11 19:04:58,156 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:04:58,156 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:58,156 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (9, 3)]
2025-04-11 19:04:58,156 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 0 2 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:04:58,157 [DEBUG] board coords: [(5, 11), (6, 10), (7, 9), (8, 8), (9, 7), (10, 6)]
2025-04-11 19:04:58,157 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:58,157 [DEBUG] check_window_intermediate_custom: empty_cells=[(5, 11), (6, 10)]
2025-04-11 19:04:58,157 [DEBUG] check_window_intermediate_custom (only one inserted(6, 10)): For L=6, window [0 0 2 2 2 2] with coords [(5, 11), (6, 10), (7, 9), (8, 8), (9, 7), (10, 6)] triggers candidate.
2025-04-11 19:04:58,157 [DEBUG] board coords: [(8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)]
2025-04-11 19:04:58,157 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:04:58,157 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 4), (13, 3)]
2025-04-11 19:04:58,157 [DEBUG] check_window_intermediate_custom (only one inserted(12, 4)): For L=6, window [2 2 2 2 0 0] with coords [(8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:04:58,158 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4)] triggers candidate.
2025-04-11 19:04:58,158 [INFO] Final candidates: [(12, 4), (7, 1), (6, 10), (9, 3)]
2025-04-11 19:04:58,158 [INFO] Phase win: Collected 6unique candidate(s):[((12, 4), (7, 1)), ((6, 10), (9, 3)), ((7, 1), (9, 3)), ((7, 1), (6, 10)), ((12, 4), (6, 10)), ((12, 4), (9, 3))]
2025-04-11 19:04:58,158 [INFO] Phase 1 (immediate win): 6 candidate(s) found.
2025-04-11 19:04:58,165 [INFO] Final candidates: []
2025-04-11 19:04:58,165 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:58,166 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:58,271 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:58,271 [DEBUG] Tree_policy iteration 1: Expanding move ((10, 4), (9, 3))
2025-04-11 19:04:58,275 [DEBUG] board coords: [(6, 0), (7, 1), (8, 2), (9, 3), (10, 4), (11, 5)]
2025-04-11 19:04:58,275 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:58,275 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 0), (7, 1)]
2025-04-11 19:04:58,275 [DEBUG] check_window_intermediate_custom (only one inserted(7, 1)): For L=6, window [0 0 2 2 2 2] with coords [(6, 0), (7, 1), (8, 2), (9, 3), (10, 4), (11, 5)] triggers candidate.
2025-04-11 19:04:58,277 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:04:58,277 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:58,277 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:04:58,277 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:04:58,277 [DEBUG] check_window_margin_custom: For L=6, window [0 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4)] triggers candidate.
2025-04-11 19:04:58,277 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:04:58,277 [DEBUG] board coords: [(8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)]
2025-04-11 19:04:58,277 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:04:58,277 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 4), (13, 3)]
2025-04-11 19:04:58,277 [DEBUG] check_window_intermediate_custom (only one inserted(12, 4)): For L=6, window [2 2 2 2 0 0] with coords [(8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:04:58,278 [INFO] Final candidates: [(7, 9), (12, 4), (7, 1)]
2025-04-11 19:04:58,278 [INFO] Phase win: Collected 3unique candidate(s):[((7, 9), (7, 1)), ((12, 4), (7, 1)), ((7, 9), (12, 4))]
2025-04-11 19:04:58,278 [INFO] Phase 1 (immediate win): 3 candidate(s) found.
2025-04-11 19:04:58,284 [INFO] Final candidates: []
2025-04-11 19:04:58,284 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:58,285 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:58,286 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:58,286 [DEBUG] Tree_policy iteration 1: Expanding move ((7, 9), (12, 4))
2025-04-11 19:04:58,290 [DEBUG] board coords: [(8, 2), (9, 3), (10, 4), (11, 5), (12, 6), (13, 7)]
2025-04-11 19:04:58,290 [DEBUG] board values[np.int64(2), np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:58,290 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 3), (10, 4)]
2025-04-11 19:04:58,290 [DEBUG] check_window_intermediate_custom: For L=6, window [2 0 0 2 2 2] with coords [(8, 2), (9, 3), (10, 4), (11, 5), (12, 6), (13, 7)] triggers candidate.
2025-04-11 19:04:58,291 [DEBUG] board coords: [(5, 11), (6, 10), (7, 9), (8, 8), (9, 7), (10, 6)]
2025-04-11 19:04:58,291 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:58,291 [DEBUG] check_window_intermediate_custom: empty_cells=[(5, 11), (6, 10)]
2025-04-11 19:04:58,291 [DEBUG] check_window_intermediate_custom (only one inserted(6, 10)): For L=6, window [0 0 2 2 2 2] with coords [(5, 11), (6, 10), (7, 9), (8, 8), (9, 7), (10, 6)] triggers candidate.
2025-04-11 19:04:58,291 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:04:58,291 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:04:58,291 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:04:58,291 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:04:58,292 [INFO] Final candidates: [(13, 3), (10, 4), (6, 10), (9, 3)]
2025-04-11 19:04:58,292 [INFO] Phase win: Collected 6unique candidate(s):[((13, 3), (6, 10)), ((6, 10), (9, 3)), ((10, 4), (9, 3)), ((13, 3), (9, 3)), ((10, 4), (6, 10)), ((13, 3), (10, 4))]
2025-04-11 19:04:58,292 [INFO] Phase 1 (immediate win): 6 candidate(s) found.
2025-04-11 19:04:58,298 [INFO] Final candidates: []
2025-04-11 19:04:58,298 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:58,299 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:58,299 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:58,300 [DEBUG] Tree_policy iteration 1: Expanding move ((10, 4), (12, 4))
2025-04-11 19:04:58,304 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:04:58,304 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:58,304 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (9, 3)]
2025-04-11 19:04:58,304 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 0 2 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:04:58,305 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:04:58,305 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:58,305 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:04:58,305 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:04:58,306 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:04:58,306 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:04:58,306 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:04:58,306 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:04:58,306 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:04:58,307 [INFO] Final candidates: [(7, 9), (13, 3), (7, 1), (9, 3)]
2025-04-11 19:04:58,307 [INFO] Phase win: Collected 6unique candidate(s):[((7, 9), (9, 3)), ((13, 3), (9, 3)), ((7, 9), (13, 3)), ((7, 1), (9, 3)), ((7, 9), (7, 1)), ((13, 3), (7, 1))]
2025-04-11 19:04:58,307 [INFO] Phase 1 (immediate win): 6 candidate(s) found.
2025-04-11 19:04:58,313 [INFO] Final candidates: []
2025-04-11 19:04:58,313 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:04:58,314 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:58,373 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:58,373 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:58,374 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(1)), (np.int64(6), np.int64(8)))
2025-04-11 19:04:58,384 [INFO] Final candidates: []
2025-04-11 19:04:58,384 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:58,394 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:04:58,394 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:58,394 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:04:58,394 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:04:58,395 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:04:58,395 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:04:58,395 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:04:58,395 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:04:58,395 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:04:58,396 [INFO] Final candidates: [(7, 9), (10, 4), (13, 3)]
2025-04-11 19:04:58,396 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 9), (10, 4))]
2025-04-11 19:04:58,396 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 19:04:58,396 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:58,479 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:58,479 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:58,479 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(15)), (np.int64(15), np.int64(12)))
2025-04-11 19:04:58,485 [INFO] Final candidates: []
2025-04-11 19:04:58,485 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:58,489 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:04:58,489 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:04:58,489 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:04:58,489 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:04:58,491 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:04:58,491 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:58,491 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:04:58,491 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:04:58,491 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:04:58,491 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:04:58,491 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:04:58,491 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:04:58,492 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:04:58,492 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:04:58,492 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:04:58,492 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:04:58,492 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:58,581 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:58,582 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:58,582 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(1)), (np.int64(13), np.int64(5)))
2025-04-11 19:04:58,588 [INFO] Final candidates: []
2025-04-11 19:04:58,588 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:58,593 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:04:58,593 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:58,593 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:04:58,593 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:04:58,593 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:04:58,593 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:04:58,593 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:04:58,593 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:04:58,594 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:04:58,594 [INFO] Final candidates: [(7, 9), (10, 4), (13, 3)]
2025-04-11 19:04:58,594 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 9), (10, 4))]
2025-04-11 19:04:58,594 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 19:04:58,594 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:58,709 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:58,709 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:58,709 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(18), np.int64(0)), (np.int64(12), np.int64(11)))
2025-04-11 19:04:58,716 [INFO] Final candidates: []
2025-04-11 19:04:58,716 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:58,720 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:04:58,720 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:04:58,720 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:04:58,720 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:04:58,721 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:04:58,721 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:58,721 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:04:58,721 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:04:58,721 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:04:58,721 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:04:58,721 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:04:58,721 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:04:58,722 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:04:58,722 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:04:58,722 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:04:58,722 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:04:58,722 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:58,799 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:58,799 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:58,799 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(9)), (np.int64(16), np.int64(12)))
2025-04-11 19:04:58,806 [INFO] Final candidates: []
2025-04-11 19:04:58,806 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:58,810 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:04:58,810 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:04:58,810 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:04:58,810 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:04:58,811 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:04:58,811 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:58,811 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:04:58,811 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:04:58,811 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:04:58,812 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:04:58,812 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:04:58,812 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:04:58,812 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:04:58,813 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:04:58,813 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:04:58,813 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:04:58,813 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:58,978 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:58,978 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:58,978 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(18), np.int64(2)), (np.int64(15), np.int64(17)))
2025-04-11 19:04:58,984 [INFO] Final candidates: []
2025-04-11 19:04:58,984 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:58,988 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:04:58,988 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:04:58,988 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:04:58,988 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:04:58,990 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:04:58,990 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:58,990 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:04:58,990 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:04:58,990 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:04:58,990 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:04:58,990 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:04:58,990 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:04:58,991 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:04:58,991 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:04:58,991 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:04:58,991 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:04:58,991 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:59,092 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:59,092 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:59,092 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(9)), (np.int64(11), np.int64(4)))
2025-04-11 19:04:59,096 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:04:59,096 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1)]
2025-04-11 19:04:59,096 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (13, 6)]
2025-04-11 19:04:59,096 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 1 0 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:04:59,096 [DEBUG] board coords: [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)]
2025-04-11 19:04:59,096 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 19:04:59,096 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 6), (16, 9)]
2025-04-11 19:04:59,096 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 0 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:04:59,099 [INFO] Final candidates: [(16, 9), (13, 6), (10, 3)]
2025-04-11 19:04:59,099 [INFO] Phase win: Collected 3unique candidate(s):[((16, 9), (13, 6)), ((13, 6), (10, 3)), ((16, 9), (10, 3))]
2025-04-11 19:04:59,099 [INFO] Phase 1 (immediate win): 3 candidate(s) found.
2025-04-11 19:04:59,103 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:04:59,103 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:04:59,103 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:04:59,103 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:04:59,104 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:04:59,104 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:59,104 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:04:59,104 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:04:59,104 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:04:59,104 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:04:59,104 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:04:59,104 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:04:59,105 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:04:59,105 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:04:59,105 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:04:59,105 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:04:59,105 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:59,178 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:59,178 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:59,178 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(2), np.int64(2)), (np.int64(17), np.int64(6)))
2025-04-11 19:04:59,184 [INFO] Final candidates: []
2025-04-11 19:04:59,184 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:59,188 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:04:59,188 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:04:59,188 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:04:59,188 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:04:59,190 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:04:59,190 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:59,190 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:04:59,190 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:04:59,190 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:04:59,190 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:04:59,190 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:04:59,190 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:04:59,191 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:04:59,191 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:04:59,191 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:04:59,191 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:04:59,191 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:59,333 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:59,333 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:59,333 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(4)), (np.int64(0), np.int64(3)))
2025-04-11 19:04:59,339 [INFO] Final candidates: []
2025-04-11 19:04:59,339 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:59,343 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:04:59,343 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:04:59,343 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:04:59,343 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:04:59,345 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:04:59,345 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:59,345 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:04:59,345 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:04:59,345 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:04:59,345 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:04:59,345 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:04:59,345 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:04:59,346 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:04:59,346 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:04:59,346 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:04:59,346 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:04:59,346 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:59,379 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:59,380 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:59,380 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(2)), (np.int64(15), np.int64(6)))
2025-04-11 19:04:59,386 [INFO] Final candidates: []
2025-04-11 19:04:59,386 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:59,391 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:04:59,391 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:04:59,391 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:04:59,391 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:04:59,393 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:04:59,393 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:59,393 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:04:59,393 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:04:59,393 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:04:59,393 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:04:59,393 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:04:59,393 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:04:59,394 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:04:59,394 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:04:59,394 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:04:59,394 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:04:59,394 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:59,631 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:04:59,631 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:59,631 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(10)), (np.int64(11), np.int64(18)))
2025-04-11 19:04:59,638 [INFO] Final candidates: []
2025-04-11 19:04:59,638 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:59,642 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:04:59,642 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:04:59,642 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:04:59,642 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:04:59,643 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:04:59,643 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:59,643 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:04:59,643 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:04:59,644 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:04:59,644 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:04:59,644 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:04:59,644 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:04:59,644 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:04:59,645 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:04:59,645 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:04:59,645 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:04:59,645 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:59,800 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:59,801 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:59,801 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(10)), (np.int64(18), np.int64(0)))
2025-04-11 19:04:59,807 [INFO] Final candidates: []
2025-04-11 19:04:59,807 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:59,811 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:04:59,811 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:04:59,811 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:04:59,811 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:04:59,813 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:04:59,813 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:59,813 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:04:59,813 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:04:59,813 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:04:59,813 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:04:59,813 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:04:59,813 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:04:59,814 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:04:59,814 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:04:59,814 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:04:59,814 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:04:59,814 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:59,815 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:59,816 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:59,816 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(1), np.int64(3)), (np.int64(6), np.int64(8)))
2025-04-11 19:04:59,822 [INFO] Final candidates: []
2025-04-11 19:04:59,822 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:59,826 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:04:59,826 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:04:59,826 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:04:59,826 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:04:59,828 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:04:59,828 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:59,828 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:04:59,828 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:04:59,828 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:04:59,828 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:04:59,828 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:04:59,828 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:04:59,829 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:04:59,829 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:04:59,829 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:04:59,829 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:04:59,829 [INFO] Default policy: Starting random playout.
2025-04-11 19:04:59,949 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:04:59,950 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:04:59,950 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(18), np.int64(3)), (np.int64(7), np.int64(7)))
2025-04-11 19:04:59,956 [INFO] Final candidates: []
2025-04-11 19:04:59,956 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:04:59,960 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:04:59,960 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:04:59,960 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:04:59,960 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:04:59,962 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:04:59,962 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:04:59,962 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:04:59,962 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:04:59,962 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:04:59,962 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:04:59,962 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:04:59,962 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:04:59,963 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:04:59,963 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:04:59,963 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:04:59,963 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:04:59,963 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:00,146 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:05:00,146 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:00,146 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(18)), (np.int64(17), np.int64(10)))
2025-04-11 19:05:00,151 [DEBUG] board coords: [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)]
2025-04-11 19:05:00,151 [DEBUG] board values[np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(0), np.int64(1)]
2025-04-11 19:05:00,151 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 6), (16, 9)]
2025-04-11 19:05:00,151 [DEBUG] check_window_intermediate_custom: For L=6, window [1 0 1 1 0 1] with coords [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)] triggers candidate.
2025-04-11 19:05:00,153 [INFO] Final candidates: [(16, 9), (13, 6)]
2025-04-11 19:05:00,153 [INFO] Phase win: Collected 1unique candidate(s):[((16, 9), (13, 6))]
2025-04-11 19:05:00,153 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 19:05:00,161 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:00,161 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:00,161 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:00,161 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:00,163 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:00,163 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:00,163 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:00,164 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:00,164 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:00,164 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:00,164 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:00,164 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:00,164 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:00,165 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:05:00,165 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:05:00,165 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:05:00,165 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:00,327 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:05:00,328 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:00,328 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(16)), (np.int64(14), np.int64(4)))
2025-04-11 19:05:00,334 [INFO] Final candidates: []
2025-04-11 19:05:00,334 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:05:00,338 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:00,338 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:00,338 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:00,338 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:00,340 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:00,340 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:00,340 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:00,340 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:00,340 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:00,340 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:00,340 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:00,340 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:00,341 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:00,341 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:05:00,341 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:05:00,341 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:05:00,341 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:00,495 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:05:00,495 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:00,495 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(17), np.int64(9)), (np.int64(18), np.int64(2)))
2025-04-11 19:05:00,503 [INFO] Final candidates: []
2025-04-11 19:05:00,503 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:05:00,507 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:00,507 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:00,507 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:00,507 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:00,509 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:00,509 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:00,509 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:00,509 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:00,509 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:00,509 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:00,509 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:00,509 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:00,510 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:00,510 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:05:00,510 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:05:00,510 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:05:00,510 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:00,685 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:05:00,685 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:00,685 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(17), np.int64(2)), (np.int64(16), np.int64(0)))
2025-04-11 19:05:00,692 [INFO] Final candidates: []
2025-04-11 19:05:00,692 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:05:00,696 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:00,696 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:00,696 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:00,696 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:00,698 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:00,698 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:00,698 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:00,698 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:00,698 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:00,698 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:00,698 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:00,698 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:00,699 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:00,699 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:05:00,699 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:05:00,699 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:05:00,699 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:00,740 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:05:00,741 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:00,741 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(1)), (np.int64(16), np.int64(4)))
2025-04-11 19:05:00,747 [INFO] Final candidates: []
2025-04-11 19:05:00,747 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:05:00,751 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:00,751 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:00,751 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:00,751 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:00,753 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:00,753 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:00,753 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:00,753 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:00,753 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:00,753 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:00,753 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:00,753 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:00,754 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:00,754 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:05:00,754 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:05:00,754 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:05:00,754 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:00,799 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:05:00,799 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:00,799 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(17)), (np.int64(11), np.int64(10)))
2025-04-11 19:05:00,805 [INFO] Final candidates: []
2025-04-11 19:05:00,805 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:05:00,809 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:00,809 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:00,809 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:00,810 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:00,811 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:00,811 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:00,811 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:00,811 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:00,811 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:00,811 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:00,811 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:00,812 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:00,812 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:00,812 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:05:00,812 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:05:00,812 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:05:00,813 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:01,011 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:05:01,012 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:01,012 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(1)), (np.int64(16), np.int64(11)))
2025-04-11 19:05:01,018 [INFO] Final candidates: []
2025-04-11 19:05:01,018 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:05:01,023 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:01,023 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:01,024 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:01,024 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:01,024 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:01,024 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:01,024 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:01,024 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:01,025 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:01,025 [INFO] Final candidates: [(7, 9), (10, 4), (13, 3)]
2025-04-11 19:05:01,025 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 9), (10, 4))]
2025-04-11 19:05:01,025 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 19:05:01,025 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:01,100 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:05:01,100 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:01,100 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(11)), (np.int64(17), np.int64(1)))
2025-04-11 19:05:01,106 [INFO] Final candidates: []
2025-04-11 19:05:01,106 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:05:01,110 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:01,110 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:01,110 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:01,110 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:01,112 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:01,112 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:01,112 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:01,112 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:01,112 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:01,112 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:01,112 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:01,112 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:01,113 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:01,113 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:05:01,113 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:05:01,113 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:05:01,113 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:01,129 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:05:01,130 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:01,130 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(17), np.int64(2)), (np.int64(15), np.int64(6)))
2025-04-11 19:05:01,136 [INFO] Final candidates: []
2025-04-11 19:05:01,136 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:05:01,140 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:01,140 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:01,140 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:01,140 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:01,142 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:01,142 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:01,142 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:01,142 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:01,142 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:01,142 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:01,142 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:01,142 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:01,143 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:01,143 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:05:01,143 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:05:01,143 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:05:01,143 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:01,250 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:05:01,250 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:01,250 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(18), np.int64(2)), (np.int64(9), np.int64(2)))
2025-04-11 19:05:01,260 [INFO] Final candidates: []
2025-04-11 19:05:01,260 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:05:01,264 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:01,264 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:01,264 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:01,265 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:01,266 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:01,266 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:01,266 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:01,266 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:01,266 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:01,266 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:01,266 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:01,266 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:01,267 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:01,267 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:05:01,267 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:05:01,267 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:05:01,267 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:01,276 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:05:01,277 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:01,277 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(16)), (np.int64(10), np.int64(11)))
2025-04-11 19:05:01,283 [INFO] Final candidates: []
2025-04-11 19:05:01,283 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:05:01,287 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:01,287 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:01,287 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:01,287 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:01,289 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:01,289 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:01,289 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:01,289 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:01,289 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:01,289 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:01,289 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:01,289 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:01,290 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:01,290 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:05:01,290 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:05:01,290 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:05:01,290 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:01,564 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:05:01,564 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:01,564 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(1)), (np.int64(15), np.int64(12)))
2025-04-11 19:05:01,570 [INFO] Final candidates: []
2025-04-11 19:05:01,570 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:05:01,574 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:01,574 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:01,574 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:01,574 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:01,576 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:01,576 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:01,576 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:01,576 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:01,576 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:01,576 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:01,576 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:01,576 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:01,577 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:01,577 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:05:01,577 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:05:01,577 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:05:01,577 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:01,751 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:05:01,752 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:01,752 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(10)), (np.int64(11), np.int64(16)))
2025-04-11 19:05:01,758 [INFO] Final candidates: []
2025-04-11 19:05:01,758 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:05:01,762 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:01,762 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:01,762 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:01,762 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:01,764 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:01,764 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:01,764 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:01,764 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:01,764 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:01,764 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:01,764 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:01,764 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:01,765 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:01,765 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:05:01,765 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:05:01,765 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:05:01,765 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:01,814 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:05:01,814 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:01,814 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(0)), (np.int64(14), np.int64(11)))
2025-04-11 19:05:01,820 [INFO] Final candidates: []
2025-04-11 19:05:01,820 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:05:01,824 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:01,824 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:01,824 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:01,824 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:01,826 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:01,826 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:01,826 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:01,826 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:01,826 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:01,826 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:01,826 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:01,826 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:01,827 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:01,827 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:05:01,827 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:05:01,827 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:05:01,827 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:01,886 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:05:01,887 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:01,887 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(6)), (np.int64(18), np.int64(2)))
2025-04-11 19:05:01,893 [INFO] Final candidates: []
2025-04-11 19:05:01,893 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:05:01,897 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:01,897 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:01,897 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:01,897 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:01,899 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:01,899 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:01,899 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:01,899 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:01,899 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:01,899 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:01,899 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:01,899 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:01,900 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:01,900 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:05:01,900 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:05:01,900 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:05:01,900 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:01,908 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:05:01,909 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:01,909 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(2), np.int64(2)), (np.int64(10), np.int64(17)))
2025-04-11 19:05:01,915 [INFO] Final candidates: []
2025-04-11 19:05:01,915 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:05:01,919 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:01,919 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:01,919 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:01,919 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:01,921 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:01,921 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:01,921 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:01,921 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:01,921 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:01,921 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:01,921 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:01,921 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:01,922 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:01,922 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:05:01,922 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:05:01,922 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:05:01,922 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:01,985 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:05:01,985 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:01,985 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(17)), (np.int64(16), np.int64(10)))
2025-04-11 19:05:01,992 [INFO] Final candidates: []
2025-04-11 19:05:01,992 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:05:01,996 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:01,996 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:01,996 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:01,996 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:01,997 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:01,997 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:01,997 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:01,997 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:01,998 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:01,998 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:01,998 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:01,998 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:01,998 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:01,999 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:05:01,999 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:05:01,999 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:05:01,999 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:02,131 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:05:02,132 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:02,132 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(1)), (np.int64(6), np.int64(9)))
2025-04-11 19:05:02,146 [INFO] Final candidates: []
2025-04-11 19:05:02,147 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:05:02,151 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:02,151 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:02,151 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:02,151 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:02,152 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:02,152 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:02,152 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:02,152 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:02,153 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:02,153 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:02,153 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:02,153 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:02,153 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:02,154 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:05:02,154 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:05:02,154 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:05:02,154 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:02,198 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:05:02,198 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:02,199 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(0), np.int64(2)), (np.int64(15), np.int64(12)))
2025-04-11 19:05:02,206 [INFO] Final candidates: []
2025-04-11 19:05:02,206 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:05:02,210 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:02,210 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:02,210 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:02,210 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:02,212 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:02,212 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:02,212 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:02,212 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:02,212 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:02,212 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:02,212 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:02,212 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:02,213 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:02,213 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:05:02,213 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:05:02,213 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:05:02,213 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:02,230 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:05:02,231 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:02,231 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(5)), (np.int64(10), np.int64(12)))
2025-04-11 19:05:02,237 [INFO] Final candidates: []
2025-04-11 19:05:02,237 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:05:02,241 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:02,241 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:02,241 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:02,241 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:02,243 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:02,243 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:02,243 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:02,243 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:02,243 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:02,243 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:02,243 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:02,243 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:02,244 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:02,244 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:05:02,244 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:05:02,244 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:05:02,244 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:02,250 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:05:02,250 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:02,250 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(17), np.int64(9)), (np.int64(12), np.int64(16)))
2025-04-11 19:05:02,257 [INFO] Final candidates: []
2025-04-11 19:05:02,257 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:05:02,261 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:02,261 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:02,261 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:02,261 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:02,262 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:02,262 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:02,262 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:02,263 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:02,263 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:02,263 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:02,263 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:02,263 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:02,263 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:02,264 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:05:02,264 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:05:02,264 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:05:02,264 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:02,312 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:05:02,312 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:02,312 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(11)), (np.int64(16), np.int64(4)))
2025-04-11 19:05:02,318 [INFO] Final candidates: []
2025-04-11 19:05:02,318 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:05:02,322 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:02,322 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:02,322 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:02,322 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:02,324 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:02,324 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:02,324 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:02,324 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:02,324 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:02,324 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:02,324 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:02,324 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:02,325 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:02,325 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:05:02,325 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:05:02,325 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:05:02,325 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:02,332 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:05:02,332 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:02,332 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(17), np.int64(5)), (np.int64(17), np.int64(9)))
2025-04-11 19:05:02,339 [INFO] Final candidates: []
2025-04-11 19:05:02,339 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:05:02,343 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:02,343 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:02,343 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:02,343 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:02,344 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:02,344 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:02,344 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:02,344 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:02,345 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:02,345 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:02,345 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:02,345 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:02,345 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:02,346 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:05:02,346 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:05:02,346 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:05:02,346 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:02,526 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:05:02,526 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:02,526 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(8)), (np.int64(15), np.int64(1)))
2025-04-11 19:05:02,532 [INFO] Final candidates: []
2025-04-11 19:05:02,532 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:05:02,536 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:02,536 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:02,536 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:02,536 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:02,538 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:02,538 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:02,538 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:02,538 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:02,538 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:02,538 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:02,538 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:02,538 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:02,539 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:02,539 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:05:02,539 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:05:02,539 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:05:02,539 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:02,551 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:05:02,552 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:02,552 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(2), np.int64(1)), (np.int64(2), np.int64(3)))
2025-04-11 19:05:02,561 [INFO] Final candidates: []
2025-04-11 19:05:02,561 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:05:02,565 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:02,565 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:02,565 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:02,565 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:02,567 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:02,567 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:02,567 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:02,567 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:02,567 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:02,567 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:02,567 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:02,567 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:02,568 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:02,568 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:05:02,568 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:05:02,568 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:05:02,568 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:02,878 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:05:02,878 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:02,878 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(18)), (np.int64(2), np.int64(1)))
2025-04-11 19:05:02,884 [INFO] Final candidates: []
2025-04-11 19:05:02,884 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:05:02,888 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:02,888 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:02,889 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:02,889 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:02,890 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:02,890 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:02,890 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:02,890 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:02,890 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:02,890 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:02,890 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:02,890 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:02,891 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:02,892 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:05:02,892 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:05:02,892 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:05:02,892 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:03,034 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:05:03,034 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:03,034 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(6)), (np.int64(17), np.int64(6)))
2025-04-11 19:05:03,041 [INFO] Final candidates: []
2025-04-11 19:05:03,041 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:05:03,044 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:03,044 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:03,045 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:03,045 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:03,046 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:03,046 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:03,046 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:03,046 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:03,046 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:03,046 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:03,046 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:03,046 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:03,047 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:03,047 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:05:03,047 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:05:03,047 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:05:03,047 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:03,179 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:05:03,179 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:03,179 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(0)), (np.int64(6), np.int64(8)))
2025-04-11 19:05:03,186 [INFO] Final candidates: []
2025-04-11 19:05:03,186 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:05:03,190 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:03,190 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:03,190 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:03,190 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:03,191 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:03,191 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:03,191 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:03,191 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:03,191 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:03,191 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:03,191 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:03,191 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:03,192 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:03,193 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:05:03,193 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:05:03,193 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:05:03,193 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:03,424 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:05:03,424 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:03,424 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(18)), (np.int64(15), np.int64(2)))
2025-04-11 19:05:03,431 [INFO] Final candidates: []
2025-04-11 19:05:03,431 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:05:03,434 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:03,435 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:03,435 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:03,435 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:03,436 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:03,436 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:03,436 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:03,436 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:03,436 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:03,436 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:03,437 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:03,437 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:03,437 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:03,438 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:05:03,438 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:05:03,438 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:05:03,438 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:03,566 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:05:03,566 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:03,567 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(2)), (np.int64(11), np.int64(10)))
2025-04-11 19:05:03,573 [INFO] Final candidates: []
2025-04-11 19:05:03,573 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:05:03,578 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:03,578 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:03,578 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:03,578 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:03,582 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:03,582 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:03,582 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:03,582 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:03,583 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:03,583 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:03,583 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:03,583 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:03,584 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:03,585 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:05:03,585 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:05:03,585 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:05:03,585 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:03,722 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:05:03,722 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:03,722 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(9)), (np.int64(18), np.int64(9)))
2025-04-11 19:05:03,729 [INFO] Final candidates: []
2025-04-11 19:05:03,729 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:05:03,733 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:03,733 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:03,733 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:03,733 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:03,734 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:03,734 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:03,734 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:03,734 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:03,735 [INFO] Final candidates: [(13, 3), (10, 4), (7, 1)]
2025-04-11 19:05:03,735 [INFO] Phase defense: Collected 3unique candidate(s):[((13, 3), (10, 4)), ((13, 3), (7, 1)), ((10, 4), (7, 1))]
2025-04-11 19:05:03,735 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 19:05:03,735 [DEBUG] MCTS iteration 50: reached a node with 0 visits.
2025-04-11 19:05:03,735 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:03,988 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:05:03,988 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:03,989 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(18)), (np.int64(10), np.int64(12)))
2025-04-11 19:05:03,995 [INFO] Final candidates: []
2025-04-11 19:05:03,995 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:05:03,999 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:03,999 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:03,999 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:03,999 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:04,000 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:04,000 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:04,000 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:04,000 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:04,001 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:04,001 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:04,001 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:04,001 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:04,001 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:04,002 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:05:04,002 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:05:04,002 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:05:04,002 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:04,049 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:05:04,049 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:04,050 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(3)), (np.int64(16), np.int64(12)))
2025-04-11 19:05:04,056 [INFO] Final candidates: []
2025-04-11 19:05:04,056 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:05:04,060 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:04,060 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:04,060 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:04,060 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:04,062 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:04,062 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:04,062 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:04,062 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:04,062 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:04,062 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:04,062 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:04,062 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:04,063 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:04,063 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:05:04,063 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:05:04,063 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:05:04,063 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:04,091 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:05:04,092 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:04,092 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(12)), (np.int64(10), np.int64(2)))
2025-04-11 19:05:04,104 [INFO] Final candidates: []
2025-04-11 19:05:04,104 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:05:04,108 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:04,108 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:04,108 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:04,108 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:04,110 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:04,110 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:04,110 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:04,110 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:04,110 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:04,110 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:04,110 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:04,110 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:04,111 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:04,111 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:05:04,111 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:05:04,111 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:05:04,111 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:04,165 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:05:04,165 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:04,165 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(13)), (np.int64(8), np.int64(6)))
2025-04-11 19:05:04,172 [INFO] Final candidates: []
2025-04-11 19:05:04,172 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:05:04,176 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:04,176 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:04,176 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:04,176 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:04,178 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:04,178 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:04,178 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:04,178 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:04,178 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:04,178 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:04,178 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:04,178 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:04,179 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:04,179 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:05:04,179 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:05:04,179 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:05:04,179 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:04,236 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:05:04,237 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:04,237 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(1), np.int64(4)), (np.int64(9), np.int64(6)))
2025-04-11 19:05:04,243 [INFO] Final candidates: []
2025-04-11 19:05:04,243 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:05:04,247 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:04,247 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:04,247 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:04,247 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:04,249 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:04,249 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:04,249 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:04,249 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:04,249 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:04,249 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:04,249 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:04,249 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:04,250 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:04,250 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:05:04,250 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:05:04,250 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:05:04,250 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:04,340 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:05:04,341 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:04,341 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(4)), (np.int64(15), np.int64(1)))
2025-04-11 19:05:04,347 [INFO] Final candidates: []
2025-04-11 19:05:04,347 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:05:04,351 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:04,351 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:04,351 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:04,351 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:04,353 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:04,353 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:04,353 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:04,353 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:04,353 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:04,353 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:04,353 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:04,353 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:04,354 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:04,354 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:05:04,354 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:05:04,354 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:05:04,354 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:04,452 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:05:04,452 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:04,452 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(17), np.int64(5)), (np.int64(11), np.int64(11)))
2025-04-11 19:05:04,458 [INFO] Final candidates: []
2025-04-11 19:05:04,458 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:05:04,462 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:04,462 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:04,463 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:04,463 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:04,464 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:04,464 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:04,464 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:04,464 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:04,464 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:04,464 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:04,465 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:04,465 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:04,465 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:04,466 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:05:04,466 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:05:04,466 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:05:04,466 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:04,474 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:05:04,475 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:04,475 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(3)), (np.int64(15), np.int64(17)))
2025-04-11 19:05:04,479 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:05:04,479 [DEBUG] board values[np.int64(1), np.int64(0), np.int64(1), np.int64(0), np.int64(1), np.int64(1)]
2025-04-11 19:05:04,479 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 4), (13, 6)]
2025-04-11 19:05:04,479 [DEBUG] check_window_intermediate_custom: For L=6, window [1 0 1 0 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:05:04,481 [INFO] Final candidates: [(13, 6), (11, 4)]
2025-04-11 19:05:04,481 [INFO] Phase win: Collected 1unique candidate(s):[((13, 6), (11, 4))]
2025-04-11 19:05:04,481 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 19:05:04,485 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:04,485 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:04,485 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:04,485 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:04,487 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:04,487 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:04,487 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:04,487 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:04,487 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:04,487 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:04,487 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:04,487 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:04,488 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:04,488 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:05:04,488 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:05:04,488 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:05:04,488 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:04,540 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:05:04,540 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:04,541 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(1)), (np.int64(14), np.int64(12)))
2025-04-11 19:05:04,547 [INFO] Final candidates: []
2025-04-11 19:05:04,547 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:05:04,551 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:04,551 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:04,551 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:04,551 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:04,552 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:04,552 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:04,553 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:04,553 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:04,553 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:04,553 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:04,553 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:04,553 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:04,553 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:04,554 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:05:04,554 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:05:04,554 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:05:04,554 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:04,620 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:05:04,621 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:04,621 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(10)), (np.int64(9), np.int64(11)))
2025-04-11 19:05:04,627 [INFO] Final candidates: []
2025-04-11 19:05:04,627 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:05:04,631 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:04,631 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:04,631 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:04,631 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:04,633 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:04,633 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:04,633 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:04,633 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:04,633 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:04,633 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:04,633 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:04,633 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:04,634 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:04,634 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:05:04,634 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:05:04,634 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:05:04,634 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:04,643 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:05:04,643 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:04,643 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(18), np.int64(8)), (np.int64(17), np.int64(6)))
2025-04-11 19:05:04,649 [INFO] Final candidates: []
2025-04-11 19:05:04,649 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:05:04,653 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:04,653 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:04,653 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:04,653 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:04,655 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:04,655 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:04,655 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:04,655 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:04,655 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:04,655 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:04,655 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:04,655 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:04,656 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:04,656 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:05:04,656 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:05:04,656 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:05:04,657 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:04,707 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:05:04,707 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:04,707 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(10)), (np.int64(14), np.int64(12)))
2025-04-11 19:05:04,714 [INFO] Final candidates: []
2025-04-11 19:05:04,714 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:05:04,718 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:04,718 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:04,718 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:04,718 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:04,719 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:04,719 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:04,719 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:04,719 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:04,720 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:04,720 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:04,720 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:04,720 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:04,720 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:04,721 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:05:04,721 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:05:04,721 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:05:04,721 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:04,823 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:05:04,823 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:04,824 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(9)), (np.int64(16), np.int64(11)))
2025-04-11 19:05:04,830 [INFO] Final candidates: []
2025-04-11 19:05:04,830 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:05:04,834 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:04,834 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:04,834 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:04,834 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:04,835 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:04,835 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:04,835 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:04,835 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:04,835 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:04,835 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:04,836 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:04,836 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:04,836 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:04,836 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:05:04,836 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:05:04,836 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:05:04,837 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:04,883 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:05:04,883 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:04,883 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(6)), (np.int64(12), np.int64(2)))
2025-04-11 19:05:04,890 [INFO] Final candidates: []
2025-04-11 19:05:04,890 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:05:04,894 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:04,894 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:04,894 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:04,894 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:04,895 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:04,896 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:04,896 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:04,896 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:04,896 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:04,896 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:04,896 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:04,896 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:04,897 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:04,897 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:05:04,897 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:05:04,897 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:05:04,897 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:05,025 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:05:05,025 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:05,025 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(5)), (np.int64(12), np.int64(16)))
2025-04-11 19:05:05,031 [INFO] Final candidates: []
2025-04-11 19:05:05,031 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:05:05,036 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:05,036 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:05,036 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:05,036 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:05,037 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:05,037 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:05,037 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:05,037 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:05,038 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:05,038 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:05,038 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:05,038 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:05,038 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:05,039 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:05:05,039 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:05:05,039 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:05:05,039 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:05,164 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:05:05,165 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:05,165 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(18)), (np.int64(16), np.int64(10)))
2025-04-11 19:05:05,171 [INFO] Final candidates: []
2025-04-11 19:05:05,171 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:05:05,175 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:05,175 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:05,175 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:05,175 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:05,177 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:05,177 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:05,177 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:05,177 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:05,177 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:05,177 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:05,177 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:05,177 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:05,178 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:05,178 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:05:05,178 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:05:05,178 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:05:05,178 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:05,227 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:05:05,227 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:05,228 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(18), np.int64(0)), (np.int64(16), np.int64(9)))
2025-04-11 19:05:05,232 [DEBUG] board coords: [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)]
2025-04-11 19:05:05,232 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:05:05,232 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 4), (13, 6)]
2025-04-11 19:05:05,232 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 0 1 1 1] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:05:05,232 [DEBUG] board coords: [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)]
2025-04-11 19:05:05,232 [DEBUG] board values[np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 19:05:05,232 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 6), (17, 10)]
2025-04-11 19:05:05,232 [DEBUG] check_window_intermediate_custom: For L=6, window [1 0 1 1 1 0] with coords [(12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10)] triggers candidate.
2025-04-11 19:05:05,234 [INFO] Final candidates: [(13, 6), (11, 4), (17, 10)]
2025-04-11 19:05:05,234 [INFO] Phase win: Collected 3unique candidate(s):[((13, 6), (11, 4)), ((13, 6), (17, 10)), ((11, 4), (17, 10))]
2025-04-11 19:05:05,234 [INFO] Phase 1 (immediate win): 3 candidate(s) found.
2025-04-11 19:05:05,238 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:05,238 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:05,238 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:05,238 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:05,240 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:05,240 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:05,240 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:05,240 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:05,240 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:05,240 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:05,240 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:05,240 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:05,241 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:05,241 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:05:05,241 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:05:05,241 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:05:05,241 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:05,242 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:05:05,242 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:05,242 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(5)), (np.int64(1), np.int64(4)))
2025-04-11 19:05:05,249 [INFO] Final candidates: []
2025-04-11 19:05:05,249 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:05:05,253 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:05,253 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:05,253 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:05,253 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:05,254 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:05,254 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:05,254 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:05,254 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:05,255 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:05,255 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:05,255 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:05,255 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:05,255 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:05,255 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:05:05,256 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:05:05,256 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:05:05,256 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:05,276 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:05:05,276 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:05,277 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(9)), (np.int64(10), np.int64(4)))
2025-04-11 19:05:05,283 [INFO] Final candidates: []
2025-04-11 19:05:05,283 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:05:05,288 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:05,288 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:05,288 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:05,288 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:05,289 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:05,289 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:05,289 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:05,289 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:05,289 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:05,290 [INFO] Final candidates: [(7, 9), (13, 3)]
2025-04-11 19:05:05,290 [INFO] Phase defense: Collected 1unique candidate(s):[((7, 9), (13, 3))]
2025-04-11 19:05:05,290 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:05:05,290 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:05,471 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:05:05,472 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:05,472 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(18), np.int64(8)), (np.int64(11), np.int64(17)))
2025-04-11 19:05:05,485 [INFO] Final candidates: []
2025-04-11 19:05:05,485 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:05:05,496 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:05,496 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:05,496 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:05,497 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:05,500 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:05,501 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:05,501 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:05,501 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:05,501 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:05,501 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:05,501 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:05,501 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:05,503 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:05,504 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:05:05,504 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:05:05,504 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:05:05,504 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:05,628 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:05:05,628 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:05,628 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(17), np.int64(11)), (np.int64(15), np.int64(17)))
2025-04-11 19:05:05,635 [INFO] Final candidates: []
2025-04-11 19:05:05,635 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:05:05,641 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:05,641 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:05,641 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:05,641 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:05,643 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:05,643 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:05,643 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:05,643 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:05,643 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:05,643 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:05,643 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:05,643 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:05,644 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:05,644 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:05:05,644 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:05:05,644 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:05:05,644 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:05,838 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:05:05,838 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:05,838 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(7)), (np.int64(8), np.int64(10)))
2025-04-11 19:05:05,844 [INFO] Final candidates: []
2025-04-11 19:05:05,844 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:05:05,848 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:05,848 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:05,848 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:05,848 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:05,850 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:05,850 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:05,850 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:05,850 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:05,850 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:05,850 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:05,850 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:05,850 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:05,851 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:05,851 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:05:05,851 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:05:05,851 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:05:05,851 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:06,170 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:05:06,171 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:06,171 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(16)), (np.int64(7), np.int64(5)))
2025-04-11 19:05:06,177 [INFO] Final candidates: []
2025-04-11 19:05:06,177 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:05:06,181 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:06,181 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:06,181 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:06,181 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:06,183 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:06,183 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:06,183 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:06,183 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:06,183 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:06,183 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:06,183 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:06,183 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:06,184 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:06,184 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:05:06,184 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:05:06,184 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:05:06,184 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:06,218 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:05:06,218 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:06,218 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(1)), (np.int64(16), np.int64(7)))
2025-04-11 19:05:06,224 [INFO] Final candidates: []
2025-04-11 19:05:06,224 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:05:06,228 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:06,228 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:06,228 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:06,228 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:06,230 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:06,230 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:06,230 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:06,230 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:06,230 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:06,230 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:06,230 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:06,230 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:06,231 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:06,231 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:05:06,231 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:05:06,231 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:05:06,231 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:06,261 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:05:06,261 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:06,261 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(1)), (np.int64(0), np.int64(1)))
2025-04-11 19:05:06,268 [INFO] Final candidates: []
2025-04-11 19:05:06,268 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:05:06,271 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:06,272 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:06,272 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:06,272 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:06,273 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:06,273 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:06,273 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:06,273 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:06,274 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:06,274 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:06,274 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:06,274 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:06,274 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:06,275 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:05:06,275 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:05:06,275 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:05:06,275 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:06,326 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:05:06,327 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:06,327 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(2)), (np.int64(15), np.int64(13)))
2025-04-11 19:05:06,333 [INFO] Final candidates: []
2025-04-11 19:05:06,333 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:05:06,337 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:06,337 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:06,337 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:06,337 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:06,339 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:06,339 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:06,339 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:06,339 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:06,339 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:06,339 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:06,339 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:06,339 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:06,340 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:06,340 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:05:06,340 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:05:06,340 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:05:06,340 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:06,354 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:05:06,354 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:06,354 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(4)), (np.int64(1), np.int64(4)))
2025-04-11 19:05:06,360 [INFO] Final candidates: []
2025-04-11 19:05:06,360 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:05:06,364 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:06,364 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:06,364 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:06,364 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:06,366 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:06,366 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:06,366 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:06,366 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:06,366 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:06,366 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:06,366 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:06,366 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:06,367 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:06,367 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:05:06,367 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:05:06,367 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:05:06,367 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:06,592 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:05:06,592 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:06,592 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(17)), (np.int64(14), np.int64(16)))
2025-04-11 19:05:06,598 [INFO] Final candidates: []
2025-04-11 19:05:06,598 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:05:06,602 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:06,602 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:06,602 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:06,602 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:06,604 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:06,604 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:06,604 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:06,604 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:06,604 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:06,604 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:06,604 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:06,604 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:06,605 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:06,605 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:05:06,605 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:05:06,605 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:05:06,605 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:06,631 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:05:06,631 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:06,631 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(2), np.int64(1)), (np.int64(9), np.int64(4)))
2025-04-11 19:05:06,637 [INFO] Final candidates: []
2025-04-11 19:05:06,637 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:05:06,641 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:06,641 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:06,641 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:06,641 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:06,643 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:06,643 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:06,643 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:06,643 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:06,643 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:06,643 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:06,643 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:06,643 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:06,644 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:06,644 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:05:06,644 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:05:06,644 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:05:06,644 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:06,660 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:05:06,661 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:06,661 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(4)), (np.int64(9), np.int64(6)))
2025-04-11 19:05:06,667 [INFO] Final candidates: []
2025-04-11 19:05:06,667 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:05:06,671 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:06,671 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:06,671 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:06,671 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:06,673 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:06,673 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:06,673 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:06,673 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:06,673 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:06,673 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:06,673 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:06,673 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:06,674 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:06,674 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:05:06,674 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:05:06,674 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:05:06,674 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:06,680 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:05:06,680 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:06,681 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(16)), (np.int64(18), np.int64(9)))
2025-04-11 19:05:06,687 [INFO] Final candidates: []
2025-04-11 19:05:06,687 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:05:06,691 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:06,691 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:06,691 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:06,691 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:06,692 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:06,692 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:06,692 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:06,692 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:06,693 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:06,693 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:06,693 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:06,693 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:06,693 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:06,694 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:05:06,694 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:05:06,694 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:05:06,694 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:06,699 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:05:06,699 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:06,700 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(3)), (np.int64(18), np.int64(3)))
2025-04-11 19:05:06,706 [INFO] Final candidates: []
2025-04-11 19:05:06,706 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:05:06,710 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:06,710 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:06,710 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:06,710 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:06,712 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:06,712 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:06,712 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:06,712 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:06,712 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:06,712 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:06,712 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:06,712 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:06,713 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:06,713 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:05:06,713 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:05:06,713 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:05:06,713 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:06,734 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:05:06,734 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:06,734 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(18)), (np.int64(7), np.int64(9)))
2025-04-11 19:05:06,741 [INFO] Final candidates: []
2025-04-11 19:05:06,741 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:05:06,745 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:06,745 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:06,745 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:06,745 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:06,747 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:06,747 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:06,747 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:06,747 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:06,748 [INFO] Final candidates: [(13, 3), (10, 4), (7, 1)]
2025-04-11 19:05:06,748 [INFO] Phase defense: Collected 3unique candidate(s):[((13, 3), (10, 4)), ((13, 3), (7, 1)), ((10, 4), (7, 1))]
2025-04-11 19:05:06,748 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 19:05:06,748 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:06,760 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:05:06,760 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:06,760 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(0)), (np.int64(10), np.int64(2)))
2025-04-11 19:05:06,767 [INFO] Final candidates: []
2025-04-11 19:05:06,767 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:05:06,771 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:06,771 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:06,771 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:06,771 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:06,773 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:06,773 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:06,773 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:06,773 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:06,773 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:06,773 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:06,773 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:06,773 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:06,774 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:06,774 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:05:06,774 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:05:06,774 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:05:06,774 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:06,863 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:05:06,863 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:06,863 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(7)), (np.int64(14), np.int64(1)))
2025-04-11 19:05:06,870 [INFO] Final candidates: []
2025-04-11 19:05:06,870 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:05:06,874 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:06,874 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:06,874 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:06,874 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:06,876 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:06,876 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:06,876 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:06,876 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:06,876 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:06,876 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:06,876 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:06,876 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:06,877 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:06,877 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:05:06,877 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:05:06,877 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:05:06,877 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:06,950 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:05:06,950 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:06,950 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(17), np.int64(7)), (np.int64(0), np.int64(3)))
2025-04-11 19:05:06,957 [INFO] Final candidates: []
2025-04-11 19:05:06,957 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:05:06,961 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:06,961 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:06,961 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:06,961 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:06,962 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:06,962 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:06,962 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:06,962 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:06,963 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:06,963 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:06,963 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:06,963 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:06,963 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:06,964 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:05:06,964 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:05:06,964 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:05:06,964 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:07,048 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:05:07,049 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:07,049 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(2)), (np.int64(11), np.int64(8)))
2025-04-11 19:05:07,055 [INFO] Final candidates: []
2025-04-11 19:05:07,055 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:05:07,059 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:07,059 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:07,059 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:07,059 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:07,060 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:07,060 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:07,060 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:07,061 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:07,061 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:07,061 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:07,061 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:07,061 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:07,061 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:07,062 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:05:07,062 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:05:07,062 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:05:07,062 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:07,139 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:05:07,140 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:07,140 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(1)), (np.int64(6), np.int64(9)))
2025-04-11 19:05:07,146 [INFO] Final candidates: []
2025-04-11 19:05:07,146 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:05:07,150 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:07,150 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:07,150 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:07,150 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:07,152 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:07,152 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:07,152 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:07,152 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:07,152 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:07,152 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:07,152 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:07,152 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:07,153 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:07,153 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:05:07,153 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:05:07,153 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:05:07,153 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:07,154 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:05:07,154 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:07,155 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(3)), (np.int64(10), np.int64(4)))
2025-04-11 19:05:07,159 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:05:07,159 [DEBUG] board values[np.int64(1), np.int64(0), np.int64(1), np.int64(0), np.int64(1), np.int64(1)]
2025-04-11 19:05:07,159 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 4), (13, 6)]
2025-04-11 19:05:07,159 [DEBUG] check_window_intermediate_custom: For L=6, window [1 0 1 0 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:05:07,161 [INFO] Final candidates: [(13, 6), (11, 4)]
2025-04-11 19:05:07,161 [INFO] Phase win: Collected 1unique candidate(s):[((13, 6), (11, 4))]
2025-04-11 19:05:07,161 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 19:05:07,166 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:07,167 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:07,167 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:07,167 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:07,167 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:07,167 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:07,167 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:07,167 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:07,168 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:07,168 [INFO] Final candidates: [(7, 9), (13, 3)]
2025-04-11 19:05:07,168 [INFO] Phase defense: Collected 1unique candidate(s):[((7, 9), (13, 3))]
2025-04-11 19:05:07,168 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 19:05:07,168 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:07,312 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:05:07,312 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:07,312 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(2), np.int64(2)), (np.int64(14), np.int64(4)))
2025-04-11 19:05:07,319 [INFO] Final candidates: []
2025-04-11 19:05:07,319 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:05:07,323 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:07,323 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:07,323 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:07,323 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:07,324 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:07,324 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:07,324 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:07,324 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:07,325 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:07,325 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:07,325 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:07,325 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:07,325 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:07,326 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:05:07,326 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:05:07,326 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:05:07,326 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:07,434 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:05:07,434 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:07,434 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(2)), (np.int64(14), np.int64(0)))
2025-04-11 19:05:07,440 [INFO] Final candidates: []
2025-04-11 19:05:07,440 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:05:07,444 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:07,444 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:07,444 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:07,445 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:07,446 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:07,446 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:07,446 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:07,446 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:07,446 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:07,446 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:07,446 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:07,446 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:07,447 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:07,447 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:05:07,447 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:05:07,447 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:05:07,447 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:07,496 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:05:07,497 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:07,497 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(16)), (np.int64(15), np.int64(13)))
2025-04-11 19:05:07,503 [INFO] Final candidates: []
2025-04-11 19:05:07,503 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:05:07,507 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:07,507 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:07,507 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:07,507 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:07,510 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:07,510 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:07,510 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:07,510 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:07,510 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:07,510 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:07,510 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:07,510 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:07,511 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:07,511 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:05:07,511 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:05:07,511 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:05:07,511 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:07,562 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:05:07,562 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:07,563 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(5)), (np.int64(7), np.int64(8)))
2025-04-11 19:05:07,569 [INFO] Final candidates: []
2025-04-11 19:05:07,570 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:05:07,575 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:07,575 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:07,575 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:07,575 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:07,580 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:07,580 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:07,580 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:07,580 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:07,580 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:07,580 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:07,580 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:07,581 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:07,582 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:07,583 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:05:07,583 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:05:07,583 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:05:07,583 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:07,704 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:05:07,705 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:07,705 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(1)), (np.int64(12), np.int64(11)))
2025-04-11 19:05:07,718 [INFO] Final candidates: []
2025-04-11 19:05:07,718 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:05:07,723 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:07,723 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:07,723 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:07,723 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:07,725 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:07,725 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:07,725 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:07,725 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:07,725 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:07,725 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:07,725 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:07,725 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:07,726 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:07,726 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:05:07,726 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:05:07,726 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:05:07,726 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:07,801 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:05:07,801 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:07,801 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(17), np.int64(5)), (np.int64(17), np.int64(7)))
2025-04-11 19:05:07,807 [INFO] Final candidates: []
2025-04-11 19:05:07,807 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:05:07,812 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:07,812 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:07,812 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:07,812 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:07,813 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:07,813 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:07,813 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:07,813 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:07,813 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:07,813 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:07,813 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:07,814 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:07,814 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:07,814 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:05:07,814 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:05:07,814 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:05:07,815 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:07,836 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:05:07,837 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:07,837 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(3)), (np.int64(12), np.int64(3)))
2025-04-11 19:05:07,841 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:05:07,841 [DEBUG] board values[np.int64(1), np.int64(0), np.int64(1), np.int64(0), np.int64(1), np.int64(1)]
2025-04-11 19:05:07,841 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 4), (13, 6)]
2025-04-11 19:05:07,841 [DEBUG] check_window_intermediate_custom: For L=6, window [1 0 1 0 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:05:07,844 [INFO] Final candidates: [(13, 6), (11, 4)]
2025-04-11 19:05:07,844 [INFO] Phase win: Collected 1unique candidate(s):[((13, 6), (11, 4))]
2025-04-11 19:05:07,844 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 19:05:07,848 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:07,848 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:07,848 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:07,848 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:07,849 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:07,849 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:07,849 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:07,849 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:07,849 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:07,849 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:07,849 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:07,849 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:07,850 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:07,850 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:05:07,850 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:05:07,850 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:05:07,850 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:08,069 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:05:08,069 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:08,069 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(17), np.int64(9)), (np.int64(7), np.int64(7)))
2025-04-11 19:05:08,076 [INFO] Final candidates: []
2025-04-11 19:05:08,076 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:05:08,080 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:08,080 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:08,080 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:08,080 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:08,081 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:08,081 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:08,081 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:08,081 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:08,082 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:08,082 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:08,082 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:08,082 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:08,082 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:08,083 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:05:08,083 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:05:08,083 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:05:08,083 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:08,169 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:05:08,169 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:08,169 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(4)), (np.int64(14), np.int64(4)))
2025-04-11 19:05:08,174 [DEBUG] board coords: [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)]
2025-04-11 19:05:08,174 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1)]
2025-04-11 19:05:08,174 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 3), (13, 6)]
2025-04-11 19:05:08,174 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 1 0 1 1] with coords [(10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8)] triggers candidate.
2025-04-11 19:05:08,174 [DEBUG] board coords: [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)]
2025-04-11 19:05:08,174 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 19:05:08,174 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 6), (16, 9)]
2025-04-11 19:05:08,174 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 0 1 1 0] with coords [(11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9)] triggers candidate.
2025-04-11 19:05:08,176 [INFO] Final candidates: [(16, 9), (13, 6), (10, 3)]
2025-04-11 19:05:08,176 [INFO] Phase win: Collected 3unique candidate(s):[((16, 9), (13, 6)), ((13, 6), (10, 3)), ((16, 9), (10, 3))]
2025-04-11 19:05:08,176 [INFO] Phase 1 (immediate win): 3 candidate(s) found.
2025-04-11 19:05:08,180 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:08,180 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:08,180 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:08,180 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:08,182 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:08,182 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:08,182 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:08,182 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:08,182 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:08,182 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:08,182 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:08,182 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:08,183 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:08,183 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:05:08,183 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:05:08,183 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:05:08,183 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:08,245 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:05:08,246 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 19:05:08,246 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(17), np.int64(7)), (np.int64(11), np.int64(6)))
2025-04-11 19:05:08,252 [INFO] Final candidates: []
2025-04-11 19:05:08,252 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:05:08,257 [DEBUG] board coords: [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)]
2025-04-11 19:05:08,257 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 19:05:08,257 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 1), (10, 4)]
2025-04-11 19:05:08,257 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6)] triggers candidate.
2025-04-11 19:05:08,259 [DEBUG] board coords: [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)]
2025-04-11 19:05:08,259 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:05:08,259 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 10), (7, 9)]
2025-04-11 19:05:08,260 [DEBUG] check_window_intermediate_custom (only one inserted(7, 9)): For L=6, window [0 0 2 2 2 2] with coords [(6, 10), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5)] triggers candidate.
2025-04-11 19:05:08,260 [DEBUG] board coords: [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)]
2025-04-11 19:05:08,260 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 19:05:08,260 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 3), (14, 2)]
2025-04-11 19:05:08,260 [DEBUG] check_window_intermediate_custom (only one inserted(13, 3)): For L=6, window [2 2 2 2 0 0] with coords [(9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 2)] triggers candidate.
2025-04-11 19:05:08,261 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3)] triggers candidate.
2025-04-11 19:05:08,261 [INFO] Final candidates: [(7, 9), (10, 4), (7, 1), (13, 3)]
2025-04-11 19:05:08,261 [INFO] Phase defense: Collected 6unique candidate(s):[((7, 9), (13, 3)), ((10, 4), (13, 3)), ((7, 1), (13, 3)), ((7, 9), (7, 1)), ((7, 9), (10, 4)), ((10, 4), (7, 1))]
2025-04-11 19:05:08,261 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:05:08,261 [INFO] Default policy: Starting random playout.
2025-04-11 19:05:08,339 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:05:08,340 [INFO] MCTS: Search finished. Best move selected with 1 visits.
2025-04-11 19:05:08,340 [INFO] Phase 2 (defense): MCTS selected move: ((9, 3), (12, 4))
2025-04-11 19:05:08,340 [INFO] Phase 2 (defense): MCTS selected move string : D10,E13
2025-04-11 19:05:08,340 [INFO] MCTS (defense candidates) selected move: D10,E13
2025-04-11 19:10:01,831 [INFO] Starting pre-MCTS candidate collection.
2025-04-11 19:10:01,839 [INFO] Final candidates: []
2025-04-11 19:10:01,839 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:01,847 [INFO] Final candidates: []
2025-04-11 19:10:01,847 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:01,847 [INFO] No candidate found in Phase 1 or 2; using full legal moves for MCTS.
2025-04-11 19:10:01,848 [INFO] MCTS: Starting search for 100 iterations.
2025-04-11 19:10:01,848 [DEBUG] Tree_policy iteration 1: Expanding move (18, 6)
2025-04-11 19:10:01,856 [INFO] Final candidates: []
2025-04-11 19:10:01,856 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:01,864 [INFO] Final candidates: []
2025-04-11 19:10:01,864 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:01,864 [DEBUG] MCTS iteration 0: reached a node with 0 visits.
2025-04-11 19:10:01,864 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:01,936 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:10:01,936 [DEBUG] Tree_policy iteration 1: Expanding move (3, 1)
2025-04-11 19:10:01,945 [INFO] Final candidates: []
2025-04-11 19:10:01,945 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:01,953 [INFO] Final candidates: []
2025-04-11 19:10:01,953 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:01,953 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:02,021 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:10:02,022 [DEBUG] Tree_policy iteration 1: Expanding move (11, 3)
2025-04-11 19:10:02,030 [INFO] Final candidates: []
2025-04-11 19:10:02,031 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:02,039 [INFO] Final candidates: []
2025-04-11 19:10:02,039 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:02,039 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:02,175 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:10:02,175 [DEBUG] Tree_policy iteration 1: Expanding move (3, 17)
2025-04-11 19:10:02,183 [INFO] Final candidates: []
2025-04-11 19:10:02,183 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:02,191 [INFO] Final candidates: []
2025-04-11 19:10:02,191 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:02,191 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:02,265 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:10:02,265 [DEBUG] Tree_policy iteration 1: Expanding move (2, 15)
2025-04-11 19:10:02,273 [INFO] Final candidates: []
2025-04-11 19:10:02,273 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:02,281 [INFO] Final candidates: []
2025-04-11 19:10:02,281 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:02,281 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:02,420 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:10:02,420 [DEBUG] Tree_policy iteration 1: Expanding move (2, 10)
2025-04-11 19:10:02,431 [INFO] Final candidates: []
2025-04-11 19:10:02,431 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:02,440 [INFO] Final candidates: []
2025-04-11 19:10:02,440 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:02,440 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:02,447 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:10:02,447 [DEBUG] Tree_policy iteration 1: Expanding move (6, 12)
2025-04-11 19:10:02,456 [INFO] Final candidates: []
2025-04-11 19:10:02,456 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:02,464 [INFO] Final candidates: []
2025-04-11 19:10:02,464 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:02,464 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:02,489 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:10:02,489 [DEBUG] Tree_policy iteration 1: Expanding move (7, 15)
2025-04-11 19:10:02,511 [INFO] Final candidates: []
2025-04-11 19:10:02,511 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:02,530 [INFO] Final candidates: []
2025-04-11 19:10:02,530 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:02,530 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:02,550 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:10:02,550 [DEBUG] Tree_policy iteration 1: Expanding move (13, 2)
2025-04-11 19:10:02,558 [INFO] Final candidates: []
2025-04-11 19:10:02,558 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:02,566 [INFO] Final candidates: []
2025-04-11 19:10:02,566 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:02,566 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:02,658 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:10:02,659 [DEBUG] Tree_policy iteration 1: Expanding move (12, 16)
2025-04-11 19:10:02,667 [INFO] Final candidates: []
2025-04-11 19:10:02,667 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:02,675 [INFO] Final candidates: []
2025-04-11 19:10:02,675 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:02,675 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:02,716 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:10:02,716 [DEBUG] Tree_policy iteration 1: Expanding move (14, 7)
2025-04-11 19:10:02,726 [INFO] Final candidates: []
2025-04-11 19:10:02,726 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:02,734 [INFO] Final candidates: []
2025-04-11 19:10:02,734 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:02,735 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:02,803 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:10:02,803 [DEBUG] Tree_policy iteration 1: Expanding move (4, 7)
2025-04-11 19:10:02,812 [INFO] Final candidates: []
2025-04-11 19:10:02,812 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:02,820 [INFO] Final candidates: []
2025-04-11 19:10:02,820 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:02,820 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:03,040 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:10:03,040 [DEBUG] Tree_policy iteration 1: Expanding move (16, 7)
2025-04-11 19:10:03,048 [INFO] Final candidates: []
2025-04-11 19:10:03,048 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:03,056 [INFO] Final candidates: []
2025-04-11 19:10:03,056 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:03,056 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:03,074 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:10:03,074 [DEBUG] Tree_policy iteration 1: Expanding move (18, 11)
2025-04-11 19:10:03,082 [INFO] Final candidates: []
2025-04-11 19:10:03,082 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:03,093 [INFO] Final candidates: []
2025-04-11 19:10:03,093 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:03,094 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:03,133 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:10:03,133 [DEBUG] Tree_policy iteration 1: Expanding move (15, 8)
2025-04-11 19:10:03,143 [INFO] Final candidates: []
2025-04-11 19:10:03,143 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:03,151 [INFO] Final candidates: []
2025-04-11 19:10:03,151 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:03,151 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:03,299 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:10:03,300 [DEBUG] Tree_policy iteration 1: Expanding move (8, 12)
2025-04-11 19:10:03,308 [INFO] Final candidates: []
2025-04-11 19:10:03,308 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:03,315 [INFO] Final candidates: []
2025-04-11 19:10:03,315 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:03,316 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:03,469 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:10:03,469 [DEBUG] Tree_policy iteration 1: Expanding move (7, 6)
2025-04-11 19:10:03,478 [INFO] Final candidates: []
2025-04-11 19:10:03,478 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:03,486 [INFO] Final candidates: []
2025-04-11 19:10:03,486 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:03,486 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:03,523 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:10:03,523 [DEBUG] Tree_policy iteration 1: Expanding move (2, 13)
2025-04-11 19:10:03,531 [INFO] Final candidates: []
2025-04-11 19:10:03,531 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:03,539 [INFO] Final candidates: []
2025-04-11 19:10:03,539 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:03,539 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:03,574 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:10:03,574 [DEBUG] Tree_policy iteration 1: Expanding move (8, 16)
2025-04-11 19:10:03,582 [INFO] Final candidates: []
2025-04-11 19:10:03,582 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:03,590 [INFO] Final candidates: []
2025-04-11 19:10:03,590 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:03,590 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:03,611 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:10:03,611 [DEBUG] Tree_policy iteration 1: Expanding move (18, 10)
2025-04-11 19:10:03,621 [INFO] Final candidates: []
2025-04-11 19:10:03,621 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:03,629 [INFO] Final candidates: []
2025-04-11 19:10:03,629 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:03,629 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:03,853 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:10:03,854 [DEBUG] Tree_policy iteration 1: Expanding move (17, 11)
2025-04-11 19:10:03,862 [INFO] Final candidates: []
2025-04-11 19:10:03,862 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:03,870 [INFO] Final candidates: []
2025-04-11 19:10:03,870 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:03,870 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:03,944 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:10:03,945 [DEBUG] Tree_policy iteration 1: Expanding move (1, 16)
2025-04-11 19:10:03,953 [INFO] Final candidates: []
2025-04-11 19:10:03,953 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:03,962 [INFO] Final candidates: []
2025-04-11 19:10:03,962 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:03,962 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:04,055 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:10:04,055 [DEBUG] Tree_policy iteration 1: Expanding move (8, 9)
2025-04-11 19:10:04,068 [INFO] Final candidates: []
2025-04-11 19:10:04,068 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:04,078 [INFO] Final candidates: []
2025-04-11 19:10:04,078 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:04,078 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:04,116 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:10:04,116 [DEBUG] Tree_policy iteration 1: Expanding move (1, 1)
2025-04-11 19:10:04,124 [INFO] Final candidates: []
2025-04-11 19:10:04,124 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:04,132 [INFO] Final candidates: []
2025-04-11 19:10:04,132 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:04,132 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:04,287 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:10:04,287 [DEBUG] Tree_policy iteration 1: Expanding move (14, 15)
2025-04-11 19:10:04,298 [INFO] Final candidates: []
2025-04-11 19:10:04,298 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:04,306 [INFO] Final candidates: []
2025-04-11 19:10:04,306 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:04,306 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:04,431 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:10:04,432 [DEBUG] Tree_policy iteration 1: Expanding move (1, 7)
2025-04-11 19:10:04,440 [INFO] Final candidates: []
2025-04-11 19:10:04,440 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:04,450 [INFO] Final candidates: []
2025-04-11 19:10:04,450 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:04,450 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:04,526 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:10:04,526 [DEBUG] Tree_policy iteration 1: Expanding move (5, 5)
2025-04-11 19:10:04,534 [INFO] Final candidates: []
2025-04-11 19:10:04,534 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:04,542 [INFO] Final candidates: []
2025-04-11 19:10:04,542 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:04,542 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:04,577 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:10:04,577 [DEBUG] Tree_policy iteration 1: Expanding move (11, 14)
2025-04-11 19:10:04,585 [INFO] Final candidates: []
2025-04-11 19:10:04,585 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:04,593 [INFO] Final candidates: []
2025-04-11 19:10:04,593 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:04,593 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:04,652 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:10:04,653 [DEBUG] Tree_policy iteration 1: Expanding move (12, 5)
2025-04-11 19:10:04,661 [INFO] Final candidates: []
2025-04-11 19:10:04,661 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:04,671 [INFO] Final candidates: []
2025-04-11 19:10:04,671 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:04,671 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:04,774 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:10:04,774 [DEBUG] Tree_policy iteration 1: Expanding move (14, 8)
2025-04-11 19:10:04,785 [INFO] Final candidates: []
2025-04-11 19:10:04,785 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:04,794 [INFO] Final candidates: []
2025-04-11 19:10:04,794 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:04,794 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:04,866 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:10:04,866 [DEBUG] Tree_policy iteration 1: Expanding move (8, 15)
2025-04-11 19:10:04,874 [INFO] Final candidates: []
2025-04-11 19:10:04,874 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:04,882 [INFO] Final candidates: []
2025-04-11 19:10:04,882 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:04,882 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:04,976 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:10:04,976 [DEBUG] Tree_policy iteration 1: Expanding move (14, 16)
2025-04-11 19:10:04,984 [INFO] Final candidates: []
2025-04-11 19:10:04,984 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:04,993 [INFO] Final candidates: []
2025-04-11 19:10:04,993 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:04,993 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:05,058 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:10:05,058 [DEBUG] Tree_policy iteration 1: Expanding move (3, 0)
2025-04-11 19:10:05,066 [INFO] Final candidates: []
2025-04-11 19:10:05,066 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:05,074 [INFO] Final candidates: []
2025-04-11 19:10:05,074 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:05,075 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:05,253 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:10:05,253 [DEBUG] Tree_policy iteration 1: Expanding move (6, 16)
2025-04-11 19:10:05,262 [INFO] Final candidates: []
2025-04-11 19:10:05,262 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:05,270 [INFO] Final candidates: []
2025-04-11 19:10:05,270 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:05,270 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:05,527 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:10:05,527 [DEBUG] Tree_policy iteration 1: Expanding move (18, 5)
2025-04-11 19:10:05,549 [INFO] Final candidates: []
2025-04-11 19:10:05,549 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:05,569 [INFO] Final candidates: []
2025-04-11 19:10:05,569 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:05,570 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:05,730 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:10:05,730 [DEBUG] Tree_policy iteration 1: Expanding move (9, 1)
2025-04-11 19:10:05,739 [INFO] Final candidates: []
2025-04-11 19:10:05,739 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:05,747 [INFO] Final candidates: []
2025-04-11 19:10:05,747 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:05,747 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:05,820 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:10:05,821 [DEBUG] Tree_policy iteration 1: Expanding move (12, 11)
2025-04-11 19:10:05,829 [INFO] Final candidates: []
2025-04-11 19:10:05,829 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:05,836 [INFO] Final candidates: []
2025-04-11 19:10:05,836 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:05,837 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:05,939 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:10:05,939 [DEBUG] Tree_policy iteration 1: Expanding move (14, 11)
2025-04-11 19:10:05,948 [INFO] Final candidates: []
2025-04-11 19:10:05,949 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:05,957 [INFO] Final candidates: []
2025-04-11 19:10:05,957 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:05,957 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:06,113 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:10:06,114 [DEBUG] Tree_policy iteration 1: Expanding move (5, 18)
2025-04-11 19:10:06,122 [INFO] Final candidates: []
2025-04-11 19:10:06,122 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:06,131 [INFO] Final candidates: []
2025-04-11 19:10:06,132 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:06,132 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:06,273 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:10:06,273 [DEBUG] Tree_policy iteration 1: Expanding move (12, 15)
2025-04-11 19:10:06,282 [INFO] Final candidates: []
2025-04-11 19:10:06,282 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:06,293 [INFO] Final candidates: []
2025-04-11 19:10:06,293 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:06,293 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:06,317 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:10:06,318 [DEBUG] Tree_policy iteration 1: Expanding move (13, 16)
2025-04-11 19:10:06,326 [INFO] Final candidates: []
2025-04-11 19:10:06,326 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:06,334 [INFO] Final candidates: []
2025-04-11 19:10:06,334 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:06,334 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:06,501 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:10:06,501 [DEBUG] Tree_policy iteration 1: Expanding move (2, 7)
2025-04-11 19:10:06,513 [INFO] Final candidates: []
2025-04-11 19:10:06,513 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:06,522 [INFO] Final candidates: []
2025-04-11 19:10:06,522 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:06,522 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:06,550 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:10:06,550 [DEBUG] Tree_policy iteration 1: Expanding move (4, 5)
2025-04-11 19:10:06,558 [INFO] Final candidates: []
2025-04-11 19:10:06,558 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:06,567 [INFO] Final candidates: []
2025-04-11 19:10:06,567 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:06,567 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:06,656 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:10:06,657 [DEBUG] Tree_policy iteration 1: Expanding move (6, 14)
2025-04-11 19:10:06,665 [INFO] Final candidates: []
2025-04-11 19:10:06,665 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:06,673 [INFO] Final candidates: []
2025-04-11 19:10:06,673 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:06,673 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:06,717 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:10:06,717 [DEBUG] Tree_policy iteration 1: Expanding move (12, 7)
2025-04-11 19:10:06,725 [INFO] Final candidates: []
2025-04-11 19:10:06,725 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:06,733 [INFO] Final candidates: []
2025-04-11 19:10:06,733 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:06,733 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:06,859 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:10:06,859 [DEBUG] Tree_policy iteration 1: Expanding move (13, 5)
2025-04-11 19:10:06,867 [INFO] Final candidates: []
2025-04-11 19:10:06,867 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:06,879 [INFO] Final candidates: []
2025-04-11 19:10:06,879 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:06,879 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:07,024 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:10:07,024 [DEBUG] Tree_policy iteration 1: Expanding move (9, 8)
2025-04-11 19:10:07,032 [INFO] Final candidates: []
2025-04-11 19:10:07,032 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:07,041 [INFO] Final candidates: []
2025-04-11 19:10:07,041 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:07,041 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:07,182 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:10:07,182 [DEBUG] Tree_policy iteration 1: Expanding move (1, 6)
2025-04-11 19:10:07,190 [INFO] Final candidates: []
2025-04-11 19:10:07,190 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:07,199 [INFO] Final candidates: []
2025-04-11 19:10:07,199 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:07,200 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:07,348 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:10:07,348 [DEBUG] Tree_policy iteration 1: Expanding move (10, 18)
2025-04-11 19:10:07,357 [INFO] Final candidates: []
2025-04-11 19:10:07,357 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:07,365 [INFO] Final candidates: []
2025-04-11 19:10:07,365 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:07,366 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:07,391 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:10:07,391 [DEBUG] Tree_policy iteration 1: Expanding move (1, 8)
2025-04-11 19:10:07,401 [INFO] Final candidates: []
2025-04-11 19:10:07,401 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:07,409 [INFO] Final candidates: []
2025-04-11 19:10:07,409 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:07,409 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:07,525 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:10:07,525 [DEBUG] Tree_policy iteration 1: Expanding move (0, 11)
2025-04-11 19:10:07,533 [INFO] Final candidates: []
2025-04-11 19:10:07,533 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:07,542 [INFO] Final candidates: []
2025-04-11 19:10:07,542 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:07,542 [DEBUG] MCTS iteration 50: reached a node with 0 visits.
2025-04-11 19:10:07,542 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:07,722 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:10:07,722 [DEBUG] Tree_policy iteration 1: Expanding move (6, 4)
2025-04-11 19:10:07,730 [INFO] Final candidates: []
2025-04-11 19:10:07,730 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:07,738 [INFO] Final candidates: []
2025-04-11 19:10:07,738 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:07,739 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:07,846 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:10:07,846 [DEBUG] Tree_policy iteration 1: Expanding move (9, 11)
2025-04-11 19:10:07,854 [INFO] Final candidates: []
2025-04-11 19:10:07,854 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:07,862 [INFO] Final candidates: []
2025-04-11 19:10:07,862 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:07,862 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:07,924 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:10:07,924 [DEBUG] Tree_policy iteration 1: Expanding move (9, 2)
2025-04-11 19:10:07,932 [INFO] Final candidates: []
2025-04-11 19:10:07,932 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:07,940 [INFO] Final candidates: []
2025-04-11 19:10:07,940 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:07,940 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:08,017 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:10:08,017 [DEBUG] Tree_policy iteration 1: Expanding move (13, 18)
2025-04-11 19:10:08,025 [INFO] Final candidates: []
2025-04-11 19:10:08,025 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:08,034 [INFO] Final candidates: []
2025-04-11 19:10:08,034 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:08,034 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:08,099 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:10:08,099 [DEBUG] Tree_policy iteration 1: Expanding move (1, 0)
2025-04-11 19:10:08,111 [INFO] Final candidates: []
2025-04-11 19:10:08,111 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:08,119 [INFO] Final candidates: []
2025-04-11 19:10:08,119 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:08,119 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:08,172 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:10:08,172 [DEBUG] Tree_policy iteration 1: Expanding move (4, 16)
2025-04-11 19:10:08,180 [INFO] Final candidates: []
2025-04-11 19:10:08,180 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:08,188 [INFO] Final candidates: []
2025-04-11 19:10:08,188 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:08,188 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:08,296 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:10:08,297 [DEBUG] Tree_policy iteration 1: Expanding move (11, 5)
2025-04-11 19:10:08,305 [INFO] Final candidates: []
2025-04-11 19:10:08,305 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:08,313 [INFO] Final candidates: []
2025-04-11 19:10:08,313 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:08,313 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:08,337 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:10:08,337 [DEBUG] Tree_policy iteration 1: Expanding move (13, 15)
2025-04-11 19:10:08,345 [INFO] Final candidates: []
2025-04-11 19:10:08,345 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:08,353 [INFO] Final candidates: []
2025-04-11 19:10:08,353 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:08,353 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:08,605 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:10:08,605 [DEBUG] Tree_policy iteration 1: Expanding move (10, 0)
2025-04-11 19:10:08,613 [INFO] Final candidates: []
2025-04-11 19:10:08,613 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:08,621 [INFO] Final candidates: []
2025-04-11 19:10:08,621 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:08,621 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:08,702 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:10:08,703 [DEBUG] Tree_policy iteration 1: Expanding move (3, 8)
2025-04-11 19:10:08,711 [INFO] Final candidates: []
2025-04-11 19:10:08,711 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:08,718 [INFO] Final candidates: []
2025-04-11 19:10:08,718 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:08,719 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:08,726 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:10:08,726 [DEBUG] Tree_policy iteration 1: Expanding move (9, 7)
2025-04-11 19:10:08,734 [INFO] Final candidates: []
2025-04-11 19:10:08,734 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:08,742 [INFO] Final candidates: []
2025-04-11 19:10:08,742 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:08,742 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:08,951 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:10:08,952 [DEBUG] Tree_policy iteration 1: Expanding move (16, 2)
2025-04-11 19:10:08,973 [INFO] Final candidates: []
2025-04-11 19:10:08,973 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:08,983 [INFO] Final candidates: []
2025-04-11 19:10:08,983 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:08,983 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:09,002 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:10:09,002 [DEBUG] Tree_policy iteration 1: Expanding move (17, 4)
2025-04-11 19:10:09,011 [INFO] Final candidates: []
2025-04-11 19:10:09,011 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:09,019 [INFO] Final candidates: []
2025-04-11 19:10:09,019 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:09,019 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:09,053 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:10:09,053 [DEBUG] Tree_policy iteration 1: Expanding move (17, 5)
2025-04-11 19:10:09,061 [INFO] Final candidates: []
2025-04-11 19:10:09,061 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:09,069 [INFO] Final candidates: []
2025-04-11 19:10:09,069 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:09,069 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:09,140 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:10:09,140 [DEBUG] Tree_policy iteration 1: Expanding move (16, 0)
2025-04-11 19:10:09,149 [INFO] Final candidates: []
2025-04-11 19:10:09,149 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:09,157 [INFO] Final candidates: []
2025-04-11 19:10:09,157 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:09,157 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:09,209 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:10:09,209 [DEBUG] Tree_policy iteration 1: Expanding move (14, 2)
2025-04-11 19:10:09,217 [INFO] Final candidates: []
2025-04-11 19:10:09,217 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:09,225 [INFO] Final candidates: []
2025-04-11 19:10:09,225 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:09,226 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:09,260 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:10:09,260 [DEBUG] Tree_policy iteration 1: Expanding move (16, 10)
2025-04-11 19:10:09,268 [INFO] Final candidates: []
2025-04-11 19:10:09,268 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:09,276 [INFO] Final candidates: []
2025-04-11 19:10:09,276 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:09,276 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:09,314 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:10:09,314 [DEBUG] Tree_policy iteration 1: Expanding move (12, 4)
2025-04-11 19:10:09,322 [INFO] Final candidates: []
2025-04-11 19:10:09,322 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:09,330 [INFO] Final candidates: []
2025-04-11 19:10:09,330 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:09,330 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:09,358 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:10:09,358 [DEBUG] Tree_policy iteration 1: Expanding move (8, 5)
2025-04-11 19:10:09,366 [INFO] Final candidates: []
2025-04-11 19:10:09,366 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:09,374 [INFO] Final candidates: []
2025-04-11 19:10:09,374 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:09,375 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:09,585 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:10:09,586 [DEBUG] Tree_policy iteration 1: Expanding move (16, 9)
2025-04-11 19:10:09,595 [INFO] Final candidates: []
2025-04-11 19:10:09,595 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:09,603 [INFO] Final candidates: []
2025-04-11 19:10:09,603 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:09,603 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:09,647 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:10:09,647 [DEBUG] Tree_policy iteration 1: Expanding move (1, 12)
2025-04-11 19:10:09,655 [INFO] Final candidates: []
2025-04-11 19:10:09,655 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:09,663 [INFO] Final candidates: []
2025-04-11 19:10:09,663 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:09,663 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:09,677 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:10:09,677 [DEBUG] Tree_policy iteration 1: Expanding move (10, 6)
2025-04-11 19:10:09,685 [INFO] Final candidates: []
2025-04-11 19:10:09,685 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:09,693 [INFO] Final candidates: []
2025-04-11 19:10:09,693 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:09,693 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:09,721 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:10:09,721 [DEBUG] Tree_policy iteration 1: Expanding move (10, 5)
2025-04-11 19:10:09,729 [INFO] Final candidates: []
2025-04-11 19:10:09,729 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:09,737 [INFO] Final candidates: []
2025-04-11 19:10:09,737 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:09,737 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:09,847 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:10:09,848 [DEBUG] Tree_policy iteration 1: Expanding move (5, 10)
2025-04-11 19:10:09,856 [INFO] Final candidates: []
2025-04-11 19:10:09,856 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:09,864 [INFO] Final candidates: []
2025-04-11 19:10:09,864 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:09,864 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:10,087 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:10:10,088 [DEBUG] Tree_policy iteration 1: Expanding move (15, 6)
2025-04-11 19:10:10,096 [INFO] Final candidates: []
2025-04-11 19:10:10,096 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:10,104 [INFO] Final candidates: []
2025-04-11 19:10:10,104 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:10,105 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:10,296 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:10:10,296 [DEBUG] Tree_policy iteration 1: Expanding move (1, 5)
2025-04-11 19:10:10,304 [INFO] Final candidates: []
2025-04-11 19:10:10,304 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:10,312 [INFO] Final candidates: []
2025-04-11 19:10:10,312 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:10,312 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:10,339 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:10:10,339 [DEBUG] Tree_policy iteration 1: Expanding move (8, 3)
2025-04-11 19:10:10,347 [INFO] Final candidates: []
2025-04-11 19:10:10,347 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:10,355 [INFO] Final candidates: []
2025-04-11 19:10:10,355 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:10,356 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:10,545 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:10:10,545 [DEBUG] Tree_policy iteration 1: Expanding move (16, 14)
2025-04-11 19:10:10,553 [INFO] Final candidates: []
2025-04-11 19:10:10,553 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:10,561 [INFO] Final candidates: []
2025-04-11 19:10:10,561 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:10,561 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:10,657 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:10:10,658 [DEBUG] Tree_policy iteration 1: Expanding move (5, 11)
2025-04-11 19:10:10,666 [INFO] Final candidates: []
2025-04-11 19:10:10,666 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:10,674 [INFO] Final candidates: []
2025-04-11 19:10:10,674 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:10,674 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:10,850 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:10:10,850 [DEBUG] Tree_policy iteration 1: Expanding move (3, 6)
2025-04-11 19:10:10,858 [INFO] Final candidates: []
2025-04-11 19:10:10,858 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:10,867 [INFO] Final candidates: []
2025-04-11 19:10:10,867 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:10,867 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:10,885 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:10:10,885 [DEBUG] Tree_policy iteration 1: Expanding move (9, 12)
2025-04-11 19:10:10,893 [INFO] Final candidates: []
2025-04-11 19:10:10,893 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:10,901 [INFO] Final candidates: []
2025-04-11 19:10:10,901 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:10,901 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:11,148 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:10:11,148 [DEBUG] Tree_policy iteration 1: Expanding move (13, 7)
2025-04-11 19:10:11,156 [INFO] Final candidates: []
2025-04-11 19:10:11,156 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:11,164 [INFO] Final candidates: []
2025-04-11 19:10:11,164 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:11,164 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:11,304 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:10:11,304 [DEBUG] Tree_policy iteration 1: Expanding move (2, 16)
2025-04-11 19:10:11,313 [INFO] Final candidates: []
2025-04-11 19:10:11,313 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:11,321 [INFO] Final candidates: []
2025-04-11 19:10:11,321 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:11,321 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:11,524 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:10:11,524 [DEBUG] Tree_policy iteration 1: Expanding move (14, 0)
2025-04-11 19:10:11,532 [INFO] Final candidates: []
2025-04-11 19:10:11,532 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:11,540 [INFO] Final candidates: []
2025-04-11 19:10:11,540 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:11,541 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:11,547 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:10:11,547 [DEBUG] Tree_policy iteration 1: Expanding move (1, 2)
2025-04-11 19:10:11,555 [INFO] Final candidates: []
2025-04-11 19:10:11,555 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:11,563 [INFO] Final candidates: []
2025-04-11 19:10:11,563 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:11,564 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:11,589 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:10:11,589 [DEBUG] Tree_policy iteration 1: Expanding move (1, 3)
2025-04-11 19:10:11,598 [INFO] Final candidates: []
2025-04-11 19:10:11,598 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:11,606 [INFO] Final candidates: []
2025-04-11 19:10:11,606 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:11,606 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:11,669 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:10:11,670 [DEBUG] Tree_policy iteration 1: Expanding move (15, 12)
2025-04-11 19:10:11,678 [INFO] Final candidates: []
2025-04-11 19:10:11,678 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:11,686 [INFO] Final candidates: []
2025-04-11 19:10:11,686 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:11,686 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:11,750 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:10:11,750 [DEBUG] Tree_policy iteration 1: Expanding move (4, 15)
2025-04-11 19:10:11,758 [INFO] Final candidates: []
2025-04-11 19:10:11,758 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:11,766 [INFO] Final candidates: []
2025-04-11 19:10:11,766 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:11,766 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:11,859 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:10:11,859 [DEBUG] Tree_policy iteration 1: Expanding move (12, 9)
2025-04-11 19:10:11,867 [INFO] Final candidates: []
2025-04-11 19:10:11,867 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:11,875 [INFO] Final candidates: []
2025-04-11 19:10:11,875 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:11,875 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:11,918 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:10:11,918 [DEBUG] Tree_policy iteration 1: Expanding move (3, 13)
2025-04-11 19:10:11,927 [INFO] Final candidates: []
2025-04-11 19:10:11,927 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:11,936 [INFO] Final candidates: []
2025-04-11 19:10:11,936 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:11,936 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:11,978 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:10:11,978 [DEBUG] Tree_policy iteration 1: Expanding move (10, 11)
2025-04-11 19:10:11,986 [INFO] Final candidates: []
2025-04-11 19:10:11,987 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:11,994 [INFO] Final candidates: []
2025-04-11 19:10:11,994 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:11,995 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:12,066 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:10:12,066 [DEBUG] Tree_policy iteration 1: Expanding move (3, 9)
2025-04-11 19:10:12,075 [INFO] Final candidates: []
2025-04-11 19:10:12,075 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:12,083 [INFO] Final candidates: []
2025-04-11 19:10:12,083 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:12,083 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:12,228 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:10:12,228 [DEBUG] Tree_policy iteration 1: Expanding move (4, 18)
2025-04-11 19:10:12,236 [INFO] Final candidates: []
2025-04-11 19:10:12,236 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:12,244 [INFO] Final candidates: []
2025-04-11 19:10:12,244 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:12,244 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:12,349 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:10:12,349 [DEBUG] Tree_policy iteration 1: Expanding move (11, 8)
2025-04-11 19:10:12,357 [INFO] Final candidates: []
2025-04-11 19:10:12,357 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:12,366 [INFO] Final candidates: []
2025-04-11 19:10:12,366 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:12,367 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:12,481 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:10:12,481 [DEBUG] Tree_policy iteration 1: Expanding move (9, 3)
2025-04-11 19:10:12,489 [INFO] Final candidates: []
2025-04-11 19:10:12,489 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:12,497 [INFO] Final candidates: []
2025-04-11 19:10:12,497 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:12,497 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:12,596 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:10:12,596 [DEBUG] Tree_policy iteration 1: Expanding move (18, 0)
2025-04-11 19:10:12,604 [INFO] Final candidates: []
2025-04-11 19:10:12,604 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:12,612 [INFO] Final candidates: []
2025-04-11 19:10:12,612 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:12,612 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:12,646 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:10:12,647 [DEBUG] Tree_policy iteration 1: Expanding move (13, 3)
2025-04-11 19:10:12,655 [INFO] Final candidates: []
2025-04-11 19:10:12,655 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:12,663 [INFO] Final candidates: []
2025-04-11 19:10:12,663 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:12,663 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:12,689 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:10:12,689 [DEBUG] Tree_policy iteration 1: Expanding move (14, 13)
2025-04-11 19:10:12,697 [INFO] Final candidates: []
2025-04-11 19:10:12,697 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:12,705 [INFO] Final candidates: []
2025-04-11 19:10:12,705 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:12,705 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:12,732 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:10:12,732 [DEBUG] Tree_policy iteration 1: Expanding move (3, 18)
2025-04-11 19:10:12,741 [INFO] Final candidates: []
2025-04-11 19:10:12,741 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 19:10:12,749 [INFO] Final candidates: []
2025-04-11 19:10:12,749 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 19:10:12,749 [INFO] Default policy: Starting random playout.
2025-04-11 19:10:12,783 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 19:10:12,784 [INFO] MCTS: Search finished. Best move selected with 1 visits.
2025-04-11 19:10:12,784 [INFO] Game terminated.
