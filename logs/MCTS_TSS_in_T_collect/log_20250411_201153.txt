2025-04-11 20:12:02,119 [INFO] Starting pre-MCTS candidate collection.
2025-04-11 20:12:02,129 [INFO] Final candidates: []
2025-04-11 20:12:02,129 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:02,139 [INFO] Final candidates: []
2025-04-11 20:12:02,139 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:02,139 [INFO] No candidate found in Phase 1 or 2; using full legal moves for MCTS.
2025-04-11 20:12:02,139 [INFO] MCTS: Starting search for 100 iterations.
2025-04-11 20:12:02,149 [INFO] Final candidates: []
2025-04-11 20:12:02,149 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:02,158 [INFO] Final candidates: []
2025-04-11 20:12:02,158 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:02,160 [DEBUG] Tree_policy iteration 1: Expanding move (17, 0)
2025-04-11 20:12:02,160 [DEBUG] MCTS iteration 0: reached a node with 0 visits.
2025-04-11 20:12:02,160 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:02,267 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:02,268 [DEBUG] MCTS iteration 0: Rollout reward: 1.
2025-04-11 20:12:02,268 [DEBUG] MCTS iteration 0: Backed up Finish.
2025-04-11 20:12:02,277 [INFO] Final candidates: []
2025-04-11 20:12:02,277 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:02,287 [INFO] Final candidates: []
2025-04-11 20:12:02,287 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:02,287 [DEBUG] Tree_policy iteration 1: Expanding move (14, 18)
2025-04-11 20:12:02,287 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:02,304 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:02,304 [DEBUG] MCTS iteration 1: Rollout reward: 1.
2025-04-11 20:12:02,304 [DEBUG] MCTS iteration 1: Backed up Finish.
2025-04-11 20:12:02,313 [INFO] Final candidates: []
2025-04-11 20:12:02,313 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:02,323 [INFO] Final candidates: []
2025-04-11 20:12:02,323 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:02,323 [DEBUG] Tree_policy iteration 1: Expanding move (15, 13)
2025-04-11 20:12:02,323 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:02,414 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:02,414 [DEBUG] MCTS iteration 2: Rollout reward: 0.
2025-04-11 20:12:02,414 [DEBUG] MCTS iteration 2: Backed up Finish.
2025-04-11 20:12:02,423 [INFO] Final candidates: []
2025-04-11 20:12:02,423 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:02,433 [INFO] Final candidates: []
2025-04-11 20:12:02,433 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:02,433 [DEBUG] Tree_policy iteration 1: Expanding move (18, 4)
2025-04-11 20:12:02,433 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:02,507 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:02,508 [DEBUG] MCTS iteration 3: Rollout reward: 0.
2025-04-11 20:12:02,508 [DEBUG] MCTS iteration 3: Backed up Finish.
2025-04-11 20:12:02,517 [INFO] Final candidates: []
2025-04-11 20:12:02,517 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:02,526 [INFO] Final candidates: []
2025-04-11 20:12:02,526 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:02,527 [DEBUG] Tree_policy iteration 1: Expanding move (10, 11)
2025-04-11 20:12:02,527 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:02,617 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:02,617 [DEBUG] MCTS iteration 4: Rollout reward: 0.
2025-04-11 20:12:02,617 [DEBUG] MCTS iteration 4: Backed up Finish.
2025-04-11 20:12:02,627 [INFO] Final candidates: []
2025-04-11 20:12:02,627 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:02,637 [INFO] Final candidates: []
2025-04-11 20:12:02,637 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:02,637 [DEBUG] Tree_policy iteration 1: Expanding move (4, 1)
2025-04-11 20:12:02,637 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:02,675 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:02,675 [DEBUG] MCTS iteration 5: Rollout reward: 0.
2025-04-11 20:12:02,675 [DEBUG] MCTS iteration 5: Backed up Finish.
2025-04-11 20:12:02,685 [INFO] Final candidates: []
2025-04-11 20:12:02,685 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:02,694 [INFO] Final candidates: []
2025-04-11 20:12:02,694 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:02,694 [DEBUG] Tree_policy iteration 1: Expanding move (13, 1)
2025-04-11 20:12:02,694 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:02,716 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:02,716 [DEBUG] MCTS iteration 6: Rollout reward: 1.
2025-04-11 20:12:02,716 [DEBUG] MCTS iteration 6: Backed up Finish.
2025-04-11 20:12:02,726 [INFO] Final candidates: []
2025-04-11 20:12:02,726 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:02,736 [INFO] Final candidates: []
2025-04-11 20:12:02,736 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:02,736 [DEBUG] Tree_policy iteration 1: Expanding move (4, 14)
2025-04-11 20:12:02,736 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:02,747 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:02,747 [DEBUG] MCTS iteration 7: Rollout reward: 1.
2025-04-11 20:12:02,747 [DEBUG] MCTS iteration 7: Backed up Finish.
2025-04-11 20:12:02,756 [INFO] Final candidates: []
2025-04-11 20:12:02,756 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:02,766 [INFO] Final candidates: []
2025-04-11 20:12:02,766 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:02,766 [DEBUG] Tree_policy iteration 1: Expanding move (7, 15)
2025-04-11 20:12:02,766 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:02,781 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:02,781 [DEBUG] MCTS iteration 8: Rollout reward: 1.
2025-04-11 20:12:02,781 [DEBUG] MCTS iteration 8: Backed up Finish.
2025-04-11 20:12:02,791 [INFO] Final candidates: []
2025-04-11 20:12:02,791 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:02,800 [INFO] Final candidates: []
2025-04-11 20:12:02,800 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:02,800 [DEBUG] Tree_policy iteration 1: Expanding move (17, 6)
2025-04-11 20:12:02,801 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:02,811 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:02,811 [DEBUG] MCTS iteration 9: Rollout reward: 1.
2025-04-11 20:12:02,811 [DEBUG] MCTS iteration 9: Backed up Finish.
2025-04-11 20:12:02,821 [INFO] Final candidates: []
2025-04-11 20:12:02,821 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:02,830 [INFO] Final candidates: []
2025-04-11 20:12:02,830 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:02,830 [DEBUG] Tree_policy iteration 1: Expanding move (6, 12)
2025-04-11 20:12:02,830 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:02,900 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:02,900 [DEBUG] MCTS iteration 10: Rollout reward: 0.
2025-04-11 20:12:02,900 [DEBUG] MCTS iteration 10: Backed up Finish.
2025-04-11 20:12:02,910 [INFO] Final candidates: []
2025-04-11 20:12:02,910 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:02,920 [INFO] Final candidates: []
2025-04-11 20:12:02,920 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:02,920 [DEBUG] Tree_policy iteration 1: Expanding move (3, 16)
2025-04-11 20:12:02,920 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:02,938 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:02,938 [DEBUG] MCTS iteration 11: Rollout reward: 0.
2025-04-11 20:12:02,938 [DEBUG] MCTS iteration 11: Backed up Finish.
2025-04-11 20:12:02,948 [INFO] Final candidates: []
2025-04-11 20:12:02,948 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:02,958 [INFO] Final candidates: []
2025-04-11 20:12:02,958 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:02,958 [DEBUG] Tree_policy iteration 1: Expanding move (13, 6)
2025-04-11 20:12:02,958 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:02,989 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:02,989 [DEBUG] MCTS iteration 12: Rollout reward: 1.
2025-04-11 20:12:02,989 [DEBUG] MCTS iteration 12: Backed up Finish.
2025-04-11 20:12:02,999 [INFO] Final candidates: []
2025-04-11 20:12:02,999 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:03,008 [INFO] Final candidates: []
2025-04-11 20:12:03,008 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:03,008 [DEBUG] Tree_policy iteration 1: Expanding move (6, 4)
2025-04-11 20:12:03,009 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:03,071 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:03,071 [DEBUG] MCTS iteration 13: Rollout reward: 0.
2025-04-11 20:12:03,071 [DEBUG] MCTS iteration 13: Backed up Finish.
2025-04-11 20:12:03,081 [INFO] Final candidates: []
2025-04-11 20:12:03,081 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:03,090 [INFO] Final candidates: []
2025-04-11 20:12:03,090 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:03,090 [DEBUG] Tree_policy iteration 1: Expanding move (13, 2)
2025-04-11 20:12:03,090 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:03,117 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:03,117 [DEBUG] MCTS iteration 14: Rollout reward: 1.
2025-04-11 20:12:03,117 [DEBUG] MCTS iteration 14: Backed up Finish.
2025-04-11 20:12:03,127 [INFO] Final candidates: []
2025-04-11 20:12:03,127 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:03,137 [INFO] Final candidates: []
2025-04-11 20:12:03,137 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:03,137 [DEBUG] Tree_policy iteration 1: Expanding move (10, 6)
2025-04-11 20:12:03,137 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:03,300 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:03,300 [DEBUG] MCTS iteration 15: Rollout reward: 1.
2025-04-11 20:12:03,300 [DEBUG] MCTS iteration 15: Backed up Finish.
2025-04-11 20:12:03,309 [INFO] Final candidates: []
2025-04-11 20:12:03,309 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:03,319 [INFO] Final candidates: []
2025-04-11 20:12:03,319 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:03,319 [DEBUG] Tree_policy iteration 1: Expanding move (2, 12)
2025-04-11 20:12:03,319 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:03,373 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:03,374 [DEBUG] MCTS iteration 16: Rollout reward: 0.
2025-04-11 20:12:03,374 [DEBUG] MCTS iteration 16: Backed up Finish.
2025-04-11 20:12:03,383 [INFO] Final candidates: []
2025-04-11 20:12:03,383 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:03,393 [INFO] Final candidates: []
2025-04-11 20:12:03,393 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:03,393 [DEBUG] Tree_policy iteration 1: Expanding move (7, 18)
2025-04-11 20:12:03,393 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:03,424 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:03,424 [DEBUG] MCTS iteration 17: Rollout reward: 0.
2025-04-11 20:12:03,424 [DEBUG] MCTS iteration 17: Backed up Finish.
2025-04-11 20:12:03,434 [INFO] Final candidates: []
2025-04-11 20:12:03,434 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:03,443 [INFO] Final candidates: []
2025-04-11 20:12:03,443 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:03,443 [DEBUG] Tree_policy iteration 1: Expanding move (13, 13)
2025-04-11 20:12:03,443 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:03,615 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:03,616 [DEBUG] MCTS iteration 18: Rollout reward: 0.
2025-04-11 20:12:03,616 [DEBUG] MCTS iteration 18: Backed up Finish.
2025-04-11 20:12:03,625 [INFO] Final candidates: []
2025-04-11 20:12:03,625 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:03,635 [INFO] Final candidates: []
2025-04-11 20:12:03,635 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:03,635 [DEBUG] Tree_policy iteration 1: Expanding move (5, 10)
2025-04-11 20:12:03,635 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:03,677 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:03,677 [DEBUG] MCTS iteration 19: Rollout reward: 0.
2025-04-11 20:12:03,677 [DEBUG] MCTS iteration 19: Backed up Finish.
2025-04-11 20:12:03,686 [INFO] Final candidates: []
2025-04-11 20:12:03,686 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:03,696 [INFO] Final candidates: []
2025-04-11 20:12:03,696 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:03,696 [DEBUG] Tree_policy iteration 1: Expanding move (0, 13)
2025-04-11 20:12:03,696 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:03,784 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:03,784 [DEBUG] MCTS iteration 20: Rollout reward: 0.
2025-04-11 20:12:03,784 [DEBUG] MCTS iteration 20: Backed up Finish.
2025-04-11 20:12:03,794 [INFO] Final candidates: []
2025-04-11 20:12:03,794 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:03,803 [INFO] Final candidates: []
2025-04-11 20:12:03,803 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:03,803 [DEBUG] Tree_policy iteration 1: Expanding move (13, 16)
2025-04-11 20:12:03,803 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:03,838 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:03,838 [DEBUG] MCTS iteration 21: Rollout reward: 0.
2025-04-11 20:12:03,838 [DEBUG] MCTS iteration 21: Backed up Finish.
2025-04-11 20:12:03,847 [INFO] Final candidates: []
2025-04-11 20:12:03,847 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:03,857 [INFO] Final candidates: []
2025-04-11 20:12:03,857 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:03,857 [DEBUG] Tree_policy iteration 1: Expanding move (5, 12)
2025-04-11 20:12:03,857 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:03,940 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:03,940 [DEBUG] MCTS iteration 22: Rollout reward: 0.
2025-04-11 20:12:03,940 [DEBUG] MCTS iteration 22: Backed up Finish.
2025-04-11 20:12:03,949 [INFO] Final candidates: []
2025-04-11 20:12:03,949 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:03,959 [INFO] Final candidates: []
2025-04-11 20:12:03,959 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:03,959 [DEBUG] Tree_policy iteration 1: Expanding move (11, 13)
2025-04-11 20:12:03,959 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:04,050 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:04,050 [DEBUG] MCTS iteration 23: Rollout reward: 1.
2025-04-11 20:12:04,050 [DEBUG] MCTS iteration 23: Backed up Finish.
2025-04-11 20:12:04,059 [INFO] Final candidates: []
2025-04-11 20:12:04,059 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:04,068 [INFO] Final candidates: []
2025-04-11 20:12:04,068 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:04,069 [DEBUG] Tree_policy iteration 1: Expanding move (1, 10)
2025-04-11 20:12:04,069 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:04,182 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:04,182 [DEBUG] MCTS iteration 24: Rollout reward: 1.
2025-04-11 20:12:04,182 [DEBUG] MCTS iteration 24: Backed up Finish.
2025-04-11 20:12:04,191 [INFO] Final candidates: []
2025-04-11 20:12:04,191 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:04,202 [INFO] Final candidates: []
2025-04-11 20:12:04,202 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:04,202 [DEBUG] Tree_policy iteration 1: Expanding move (1, 4)
2025-04-11 20:12:04,202 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:04,423 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:04,423 [DEBUG] MCTS iteration 25: Rollout reward: 0.
2025-04-11 20:12:04,423 [DEBUG] MCTS iteration 25: Backed up Finish.
2025-04-11 20:12:04,433 [INFO] Final candidates: []
2025-04-11 20:12:04,433 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:04,444 [INFO] Final candidates: []
2025-04-11 20:12:04,444 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:04,444 [DEBUG] Tree_policy iteration 1: Expanding move (1, 5)
2025-04-11 20:12:04,444 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:04,521 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:04,521 [DEBUG] MCTS iteration 26: Rollout reward: 0.
2025-04-11 20:12:04,521 [DEBUG] MCTS iteration 26: Backed up Finish.
2025-04-11 20:12:04,531 [INFO] Final candidates: []
2025-04-11 20:12:04,531 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:04,540 [INFO] Final candidates: []
2025-04-11 20:12:04,540 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:04,540 [DEBUG] Tree_policy iteration 1: Expanding move (1, 9)
2025-04-11 20:12:04,540 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:04,622 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:04,622 [DEBUG] MCTS iteration 27: Rollout reward: 1.
2025-04-11 20:12:04,622 [DEBUG] MCTS iteration 27: Backed up Finish.
2025-04-11 20:12:04,632 [INFO] Final candidates: []
2025-04-11 20:12:04,632 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:04,641 [INFO] Final candidates: []
2025-04-11 20:12:04,641 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:04,641 [DEBUG] Tree_policy iteration 1: Expanding move (8, 10)
2025-04-11 20:12:04,641 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:04,714 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:04,714 [DEBUG] MCTS iteration 28: Rollout reward: 1.
2025-04-11 20:12:04,714 [DEBUG] MCTS iteration 28: Backed up Finish.
2025-04-11 20:12:04,724 [INFO] Final candidates: []
2025-04-11 20:12:04,724 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:04,733 [INFO] Final candidates: []
2025-04-11 20:12:04,733 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:04,733 [DEBUG] Tree_policy iteration 1: Expanding move (15, 8)
2025-04-11 20:12:04,733 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:04,842 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:04,842 [DEBUG] MCTS iteration 29: Rollout reward: 1.
2025-04-11 20:12:04,842 [DEBUG] MCTS iteration 29: Backed up Finish.
2025-04-11 20:12:04,852 [INFO] Final candidates: []
2025-04-11 20:12:04,852 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:04,861 [INFO] Final candidates: []
2025-04-11 20:12:04,861 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:04,861 [DEBUG] Tree_policy iteration 1: Expanding move (13, 3)
2025-04-11 20:12:04,861 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:05,076 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:05,076 [DEBUG] MCTS iteration 30: Rollout reward: 1.
2025-04-11 20:12:05,076 [DEBUG] MCTS iteration 30: Backed up Finish.
2025-04-11 20:12:05,086 [INFO] Final candidates: []
2025-04-11 20:12:05,086 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:05,095 [INFO] Final candidates: []
2025-04-11 20:12:05,095 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:05,095 [DEBUG] Tree_policy iteration 1: Expanding move (14, 15)
2025-04-11 20:12:05,095 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:05,194 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:05,194 [DEBUG] MCTS iteration 31: Rollout reward: 0.
2025-04-11 20:12:05,194 [DEBUG] MCTS iteration 31: Backed up Finish.
2025-04-11 20:12:05,204 [INFO] Final candidates: []
2025-04-11 20:12:05,204 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:05,213 [INFO] Final candidates: []
2025-04-11 20:12:05,213 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:05,213 [DEBUG] Tree_policy iteration 1: Expanding move (11, 0)
2025-04-11 20:12:05,213 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:05,330 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:05,330 [DEBUG] MCTS iteration 32: Rollout reward: 1.
2025-04-11 20:12:05,330 [DEBUG] MCTS iteration 32: Backed up Finish.
2025-04-11 20:12:05,340 [INFO] Final candidates: []
2025-04-11 20:12:05,340 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:05,350 [INFO] Final candidates: []
2025-04-11 20:12:05,350 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:05,350 [DEBUG] Tree_policy iteration 1: Expanding move (14, 3)
2025-04-11 20:12:05,350 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:05,415 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:05,415 [DEBUG] MCTS iteration 33: Rollout reward: 1.
2025-04-11 20:12:05,415 [DEBUG] MCTS iteration 33: Backed up Finish.
2025-04-11 20:12:05,424 [INFO] Final candidates: []
2025-04-11 20:12:05,424 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:05,434 [INFO] Final candidates: []
2025-04-11 20:12:05,434 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:05,434 [DEBUG] Tree_policy iteration 1: Expanding move (4, 5)
2025-04-11 20:12:05,434 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:05,487 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:05,487 [DEBUG] MCTS iteration 34: Rollout reward: 1.
2025-04-11 20:12:05,487 [DEBUG] MCTS iteration 34: Backed up Finish.
2025-04-11 20:12:05,496 [INFO] Final candidates: []
2025-04-11 20:12:05,496 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:05,506 [INFO] Final candidates: []
2025-04-11 20:12:05,506 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:05,506 [DEBUG] Tree_policy iteration 1: Expanding move (17, 9)
2025-04-11 20:12:05,506 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:05,611 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:05,611 [DEBUG] MCTS iteration 35: Rollout reward: 0.
2025-04-11 20:12:05,612 [DEBUG] MCTS iteration 35: Backed up Finish.
2025-04-11 20:12:05,621 [INFO] Final candidates: []
2025-04-11 20:12:05,621 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:05,631 [INFO] Final candidates: []
2025-04-11 20:12:05,631 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:05,631 [DEBUG] Tree_policy iteration 1: Expanding move (15, 11)
2025-04-11 20:12:05,631 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:05,664 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:05,664 [DEBUG] MCTS iteration 36: Rollout reward: 0.
2025-04-11 20:12:05,664 [DEBUG] MCTS iteration 36: Backed up Finish.
2025-04-11 20:12:05,673 [INFO] Final candidates: []
2025-04-11 20:12:05,673 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:05,683 [INFO] Final candidates: []
2025-04-11 20:12:05,683 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:05,683 [DEBUG] Tree_policy iteration 1: Expanding move (12, 2)
2025-04-11 20:12:05,683 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:05,741 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:05,741 [DEBUG] MCTS iteration 37: Rollout reward: 0.
2025-04-11 20:12:05,741 [DEBUG] MCTS iteration 37: Backed up Finish.
2025-04-11 20:12:05,750 [INFO] Final candidates: []
2025-04-11 20:12:05,750 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:05,759 [INFO] Final candidates: []
2025-04-11 20:12:05,759 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:05,759 [DEBUG] Tree_policy iteration 1: Expanding move (9, 0)
2025-04-11 20:12:05,760 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:05,944 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:05,945 [DEBUG] MCTS iteration 38: Rollout reward: 0.
2025-04-11 20:12:05,945 [DEBUG] MCTS iteration 38: Backed up Finish.
2025-04-11 20:12:05,954 [INFO] Final candidates: []
2025-04-11 20:12:05,954 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:05,964 [INFO] Final candidates: []
2025-04-11 20:12:05,964 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:05,964 [DEBUG] Tree_policy iteration 1: Expanding move (13, 12)
2025-04-11 20:12:05,964 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:05,982 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:05,982 [DEBUG] MCTS iteration 39: Rollout reward: 1.
2025-04-11 20:12:05,982 [DEBUG] MCTS iteration 39: Backed up Finish.
2025-04-11 20:12:05,991 [INFO] Final candidates: []
2025-04-11 20:12:05,991 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:06,001 [INFO] Final candidates: []
2025-04-11 20:12:06,001 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:06,001 [DEBUG] Tree_policy iteration 1: Expanding move (8, 2)
2025-04-11 20:12:06,001 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:06,192 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:06,192 [DEBUG] MCTS iteration 40: Rollout reward: 0.
2025-04-11 20:12:06,192 [DEBUG] MCTS iteration 40: Backed up Finish.
2025-04-11 20:12:06,203 [INFO] Final candidates: []
2025-04-11 20:12:06,203 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:06,215 [INFO] Final candidates: []
2025-04-11 20:12:06,215 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:06,215 [DEBUG] Tree_policy iteration 1: Expanding move (6, 6)
2025-04-11 20:12:06,215 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:06,345 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:06,345 [DEBUG] MCTS iteration 41: Rollout reward: 0.
2025-04-11 20:12:06,345 [DEBUG] MCTS iteration 41: Backed up Finish.
2025-04-11 20:12:06,355 [INFO] Final candidates: []
2025-04-11 20:12:06,355 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:06,364 [INFO] Final candidates: []
2025-04-11 20:12:06,364 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:06,364 [DEBUG] Tree_policy iteration 1: Expanding move (18, 11)
2025-04-11 20:12:06,365 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:06,385 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:06,385 [DEBUG] MCTS iteration 42: Rollout reward: 0.
2025-04-11 20:12:06,385 [DEBUG] MCTS iteration 42: Backed up Finish.
2025-04-11 20:12:06,394 [INFO] Final candidates: []
2025-04-11 20:12:06,394 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:06,404 [INFO] Final candidates: []
2025-04-11 20:12:06,404 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:06,404 [DEBUG] Tree_policy iteration 1: Expanding move (8, 13)
2025-04-11 20:12:06,404 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:06,499 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:06,499 [DEBUG] MCTS iteration 43: Rollout reward: 0.
2025-04-11 20:12:06,499 [DEBUG] MCTS iteration 43: Backed up Finish.
2025-04-11 20:12:06,509 [INFO] Final candidates: []
2025-04-11 20:12:06,509 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:06,520 [INFO] Final candidates: []
2025-04-11 20:12:06,520 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:06,520 [DEBUG] Tree_policy iteration 1: Expanding move (11, 14)
2025-04-11 20:12:06,520 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:06,587 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:06,587 [DEBUG] MCTS iteration 44: Rollout reward: 0.
2025-04-11 20:12:06,587 [DEBUG] MCTS iteration 44: Backed up Finish.
2025-04-11 20:12:06,596 [INFO] Final candidates: []
2025-04-11 20:12:06,596 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:06,607 [INFO] Final candidates: []
2025-04-11 20:12:06,607 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:06,607 [DEBUG] Tree_policy iteration 1: Expanding move (16, 9)
2025-04-11 20:12:06,607 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:06,673 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:06,673 [DEBUG] MCTS iteration 45: Rollout reward: 0.
2025-04-11 20:12:06,673 [DEBUG] MCTS iteration 45: Backed up Finish.
2025-04-11 20:12:06,683 [INFO] Final candidates: []
2025-04-11 20:12:06,683 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:06,692 [INFO] Final candidates: []
2025-04-11 20:12:06,692 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:06,692 [DEBUG] Tree_policy iteration 1: Expanding move (6, 3)
2025-04-11 20:12:06,692 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:06,736 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:06,736 [DEBUG] MCTS iteration 46: Rollout reward: 0.
2025-04-11 20:12:06,736 [DEBUG] MCTS iteration 46: Backed up Finish.
2025-04-11 20:12:06,746 [INFO] Final candidates: []
2025-04-11 20:12:06,746 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:06,755 [INFO] Final candidates: []
2025-04-11 20:12:06,755 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:06,755 [DEBUG] Tree_policy iteration 1: Expanding move (5, 0)
2025-04-11 20:12:06,756 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:06,770 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:06,770 [DEBUG] MCTS iteration 47: Rollout reward: 1.
2025-04-11 20:12:06,770 [DEBUG] MCTS iteration 47: Backed up Finish.
2025-04-11 20:12:06,780 [INFO] Final candidates: []
2025-04-11 20:12:06,780 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:06,789 [INFO] Final candidates: []
2025-04-11 20:12:06,789 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:06,790 [DEBUG] Tree_policy iteration 1: Expanding move (11, 1)
2025-04-11 20:12:06,790 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:06,846 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:06,846 [DEBUG] MCTS iteration 48: Rollout reward: 1.
2025-04-11 20:12:06,846 [DEBUG] MCTS iteration 48: Backed up Finish.
2025-04-11 20:12:06,856 [INFO] Final candidates: []
2025-04-11 20:12:06,856 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:06,865 [INFO] Final candidates: []
2025-04-11 20:12:06,865 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:06,865 [DEBUG] Tree_policy iteration 1: Expanding move (14, 8)
2025-04-11 20:12:06,865 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:06,993 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:06,993 [DEBUG] MCTS iteration 49: Rollout reward: 0.
2025-04-11 20:12:06,993 [DEBUG] MCTS iteration 49: Backed up Finish.
2025-04-11 20:12:07,002 [INFO] Final candidates: []
2025-04-11 20:12:07,002 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:07,012 [INFO] Final candidates: []
2025-04-11 20:12:07,012 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:07,012 [DEBUG] Tree_policy iteration 1: Expanding move (10, 13)
2025-04-11 20:12:07,012 [DEBUG] MCTS iteration 50: reached a node with 0 visits.
2025-04-11 20:12:07,012 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:07,234 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:07,234 [DEBUG] MCTS iteration 50: Rollout reward: 1.
2025-04-11 20:12:07,234 [DEBUG] MCTS iteration 50: Backed up Finish.
2025-04-11 20:12:07,244 [INFO] Final candidates: []
2025-04-11 20:12:07,244 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:07,253 [INFO] Final candidates: []
2025-04-11 20:12:07,253 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:07,253 [DEBUG] Tree_policy iteration 1: Expanding move (0, 18)
2025-04-11 20:12:07,253 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:07,318 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:07,318 [DEBUG] MCTS iteration 51: Rollout reward: 0.
2025-04-11 20:12:07,318 [DEBUG] MCTS iteration 51: Backed up Finish.
2025-04-11 20:12:07,328 [INFO] Final candidates: []
2025-04-11 20:12:07,328 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:07,337 [INFO] Final candidates: []
2025-04-11 20:12:07,337 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:07,337 [DEBUG] Tree_policy iteration 1: Expanding move (10, 7)
2025-04-11 20:12:07,337 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:07,434 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:07,434 [DEBUG] MCTS iteration 52: Rollout reward: 0.
2025-04-11 20:12:07,434 [DEBUG] MCTS iteration 52: Backed up Finish.
2025-04-11 20:12:07,443 [INFO] Final candidates: []
2025-04-11 20:12:07,443 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:07,453 [INFO] Final candidates: []
2025-04-11 20:12:07,453 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:07,453 [DEBUG] Tree_policy iteration 1: Expanding move (14, 0)
2025-04-11 20:12:07,453 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:07,463 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:07,463 [DEBUG] MCTS iteration 53: Rollout reward: 0.
2025-04-11 20:12:07,463 [DEBUG] MCTS iteration 53: Backed up Finish.
2025-04-11 20:12:07,475 [INFO] Final candidates: []
2025-04-11 20:12:07,475 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:07,484 [INFO] Final candidates: []
2025-04-11 20:12:07,484 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:07,484 [DEBUG] Tree_policy iteration 1: Expanding move (7, 14)
2025-04-11 20:12:07,484 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:07,540 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:07,540 [DEBUG] MCTS iteration 54: Rollout reward: 0.
2025-04-11 20:12:07,540 [DEBUG] MCTS iteration 54: Backed up Finish.
2025-04-11 20:12:07,549 [INFO] Final candidates: []
2025-04-11 20:12:07,549 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:07,558 [INFO] Final candidates: []
2025-04-11 20:12:07,558 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:07,558 [DEBUG] Tree_policy iteration 1: Expanding move (4, 7)
2025-04-11 20:12:07,558 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:07,576 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:07,577 [DEBUG] MCTS iteration 55: Rollout reward: 0.
2025-04-11 20:12:07,577 [DEBUG] MCTS iteration 55: Backed up Finish.
2025-04-11 20:12:07,586 [INFO] Final candidates: []
2025-04-11 20:12:07,586 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:07,596 [INFO] Final candidates: []
2025-04-11 20:12:07,596 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:07,596 [DEBUG] Tree_policy iteration 1: Expanding move (11, 15)
2025-04-11 20:12:07,596 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:07,696 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:07,696 [DEBUG] MCTS iteration 56: Rollout reward: 0.
2025-04-11 20:12:07,696 [DEBUG] MCTS iteration 56: Backed up Finish.
2025-04-11 20:12:07,708 [INFO] Final candidates: []
2025-04-11 20:12:07,708 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:07,718 [INFO] Final candidates: []
2025-04-11 20:12:07,718 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:07,718 [DEBUG] Tree_policy iteration 1: Expanding move (15, 6)
2025-04-11 20:12:07,718 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:07,873 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:07,873 [DEBUG] MCTS iteration 57: Rollout reward: 1.
2025-04-11 20:12:07,873 [DEBUG] MCTS iteration 57: Backed up Finish.
2025-04-11 20:12:07,883 [INFO] Final candidates: []
2025-04-11 20:12:07,883 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:07,892 [INFO] Final candidates: []
2025-04-11 20:12:07,892 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:07,892 [DEBUG] Tree_policy iteration 1: Expanding move (7, 2)
2025-04-11 20:12:07,892 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:08,016 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:08,016 [DEBUG] MCTS iteration 58: Rollout reward: 1.
2025-04-11 20:12:08,016 [DEBUG] MCTS iteration 58: Backed up Finish.
2025-04-11 20:12:08,028 [INFO] Final candidates: []
2025-04-11 20:12:08,028 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:08,037 [INFO] Final candidates: []
2025-04-11 20:12:08,038 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:08,038 [DEBUG] Tree_policy iteration 1: Expanding move (14, 11)
2025-04-11 20:12:08,038 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:08,188 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:08,188 [DEBUG] MCTS iteration 59: Rollout reward: 1.
2025-04-11 20:12:08,188 [DEBUG] MCTS iteration 59: Backed up Finish.
2025-04-11 20:12:08,197 [INFO] Final candidates: []
2025-04-11 20:12:08,197 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:08,207 [INFO] Final candidates: []
2025-04-11 20:12:08,207 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:08,207 [DEBUG] Tree_policy iteration 1: Expanding move (16, 8)
2025-04-11 20:12:08,207 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:08,341 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:08,341 [DEBUG] MCTS iteration 60: Rollout reward: 1.
2025-04-11 20:12:08,341 [DEBUG] MCTS iteration 60: Backed up Finish.
2025-04-11 20:12:08,350 [INFO] Final candidates: []
2025-04-11 20:12:08,350 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:08,362 [INFO] Final candidates: []
2025-04-11 20:12:08,362 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:08,362 [DEBUG] Tree_policy iteration 1: Expanding move (6, 9)
2025-04-11 20:12:08,362 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:08,468 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:08,468 [DEBUG] MCTS iteration 61: Rollout reward: 1.
2025-04-11 20:12:08,468 [DEBUG] MCTS iteration 61: Backed up Finish.
2025-04-11 20:12:08,477 [INFO] Final candidates: []
2025-04-11 20:12:08,477 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:08,487 [INFO] Final candidates: []
2025-04-11 20:12:08,487 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:08,487 [DEBUG] Tree_policy iteration 1: Expanding move (9, 14)
2025-04-11 20:12:08,487 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:08,637 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:08,637 [DEBUG] MCTS iteration 62: Rollout reward: 0.
2025-04-11 20:12:08,637 [DEBUG] MCTS iteration 62: Backed up Finish.
2025-04-11 20:12:08,647 [INFO] Final candidates: []
2025-04-11 20:12:08,647 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:08,656 [INFO] Final candidates: []
2025-04-11 20:12:08,656 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:08,656 [DEBUG] Tree_policy iteration 1: Expanding move (0, 14)
2025-04-11 20:12:08,656 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:08,702 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:08,703 [DEBUG] MCTS iteration 63: Rollout reward: 1.
2025-04-11 20:12:08,703 [DEBUG] MCTS iteration 63: Backed up Finish.
2025-04-11 20:12:08,712 [INFO] Final candidates: []
2025-04-11 20:12:08,712 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:08,721 [INFO] Final candidates: []
2025-04-11 20:12:08,722 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:08,722 [DEBUG] Tree_policy iteration 1: Expanding move (16, 6)
2025-04-11 20:12:08,722 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:08,857 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:08,857 [DEBUG] MCTS iteration 64: Rollout reward: 0.
2025-04-11 20:12:08,857 [DEBUG] MCTS iteration 64: Backed up Finish.
2025-04-11 20:12:08,866 [INFO] Final candidates: []
2025-04-11 20:12:08,866 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:08,876 [INFO] Final candidates: []
2025-04-11 20:12:08,876 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:08,876 [DEBUG] Tree_policy iteration 1: Expanding move (7, 8)
2025-04-11 20:12:08,876 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:08,931 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:08,931 [DEBUG] MCTS iteration 65: Rollout reward: 0.
2025-04-11 20:12:08,931 [DEBUG] MCTS iteration 65: Backed up Finish.
2025-04-11 20:12:08,940 [INFO] Final candidates: []
2025-04-11 20:12:08,940 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:08,950 [INFO] Final candidates: []
2025-04-11 20:12:08,950 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:08,950 [DEBUG] Tree_policy iteration 1: Expanding move (3, 11)
2025-04-11 20:12:08,950 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:09,045 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:09,045 [DEBUG] MCTS iteration 66: Rollout reward: 0.
2025-04-11 20:12:09,045 [DEBUG] MCTS iteration 66: Backed up Finish.
2025-04-11 20:12:09,055 [INFO] Final candidates: []
2025-04-11 20:12:09,055 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:09,064 [INFO] Final candidates: []
2025-04-11 20:12:09,064 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:09,064 [DEBUG] Tree_policy iteration 1: Expanding move (6, 0)
2025-04-11 20:12:09,064 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:09,103 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:09,103 [DEBUG] MCTS iteration 67: Rollout reward: 0.
2025-04-11 20:12:09,103 [DEBUG] MCTS iteration 67: Backed up Finish.
2025-04-11 20:12:09,112 [INFO] Final candidates: []
2025-04-11 20:12:09,112 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:09,122 [INFO] Final candidates: []
2025-04-11 20:12:09,122 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:09,122 [DEBUG] Tree_policy iteration 1: Expanding move (18, 3)
2025-04-11 20:12:09,122 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:09,218 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:09,219 [DEBUG] MCTS iteration 68: Rollout reward: 0.
2025-04-11 20:12:09,219 [DEBUG] MCTS iteration 68: Backed up Finish.
2025-04-11 20:12:09,228 [INFO] Final candidates: []
2025-04-11 20:12:09,228 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:09,237 [INFO] Final candidates: []
2025-04-11 20:12:09,237 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:09,237 [DEBUG] Tree_policy iteration 1: Expanding move (1, 7)
2025-04-11 20:12:09,238 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:09,380 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:09,380 [DEBUG] MCTS iteration 69: Rollout reward: 1.
2025-04-11 20:12:09,380 [DEBUG] MCTS iteration 69: Backed up Finish.
2025-04-11 20:12:09,389 [INFO] Final candidates: []
2025-04-11 20:12:09,389 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:09,400 [INFO] Final candidates: []
2025-04-11 20:12:09,400 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:09,400 [DEBUG] Tree_policy iteration 1: Expanding move (8, 4)
2025-04-11 20:12:09,400 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:09,526 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:09,526 [DEBUG] MCTS iteration 70: Rollout reward: 0.
2025-04-11 20:12:09,526 [DEBUG] MCTS iteration 70: Backed up Finish.
2025-04-11 20:12:09,537 [INFO] Final candidates: []
2025-04-11 20:12:09,537 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:09,547 [INFO] Final candidates: []
2025-04-11 20:12:09,547 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:09,547 [DEBUG] Tree_policy iteration 1: Expanding move (2, 9)
2025-04-11 20:12:09,547 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:09,614 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:09,614 [DEBUG] MCTS iteration 71: Rollout reward: 1.
2025-04-11 20:12:09,614 [DEBUG] MCTS iteration 71: Backed up Finish.
2025-04-11 20:12:09,624 [INFO] Final candidates: []
2025-04-11 20:12:09,624 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:09,633 [INFO] Final candidates: []
2025-04-11 20:12:09,633 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:09,633 [DEBUG] Tree_policy iteration 1: Expanding move (3, 5)
2025-04-11 20:12:09,634 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:09,730 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:09,730 [DEBUG] MCTS iteration 72: Rollout reward: 0.
2025-04-11 20:12:09,731 [DEBUG] MCTS iteration 72: Backed up Finish.
2025-04-11 20:12:09,740 [INFO] Final candidates: []
2025-04-11 20:12:09,740 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:09,749 [INFO] Final candidates: []
2025-04-11 20:12:09,749 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:09,749 [DEBUG] Tree_policy iteration 1: Expanding move (9, 6)
2025-04-11 20:12:09,749 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:09,917 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:09,917 [DEBUG] MCTS iteration 73: Rollout reward: 0.
2025-04-11 20:12:09,917 [DEBUG] MCTS iteration 73: Backed up Finish.
2025-04-11 20:12:09,926 [INFO] Final candidates: []
2025-04-11 20:12:09,926 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:09,936 [INFO] Final candidates: []
2025-04-11 20:12:09,936 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:09,936 [DEBUG] Tree_policy iteration 1: Expanding move (8, 8)
2025-04-11 20:12:09,936 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:09,971 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:09,971 [DEBUG] MCTS iteration 74: Rollout reward: 1.
2025-04-11 20:12:09,971 [DEBUG] MCTS iteration 74: Backed up Finish.
2025-04-11 20:12:09,980 [INFO] Final candidates: []
2025-04-11 20:12:09,980 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:09,990 [INFO] Final candidates: []
2025-04-11 20:12:09,990 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:09,990 [DEBUG] Tree_policy iteration 1: Expanding move (4, 10)
2025-04-11 20:12:09,990 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:10,028 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:10,028 [DEBUG] MCTS iteration 75: Rollout reward: 0.
2025-04-11 20:12:10,028 [DEBUG] MCTS iteration 75: Backed up Finish.
2025-04-11 20:12:10,038 [INFO] Final candidates: []
2025-04-11 20:12:10,038 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:10,048 [INFO] Final candidates: []
2025-04-11 20:12:10,048 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:10,048 [DEBUG] Tree_policy iteration 1: Expanding move (12, 11)
2025-04-11 20:12:10,048 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:10,093 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:10,093 [DEBUG] MCTS iteration 76: Rollout reward: 1.
2025-04-11 20:12:10,094 [DEBUG] MCTS iteration 76: Backed up Finish.
2025-04-11 20:12:10,103 [INFO] Final candidates: []
2025-04-11 20:12:10,103 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:10,112 [INFO] Final candidates: []
2025-04-11 20:12:10,112 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:10,112 [DEBUG] Tree_policy iteration 1: Expanding move (6, 8)
2025-04-11 20:12:10,113 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:10,160 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:10,160 [DEBUG] MCTS iteration 77: Rollout reward: 1.
2025-04-11 20:12:10,160 [DEBUG] MCTS iteration 77: Backed up Finish.
2025-04-11 20:12:10,169 [INFO] Final candidates: []
2025-04-11 20:12:10,169 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:10,179 [INFO] Final candidates: []
2025-04-11 20:12:10,179 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:10,179 [DEBUG] Tree_policy iteration 1: Expanding move (14, 13)
2025-04-11 20:12:10,179 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:10,220 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:10,221 [DEBUG] MCTS iteration 78: Rollout reward: 0.
2025-04-11 20:12:10,221 [DEBUG] MCTS iteration 78: Backed up Finish.
2025-04-11 20:12:10,230 [INFO] Final candidates: []
2025-04-11 20:12:10,230 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:10,242 [INFO] Final candidates: []
2025-04-11 20:12:10,242 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:10,242 [DEBUG] Tree_policy iteration 1: Expanding move (9, 18)
2025-04-11 20:12:10,243 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:10,339 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:10,339 [DEBUG] MCTS iteration 79: Rollout reward: 0.
2025-04-11 20:12:10,339 [DEBUG] MCTS iteration 79: Backed up Finish.
2025-04-11 20:12:10,349 [INFO] Final candidates: []
2025-04-11 20:12:10,349 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:10,358 [INFO] Final candidates: []
2025-04-11 20:12:10,358 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:10,358 [DEBUG] Tree_policy iteration 1: Expanding move (9, 16)
2025-04-11 20:12:10,358 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:10,545 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:10,545 [DEBUG] MCTS iteration 80: Rollout reward: 1.
2025-04-11 20:12:10,545 [DEBUG] MCTS iteration 80: Backed up Finish.
2025-04-11 20:12:10,554 [INFO] Final candidates: []
2025-04-11 20:12:10,554 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:10,564 [INFO] Final candidates: []
2025-04-11 20:12:10,564 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:10,564 [DEBUG] Tree_policy iteration 1: Expanding move (2, 13)
2025-04-11 20:12:10,564 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:10,624 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:10,625 [DEBUG] MCTS iteration 81: Rollout reward: 0.
2025-04-11 20:12:10,625 [DEBUG] MCTS iteration 81: Backed up Finish.
2025-04-11 20:12:10,634 [INFO] Final candidates: []
2025-04-11 20:12:10,634 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:10,643 [INFO] Final candidates: []
2025-04-11 20:12:10,643 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:10,643 [DEBUG] Tree_policy iteration 1: Expanding move (9, 11)
2025-04-11 20:12:10,643 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:10,859 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:10,859 [DEBUG] MCTS iteration 82: Rollout reward: 1.
2025-04-11 20:12:10,859 [DEBUG] MCTS iteration 82: Backed up Finish.
2025-04-11 20:12:10,869 [INFO] Final candidates: []
2025-04-11 20:12:10,869 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:10,878 [INFO] Final candidates: []
2025-04-11 20:12:10,878 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:10,878 [DEBUG] Tree_policy iteration 1: Expanding move (5, 7)
2025-04-11 20:12:10,878 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:11,147 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:11,148 [DEBUG] MCTS iteration 83: Rollout reward: 0.
2025-04-11 20:12:11,148 [DEBUG] MCTS iteration 83: Backed up Finish.
2025-04-11 20:12:11,157 [INFO] Final candidates: []
2025-04-11 20:12:11,157 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:11,166 [INFO] Final candidates: []
2025-04-11 20:12:11,166 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:11,166 [DEBUG] Tree_policy iteration 1: Expanding move (18, 2)
2025-04-11 20:12:11,166 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:11,275 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:11,275 [DEBUG] MCTS iteration 84: Rollout reward: 0.
2025-04-11 20:12:11,275 [DEBUG] MCTS iteration 84: Backed up Finish.
2025-04-11 20:12:11,285 [INFO] Final candidates: []
2025-04-11 20:12:11,285 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:11,297 [INFO] Final candidates: []
2025-04-11 20:12:11,297 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:11,297 [DEBUG] Tree_policy iteration 1: Expanding move (15, 9)
2025-04-11 20:12:11,297 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:11,398 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:11,398 [DEBUG] MCTS iteration 85: Rollout reward: 0.
2025-04-11 20:12:11,398 [DEBUG] MCTS iteration 85: Backed up Finish.
2025-04-11 20:12:11,408 [INFO] Final candidates: []
2025-04-11 20:12:11,408 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:11,418 [INFO] Final candidates: []
2025-04-11 20:12:11,418 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:11,418 [DEBUG] Tree_policy iteration 1: Expanding move (15, 2)
2025-04-11 20:12:11,418 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:11,484 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:11,484 [DEBUG] MCTS iteration 86: Rollout reward: 1.
2025-04-11 20:12:11,484 [DEBUG] MCTS iteration 86: Backed up Finish.
2025-04-11 20:12:11,493 [INFO] Final candidates: []
2025-04-11 20:12:11,494 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:11,503 [INFO] Final candidates: []
2025-04-11 20:12:11,504 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:11,504 [DEBUG] Tree_policy iteration 1: Expanding move (8, 12)
2025-04-11 20:12:11,504 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:11,535 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:11,535 [DEBUG] MCTS iteration 87: Rollout reward: 1.
2025-04-11 20:12:11,535 [DEBUG] MCTS iteration 87: Backed up Finish.
2025-04-11 20:12:11,545 [INFO] Final candidates: []
2025-04-11 20:12:11,545 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:11,556 [INFO] Final candidates: []
2025-04-11 20:12:11,556 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:11,556 [DEBUG] Tree_policy iteration 1: Expanding move (5, 3)
2025-04-11 20:12:11,556 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:11,649 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:11,650 [DEBUG] MCTS iteration 88: Rollout reward: 0.
2025-04-11 20:12:11,650 [DEBUG] MCTS iteration 88: Backed up Finish.
2025-04-11 20:12:11,659 [INFO] Final candidates: []
2025-04-11 20:12:11,659 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:11,668 [INFO] Final candidates: []
2025-04-11 20:12:11,668 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:11,669 [DEBUG] Tree_policy iteration 1: Expanding move (0, 10)
2025-04-11 20:12:11,669 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:11,839 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:11,839 [DEBUG] MCTS iteration 89: Rollout reward: 1.
2025-04-11 20:12:11,839 [DEBUG] MCTS iteration 89: Backed up Finish.
2025-04-11 20:12:11,848 [INFO] Final candidates: []
2025-04-11 20:12:11,848 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:11,857 [INFO] Final candidates: []
2025-04-11 20:12:11,857 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:11,857 [DEBUG] Tree_policy iteration 1: Expanding move (3, 6)
2025-04-11 20:12:11,857 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:11,906 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:11,906 [DEBUG] MCTS iteration 90: Rollout reward: 0.
2025-04-11 20:12:11,906 [DEBUG] MCTS iteration 90: Backed up Finish.
2025-04-11 20:12:11,915 [INFO] Final candidates: []
2025-04-11 20:12:11,915 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:11,925 [INFO] Final candidates: []
2025-04-11 20:12:11,925 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:11,925 [DEBUG] Tree_policy iteration 1: Expanding move (14, 5)
2025-04-11 20:12:11,925 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:12,007 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:12,007 [DEBUG] MCTS iteration 91: Rollout reward: 0.
2025-04-11 20:12:12,007 [DEBUG] MCTS iteration 91: Backed up Finish.
2025-04-11 20:12:12,017 [INFO] Final candidates: []
2025-04-11 20:12:12,017 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:12,028 [INFO] Final candidates: []
2025-04-11 20:12:12,028 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:12,028 [DEBUG] Tree_policy iteration 1: Expanding move (1, 3)
2025-04-11 20:12:12,028 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:12,043 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:12,044 [DEBUG] MCTS iteration 92: Rollout reward: 1.
2025-04-11 20:12:12,044 [DEBUG] MCTS iteration 92: Backed up Finish.
2025-04-11 20:12:12,053 [INFO] Final candidates: []
2025-04-11 20:12:12,053 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:12,062 [INFO] Final candidates: []
2025-04-11 20:12:12,062 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:12,062 [DEBUG] Tree_policy iteration 1: Expanding move (5, 15)
2025-04-11 20:12:12,063 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:12,172 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:12,172 [DEBUG] MCTS iteration 93: Rollout reward: 1.
2025-04-11 20:12:12,172 [DEBUG] MCTS iteration 93: Backed up Finish.
2025-04-11 20:12:12,181 [INFO] Final candidates: []
2025-04-11 20:12:12,181 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:12,191 [INFO] Final candidates: []
2025-04-11 20:12:12,191 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:12,191 [DEBUG] Tree_policy iteration 1: Expanding move (5, 2)
2025-04-11 20:12:12,191 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:12,384 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:12,384 [DEBUG] MCTS iteration 94: Rollout reward: 0.
2025-04-11 20:12:12,384 [DEBUG] MCTS iteration 94: Backed up Finish.
2025-04-11 20:12:12,394 [INFO] Final candidates: []
2025-04-11 20:12:12,394 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:12,403 [INFO] Final candidates: []
2025-04-11 20:12:12,403 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:12,403 [DEBUG] Tree_policy iteration 1: Expanding move (16, 4)
2025-04-11 20:12:12,403 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:12,436 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:12,436 [DEBUG] MCTS iteration 95: Rollout reward: 0.
2025-04-11 20:12:12,436 [DEBUG] MCTS iteration 95: Backed up Finish.
2025-04-11 20:12:12,446 [INFO] Final candidates: []
2025-04-11 20:12:12,446 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:12,455 [INFO] Final candidates: []
2025-04-11 20:12:12,455 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:12,455 [DEBUG] Tree_policy iteration 1: Expanding move (8, 3)
2025-04-11 20:12:12,456 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:12,499 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:12,499 [DEBUG] MCTS iteration 96: Rollout reward: 0.
2025-04-11 20:12:12,499 [DEBUG] MCTS iteration 96: Backed up Finish.
2025-04-11 20:12:12,509 [INFO] Final candidates: []
2025-04-11 20:12:12,509 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:12,518 [INFO] Final candidates: []
2025-04-11 20:12:12,518 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:12,518 [DEBUG] Tree_policy iteration 1: Expanding move (12, 6)
2025-04-11 20:12:12,518 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:12,574 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:12,574 [DEBUG] MCTS iteration 97: Rollout reward: 0.
2025-04-11 20:12:12,574 [DEBUG] MCTS iteration 97: Backed up Finish.
2025-04-11 20:12:12,584 [INFO] Final candidates: []
2025-04-11 20:12:12,584 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:12,593 [INFO] Final candidates: []
2025-04-11 20:12:12,593 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:12,593 [DEBUG] Tree_policy iteration 1: Expanding move (3, 1)
2025-04-11 20:12:12,593 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:12,771 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:12,771 [DEBUG] MCTS iteration 98: Rollout reward: 0.
2025-04-11 20:12:12,771 [DEBUG] MCTS iteration 98: Backed up Finish.
2025-04-11 20:12:12,780 [INFO] Final candidates: []
2025-04-11 20:12:12,780 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:12,789 [INFO] Final candidates: []
2025-04-11 20:12:12,789 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:12,789 [DEBUG] Tree_policy iteration 1: Expanding move (7, 12)
2025-04-11 20:12:12,790 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:12,875 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:12,875 [DEBUG] MCTS iteration 99: Rollout reward: 1.
2025-04-11 20:12:12,875 [DEBUG] MCTS iteration 99: Backed up Finish.
2025-04-11 20:12:12,875 [INFO] MCTS: Search completed after 100 iterations.
2025-04-11 20:12:12,875 [DEBUG] MCTS: BEST (17, 0) with 1 visits.
2025-04-11 20:12:12,875 [INFO] MCTS: Search finished. Best move selected with 1 visits.
2025-04-11 20:12:12,875 [INFO] MCTS selected move: A18
2025-04-11 20:12:12,875 [INFO] ===============NEW MOVE================
2025-04-11 20:12:16,579 [INFO] Starting pre-MCTS candidate collection.
2025-04-11 20:12:16,590 [INFO] Final candidates: []
2025-04-11 20:12:16,590 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:16,600 [INFO] Final candidates: []
2025-04-11 20:12:16,601 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:16,601 [INFO] No candidate found in Phase 1 or 2; using full legal moves for MCTS.
2025-04-11 20:12:16,601 [INFO] MCTS: Starting search for 100 iterations.
2025-04-11 20:12:16,610 [INFO] Final candidates: []
2025-04-11 20:12:16,610 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:16,619 [INFO] Final candidates: []
2025-04-11 20:12:16,619 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:16,619 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(9)), (np.int64(8), np.int64(11)))
2025-04-11 20:12:16,620 [DEBUG] MCTS iteration 0: reached a node with 0 visits.
2025-04-11 20:12:16,620 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:16,769 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:16,769 [DEBUG] MCTS iteration 0: Rollout reward: 1.
2025-04-11 20:12:16,769 [DEBUG] MCTS iteration 0: Backed up Finish.
2025-04-11 20:12:16,778 [INFO] Final candidates: []
2025-04-11 20:12:16,778 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:16,788 [INFO] Final candidates: []
2025-04-11 20:12:16,788 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:16,788 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(9)), (np.int64(18), np.int64(0)))
2025-04-11 20:12:16,788 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:16,981 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:16,981 [DEBUG] MCTS iteration 1: Rollout reward: 1.
2025-04-11 20:12:16,981 [DEBUG] MCTS iteration 1: Backed up Finish.
2025-04-11 20:12:16,990 [INFO] Final candidates: []
2025-04-11 20:12:16,990 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:16,999 [INFO] Final candidates: []
2025-04-11 20:12:16,999 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:16,999 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(9)), (np.int64(8), np.int64(8)))
2025-04-11 20:12:16,999 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:17,112 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:17,112 [DEBUG] MCTS iteration 2: Rollout reward: 0.
2025-04-11 20:12:17,112 [DEBUG] MCTS iteration 2: Backed up Finish.
2025-04-11 20:12:17,121 [INFO] Final candidates: []
2025-04-11 20:12:17,121 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:17,130 [INFO] Final candidates: []
2025-04-11 20:12:17,130 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:17,130 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(10)), (np.int64(7), np.int64(9)))
2025-04-11 20:12:17,131 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:17,337 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:17,337 [DEBUG] MCTS iteration 3: Rollout reward: 0.
2025-04-11 20:12:17,337 [DEBUG] MCTS iteration 3: Backed up Finish.
2025-04-11 20:12:17,347 [INFO] Final candidates: []
2025-04-11 20:12:17,347 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:17,356 [INFO] Final candidates: []
2025-04-11 20:12:17,356 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:17,356 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(11)), (np.int64(18), np.int64(0)))
2025-04-11 20:12:17,356 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:17,516 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:17,516 [DEBUG] MCTS iteration 4: Rollout reward: 1.
2025-04-11 20:12:17,516 [DEBUG] MCTS iteration 4: Backed up Finish.
2025-04-11 20:12:17,527 [INFO] Final candidates: []
2025-04-11 20:12:17,527 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:17,536 [INFO] Final candidates: []
2025-04-11 20:12:17,536 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:17,536 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(9)), (np.int64(15), np.int64(0)))
2025-04-11 20:12:17,537 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:17,649 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:17,650 [DEBUG] MCTS iteration 5: Rollout reward: 1.
2025-04-11 20:12:17,650 [DEBUG] MCTS iteration 5: Backed up Finish.
2025-04-11 20:12:17,659 [INFO] Final candidates: []
2025-04-11 20:12:17,659 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:17,668 [INFO] Final candidates: []
2025-04-11 20:12:17,668 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:17,668 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(9)), (np.int64(8), np.int64(11)))
2025-04-11 20:12:17,669 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:17,681 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:17,681 [DEBUG] MCTS iteration 6: Rollout reward: 1.
2025-04-11 20:12:17,681 [DEBUG] MCTS iteration 6: Backed up Finish.
2025-04-11 20:12:17,694 [INFO] Final candidates: []
2025-04-11 20:12:17,694 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:17,704 [INFO] Final candidates: []
2025-04-11 20:12:17,704 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:17,704 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(9)), (np.int64(9), np.int64(11)))
2025-04-11 20:12:17,704 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:17,770 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:17,770 [DEBUG] MCTS iteration 7: Rollout reward: 0.
2025-04-11 20:12:17,770 [DEBUG] MCTS iteration 7: Backed up Finish.
2025-04-11 20:12:17,780 [INFO] Final candidates: []
2025-04-11 20:12:17,780 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:17,789 [INFO] Final candidates: []
2025-04-11 20:12:17,789 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:17,789 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(1)), (np.int64(8), np.int64(11)))
2025-04-11 20:12:17,789 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:17,880 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:17,881 [DEBUG] MCTS iteration 8: Rollout reward: 1.
2025-04-11 20:12:17,881 [DEBUG] MCTS iteration 8: Backed up Finish.
2025-04-11 20:12:17,890 [INFO] Final candidates: []
2025-04-11 20:12:17,890 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:17,899 [INFO] Final candidates: []
2025-04-11 20:12:17,899 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:17,899 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(7)), (np.int64(8), np.int64(8)))
2025-04-11 20:12:17,899 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:18,049 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:18,049 [DEBUG] MCTS iteration 9: Rollout reward: 0.
2025-04-11 20:12:18,049 [DEBUG] MCTS iteration 9: Backed up Finish.
2025-04-11 20:12:18,058 [INFO] Final candidates: []
2025-04-11 20:12:18,058 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:18,067 [INFO] Final candidates: []
2025-04-11 20:12:18,067 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:18,067 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(7)), (np.int64(15), np.int64(0)))
2025-04-11 20:12:18,068 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:18,137 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:18,137 [DEBUG] MCTS iteration 10: Rollout reward: 1.
2025-04-11 20:12:18,137 [DEBUG] MCTS iteration 10: Backed up Finish.
2025-04-11 20:12:18,147 [INFO] Final candidates: []
2025-04-11 20:12:18,147 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:18,156 [INFO] Final candidates: []
2025-04-11 20:12:18,156 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:18,156 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(18), np.int64(1)), (np.int64(7), np.int64(11)))
2025-04-11 20:12:18,156 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:18,427 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:18,427 [DEBUG] MCTS iteration 11: Rollout reward: 1.
2025-04-11 20:12:18,427 [DEBUG] MCTS iteration 11: Backed up Finish.
2025-04-11 20:12:18,437 [INFO] Final candidates: []
2025-04-11 20:12:18,437 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:18,447 [INFO] Final candidates: []
2025-04-11 20:12:18,447 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:18,447 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(0)), (np.int64(15), np.int64(0)))
2025-04-11 20:12:18,447 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:18,495 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:18,495 [DEBUG] MCTS iteration 12: Rollout reward: 0.
2025-04-11 20:12:18,495 [DEBUG] MCTS iteration 12: Backed up Finish.
2025-04-11 20:12:18,505 [INFO] Final candidates: []
2025-04-11 20:12:18,505 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:18,514 [INFO] Final candidates: []
2025-04-11 20:12:18,514 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:18,514 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(10)), (np.int64(11), np.int64(9)))
2025-04-11 20:12:18,515 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:18,713 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:18,713 [DEBUG] MCTS iteration 13: Rollout reward: 1.
2025-04-11 20:12:18,713 [DEBUG] MCTS iteration 13: Backed up Finish.
2025-04-11 20:12:18,722 [INFO] Final candidates: []
2025-04-11 20:12:18,722 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:18,731 [INFO] Final candidates: []
2025-04-11 20:12:18,731 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:18,731 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(17), np.int64(1)), (np.int64(15), np.int64(0)))
2025-04-11 20:12:18,732 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:18,925 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:18,925 [DEBUG] MCTS iteration 14: Rollout reward: 1.
2025-04-11 20:12:18,925 [DEBUG] MCTS iteration 14: Backed up Finish.
2025-04-11 20:12:18,934 [INFO] Final candidates: []
2025-04-11 20:12:18,934 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:18,943 [INFO] Final candidates: []
2025-04-11 20:12:18,943 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:18,943 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(10)), (np.int64(17), np.int64(1)))
2025-04-11 20:12:18,944 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:18,968 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:18,968 [DEBUG] MCTS iteration 15: Rollout reward: 1.
2025-04-11 20:12:18,968 [DEBUG] MCTS iteration 15: Backed up Finish.
2025-04-11 20:12:18,977 [INFO] Final candidates: []
2025-04-11 20:12:18,978 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:18,987 [INFO] Final candidates: []
2025-04-11 20:12:18,987 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:18,987 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(11)), (np.int64(16), np.int64(0)))
2025-04-11 20:12:18,987 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:19,135 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:19,135 [DEBUG] MCTS iteration 16: Rollout reward: 1.
2025-04-11 20:12:19,136 [DEBUG] MCTS iteration 16: Backed up Finish.
2025-04-11 20:12:19,145 [INFO] Final candidates: []
2025-04-11 20:12:19,145 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:19,154 [INFO] Final candidates: []
2025-04-11 20:12:19,154 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:19,154 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(1)), (np.int64(15), np.int64(0)))
2025-04-11 20:12:19,155 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:19,314 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:19,315 [DEBUG] MCTS iteration 17: Rollout reward: 0.
2025-04-11 20:12:19,315 [DEBUG] MCTS iteration 17: Backed up Finish.
2025-04-11 20:12:19,324 [INFO] Final candidates: []
2025-04-11 20:12:19,324 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:19,333 [INFO] Final candidates: []
2025-04-11 20:12:19,333 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:19,333 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(9)), (np.int64(7), np.int64(10)))
2025-04-11 20:12:19,334 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:19,501 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:19,501 [DEBUG] MCTS iteration 18: Rollout reward: 1.
2025-04-11 20:12:19,501 [DEBUG] MCTS iteration 18: Backed up Finish.
2025-04-11 20:12:19,511 [INFO] Final candidates: []
2025-04-11 20:12:19,511 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:19,522 [INFO] Final candidates: []
2025-04-11 20:12:19,522 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:19,522 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(10)), (np.int64(16), np.int64(0)))
2025-04-11 20:12:19,523 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:19,752 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:19,752 [DEBUG] MCTS iteration 19: Rollout reward: 1.
2025-04-11 20:12:19,752 [DEBUG] MCTS iteration 19: Backed up Finish.
2025-04-11 20:12:19,761 [INFO] Final candidates: []
2025-04-11 20:12:19,761 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:19,771 [INFO] Final candidates: []
2025-04-11 20:12:19,771 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:19,771 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(12)), (np.int64(16), np.int64(1)))
2025-04-11 20:12:19,771 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:19,865 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:19,865 [DEBUG] MCTS iteration 20: Rollout reward: 0.
2025-04-11 20:12:19,865 [DEBUG] MCTS iteration 20: Backed up Finish.
2025-04-11 20:12:19,877 [INFO] Final candidates: []
2025-04-11 20:12:19,878 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:19,889 [INFO] Final candidates: []
2025-04-11 20:12:19,889 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:19,889 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(11)), (np.int64(11), np.int64(9)))
2025-04-11 20:12:19,889 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:19,943 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:19,943 [DEBUG] MCTS iteration 21: Rollout reward: 1.
2025-04-11 20:12:19,943 [DEBUG] MCTS iteration 21: Backed up Finish.
2025-04-11 20:12:19,952 [INFO] Final candidates: []
2025-04-11 20:12:19,952 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:19,961 [INFO] Final candidates: []
2025-04-11 20:12:19,961 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:19,961 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(17), np.int64(2)), (np.int64(10), np.int64(10)))
2025-04-11 20:12:19,962 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:20,000 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:20,000 [DEBUG] MCTS iteration 22: Rollout reward: 1.
2025-04-11 20:12:20,000 [DEBUG] MCTS iteration 22: Backed up Finish.
2025-04-11 20:12:20,010 [INFO] Final candidates: []
2025-04-11 20:12:20,010 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:20,019 [INFO] Final candidates: []
2025-04-11 20:12:20,019 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:20,019 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(12)), (np.int64(18), np.int64(0)))
2025-04-11 20:12:20,019 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:20,144 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:20,144 [DEBUG] MCTS iteration 23: Rollout reward: 0.
2025-04-11 20:12:20,144 [DEBUG] MCTS iteration 23: Backed up Finish.
2025-04-11 20:12:20,154 [INFO] Final candidates: []
2025-04-11 20:12:20,154 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:20,163 [INFO] Final candidates: []
2025-04-11 20:12:20,163 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:20,163 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(12)), (np.int64(11), np.int64(9)))
2025-04-11 20:12:20,163 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:20,278 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:20,279 [DEBUG] MCTS iteration 24: Rollout reward: 1.
2025-04-11 20:12:20,279 [DEBUG] MCTS iteration 24: Backed up Finish.
2025-04-11 20:12:20,288 [INFO] Final candidates: []
2025-04-11 20:12:20,289 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:20,297 [INFO] Final candidates: []
2025-04-11 20:12:20,297 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:20,298 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(9)), (np.int64(9), np.int64(7)))
2025-04-11 20:12:20,298 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:20,444 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:20,444 [DEBUG] MCTS iteration 25: Rollout reward: 1.
2025-04-11 20:12:20,444 [DEBUG] MCTS iteration 25: Backed up Finish.
2025-04-11 20:12:20,454 [INFO] Final candidates: []
2025-04-11 20:12:20,454 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:20,463 [INFO] Final candidates: []
2025-04-11 20:12:20,463 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:20,463 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(18), np.int64(0)), (np.int64(7), np.int64(9)))
2025-04-11 20:12:20,463 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:20,562 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:20,562 [DEBUG] MCTS iteration 26: Rollout reward: 1.
2025-04-11 20:12:20,562 [DEBUG] MCTS iteration 26: Backed up Finish.
2025-04-11 20:12:20,576 [INFO] Final candidates: []
2025-04-11 20:12:20,576 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:20,585 [INFO] Final candidates: []
2025-04-11 20:12:20,585 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:20,585 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(7)), (np.int64(10), np.int64(8)))
2025-04-11 20:12:20,585 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:20,810 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:20,810 [DEBUG] MCTS iteration 27: Rollout reward: 0.
2025-04-11 20:12:20,810 [DEBUG] MCTS iteration 27: Backed up Finish.
2025-04-11 20:12:20,819 [INFO] Final candidates: []
2025-04-11 20:12:20,819 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:20,828 [INFO] Final candidates: []
2025-04-11 20:12:20,828 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:20,828 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(8)), (np.int64(7), np.int64(11)))
2025-04-11 20:12:20,828 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:20,912 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:20,912 [DEBUG] MCTS iteration 28: Rollout reward: 1.
2025-04-11 20:12:20,912 [DEBUG] MCTS iteration 28: Backed up Finish.
2025-04-11 20:12:20,924 [INFO] Final candidates: []
2025-04-11 20:12:20,924 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:20,933 [INFO] Final candidates: []
2025-04-11 20:12:20,933 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:20,933 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(8)), (np.int64(9), np.int64(10)))
2025-04-11 20:12:20,934 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:20,976 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:20,976 [DEBUG] MCTS iteration 29: Rollout reward: 0.
2025-04-11 20:12:20,976 [DEBUG] MCTS iteration 29: Backed up Finish.
2025-04-11 20:12:20,985 [INFO] Final candidates: []
2025-04-11 20:12:20,985 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:20,994 [INFO] Final candidates: []
2025-04-11 20:12:20,995 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:20,995 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(11)), (np.int64(7), np.int64(11)))
2025-04-11 20:12:20,995 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:21,186 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:21,186 [DEBUG] MCTS iteration 30: Rollout reward: 1.
2025-04-11 20:12:21,186 [DEBUG] MCTS iteration 30: Backed up Finish.
2025-04-11 20:12:21,196 [INFO] Final candidates: []
2025-04-11 20:12:21,196 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:21,205 [INFO] Final candidates: []
2025-04-11 20:12:21,205 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:21,205 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(10)), (np.int64(17), np.int64(2)))
2025-04-11 20:12:21,205 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:21,251 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:21,251 [DEBUG] MCTS iteration 31: Rollout reward: 1.
2025-04-11 20:12:21,252 [DEBUG] MCTS iteration 31: Backed up Finish.
2025-04-11 20:12:21,261 [INFO] Final candidates: []
2025-04-11 20:12:21,261 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:21,270 [INFO] Final candidates: []
2025-04-11 20:12:21,270 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:21,270 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(11)), (np.int64(7), np.int64(9)))
2025-04-11 20:12:21,270 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:21,324 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:21,325 [DEBUG] MCTS iteration 32: Rollout reward: 1.
2025-04-11 20:12:21,325 [DEBUG] MCTS iteration 32: Backed up Finish.
2025-04-11 20:12:21,334 [INFO] Final candidates: []
2025-04-11 20:12:21,334 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:21,343 [INFO] Final candidates: []
2025-04-11 20:12:21,343 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:21,343 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(1)), (np.int64(7), np.int64(10)))
2025-04-11 20:12:21,343 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:21,425 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:21,425 [DEBUG] MCTS iteration 33: Rollout reward: 0.
2025-04-11 20:12:21,425 [DEBUG] MCTS iteration 33: Backed up Finish.
2025-04-11 20:12:21,434 [INFO] Final candidates: []
2025-04-11 20:12:21,434 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:21,443 [INFO] Final candidates: []
2025-04-11 20:12:21,443 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:21,443 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(10)), (np.int64(8), np.int64(8)))
2025-04-11 20:12:21,444 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:21,698 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:21,698 [DEBUG] MCTS iteration 34: Rollout reward: 0.
2025-04-11 20:12:21,698 [DEBUG] MCTS iteration 34: Backed up Finish.
2025-04-11 20:12:21,707 [INFO] Final candidates: []
2025-04-11 20:12:21,707 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:21,716 [INFO] Final candidates: []
2025-04-11 20:12:21,716 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:21,716 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(12)), (np.int64(15), np.int64(0)))
2025-04-11 20:12:21,717 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:21,899 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:21,899 [DEBUG] MCTS iteration 35: Rollout reward: 0.
2025-04-11 20:12:21,899 [DEBUG] MCTS iteration 35: Backed up Finish.
2025-04-11 20:12:21,909 [INFO] Final candidates: []
2025-04-11 20:12:21,909 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:21,918 [INFO] Final candidates: []
2025-04-11 20:12:21,918 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:21,918 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(9)), (np.int64(18), np.int64(0)))
2025-04-11 20:12:21,918 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:21,924 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:21,924 [DEBUG] MCTS iteration 36: Rollout reward: 1.
2025-04-11 20:12:21,924 [DEBUG] MCTS iteration 36: Backed up Finish.
2025-04-11 20:12:21,933 [INFO] Final candidates: []
2025-04-11 20:12:21,933 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:21,946 [INFO] Final candidates: []
2025-04-11 20:12:21,946 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:21,946 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(10)), (np.int64(7), np.int64(11)))
2025-04-11 20:12:21,946 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:22,120 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:22,120 [DEBUG] MCTS iteration 37: Rollout reward: 0.
2025-04-11 20:12:22,120 [DEBUG] MCTS iteration 37: Backed up Finish.
2025-04-11 20:12:22,130 [INFO] Final candidates: []
2025-04-11 20:12:22,130 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:22,139 [INFO] Final candidates: []
2025-04-11 20:12:22,139 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:22,139 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(8)), (np.int64(7), np.int64(11)))
2025-04-11 20:12:22,139 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:22,457 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:22,457 [DEBUG] MCTS iteration 38: Rollout reward: 1.
2025-04-11 20:12:22,457 [DEBUG] MCTS iteration 38: Backed up Finish.
2025-04-11 20:12:22,467 [INFO] Final candidates: []
2025-04-11 20:12:22,467 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:22,476 [INFO] Final candidates: []
2025-04-11 20:12:22,476 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:22,476 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(11)), (np.int64(10), np.int64(8)))
2025-04-11 20:12:22,477 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:22,586 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:22,586 [DEBUG] MCTS iteration 39: Rollout reward: 1.
2025-04-11 20:12:22,586 [DEBUG] MCTS iteration 39: Backed up Finish.
2025-04-11 20:12:22,596 [INFO] Final candidates: []
2025-04-11 20:12:22,596 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:22,604 [INFO] Final candidates: []
2025-04-11 20:12:22,604 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:22,605 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(18), np.int64(1)), (np.int64(16), np.int64(0)))
2025-04-11 20:12:22,605 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:22,685 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:22,685 [DEBUG] MCTS iteration 40: Rollout reward: 0.
2025-04-11 20:12:22,685 [DEBUG] MCTS iteration 40: Backed up Finish.
2025-04-11 20:12:22,695 [INFO] Final candidates: []
2025-04-11 20:12:22,695 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:22,704 [INFO] Final candidates: []
2025-04-11 20:12:22,704 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:22,704 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(11)), (np.int64(15), np.int64(0)))
2025-04-11 20:12:22,704 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:22,841 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:22,841 [DEBUG] MCTS iteration 41: Rollout reward: 1.
2025-04-11 20:12:22,841 [DEBUG] MCTS iteration 41: Backed up Finish.
2025-04-11 20:12:22,850 [INFO] Final candidates: []
2025-04-11 20:12:22,850 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:22,859 [INFO] Final candidates: []
2025-04-11 20:12:22,859 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:22,859 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(12)), (np.int64(8), np.int64(11)))
2025-04-11 20:12:22,860 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:23,143 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:23,143 [DEBUG] MCTS iteration 42: Rollout reward: 1.
2025-04-11 20:12:23,143 [DEBUG] MCTS iteration 42: Backed up Finish.
2025-04-11 20:12:23,152 [INFO] Final candidates: []
2025-04-11 20:12:23,152 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:23,161 [INFO] Final candidates: []
2025-04-11 20:12:23,161 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:23,161 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(18), np.int64(0)), (np.int64(11), np.int64(9)))
2025-04-11 20:12:23,162 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:23,219 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:23,219 [DEBUG] MCTS iteration 43: Rollout reward: 0.
2025-04-11 20:12:23,219 [DEBUG] MCTS iteration 43: Backed up Finish.
2025-04-11 20:12:23,229 [INFO] Final candidates: []
2025-04-11 20:12:23,229 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:23,243 [INFO] Final candidates: []
2025-04-11 20:12:23,243 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:23,243 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(11)), (np.int64(17), np.int64(1)))
2025-04-11 20:12:23,244 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:23,286 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:23,286 [DEBUG] MCTS iteration 44: Rollout reward: 1.
2025-04-11 20:12:23,286 [DEBUG] MCTS iteration 44: Backed up Finish.
2025-04-11 20:12:23,296 [INFO] Final candidates: []
2025-04-11 20:12:23,296 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:23,304 [INFO] Final candidates: []
2025-04-11 20:12:23,304 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:23,304 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(9)), (np.int64(11), np.int64(9)))
2025-04-11 20:12:23,305 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:23,400 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:23,400 [DEBUG] MCTS iteration 45: Rollout reward: 0.
2025-04-11 20:12:23,400 [DEBUG] MCTS iteration 45: Backed up Finish.
2025-04-11 20:12:23,409 [INFO] Final candidates: []
2025-04-11 20:12:23,409 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:23,419 [INFO] Final candidates: []
2025-04-11 20:12:23,419 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:23,419 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(12)), (np.int64(9), np.int64(10)))
2025-04-11 20:12:23,419 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:23,648 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:23,649 [DEBUG] MCTS iteration 46: Rollout reward: 1.
2025-04-11 20:12:23,649 [DEBUG] MCTS iteration 46: Backed up Finish.
2025-04-11 20:12:23,659 [INFO] Final candidates: []
2025-04-11 20:12:23,659 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:23,668 [INFO] Final candidates: []
2025-04-11 20:12:23,668 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:23,668 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(18), np.int64(1)), (np.int64(8), np.int64(11)))
2025-04-11 20:12:23,668 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:23,924 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:23,924 [DEBUG] MCTS iteration 47: Rollout reward: 1.
2025-04-11 20:12:23,924 [DEBUG] MCTS iteration 47: Backed up Finish.
2025-04-11 20:12:23,933 [INFO] Final candidates: []
2025-04-11 20:12:23,933 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:23,942 [INFO] Final candidates: []
2025-04-11 20:12:23,942 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:23,942 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(8)), (np.int64(16), np.int64(1)))
2025-04-11 20:12:23,943 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:24,029 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:24,029 [DEBUG] MCTS iteration 48: Rollout reward: 0.
2025-04-11 20:12:24,029 [DEBUG] MCTS iteration 48: Backed up Finish.
2025-04-11 20:12:24,039 [INFO] Final candidates: []
2025-04-11 20:12:24,039 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:24,048 [INFO] Final candidates: []
2025-04-11 20:12:24,048 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:24,048 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(10)), (np.int64(11), np.int64(9)))
2025-04-11 20:12:24,048 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:24,173 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:24,173 [DEBUG] MCTS iteration 49: Rollout reward: 0.
2025-04-11 20:12:24,173 [DEBUG] MCTS iteration 49: Backed up Finish.
2025-04-11 20:12:24,183 [INFO] Final candidates: []
2025-04-11 20:12:24,183 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:24,192 [INFO] Final candidates: []
2025-04-11 20:12:24,192 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:24,192 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(9)), (np.int64(10), np.int64(10)))
2025-04-11 20:12:24,192 [DEBUG] MCTS iteration 50: reached a node with 0 visits.
2025-04-11 20:12:24,192 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:24,269 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:24,269 [DEBUG] MCTS iteration 50: Rollout reward: 1.
2025-04-11 20:12:24,269 [DEBUG] MCTS iteration 50: Backed up Finish.
2025-04-11 20:12:24,278 [INFO] Final candidates: []
2025-04-11 20:12:24,278 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:24,287 [INFO] Final candidates: []
2025-04-11 20:12:24,287 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:24,287 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(18), np.int64(1)), (np.int64(18), np.int64(0)))
2025-04-11 20:12:24,288 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:24,503 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:24,503 [DEBUG] MCTS iteration 51: Rollout reward: 0.
2025-04-11 20:12:24,503 [DEBUG] MCTS iteration 51: Backed up Finish.
2025-04-11 20:12:24,512 [INFO] Final candidates: []
2025-04-11 20:12:24,512 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:24,521 [INFO] Final candidates: []
2025-04-11 20:12:24,521 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:24,521 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(11)), (np.int64(11), np.int64(9)))
2025-04-11 20:12:24,522 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:24,603 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:24,603 [DEBUG] MCTS iteration 52: Rollout reward: 0.
2025-04-11 20:12:24,603 [DEBUG] MCTS iteration 52: Backed up Finish.
2025-04-11 20:12:24,612 [INFO] Final candidates: []
2025-04-11 20:12:24,612 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:24,621 [INFO] Final candidates: []
2025-04-11 20:12:24,621 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:24,621 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(17), np.int64(1)), (np.int64(7), np.int64(11)))
2025-04-11 20:12:24,622 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:24,695 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:24,695 [DEBUG] MCTS iteration 53: Rollout reward: 1.
2025-04-11 20:12:24,695 [DEBUG] MCTS iteration 53: Backed up Finish.
2025-04-11 20:12:24,705 [INFO] Final candidates: []
2025-04-11 20:12:24,705 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:24,714 [INFO] Final candidates: []
2025-04-11 20:12:24,714 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:24,714 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(8)), (np.int64(17), np.int64(1)))
2025-04-11 20:12:24,714 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:24,876 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:24,876 [DEBUG] MCTS iteration 54: Rollout reward: 1.
2025-04-11 20:12:24,876 [DEBUG] MCTS iteration 54: Backed up Finish.
2025-04-11 20:12:24,886 [INFO] Final candidates: []
2025-04-11 20:12:24,886 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:24,895 [INFO] Final candidates: []
2025-04-11 20:12:24,895 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:24,895 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(8)), (np.int64(10), np.int64(8)))
2025-04-11 20:12:24,895 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:25,021 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:25,021 [DEBUG] MCTS iteration 55: Rollout reward: 1.
2025-04-11 20:12:25,021 [DEBUG] MCTS iteration 55: Backed up Finish.
2025-04-11 20:12:25,031 [INFO] Final candidates: []
2025-04-11 20:12:25,031 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:25,040 [INFO] Final candidates: []
2025-04-11 20:12:25,040 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:25,040 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(18), np.int64(1)), (np.int64(6), np.int64(10)))
2025-04-11 20:12:25,040 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:25,119 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:25,119 [DEBUG] MCTS iteration 56: Rollout reward: 1.
2025-04-11 20:12:25,119 [DEBUG] MCTS iteration 56: Backed up Finish.
2025-04-11 20:12:25,129 [INFO] Final candidates: []
2025-04-11 20:12:25,129 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:25,138 [INFO] Final candidates: []
2025-04-11 20:12:25,138 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:25,138 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(1)), (np.int64(6), np.int64(10)))
2025-04-11 20:12:25,138 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:25,221 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:25,221 [DEBUG] MCTS iteration 57: Rollout reward: 1.
2025-04-11 20:12:25,221 [DEBUG] MCTS iteration 57: Backed up Finish.
2025-04-11 20:12:25,230 [INFO] Final candidates: []
2025-04-11 20:12:25,231 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:25,240 [INFO] Final candidates: []
2025-04-11 20:12:25,240 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:25,240 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(9)), (np.int64(11), np.int64(9)))
2025-04-11 20:12:25,240 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:25,402 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:25,402 [DEBUG] MCTS iteration 58: Rollout reward: 0.
2025-04-11 20:12:25,402 [DEBUG] MCTS iteration 58: Backed up Finish.
2025-04-11 20:12:25,412 [INFO] Final candidates: []
2025-04-11 20:12:25,412 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:25,423 [INFO] Final candidates: []
2025-04-11 20:12:25,423 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:25,423 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(11)), (np.int64(10), np.int64(10)))
2025-04-11 20:12:25,423 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:25,588 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:25,589 [DEBUG] MCTS iteration 59: Rollout reward: 1.
2025-04-11 20:12:25,589 [DEBUG] MCTS iteration 59: Backed up Finish.
2025-04-11 20:12:25,598 [INFO] Final candidates: []
2025-04-11 20:12:25,598 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:25,607 [INFO] Final candidates: []
2025-04-11 20:12:25,607 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:25,607 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(10)), (np.int64(9), np.int64(10)))
2025-04-11 20:12:25,608 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:25,722 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:25,722 [DEBUG] MCTS iteration 60: Rollout reward: 1.
2025-04-11 20:12:25,722 [DEBUG] MCTS iteration 60: Backed up Finish.
2025-04-11 20:12:25,731 [INFO] Final candidates: []
2025-04-11 20:12:25,731 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:25,740 [INFO] Final candidates: []
2025-04-11 20:12:25,740 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:25,740 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(7)), (np.int64(17), np.int64(1)))
2025-04-11 20:12:25,741 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:25,873 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:25,873 [DEBUG] MCTS iteration 61: Rollout reward: 0.
2025-04-11 20:12:25,873 [DEBUG] MCTS iteration 61: Backed up Finish.
2025-04-11 20:12:25,882 [INFO] Final candidates: []
2025-04-11 20:12:25,882 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:25,892 [INFO] Final candidates: []
2025-04-11 20:12:25,892 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:25,892 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(9)), (np.int64(6), np.int64(10)))
2025-04-11 20:12:25,893 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:25,978 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:25,978 [DEBUG] MCTS iteration 62: Rollout reward: 1.
2025-04-11 20:12:25,978 [DEBUG] MCTS iteration 62: Backed up Finish.
2025-04-11 20:12:25,988 [INFO] Final candidates: []
2025-04-11 20:12:25,988 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:25,997 [INFO] Final candidates: []
2025-04-11 20:12:25,997 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:25,997 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(9)), (np.int64(7), np.int64(9)))
2025-04-11 20:12:25,997 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:26,034 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:26,035 [DEBUG] MCTS iteration 63: Rollout reward: 1.
2025-04-11 20:12:26,035 [DEBUG] MCTS iteration 63: Backed up Finish.
2025-04-11 20:12:26,044 [INFO] Final candidates: []
2025-04-11 20:12:26,044 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:26,053 [INFO] Final candidates: []
2025-04-11 20:12:26,053 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:26,053 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(11)), (np.int64(8), np.int64(11)))
2025-04-11 20:12:26,053 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:26,344 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:26,344 [DEBUG] MCTS iteration 64: Rollout reward: 0.
2025-04-11 20:12:26,344 [DEBUG] MCTS iteration 64: Backed up Finish.
2025-04-11 20:12:26,353 [INFO] Final candidates: []
2025-04-11 20:12:26,353 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:26,362 [INFO] Final candidates: []
2025-04-11 20:12:26,362 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:26,362 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(8)), (np.int64(18), np.int64(0)))
2025-04-11 20:12:26,363 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:26,489 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:26,489 [DEBUG] MCTS iteration 65: Rollout reward: 0.
2025-04-11 20:12:26,489 [DEBUG] MCTS iteration 65: Backed up Finish.
2025-04-11 20:12:26,500 [INFO] Final candidates: []
2025-04-11 20:12:26,500 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:26,511 [INFO] Final candidates: []
2025-04-11 20:12:26,511 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:26,511 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(18), np.int64(0)), (np.int64(10), np.int64(10)))
2025-04-11 20:12:26,512 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:26,537 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:26,537 [DEBUG] MCTS iteration 66: Rollout reward: 1.
2025-04-11 20:12:26,537 [DEBUG] MCTS iteration 66: Backed up Finish.
2025-04-11 20:12:26,546 [INFO] Final candidates: []
2025-04-11 20:12:26,546 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:26,555 [INFO] Final candidates: []
2025-04-11 20:12:26,555 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:26,555 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(17), np.int64(2)), (np.int64(7), np.int64(11)))
2025-04-11 20:12:26,556 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:26,626 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:26,626 [DEBUG] MCTS iteration 67: Rollout reward: 0.
2025-04-11 20:12:26,626 [DEBUG] MCTS iteration 67: Backed up Finish.
2025-04-11 20:12:26,636 [INFO] Final candidates: []
2025-04-11 20:12:26,636 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:26,645 [INFO] Final candidates: []
2025-04-11 20:12:26,645 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:26,645 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(9)), (np.int64(15), np.int64(0)))
2025-04-11 20:12:26,645 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:26,844 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:26,844 [DEBUG] MCTS iteration 68: Rollout reward: 1.
2025-04-11 20:12:26,844 [DEBUG] MCTS iteration 68: Backed up Finish.
2025-04-11 20:12:26,853 [INFO] Final candidates: []
2025-04-11 20:12:26,853 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:26,865 [INFO] Final candidates: []
2025-04-11 20:12:26,866 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:26,866 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(1)), (np.int64(9), np.int64(10)))
2025-04-11 20:12:26,866 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:27,118 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:27,119 [DEBUG] MCTS iteration 69: Rollout reward: 0.
2025-04-11 20:12:27,119 [DEBUG] MCTS iteration 69: Backed up Finish.
2025-04-11 20:12:27,132 [INFO] Final candidates: []
2025-04-11 20:12:27,132 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:27,141 [INFO] Final candidates: []
2025-04-11 20:12:27,141 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:27,141 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(10)), (np.int64(10), np.int64(8)))
2025-04-11 20:12:27,141 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:27,192 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:27,192 [DEBUG] MCTS iteration 70: Rollout reward: 0.
2025-04-11 20:12:27,192 [DEBUG] MCTS iteration 70: Backed up Finish.
2025-04-11 20:12:27,201 [INFO] Final candidates: []
2025-04-11 20:12:27,201 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:27,210 [INFO] Final candidates: []
2025-04-11 20:12:27,210 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:27,210 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(8)), (np.int64(10), np.int64(10)))
2025-04-11 20:12:27,211 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:27,586 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:27,586 [DEBUG] MCTS iteration 71: Rollout reward: 0.
2025-04-11 20:12:27,586 [DEBUG] MCTS iteration 71: Backed up Finish.
2025-04-11 20:12:27,595 [INFO] Final candidates: []
2025-04-11 20:12:27,595 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:27,604 [INFO] Final candidates: []
2025-04-11 20:12:27,604 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:27,604 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(17), np.int64(1)), (np.int64(11), np.int64(9)))
2025-04-11 20:12:27,605 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:27,644 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:27,644 [DEBUG] MCTS iteration 72: Rollout reward: 1.
2025-04-11 20:12:27,644 [DEBUG] MCTS iteration 72: Backed up Finish.
2025-04-11 20:12:27,653 [INFO] Final candidates: []
2025-04-11 20:12:27,653 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:27,662 [INFO] Final candidates: []
2025-04-11 20:12:27,662 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:27,662 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(8)), (np.int64(8), np.int64(12)))
2025-04-11 20:12:27,663 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:27,671 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:27,671 [DEBUG] MCTS iteration 73: Rollout reward: 1.
2025-04-11 20:12:27,671 [DEBUG] MCTS iteration 73: Backed up Finish.
2025-04-11 20:12:27,680 [INFO] Final candidates: []
2025-04-11 20:12:27,680 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:27,689 [INFO] Final candidates: []
2025-04-11 20:12:27,689 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:27,689 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(10)), (np.int64(7), np.int64(11)))
2025-04-11 20:12:27,689 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:27,758 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:27,758 [DEBUG] MCTS iteration 74: Rollout reward: 1.
2025-04-11 20:12:27,758 [DEBUG] MCTS iteration 74: Backed up Finish.
2025-04-11 20:12:27,768 [INFO] Final candidates: []
2025-04-11 20:12:27,768 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:27,776 [INFO] Final candidates: []
2025-04-11 20:12:27,776 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:27,777 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(8)), (np.int64(16), np.int64(0)))
2025-04-11 20:12:27,777 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:27,937 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:27,937 [DEBUG] MCTS iteration 75: Rollout reward: 0.
2025-04-11 20:12:27,937 [DEBUG] MCTS iteration 75: Backed up Finish.
2025-04-11 20:12:27,946 [INFO] Final candidates: []
2025-04-11 20:12:27,946 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:27,955 [INFO] Final candidates: []
2025-04-11 20:12:27,955 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:27,955 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(17), np.int64(2)), (np.int64(15), np.int64(0)))
2025-04-11 20:12:27,956 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:28,293 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:28,293 [DEBUG] MCTS iteration 76: Rollout reward: 0.
2025-04-11 20:12:28,293 [DEBUG] MCTS iteration 76: Backed up Finish.
2025-04-11 20:12:28,303 [INFO] Final candidates: []
2025-04-11 20:12:28,303 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:28,312 [INFO] Final candidates: []
2025-04-11 20:12:28,312 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:28,312 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(12)), (np.int64(16), np.int64(0)))
2025-04-11 20:12:28,312 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:28,388 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:28,388 [DEBUG] MCTS iteration 77: Rollout reward: 1.
2025-04-11 20:12:28,388 [DEBUG] MCTS iteration 77: Backed up Finish.
2025-04-11 20:12:28,397 [INFO] Final candidates: []
2025-04-11 20:12:28,397 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:28,406 [INFO] Final candidates: []
2025-04-11 20:12:28,406 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:28,406 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(8)), (np.int64(7), np.int64(11)))
2025-04-11 20:12:28,407 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:28,530 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:28,530 [DEBUG] MCTS iteration 78: Rollout reward: 0.
2025-04-11 20:12:28,530 [DEBUG] MCTS iteration 78: Backed up Finish.
2025-04-11 20:12:28,539 [INFO] Final candidates: []
2025-04-11 20:12:28,539 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:28,550 [INFO] Final candidates: []
2025-04-11 20:12:28,550 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:28,550 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(0)), (np.int64(7), np.int64(11)))
2025-04-11 20:12:28,550 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:28,610 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:28,610 [DEBUG] MCTS iteration 79: Rollout reward: 1.
2025-04-11 20:12:28,610 [DEBUG] MCTS iteration 79: Backed up Finish.
2025-04-11 20:12:28,619 [INFO] Final candidates: []
2025-04-11 20:12:28,619 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:28,628 [INFO] Final candidates: []
2025-04-11 20:12:28,628 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:28,628 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(10)), (np.int64(15), np.int64(0)))
2025-04-11 20:12:28,629 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:28,750 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:28,750 [DEBUG] MCTS iteration 80: Rollout reward: 1.
2025-04-11 20:12:28,750 [DEBUG] MCTS iteration 80: Backed up Finish.
2025-04-11 20:12:28,760 [INFO] Final candidates: []
2025-04-11 20:12:28,760 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:28,769 [INFO] Final candidates: []
2025-04-11 20:12:28,769 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:28,769 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(0)), (np.int64(10), np.int64(10)))
2025-04-11 20:12:28,769 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:28,807 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:28,807 [DEBUG] MCTS iteration 81: Rollout reward: 1.
2025-04-11 20:12:28,807 [DEBUG] MCTS iteration 81: Backed up Finish.
2025-04-11 20:12:28,816 [INFO] Final candidates: []
2025-04-11 20:12:28,816 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:28,825 [INFO] Final candidates: []
2025-04-11 20:12:28,825 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:28,825 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(18), np.int64(0)), (np.int64(6), np.int64(10)))
2025-04-11 20:12:28,826 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:29,088 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:29,088 [DEBUG] MCTS iteration 82: Rollout reward: 1.
2025-04-11 20:12:29,088 [DEBUG] MCTS iteration 82: Backed up Finish.
2025-04-11 20:12:29,097 [INFO] Final candidates: []
2025-04-11 20:12:29,098 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:29,107 [INFO] Final candidates: []
2025-04-11 20:12:29,107 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:29,107 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(11)), (np.int64(16), np.int64(1)))
2025-04-11 20:12:29,107 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:29,334 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:29,335 [DEBUG] MCTS iteration 83: Rollout reward: 0.
2025-04-11 20:12:29,335 [DEBUG] MCTS iteration 83: Backed up Finish.
2025-04-11 20:12:29,344 [INFO] Final candidates: []
2025-04-11 20:12:29,344 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:29,353 [INFO] Final candidates: []
2025-04-11 20:12:29,353 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:29,353 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(0)), (np.int64(7), np.int64(11)))
2025-04-11 20:12:29,354 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:29,423 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:29,423 [DEBUG] MCTS iteration 84: Rollout reward: 0.
2025-04-11 20:12:29,423 [DEBUG] MCTS iteration 84: Backed up Finish.
2025-04-11 20:12:29,432 [INFO] Final candidates: []
2025-04-11 20:12:29,432 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:29,441 [INFO] Final candidates: []
2025-04-11 20:12:29,441 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:29,441 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(8)), (np.int64(17), np.int64(1)))
2025-04-11 20:12:29,442 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:29,729 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:29,729 [DEBUG] MCTS iteration 85: Rollout reward: 1.
2025-04-11 20:12:29,729 [DEBUG] MCTS iteration 85: Backed up Finish.
2025-04-11 20:12:29,739 [INFO] Final candidates: []
2025-04-11 20:12:29,739 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:29,748 [INFO] Final candidates: []
2025-04-11 20:12:29,748 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:29,748 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(18), np.int64(1)), (np.int64(9), np.int64(7)))
2025-04-11 20:12:29,748 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:30,028 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:30,028 [DEBUG] MCTS iteration 86: Rollout reward: 1.
2025-04-11 20:12:30,028 [DEBUG] MCTS iteration 86: Backed up Finish.
2025-04-11 20:12:30,037 [INFO] Final candidates: []
2025-04-11 20:12:30,037 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:30,048 [INFO] Final candidates: []
2025-04-11 20:12:30,048 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:30,048 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(1)), (np.int64(8), np.int64(8)))
2025-04-11 20:12:30,049 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:30,103 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:30,103 [DEBUG] MCTS iteration 87: Rollout reward: 0.
2025-04-11 20:12:30,103 [DEBUG] MCTS iteration 87: Backed up Finish.
2025-04-11 20:12:30,112 [INFO] Final candidates: []
2025-04-11 20:12:30,112 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:30,121 [INFO] Final candidates: []
2025-04-11 20:12:30,121 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:30,121 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(1)), (np.int64(7), np.int64(9)))
2025-04-11 20:12:30,122 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:30,341 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:30,341 [DEBUG] MCTS iteration 88: Rollout reward: 1.
2025-04-11 20:12:30,341 [DEBUG] MCTS iteration 88: Backed up Finish.
2025-04-11 20:12:30,351 [INFO] Final candidates: []
2025-04-11 20:12:30,351 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:30,362 [INFO] Final candidates: []
2025-04-11 20:12:30,362 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:30,362 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(12)), (np.int64(9), np.int64(11)))
2025-04-11 20:12:30,362 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:30,378 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:30,378 [DEBUG] MCTS iteration 89: Rollout reward: 1.
2025-04-11 20:12:30,378 [DEBUG] MCTS iteration 89: Backed up Finish.
2025-04-11 20:12:30,387 [INFO] Final candidates: []
2025-04-11 20:12:30,387 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:30,396 [INFO] Final candidates: []
2025-04-11 20:12:30,396 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:30,396 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(0)), (np.int64(17), np.int64(1)))
2025-04-11 20:12:30,397 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:30,521 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:30,522 [DEBUG] MCTS iteration 90: Rollout reward: 1.
2025-04-11 20:12:30,522 [DEBUG] MCTS iteration 90: Backed up Finish.
2025-04-11 20:12:30,531 [INFO] Final candidates: []
2025-04-11 20:12:30,531 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:30,540 [INFO] Final candidates: []
2025-04-11 20:12:30,540 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:30,540 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(1)), (np.int64(17), np.int64(1)))
2025-04-11 20:12:30,540 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:30,567 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:30,567 [DEBUG] MCTS iteration 91: Rollout reward: 1.
2025-04-11 20:12:30,567 [DEBUG] MCTS iteration 91: Backed up Finish.
2025-04-11 20:12:30,576 [INFO] Final candidates: []
2025-04-11 20:12:30,576 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:30,585 [INFO] Final candidates: []
2025-04-11 20:12:30,585 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:30,585 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(9)), (np.int64(10), np.int64(9)))
2025-04-11 20:12:30,586 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:30,769 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:30,769 [DEBUG] MCTS iteration 92: Rollout reward: 0.
2025-04-11 20:12:30,769 [DEBUG] MCTS iteration 92: Backed up Finish.
2025-04-11 20:12:30,778 [INFO] Final candidates: []
2025-04-11 20:12:30,778 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:30,787 [INFO] Final candidates: []
2025-04-11 20:12:30,788 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:30,788 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(10)), (np.int64(10), np.int64(10)))
2025-04-11 20:12:30,788 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:30,967 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:30,967 [DEBUG] MCTS iteration 93: Rollout reward: 1.
2025-04-11 20:12:30,967 [DEBUG] MCTS iteration 93: Backed up Finish.
2025-04-11 20:12:30,977 [INFO] Final candidates: []
2025-04-11 20:12:30,977 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:30,986 [INFO] Final candidates: []
2025-04-11 20:12:30,986 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:30,987 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(11)), (np.int64(17), np.int64(2)))
2025-04-11 20:12:30,987 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:31,027 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:31,027 [DEBUG] MCTS iteration 94: Rollout reward: 1.
2025-04-11 20:12:31,027 [DEBUG] MCTS iteration 94: Backed up Finish.
2025-04-11 20:12:31,036 [INFO] Final candidates: []
2025-04-11 20:12:31,036 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:31,045 [INFO] Final candidates: []
2025-04-11 20:12:31,045 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:31,045 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(18), np.int64(1)), (np.int64(10), np.int64(10)))
2025-04-11 20:12:31,046 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:31,257 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:31,257 [DEBUG] MCTS iteration 95: Rollout reward: 1.
2025-04-11 20:12:31,257 [DEBUG] MCTS iteration 95: Backed up Finish.
2025-04-11 20:12:31,266 [INFO] Final candidates: []
2025-04-11 20:12:31,266 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:31,275 [INFO] Final candidates: []
2025-04-11 20:12:31,275 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:31,275 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(12)), (np.int64(18), np.int64(1)))
2025-04-11 20:12:31,276 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:31,322 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:31,322 [DEBUG] MCTS iteration 96: Rollout reward: 1.
2025-04-11 20:12:31,322 [DEBUG] MCTS iteration 96: Backed up Finish.
2025-04-11 20:12:31,331 [INFO] Final candidates: []
2025-04-11 20:12:31,331 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:31,340 [INFO] Final candidates: []
2025-04-11 20:12:31,340 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:31,340 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(9)), (np.int64(16), np.int64(0)))
2025-04-11 20:12:31,341 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:31,468 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:31,469 [DEBUG] MCTS iteration 97: Rollout reward: 1.
2025-04-11 20:12:31,469 [DEBUG] MCTS iteration 97: Backed up Finish.
2025-04-11 20:12:31,481 [INFO] Final candidates: []
2025-04-11 20:12:31,481 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:31,490 [INFO] Final candidates: []
2025-04-11 20:12:31,490 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:31,490 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(9)), (np.int64(9), np.int64(11)))
2025-04-11 20:12:31,491 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:31,513 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:31,513 [DEBUG] MCTS iteration 98: Rollout reward: 1.
2025-04-11 20:12:31,513 [DEBUG] MCTS iteration 98: Backed up Finish.
2025-04-11 20:12:31,522 [INFO] Final candidates: []
2025-04-11 20:12:31,522 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:31,532 [INFO] Final candidates: []
2025-04-11 20:12:31,532 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:31,532 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(9)), (np.int64(10), np.int64(10)))
2025-04-11 20:12:31,532 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:31,723 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:31,724 [DEBUG] MCTS iteration 99: Rollout reward: 1.
2025-04-11 20:12:31,724 [DEBUG] MCTS iteration 99: Backed up Finish.
2025-04-11 20:12:31,724 [INFO] MCTS: Search completed after 100 iterations.
2025-04-11 20:12:31,724 [DEBUG] MCTS: BEST ((np.int64(8), np.int64(9)), (np.int64(8), np.int64(11))) with 1 visits.
2025-04-11 20:12:31,724 [INFO] MCTS: Search finished. Best move selected with 1 visits.
2025-04-11 20:12:31,724 [INFO] MCTS selected move: K9,M9
2025-04-11 20:12:31,724 [INFO] ===============NEW MOVE================
2025-04-11 20:12:37,027 [INFO] Starting pre-MCTS candidate collection.
2025-04-11 20:12:37,036 [INFO] Final candidates: []
2025-04-11 20:12:37,036 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:37,045 [INFO] Final candidates: []
2025-04-11 20:12:37,045 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:37,045 [INFO] No candidate found in Phase 1 or 2; using full legal moves for MCTS.
2025-04-11 20:12:37,045 [INFO] MCTS: Starting search for 100 iterations.
2025-04-11 20:12:37,054 [INFO] Final candidates: []
2025-04-11 20:12:37,054 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:37,063 [INFO] Final candidates: []
2025-04-11 20:12:37,063 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:37,063 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(10)), (np.int64(11), np.int64(9)))
2025-04-11 20:12:37,063 [DEBUG] MCTS iteration 0: reached a node with 0 visits.
2025-04-11 20:12:37,063 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:37,080 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:37,080 [DEBUG] MCTS iteration 0: Rollout reward: 0.
2025-04-11 20:12:37,080 [DEBUG] MCTS iteration 0: Backed up Finish.
2025-04-11 20:12:37,089 [INFO] Final candidates: []
2025-04-11 20:12:37,089 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:37,098 [INFO] Final candidates: []
2025-04-11 20:12:37,098 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:37,098 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(10)), (np.int64(18), np.int64(0)))
2025-04-11 20:12:37,098 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:37,238 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:37,238 [DEBUG] MCTS iteration 1: Rollout reward: 0.
2025-04-11 20:12:37,238 [DEBUG] MCTS iteration 1: Backed up Finish.
2025-04-11 20:12:37,247 [INFO] Final candidates: []
2025-04-11 20:12:37,247 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:37,256 [INFO] Final candidates: []
2025-04-11 20:12:37,256 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:37,256 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(14)), (np.int64(8), np.int64(8)))
2025-04-11 20:12:37,256 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:37,370 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:37,370 [DEBUG] MCTS iteration 2: Rollout reward: 0.
2025-04-11 20:12:37,370 [DEBUG] MCTS iteration 2: Backed up Finish.
2025-04-11 20:12:37,379 [INFO] Final candidates: []
2025-04-11 20:12:37,379 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:37,389 [INFO] Final candidates: []
2025-04-11 20:12:37,389 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:37,389 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(11)), (np.int64(9), np.int64(13)))
2025-04-11 20:12:37,389 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:37,518 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:37,518 [DEBUG] MCTS iteration 3: Rollout reward: 1.
2025-04-11 20:12:37,518 [DEBUG] MCTS iteration 3: Backed up Finish.
2025-04-11 20:12:37,527 [INFO] Final candidates: []
2025-04-11 20:12:37,527 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:37,540 [INFO] Final candidates: []
2025-04-11 20:12:37,540 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:37,540 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(14)), (np.int64(6), np.int64(10)))
2025-04-11 20:12:37,541 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:37,772 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:37,772 [DEBUG] MCTS iteration 4: Rollout reward: 1.
2025-04-11 20:12:37,772 [DEBUG] MCTS iteration 4: Backed up Finish.
2025-04-11 20:12:37,781 [INFO] Final candidates: []
2025-04-11 20:12:37,781 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:37,790 [INFO] Final candidates: []
2025-04-11 20:12:37,790 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:37,790 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(12)), (np.int64(6), np.int64(9)))
2025-04-11 20:12:37,790 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:37,858 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:37,858 [DEBUG] MCTS iteration 5: Rollout reward: 1.
2025-04-11 20:12:37,858 [DEBUG] MCTS iteration 5: Backed up Finish.
2025-04-11 20:12:37,867 [INFO] Final candidates: []
2025-04-11 20:12:37,867 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:37,876 [INFO] Final candidates: []
2025-04-11 20:12:37,876 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:37,876 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(12)), (np.int64(7), np.int64(9)))
2025-04-11 20:12:37,876 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:38,048 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:38,048 [DEBUG] MCTS iteration 6: Rollout reward: 0.
2025-04-11 20:12:38,048 [DEBUG] MCTS iteration 6: Backed up Finish.
2025-04-11 20:12:38,057 [INFO] Final candidates: []
2025-04-11 20:12:38,057 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:38,066 [INFO] Final candidates: []
2025-04-11 20:12:38,066 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:38,066 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(14)), (np.int64(10), np.int64(11)))
2025-04-11 20:12:38,066 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:38,340 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:38,340 [DEBUG] MCTS iteration 7: Rollout reward: 0.
2025-04-11 20:12:38,340 [DEBUG] MCTS iteration 7: Backed up Finish.
2025-04-11 20:12:38,349 [INFO] Final candidates: []
2025-04-11 20:12:38,349 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:38,358 [INFO] Final candidates: []
2025-04-11 20:12:38,358 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:38,358 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(12)), (np.int64(10), np.int64(8)))
2025-04-11 20:12:38,358 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:38,410 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:38,410 [DEBUG] MCTS iteration 8: Rollout reward: 1.
2025-04-11 20:12:38,410 [DEBUG] MCTS iteration 8: Backed up Finish.
2025-04-11 20:12:38,419 [INFO] Final candidates: []
2025-04-11 20:12:38,419 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:38,432 [INFO] Final candidates: []
2025-04-11 20:12:38,432 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:38,432 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(13)), (np.int64(10), np.int64(13)))
2025-04-11 20:12:38,432 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:38,562 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:38,562 [DEBUG] MCTS iteration 9: Rollout reward: 0.
2025-04-11 20:12:38,562 [DEBUG] MCTS iteration 9: Backed up Finish.
2025-04-11 20:12:38,571 [INFO] Final candidates: []
2025-04-11 20:12:38,571 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:38,579 [INFO] Final candidates: []
2025-04-11 20:12:38,579 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:38,580 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(7)), (np.int64(10), np.int64(8)))
2025-04-11 20:12:38,580 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:38,642 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:38,642 [DEBUG] MCTS iteration 10: Rollout reward: 1.
2025-04-11 20:12:38,642 [DEBUG] MCTS iteration 10: Backed up Finish.
2025-04-11 20:12:38,651 [INFO] Final candidates: []
2025-04-11 20:12:38,651 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:38,660 [INFO] Final candidates: []
2025-04-11 20:12:38,660 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:38,660 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(18), np.int64(1)), (np.int64(9), np.int64(10)))
2025-04-11 20:12:38,660 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:38,845 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:38,845 [DEBUG] MCTS iteration 11: Rollout reward: 1.
2025-04-11 20:12:38,845 [DEBUG] MCTS iteration 11: Backed up Finish.
2025-04-11 20:12:38,854 [INFO] Final candidates: []
2025-04-11 20:12:38,854 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:38,863 [INFO] Final candidates: []
2025-04-11 20:12:38,863 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:38,863 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(11)), (np.int64(7), np.int64(12)))
2025-04-11 20:12:38,863 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:38,872 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:38,872 [DEBUG] MCTS iteration 12: Rollout reward: 1.
2025-04-11 20:12:38,872 [DEBUG] MCTS iteration 12: Backed up Finish.
2025-04-11 20:12:38,881 [INFO] Final candidates: []
2025-04-11 20:12:38,881 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:38,891 [INFO] Final candidates: []
2025-04-11 20:12:38,891 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:38,891 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(10)), (np.int64(17), np.int64(1)))
2025-04-11 20:12:38,891 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:39,047 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:39,047 [DEBUG] MCTS iteration 13: Rollout reward: 1.
2025-04-11 20:12:39,047 [DEBUG] MCTS iteration 13: Backed up Finish.
2025-04-11 20:12:39,056 [INFO] Final candidates: []
2025-04-11 20:12:39,056 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:39,065 [INFO] Final candidates: []
2025-04-11 20:12:39,065 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:39,065 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(1)), (np.int64(8), np.int64(7)))
2025-04-11 20:12:39,065 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:39,176 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:39,176 [DEBUG] MCTS iteration 14: Rollout reward: 0.
2025-04-11 20:12:39,176 [DEBUG] MCTS iteration 14: Backed up Finish.
2025-04-11 20:12:39,185 [INFO] Final candidates: []
2025-04-11 20:12:39,185 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:39,194 [INFO] Final candidates: []
2025-04-11 20:12:39,194 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:39,194 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(17), np.int64(1)), (np.int64(10), np.int64(10)))
2025-04-11 20:12:39,194 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:39,539 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:39,539 [DEBUG] MCTS iteration 15: Rollout reward: 0.
2025-04-11 20:12:39,539 [DEBUG] MCTS iteration 15: Backed up Finish.
2025-04-11 20:12:39,548 [INFO] Final candidates: []
2025-04-11 20:12:39,548 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:39,557 [INFO] Final candidates: []
2025-04-11 20:12:39,557 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:39,557 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(14)), (np.int64(7), np.int64(13)))
2025-04-11 20:12:39,557 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:39,692 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:39,692 [DEBUG] MCTS iteration 16: Rollout reward: 1.
2025-04-11 20:12:39,692 [DEBUG] MCTS iteration 16: Backed up Finish.
2025-04-11 20:12:39,701 [INFO] Final candidates: []
2025-04-11 20:12:39,701 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:39,710 [INFO] Final candidates: []
2025-04-11 20:12:39,710 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:39,710 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(9)), (np.int64(16), np.int64(1)))
2025-04-11 20:12:39,710 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:39,717 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:39,717 [DEBUG] MCTS iteration 17: Rollout reward: 0.
2025-04-11 20:12:39,717 [DEBUG] MCTS iteration 17: Backed up Finish.
2025-04-11 20:12:39,726 [INFO] Final candidates: []
2025-04-11 20:12:39,726 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:39,735 [INFO] Final candidates: []
2025-04-11 20:12:39,735 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:39,735 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(12)), (np.int64(9), np.int64(10)))
2025-04-11 20:12:39,736 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:39,843 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:39,843 [DEBUG] MCTS iteration 18: Rollout reward: 0.
2025-04-11 20:12:39,843 [DEBUG] MCTS iteration 18: Backed up Finish.
2025-04-11 20:12:39,852 [INFO] Final candidates: []
2025-04-11 20:12:39,852 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:39,861 [INFO] Final candidates: []
2025-04-11 20:12:39,861 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:39,861 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(8)), (np.int64(17), np.int64(2)))
2025-04-11 20:12:39,861 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:40,049 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:40,049 [DEBUG] MCTS iteration 19: Rollout reward: 1.
2025-04-11 20:12:40,049 [DEBUG] MCTS iteration 19: Backed up Finish.
2025-04-11 20:12:40,058 [INFO] Final candidates: []
2025-04-11 20:12:40,058 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:40,067 [INFO] Final candidates: []
2025-04-11 20:12:40,067 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:40,067 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(10)), (np.int64(8), np.int64(8)))
2025-04-11 20:12:40,067 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:40,111 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:40,111 [DEBUG] MCTS iteration 20: Rollout reward: 1.
2025-04-11 20:12:40,111 [DEBUG] MCTS iteration 20: Backed up Finish.
2025-04-11 20:12:40,120 [INFO] Final candidates: []
2025-04-11 20:12:40,120 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:40,129 [INFO] Final candidates: []
2025-04-11 20:12:40,129 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:40,129 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(18), np.int64(1)), (np.int64(6), np.int64(9)))
2025-04-11 20:12:40,130 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:40,303 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:40,304 [DEBUG] MCTS iteration 21: Rollout reward: 1.
2025-04-11 20:12:40,304 [DEBUG] MCTS iteration 21: Backed up Finish.
2025-04-11 20:12:40,312 [INFO] Final candidates: []
2025-04-11 20:12:40,312 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:40,321 [INFO] Final candidates: []
2025-04-11 20:12:40,321 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:40,321 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(10)), (np.int64(7), np.int64(12)))
2025-04-11 20:12:40,322 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:40,440 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:40,441 [DEBUG] MCTS iteration 22: Rollout reward: 0.
2025-04-11 20:12:40,441 [DEBUG] MCTS iteration 22: Backed up Finish.
2025-04-11 20:12:40,449 [INFO] Final candidates: []
2025-04-11 20:12:40,449 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:40,459 [INFO] Final candidates: []
2025-04-11 20:12:40,459 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:40,459 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(13)), (np.int64(18), np.int64(0)))
2025-04-11 20:12:40,459 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:40,630 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:40,630 [DEBUG] MCTS iteration 23: Rollout reward: 0.
2025-04-11 20:12:40,630 [DEBUG] MCTS iteration 23: Backed up Finish.
2025-04-11 20:12:40,639 [INFO] Final candidates: []
2025-04-11 20:12:40,639 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:40,648 [INFO] Final candidates: []
2025-04-11 20:12:40,648 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:40,648 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(11)), (np.int64(9), np.int64(10)))
2025-04-11 20:12:40,648 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:40,818 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:40,818 [DEBUG] MCTS iteration 24: Rollout reward: 0.
2025-04-11 20:12:40,818 [DEBUG] MCTS iteration 24: Backed up Finish.
2025-04-11 20:12:40,828 [INFO] Final candidates: []
2025-04-11 20:12:40,828 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:40,837 [INFO] Final candidates: []
2025-04-11 20:12:40,837 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:40,837 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(11)), (np.int64(16), np.int64(0)))
2025-04-11 20:12:40,837 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:40,865 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:40,865 [DEBUG] MCTS iteration 25: Rollout reward: 0.
2025-04-11 20:12:40,866 [DEBUG] MCTS iteration 25: Backed up Finish.
2025-04-11 20:12:40,874 [INFO] Final candidates: []
2025-04-11 20:12:40,874 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:40,883 [INFO] Final candidates: []
2025-04-11 20:12:40,883 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:40,883 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(18), np.int64(1)), (np.int64(17), np.int64(1)))
2025-04-11 20:12:40,883 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:41,060 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:41,061 [DEBUG] MCTS iteration 26: Rollout reward: 1.
2025-04-11 20:12:41,061 [DEBUG] MCTS iteration 26: Backed up Finish.
2025-04-11 20:12:41,070 [INFO] Final candidates: []
2025-04-11 20:12:41,070 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:41,081 [INFO] Final candidates: []
2025-04-11 20:12:41,081 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:41,081 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(12)), (np.int64(7), np.int64(8)))
2025-04-11 20:12:41,081 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:41,279 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:41,279 [DEBUG] MCTS iteration 27: Rollout reward: 1.
2025-04-11 20:12:41,279 [DEBUG] MCTS iteration 27: Backed up Finish.
2025-04-11 20:12:41,288 [INFO] Final candidates: []
2025-04-11 20:12:41,288 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:41,297 [INFO] Final candidates: []
2025-04-11 20:12:41,297 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:41,297 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(0)), (np.int64(7), np.int64(8)))
2025-04-11 20:12:41,297 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:41,447 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:41,447 [DEBUG] MCTS iteration 28: Rollout reward: 1.
2025-04-11 20:12:41,447 [DEBUG] MCTS iteration 28: Backed up Finish.
2025-04-11 20:12:41,456 [INFO] Final candidates: []
2025-04-11 20:12:41,456 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:41,465 [INFO] Final candidates: []
2025-04-11 20:12:41,465 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:41,465 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(8)), (np.int64(5), np.int64(11)))
2025-04-11 20:12:41,466 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:41,496 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:41,496 [DEBUG] MCTS iteration 29: Rollout reward: 0.
2025-04-11 20:12:41,497 [DEBUG] MCTS iteration 29: Backed up Finish.
2025-04-11 20:12:41,505 [INFO] Final candidates: []
2025-04-11 20:12:41,505 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:41,514 [INFO] Final candidates: []
2025-04-11 20:12:41,514 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:41,515 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(14)), (np.int64(7), np.int64(12)))
2025-04-11 20:12:41,515 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:41,557 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:41,557 [DEBUG] MCTS iteration 30: Rollout reward: 1.
2025-04-11 20:12:41,558 [DEBUG] MCTS iteration 30: Backed up Finish.
2025-04-11 20:12:41,566 [INFO] Final candidates: []
2025-04-11 20:12:41,566 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:41,575 [INFO] Final candidates: []
2025-04-11 20:12:41,575 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:41,575 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(12)), (np.int64(10), np.int64(11)))
2025-04-11 20:12:41,575 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:41,663 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:41,663 [DEBUG] MCTS iteration 31: Rollout reward: 1.
2025-04-11 20:12:41,663 [DEBUG] MCTS iteration 31: Backed up Finish.
2025-04-11 20:12:41,673 [INFO] Final candidates: []
2025-04-11 20:12:41,673 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:41,682 [INFO] Final candidates: []
2025-04-11 20:12:41,682 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:41,683 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(11)), (np.int64(17), np.int64(1)))
2025-04-11 20:12:41,683 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:41,695 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:41,695 [DEBUG] MCTS iteration 32: Rollout reward: 0.
2025-04-11 20:12:41,695 [DEBUG] MCTS iteration 32: Backed up Finish.
2025-04-11 20:12:41,704 [INFO] Final candidates: []
2025-04-11 20:12:41,704 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:41,713 [INFO] Final candidates: []
2025-04-11 20:12:41,713 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:41,713 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(11)), (np.int64(15), np.int64(0)))
2025-04-11 20:12:41,713 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:41,859 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:41,859 [DEBUG] MCTS iteration 33: Rollout reward: 1.
2025-04-11 20:12:41,859 [DEBUG] MCTS iteration 33: Backed up Finish.
2025-04-11 20:12:41,869 [INFO] Final candidates: []
2025-04-11 20:12:41,869 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:41,880 [INFO] Final candidates: []
2025-04-11 20:12:41,880 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:41,880 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(17), np.int64(2)), (np.int64(7), np.int64(8)))
2025-04-11 20:12:41,882 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:41,956 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:41,957 [DEBUG] MCTS iteration 34: Rollout reward: 0.
2025-04-11 20:12:41,957 [DEBUG] MCTS iteration 34: Backed up Finish.
2025-04-11 20:12:41,965 [INFO] Final candidates: []
2025-04-11 20:12:41,965 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:41,975 [INFO] Final candidates: []
2025-04-11 20:12:41,975 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:41,975 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(12)), (np.int64(11), np.int64(12)))
2025-04-11 20:12:41,975 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:42,017 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:42,017 [DEBUG] MCTS iteration 35: Rollout reward: 0.
2025-04-11 20:12:42,017 [DEBUG] MCTS iteration 35: Backed up Finish.
2025-04-11 20:12:42,026 [INFO] Final candidates: []
2025-04-11 20:12:42,026 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:42,037 [INFO] Final candidates: []
2025-04-11 20:12:42,037 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:42,037 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(14)), (np.int64(8), np.int64(13)))
2025-04-11 20:12:42,037 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:42,256 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:42,256 [DEBUG] MCTS iteration 36: Rollout reward: 1.
2025-04-11 20:12:42,256 [DEBUG] MCTS iteration 36: Backed up Finish.
2025-04-11 20:12:42,269 [INFO] Final candidates: []
2025-04-11 20:12:42,269 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:42,278 [INFO] Final candidates: []
2025-04-11 20:12:42,278 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:42,278 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(17), np.int64(1)), (np.int64(7), np.int64(8)))
2025-04-11 20:12:42,278 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:42,490 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:42,490 [DEBUG] MCTS iteration 37: Rollout reward: 1.
2025-04-11 20:12:42,490 [DEBUG] MCTS iteration 37: Backed up Finish.
2025-04-11 20:12:42,499 [INFO] Final candidates: []
2025-04-11 20:12:42,499 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:42,509 [INFO] Final candidates: []
2025-04-11 20:12:42,509 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:42,510 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(1)), (np.int64(7), np.int64(9)))
2025-04-11 20:12:42,510 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:42,557 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:42,557 [DEBUG] MCTS iteration 38: Rollout reward: 0.
2025-04-11 20:12:42,557 [DEBUG] MCTS iteration 38: Backed up Finish.
2025-04-11 20:12:42,566 [INFO] Final candidates: []
2025-04-11 20:12:42,566 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:42,576 [INFO] Final candidates: []
2025-04-11 20:12:42,576 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:42,576 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(9)), (np.int64(9), np.int64(10)))
2025-04-11 20:12:42,577 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:42,819 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:42,819 [DEBUG] MCTS iteration 39: Rollout reward: 0.
2025-04-11 20:12:42,819 [DEBUG] MCTS iteration 39: Backed up Finish.
2025-04-11 20:12:42,827 [INFO] Final candidates: []
2025-04-11 20:12:42,827 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:42,836 [INFO] Final candidates: []
2025-04-11 20:12:42,836 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:42,836 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(12)), (np.int64(18), np.int64(1)))
2025-04-11 20:12:42,837 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:43,045 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:43,045 [DEBUG] MCTS iteration 40: Rollout reward: 0.
2025-04-11 20:12:43,045 [DEBUG] MCTS iteration 40: Backed up Finish.
2025-04-11 20:12:43,054 [INFO] Final candidates: []
2025-04-11 20:12:43,054 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:43,063 [INFO] Final candidates: []
2025-04-11 20:12:43,063 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:43,063 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(13)), (np.int64(8), np.int64(13)))
2025-04-11 20:12:43,063 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:43,156 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:43,156 [DEBUG] MCTS iteration 41: Rollout reward: 1.
2025-04-11 20:12:43,156 [DEBUG] MCTS iteration 41: Backed up Finish.
2025-04-11 20:12:43,165 [INFO] Final candidates: []
2025-04-11 20:12:43,165 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:43,174 [INFO] Final candidates: []
2025-04-11 20:12:43,174 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:43,174 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(10)), (np.int64(16), np.int64(0)))
2025-04-11 20:12:43,174 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:43,372 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:43,372 [DEBUG] MCTS iteration 42: Rollout reward: 0.
2025-04-11 20:12:43,372 [DEBUG] MCTS iteration 42: Backed up Finish.
2025-04-11 20:12:43,381 [INFO] Final candidates: []
2025-04-11 20:12:43,381 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:43,390 [INFO] Final candidates: []
2025-04-11 20:12:43,390 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:43,390 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(11)), (np.int64(11), np.int64(9)))
2025-04-11 20:12:43,391 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:43,625 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:43,625 [DEBUG] MCTS iteration 43: Rollout reward: 1.
2025-04-11 20:12:43,625 [DEBUG] MCTS iteration 43: Backed up Finish.
2025-04-11 20:12:43,635 [INFO] Final candidates: []
2025-04-11 20:12:43,635 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:43,646 [INFO] Final candidates: []
2025-04-11 20:12:43,646 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:43,646 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(0)), (np.int64(6), np.int64(9)))
2025-04-11 20:12:43,646 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:43,750 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:43,750 [DEBUG] MCTS iteration 44: Rollout reward: 0.
2025-04-11 20:12:43,750 [DEBUG] MCTS iteration 44: Backed up Finish.
2025-04-11 20:12:43,759 [INFO] Final candidates: []
2025-04-11 20:12:43,759 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:43,768 [INFO] Final candidates: []
2025-04-11 20:12:43,768 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:43,768 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(18), np.int64(1)), (np.int64(5), np.int64(11)))
2025-04-11 20:12:43,768 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:43,935 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:43,936 [DEBUG] MCTS iteration 45: Rollout reward: 1.
2025-04-11 20:12:43,936 [DEBUG] MCTS iteration 45: Backed up Finish.
2025-04-11 20:12:43,944 [INFO] Final candidates: []
2025-04-11 20:12:43,944 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:43,953 [INFO] Final candidates: []
2025-04-11 20:12:43,953 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:43,953 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(7)), (np.int64(8), np.int64(7)))
2025-04-11 20:12:43,954 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:44,098 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:44,098 [DEBUG] MCTS iteration 46: Rollout reward: 1.
2025-04-11 20:12:44,098 [DEBUG] MCTS iteration 46: Backed up Finish.
2025-04-11 20:12:44,107 [INFO] Final candidates: []
2025-04-11 20:12:44,107 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:44,118 [INFO] Final candidates: []
2025-04-11 20:12:44,118 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:44,118 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(11)), (np.int64(10), np.int64(8)))
2025-04-11 20:12:44,119 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:44,189 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:44,190 [DEBUG] MCTS iteration 47: Rollout reward: 0.
2025-04-11 20:12:44,190 [DEBUG] MCTS iteration 47: Backed up Finish.
2025-04-11 20:12:44,199 [INFO] Final candidates: []
2025-04-11 20:12:44,199 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:44,210 [INFO] Final candidates: []
2025-04-11 20:12:44,210 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:44,210 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(10)), (np.int64(6), np.int64(10)))
2025-04-11 20:12:44,211 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:44,447 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:44,447 [DEBUG] MCTS iteration 48: Rollout reward: 0.
2025-04-11 20:12:44,447 [DEBUG] MCTS iteration 48: Backed up Finish.
2025-04-11 20:12:44,456 [INFO] Final candidates: []
2025-04-11 20:12:44,456 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:44,465 [INFO] Final candidates: []
2025-04-11 20:12:44,465 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:44,465 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(1)), (np.int64(6), np.int64(11)))
2025-04-11 20:12:44,465 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:44,552 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:44,552 [DEBUG] MCTS iteration 49: Rollout reward: 0.
2025-04-11 20:12:44,552 [DEBUG] MCTS iteration 49: Backed up Finish.
2025-04-11 20:12:44,561 [INFO] Final candidates: []
2025-04-11 20:12:44,561 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:44,570 [INFO] Final candidates: []
2025-04-11 20:12:44,570 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:44,570 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(8)), (np.int64(6), np.int64(9)))
2025-04-11 20:12:44,570 [DEBUG] MCTS iteration 50: reached a node with 0 visits.
2025-04-11 20:12:44,570 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:44,640 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:44,640 [DEBUG] MCTS iteration 50: Rollout reward: 1.
2025-04-11 20:12:44,640 [DEBUG] MCTS iteration 50: Backed up Finish.
2025-04-11 20:12:44,649 [INFO] Final candidates: []
2025-04-11 20:12:44,649 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:44,658 [INFO] Final candidates: []
2025-04-11 20:12:44,658 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:44,658 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(11)), (np.int64(18), np.int64(0)))
2025-04-11 20:12:44,658 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:44,687 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:44,688 [DEBUG] MCTS iteration 51: Rollout reward: 1.
2025-04-11 20:12:44,688 [DEBUG] MCTS iteration 51: Backed up Finish.
2025-04-11 20:12:44,696 [INFO] Final candidates: []
2025-04-11 20:12:44,696 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:44,705 [INFO] Final candidates: []
2025-04-11 20:12:44,705 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:44,705 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(14)), (np.int64(6), np.int64(9)))
2025-04-11 20:12:44,706 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:44,945 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:44,945 [DEBUG] MCTS iteration 52: Rollout reward: 1.
2025-04-11 20:12:44,945 [DEBUG] MCTS iteration 52: Backed up Finish.
2025-04-11 20:12:44,954 [INFO] Final candidates: []
2025-04-11 20:12:44,954 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:44,963 [INFO] Final candidates: []
2025-04-11 20:12:44,963 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:44,963 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(9)), (np.int64(15), np.int64(0)))
2025-04-11 20:12:44,963 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:45,083 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:45,083 [DEBUG] MCTS iteration 53: Rollout reward: 0.
2025-04-11 20:12:45,083 [DEBUG] MCTS iteration 53: Backed up Finish.
2025-04-11 20:12:45,094 [INFO] Final candidates: []
2025-04-11 20:12:45,094 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:45,103 [INFO] Final candidates: []
2025-04-11 20:12:45,103 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:45,103 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(14)), (np.int64(10), np.int64(8)))
2025-04-11 20:12:45,104 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:45,186 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:45,187 [DEBUG] MCTS iteration 54: Rollout reward: 1.
2025-04-11 20:12:45,187 [DEBUG] MCTS iteration 54: Backed up Finish.
2025-04-11 20:12:45,195 [INFO] Final candidates: []
2025-04-11 20:12:45,196 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:45,204 [INFO] Final candidates: []
2025-04-11 20:12:45,205 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:45,205 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(18), np.int64(1)), (np.int64(7), np.int64(12)))
2025-04-11 20:12:45,205 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:45,502 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:45,502 [DEBUG] MCTS iteration 55: Rollout reward: 1.
2025-04-11 20:12:45,502 [DEBUG] MCTS iteration 55: Backed up Finish.
2025-04-11 20:12:45,511 [INFO] Final candidates: []
2025-04-11 20:12:45,511 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:45,520 [INFO] Final candidates: []
2025-04-11 20:12:45,521 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:45,521 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(18), np.int64(1)), (np.int64(16), np.int64(0)))
2025-04-11 20:12:45,521 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:45,734 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:45,735 [DEBUG] MCTS iteration 56: Rollout reward: 0.
2025-04-11 20:12:45,735 [DEBUG] MCTS iteration 56: Backed up Finish.
2025-04-11 20:12:45,745 [INFO] Final candidates: []
2025-04-11 20:12:45,745 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:45,755 [INFO] Final candidates: []
2025-04-11 20:12:45,755 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:45,755 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(10)), (np.int64(10), np.int64(11)))
2025-04-11 20:12:45,755 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:45,913 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:45,913 [DEBUG] MCTS iteration 57: Rollout reward: 0.
2025-04-11 20:12:45,913 [DEBUG] MCTS iteration 57: Backed up Finish.
2025-04-11 20:12:45,922 [INFO] Final candidates: []
2025-04-11 20:12:45,922 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:45,931 [INFO] Final candidates: []
2025-04-11 20:12:45,931 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:45,931 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(8)), (np.int64(6), np.int64(9)))
2025-04-11 20:12:45,931 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:46,136 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:46,136 [DEBUG] MCTS iteration 58: Rollout reward: 0.
2025-04-11 20:12:46,136 [DEBUG] MCTS iteration 58: Backed up Finish.
2025-04-11 20:12:46,145 [INFO] Final candidates: []
2025-04-11 20:12:46,145 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:46,154 [INFO] Final candidates: []
2025-04-11 20:12:46,154 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:46,154 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(11)), (np.int64(8), np.int64(7)))
2025-04-11 20:12:46,154 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:46,253 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:46,253 [DEBUG] MCTS iteration 59: Rollout reward: 1.
2025-04-11 20:12:46,253 [DEBUG] MCTS iteration 59: Backed up Finish.
2025-04-11 20:12:46,262 [INFO] Final candidates: []
2025-04-11 20:12:46,262 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:46,271 [INFO] Final candidates: []
2025-04-11 20:12:46,271 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:46,271 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(12)), (np.int64(5), np.int64(11)))
2025-04-11 20:12:46,272 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:46,406 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:46,406 [DEBUG] MCTS iteration 60: Rollout reward: 0.
2025-04-11 20:12:46,406 [DEBUG] MCTS iteration 60: Backed up Finish.
2025-04-11 20:12:46,415 [INFO] Final candidates: []
2025-04-11 20:12:46,415 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:46,424 [INFO] Final candidates: []
2025-04-11 20:12:46,424 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:46,424 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(8)), (np.int64(11), np.int64(9)))
2025-04-11 20:12:46,424 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:46,624 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:46,624 [DEBUG] MCTS iteration 61: Rollout reward: 0.
2025-04-11 20:12:46,624 [DEBUG] MCTS iteration 61: Backed up Finish.
2025-04-11 20:12:46,634 [INFO] Final candidates: []
2025-04-11 20:12:46,634 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:46,646 [INFO] Final candidates: []
2025-04-11 20:12:46,646 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:46,646 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(8)), (np.int64(6), np.int64(10)))
2025-04-11 20:12:46,647 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:46,786 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:46,787 [DEBUG] MCTS iteration 62: Rollout reward: 0.
2025-04-11 20:12:46,787 [DEBUG] MCTS iteration 62: Backed up Finish.
2025-04-11 20:12:46,795 [INFO] Final candidates: []
2025-04-11 20:12:46,795 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:46,805 [INFO] Final candidates: []
2025-04-11 20:12:46,805 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:46,805 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(13)), (np.int64(10), np.int64(13)))
2025-04-11 20:12:46,805 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:46,842 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:46,843 [DEBUG] MCTS iteration 63: Rollout reward: 1.
2025-04-11 20:12:46,843 [DEBUG] MCTS iteration 63: Backed up Finish.
2025-04-11 20:12:46,853 [INFO] Final candidates: []
2025-04-11 20:12:46,853 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:46,863 [INFO] Final candidates: []
2025-04-11 20:12:46,863 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:46,864 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(17), np.int64(2)), (np.int64(11), np.int64(12)))
2025-04-11 20:12:46,864 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:46,886 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:46,886 [DEBUG] MCTS iteration 64: Rollout reward: 0.
2025-04-11 20:12:46,886 [DEBUG] MCTS iteration 64: Backed up Finish.
2025-04-11 20:12:46,895 [INFO] Final candidates: []
2025-04-11 20:12:46,895 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:46,904 [INFO] Final candidates: []
2025-04-11 20:12:46,904 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:46,904 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(18), np.int64(1)), (np.int64(6), np.int64(11)))
2025-04-11 20:12:46,905 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:47,048 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:47,048 [DEBUG] MCTS iteration 65: Rollout reward: 0.
2025-04-11 20:12:47,048 [DEBUG] MCTS iteration 65: Backed up Finish.
2025-04-11 20:12:47,058 [INFO] Final candidates: []
2025-04-11 20:12:47,058 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:47,068 [INFO] Final candidates: []
2025-04-11 20:12:47,068 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:47,068 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(11)), (np.int64(9), np.int64(7)))
2025-04-11 20:12:47,068 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:47,158 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:47,159 [DEBUG] MCTS iteration 66: Rollout reward: 1.
2025-04-11 20:12:47,159 [DEBUG] MCTS iteration 66: Backed up Finish.
2025-04-11 20:12:47,167 [INFO] Final candidates: []
2025-04-11 20:12:47,167 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:47,176 [INFO] Final candidates: []
2025-04-11 20:12:47,176 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:47,176 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(13)), (np.int64(16), np.int64(0)))
2025-04-11 20:12:47,177 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:47,227 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:47,227 [DEBUG] MCTS iteration 67: Rollout reward: 0.
2025-04-11 20:12:47,227 [DEBUG] MCTS iteration 67: Backed up Finish.
2025-04-11 20:12:47,236 [INFO] Final candidates: []
2025-04-11 20:12:47,236 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:47,245 [INFO] Final candidates: []
2025-04-11 20:12:47,245 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:47,245 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(11)), (np.int64(9), np.int64(10)))
2025-04-11 20:12:47,246 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:47,355 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:47,355 [DEBUG] MCTS iteration 68: Rollout reward: 1.
2025-04-11 20:12:47,355 [DEBUG] MCTS iteration 68: Backed up Finish.
2025-04-11 20:12:47,364 [INFO] Final candidates: []
2025-04-11 20:12:47,364 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:47,373 [INFO] Final candidates: []
2025-04-11 20:12:47,373 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:47,373 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(8)), (np.int64(7), np.int64(8)))
2025-04-11 20:12:47,374 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:47,632 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:47,632 [DEBUG] MCTS iteration 69: Rollout reward: 1.
2025-04-11 20:12:47,632 [DEBUG] MCTS iteration 69: Backed up Finish.
2025-04-11 20:12:47,641 [INFO] Final candidates: []
2025-04-11 20:12:47,641 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:47,650 [INFO] Final candidates: []
2025-04-11 20:12:47,650 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:47,650 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(10)), (np.int64(8), np.int64(7)))
2025-04-11 20:12:47,650 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:47,808 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:47,808 [DEBUG] MCTS iteration 70: Rollout reward: 1.
2025-04-11 20:12:47,808 [DEBUG] MCTS iteration 70: Backed up Finish.
2025-04-11 20:12:47,817 [INFO] Final candidates: []
2025-04-11 20:12:47,817 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:47,826 [INFO] Final candidates: []
2025-04-11 20:12:47,826 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:47,826 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(8)), (np.int64(10), np.int64(11)))
2025-04-11 20:12:47,826 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:47,930 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:47,931 [DEBUG] MCTS iteration 71: Rollout reward: 1.
2025-04-11 20:12:47,931 [DEBUG] MCTS iteration 71: Backed up Finish.
2025-04-11 20:12:47,940 [INFO] Final candidates: []
2025-04-11 20:12:47,940 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:47,949 [INFO] Final candidates: []
2025-04-11 20:12:47,949 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:47,949 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(10)), (np.int64(7), np.int64(8)))
2025-04-11 20:12:47,949 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:48,002 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:48,002 [DEBUG] MCTS iteration 72: Rollout reward: 0.
2025-04-11 20:12:48,002 [DEBUG] MCTS iteration 72: Backed up Finish.
2025-04-11 20:12:48,011 [INFO] Final candidates: []
2025-04-11 20:12:48,011 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:48,020 [INFO] Final candidates: []
2025-04-11 20:12:48,020 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:48,020 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(9)), (np.int64(6), np.int64(9)))
2025-04-11 20:12:48,020 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:48,312 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:48,312 [DEBUG] MCTS iteration 73: Rollout reward: 1.
2025-04-11 20:12:48,312 [DEBUG] MCTS iteration 73: Backed up Finish.
2025-04-11 20:12:48,324 [INFO] Final candidates: []
2025-04-11 20:12:48,324 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:48,333 [INFO] Final candidates: []
2025-04-11 20:12:48,333 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:48,333 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(10)), (np.int64(6), np.int64(9)))
2025-04-11 20:12:48,334 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:48,508 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:48,509 [DEBUG] MCTS iteration 74: Rollout reward: 0.
2025-04-11 20:12:48,509 [DEBUG] MCTS iteration 74: Backed up Finish.
2025-04-11 20:12:48,517 [INFO] Final candidates: []
2025-04-11 20:12:48,518 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:48,527 [INFO] Final candidates: []
2025-04-11 20:12:48,527 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:48,527 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(12)), (np.int64(8), np.int64(7)))
2025-04-11 20:12:48,527 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:48,677 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:48,677 [DEBUG] MCTS iteration 75: Rollout reward: 0.
2025-04-11 20:12:48,677 [DEBUG] MCTS iteration 75: Backed up Finish.
2025-04-11 20:12:48,687 [INFO] Final candidates: []
2025-04-11 20:12:48,687 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:48,696 [INFO] Final candidates: []
2025-04-11 20:12:48,696 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:48,696 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(10)), (np.int64(5), np.int64(11)))
2025-04-11 20:12:48,696 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:48,715 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:48,715 [DEBUG] MCTS iteration 76: Rollout reward: 0.
2025-04-11 20:12:48,715 [DEBUG] MCTS iteration 76: Backed up Finish.
2025-04-11 20:12:48,725 [INFO] Final candidates: []
2025-04-11 20:12:48,725 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:48,734 [INFO] Final candidates: []
2025-04-11 20:12:48,734 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:48,734 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(1)), (np.int64(9), np.int64(7)))
2025-04-11 20:12:48,735 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:48,915 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:48,916 [DEBUG] MCTS iteration 77: Rollout reward: 0.
2025-04-11 20:12:48,916 [DEBUG] MCTS iteration 77: Backed up Finish.
2025-04-11 20:12:48,925 [INFO] Final candidates: []
2025-04-11 20:12:48,925 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:48,934 [INFO] Final candidates: []
2025-04-11 20:12:48,934 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:48,934 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(12)), (np.int64(16), np.int64(1)))
2025-04-11 20:12:48,934 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:48,984 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:48,984 [DEBUG] MCTS iteration 78: Rollout reward: 1.
2025-04-11 20:12:48,984 [DEBUG] MCTS iteration 78: Backed up Finish.
2025-04-11 20:12:48,993 [INFO] Final candidates: []
2025-04-11 20:12:48,993 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:49,002 [INFO] Final candidates: []
2025-04-11 20:12:49,002 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:49,002 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(17), np.int64(2)), (np.int64(8), np.int64(8)))
2025-04-11 20:12:49,002 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:49,050 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:49,050 [DEBUG] MCTS iteration 79: Rollout reward: 1.
2025-04-11 20:12:49,050 [DEBUG] MCTS iteration 79: Backed up Finish.
2025-04-11 20:12:49,059 [INFO] Final candidates: []
2025-04-11 20:12:49,059 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:49,068 [INFO] Final candidates: []
2025-04-11 20:12:49,068 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:49,068 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(8)), (np.int64(11), np.int64(12)))
2025-04-11 20:12:49,069 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:49,103 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:49,103 [DEBUG] MCTS iteration 80: Rollout reward: 0.
2025-04-11 20:12:49,103 [DEBUG] MCTS iteration 80: Backed up Finish.
2025-04-11 20:12:49,114 [INFO] Final candidates: []
2025-04-11 20:12:49,114 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:49,123 [INFO] Final candidates: []
2025-04-11 20:12:49,123 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:49,123 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(11)), (np.int64(17), np.int64(2)))
2025-04-11 20:12:49,123 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:49,347 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:49,347 [DEBUG] MCTS iteration 81: Rollout reward: 0.
2025-04-11 20:12:49,347 [DEBUG] MCTS iteration 81: Backed up Finish.
2025-04-11 20:12:49,356 [INFO] Final candidates: []
2025-04-11 20:12:49,356 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:49,365 [INFO] Final candidates: []
2025-04-11 20:12:49,365 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:49,365 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(11)), (np.int64(8), np.int64(8)))
2025-04-11 20:12:49,365 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:49,502 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:49,502 [DEBUG] MCTS iteration 82: Rollout reward: 1.
2025-04-11 20:12:49,502 [DEBUG] MCTS iteration 82: Backed up Finish.
2025-04-11 20:12:49,511 [INFO] Final candidates: []
2025-04-11 20:12:49,511 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:49,520 [INFO] Final candidates: []
2025-04-11 20:12:49,520 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:49,520 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(14)), (np.int64(18), np.int64(0)))
2025-04-11 20:12:49,520 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:49,676 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:49,676 [DEBUG] MCTS iteration 83: Rollout reward: 1.
2025-04-11 20:12:49,676 [DEBUG] MCTS iteration 83: Backed up Finish.
2025-04-11 20:12:49,684 [INFO] Final candidates: []
2025-04-11 20:12:49,684 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:49,693 [INFO] Final candidates: []
2025-04-11 20:12:49,693 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:49,693 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(12)), (np.int64(7), np.int64(9)))
2025-04-11 20:12:49,694 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:49,913 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:49,913 [DEBUG] MCTS iteration 84: Rollout reward: 0.
2025-04-11 20:12:49,913 [DEBUG] MCTS iteration 84: Backed up Finish.
2025-04-11 20:12:49,922 [INFO] Final candidates: []
2025-04-11 20:12:49,922 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:49,931 [INFO] Final candidates: []
2025-04-11 20:12:49,931 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:49,931 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(11)), (np.int64(11), np.int64(12)))
2025-04-11 20:12:49,931 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:50,033 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:50,033 [DEBUG] MCTS iteration 85: Rollout reward: 0.
2025-04-11 20:12:50,033 [DEBUG] MCTS iteration 85: Backed up Finish.
2025-04-11 20:12:50,042 [INFO] Final candidates: []
2025-04-11 20:12:50,042 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:50,051 [INFO] Final candidates: []
2025-04-11 20:12:50,051 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:50,051 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(10)), (np.int64(5), np.int64(11)))
2025-04-11 20:12:50,051 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:50,172 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:50,172 [DEBUG] MCTS iteration 86: Rollout reward: 0.
2025-04-11 20:12:50,172 [DEBUG] MCTS iteration 86: Backed up Finish.
2025-04-11 20:12:50,181 [INFO] Final candidates: []
2025-04-11 20:12:50,181 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:50,190 [INFO] Final candidates: []
2025-04-11 20:12:50,190 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:50,190 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(8)), (np.int64(10), np.int64(11)))
2025-04-11 20:12:50,190 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:50,227 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:50,227 [DEBUG] MCTS iteration 87: Rollout reward: 0.
2025-04-11 20:12:50,227 [DEBUG] MCTS iteration 87: Backed up Finish.
2025-04-11 20:12:50,236 [INFO] Final candidates: []
2025-04-11 20:12:50,236 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:50,246 [INFO] Final candidates: []
2025-04-11 20:12:50,246 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:50,246 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(8)), (np.int64(8), np.int64(7)))
2025-04-11 20:12:50,247 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:50,497 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:50,497 [DEBUG] MCTS iteration 88: Rollout reward: 1.
2025-04-11 20:12:50,497 [DEBUG] MCTS iteration 88: Backed up Finish.
2025-04-11 20:12:50,506 [INFO] Final candidates: []
2025-04-11 20:12:50,506 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:50,515 [INFO] Final candidates: []
2025-04-11 20:12:50,515 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:50,515 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(13)), (np.int64(10), np.int64(10)))
2025-04-11 20:12:50,515 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:50,554 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:50,554 [DEBUG] MCTS iteration 89: Rollout reward: 0.
2025-04-11 20:12:50,554 [DEBUG] MCTS iteration 89: Backed up Finish.
2025-04-11 20:12:50,563 [INFO] Final candidates: []
2025-04-11 20:12:50,563 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:50,572 [INFO] Final candidates: []
2025-04-11 20:12:50,572 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:50,572 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(9)), (np.int64(10), np.int64(10)))
2025-04-11 20:12:50,572 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:50,853 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:50,853 [DEBUG] MCTS iteration 90: Rollout reward: 1.
2025-04-11 20:12:50,853 [DEBUG] MCTS iteration 90: Backed up Finish.
2025-04-11 20:12:50,862 [INFO] Final candidates: []
2025-04-11 20:12:50,862 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:50,871 [INFO] Final candidates: []
2025-04-11 20:12:50,871 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:50,871 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(13)), (np.int64(9), np.int64(7)))
2025-04-11 20:12:50,871 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:51,023 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:51,023 [DEBUG] MCTS iteration 91: Rollout reward: 0.
2025-04-11 20:12:51,023 [DEBUG] MCTS iteration 91: Backed up Finish.
2025-04-11 20:12:51,032 [INFO] Final candidates: []
2025-04-11 20:12:51,032 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:51,041 [INFO] Final candidates: []
2025-04-11 20:12:51,041 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:51,041 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(12)), (np.int64(7), np.int64(13)))
2025-04-11 20:12:51,041 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:51,088 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:51,088 [DEBUG] MCTS iteration 92: Rollout reward: 1.
2025-04-11 20:12:51,088 [DEBUG] MCTS iteration 92: Backed up Finish.
2025-04-11 20:12:51,097 [INFO] Final candidates: []
2025-04-11 20:12:51,097 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:51,106 [INFO] Final candidates: []
2025-04-11 20:12:51,106 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:51,106 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(13)), (np.int64(15), np.int64(0)))
2025-04-11 20:12:51,106 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:51,278 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:51,278 [DEBUG] MCTS iteration 93: Rollout reward: 1.
2025-04-11 20:12:51,278 [DEBUG] MCTS iteration 93: Backed up Finish.
2025-04-11 20:12:51,287 [INFO] Final candidates: []
2025-04-11 20:12:51,287 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:51,296 [INFO] Final candidates: []
2025-04-11 20:12:51,296 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:51,296 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(18), np.int64(1)), (np.int64(11), np.int64(12)))
2025-04-11 20:12:51,297 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:51,492 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:51,492 [DEBUG] MCTS iteration 94: Rollout reward: 0.
2025-04-11 20:12:51,492 [DEBUG] MCTS iteration 94: Backed up Finish.
2025-04-11 20:12:51,501 [INFO] Final candidates: []
2025-04-11 20:12:51,501 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:51,510 [INFO] Final candidates: []
2025-04-11 20:12:51,510 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:51,510 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(18), np.int64(0)), (np.int64(8), np.int64(13)))
2025-04-11 20:12:51,510 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:51,680 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:51,680 [DEBUG] MCTS iteration 95: Rollout reward: 0.
2025-04-11 20:12:51,680 [DEBUG] MCTS iteration 95: Backed up Finish.
2025-04-11 20:12:51,689 [INFO] Final candidates: []
2025-04-11 20:12:51,689 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:51,698 [INFO] Final candidates: []
2025-04-11 20:12:51,698 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:51,698 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(10)), (np.int64(6), np.int64(9)))
2025-04-11 20:12:51,699 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:51,718 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:51,718 [DEBUG] MCTS iteration 96: Rollout reward: 1.
2025-04-11 20:12:51,718 [DEBUG] MCTS iteration 96: Backed up Finish.
2025-04-11 20:12:51,727 [INFO] Final candidates: []
2025-04-11 20:12:51,727 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:51,736 [INFO] Final candidates: []
2025-04-11 20:12:51,736 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:51,736 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(12)), (np.int64(7), np.int64(8)))
2025-04-11 20:12:51,737 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:51,770 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:51,770 [DEBUG] MCTS iteration 97: Rollout reward: 0.
2025-04-11 20:12:51,770 [DEBUG] MCTS iteration 97: Backed up Finish.
2025-04-11 20:12:51,779 [INFO] Final candidates: []
2025-04-11 20:12:51,779 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:51,788 [INFO] Final candidates: []
2025-04-11 20:12:51,788 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:51,788 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(9)), (np.int64(16), np.int64(0)))
2025-04-11 20:12:51,788 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:51,946 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:51,946 [DEBUG] MCTS iteration 98: Rollout reward: 0.
2025-04-11 20:12:51,946 [DEBUG] MCTS iteration 98: Backed up Finish.
2025-04-11 20:12:51,955 [INFO] Final candidates: []
2025-04-11 20:12:51,955 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:51,964 [INFO] Final candidates: []
2025-04-11 20:12:51,964 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:51,964 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(10)), (np.int64(11), np.int64(12)))
2025-04-11 20:12:51,964 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:52,134 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:12:52,134 [DEBUG] MCTS iteration 99: Rollout reward: 1.
2025-04-11 20:12:52,134 [DEBUG] MCTS iteration 99: Backed up Finish.
2025-04-11 20:12:52,134 [INFO] MCTS: Search completed after 100 iterations.
2025-04-11 20:12:52,134 [DEBUG] MCTS: BEST ((np.int64(6), np.int64(10)), (np.int64(11), np.int64(9))) with 1 visits.
2025-04-11 20:12:52,134 [INFO] MCTS: Search finished. Best move selected with 1 visits.
2025-04-11 20:12:52,134 [INFO] MCTS selected move: L7,K12
2025-04-11 20:12:52,135 [INFO] ===============NEW MOVE================
2025-04-11 20:12:56,725 [INFO] Starting pre-MCTS candidate collection.
2025-04-11 20:12:56,734 [INFO] Final candidates: []
2025-04-11 20:12:56,734 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:12:56,741 [DEBUG] board coords: [(3, 15), (4, 14), (5, 13), (6, 12), (7, 11), (8, 10)]
2025-04-11 20:12:56,741 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:12:56,741 [DEBUG] check_window_intermediate_custom: empty_cells=[(3, 15), (5, 13)]
2025-04-11 20:12:56,741 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 0 2 2 2] with coords [(3, 15), (4, 14), (5, 13), (6, 12), (7, 11), (8, 10)] triggers candidate.
2025-04-11 20:12:56,741 [DEBUG] check_window_intermediate_custom: valid_move=[(5, 13)]
2025-04-11 20:12:56,741 [DEBUG] check_window_margin_custom: For L=6, window [0 2 2 2 2 0] with coords [(5, 13), (6, 12), (7, 11), (8, 10), (9, 9), (10, 8)] triggers candidate.
2025-04-11 20:12:56,741 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:12:56,741 [DEBUG] board coords: [(6, 12), (7, 11), (8, 10), (9, 9), (10, 8), (11, 7)]
2025-04-11 20:12:56,741 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:12:56,741 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 8), (11, 7)]
2025-04-11 20:12:56,741 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(6, 12), (7, 11), (8, 10), (9, 9), (10, 8), (11, 7)] triggers candidate.
2025-04-11 20:12:56,741 [DEBUG] check_window_intermediate_custom: valid_move=[(10, 8)]
2025-04-11 20:12:56,742 [DEBUG] board coords: [(3, 15), (4, 14), (5, 13), (6, 12), (7, 11), (8, 10), (9, 9)]
2025-04-11 20:12:56,742 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:12:56,742 [DEBUG] check_window_intermediate_custom: empty_cells=[(3, 15), (5, 13)]
2025-04-11 20:12:56,742 [DEBUG] check_window_intermediate_custom: For L=7, window [0 2 0 2 2 2 2] with coords [(3, 15), (4, 14), (5, 13), (6, 12), (7, 11), (8, 10), (9, 9)] triggers candidate.
2025-04-11 20:12:56,742 [DEBUG] check_window_intermediate_custom: valid_move=[(5, 13)]
2025-04-11 20:12:56,742 [DEBUG] board coords: [(4, 14), (5, 13), (6, 12), (7, 11), (8, 10), (9, 9), (10, 8)]
2025-04-11 20:12:56,742 [DEBUG] board values[np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 20:12:56,742 [DEBUG] check_window_intermediate_custom: empty_cells=[(5, 13), (10, 8)]
2025-04-11 20:12:56,742 [DEBUG] check_window_intermediate_custom: For L=7, window [2 0 2 2 2 2 0] with coords [(4, 14), (5, 13), (6, 12), (7, 11), (8, 10), (9, 9), (10, 8)] triggers candidate.
2025-04-11 20:12:56,742 [DEBUG] check_window_intermediate_custom: valid_move=[(5, 13)]
2025-04-11 20:12:56,743 [INFO] Final candidates: [(10, 8), (5, 13)]
2025-04-11 20:12:56,743 [INFO] Phase defense: Collected 1unique candidate(s):[((10, 8), (5, 13))]
2025-04-11 20:12:56,743 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 20:12:56,743 [INFO] MCTS: Starting search for 100 iterations.
2025-04-11 20:12:56,750 [DEBUG] board coords: [(3, 15), (4, 14), (5, 13), (6, 12), (7, 11), (8, 10)]
2025-04-11 20:12:56,750 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:12:56,750 [DEBUG] check_window_intermediate_custom: empty_cells=[(3, 15), (5, 13)]
2025-04-11 20:12:56,750 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 0 2 2 2] with coords [(3, 15), (4, 14), (5, 13), (6, 12), (7, 11), (8, 10)] triggers candidate.
2025-04-11 20:12:56,750 [DEBUG] check_window_margin_custom: For L=6, window [0 2 2 2 2 0] with coords [(5, 13), (6, 12), (7, 11), (8, 10), (9, 9), (10, 8)] triggers candidate.
2025-04-11 20:12:56,750 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:12:56,750 [DEBUG] board coords: [(6, 12), (7, 11), (8, 10), (9, 9), (10, 8), (11, 7)]
2025-04-11 20:12:56,750 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:12:56,750 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 8), (11, 7)]
2025-04-11 20:12:56,750 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(6, 12), (7, 11), (8, 10), (9, 9), (10, 8), (11, 7)] triggers candidate.
2025-04-11 20:12:56,751 [DEBUG] board coords: [(3, 15), (4, 14), (5, 13), (6, 12), (7, 11), (8, 10), (9, 9)]
2025-04-11 20:12:56,751 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:12:56,751 [DEBUG] check_window_intermediate_custom: empty_cells=[(3, 15), (5, 13)]
2025-04-11 20:12:56,751 [DEBUG] check_window_intermediate_custom: For L=7, window [0 2 0 2 2 2 2] with coords [(3, 15), (4, 14), (5, 13), (6, 12), (7, 11), (8, 10), (9, 9)] triggers candidate.
2025-04-11 20:12:56,751 [DEBUG] board coords: [(4, 14), (5, 13), (6, 12), (7, 11), (8, 10), (9, 9), (10, 8)]
2025-04-11 20:12:56,751 [DEBUG] board values[np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 20:12:56,751 [DEBUG] check_window_intermediate_custom: empty_cells=[(5, 13), (10, 8)]
2025-04-11 20:12:56,751 [DEBUG] check_window_intermediate_custom: For L=7, window [2 0 2 2 2 2 0] with coords [(4, 14), (5, 13), (6, 12), (7, 11), (8, 10), (9, 9), (10, 8)] triggers candidate.
2025-04-11 20:12:56,752 [INFO] Final candidates: [(11, 7), (3, 15), (10, 8), (5, 13)]
2025-04-11 20:12:56,752 [INFO] Phase win: Collected 6unique candidate(s):[((11, 7), (3, 15)), ((11, 7), (5, 13)), ((3, 15), (5, 13)), ((11, 7), (10, 8)), ((3, 15), (10, 8)), ((10, 8), (5, 13))]
2025-04-11 20:12:56,761 [INFO] Final candidates: []
2025-04-11 20:12:56,761 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:12:56,761 [DEBUG] Tree_policy iteration 1: Expanding move ((10, 8), (5, 13))
2025-04-11 20:12:56,761 [DEBUG] MCTS iteration 0: reached a node with 0 visits.
2025-04-11 20:12:56,761 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,761 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,761 [DEBUG] MCTS iteration 0: Rollout reward: 1.
2025-04-11 20:12:56,761 [DEBUG] MCTS iteration 0: Backed up Finish.
2025-04-11 20:12:56,761 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,761 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,761 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,761 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,761 [DEBUG] MCTS iteration 1: Rollout reward: 1.
2025-04-11 20:12:56,761 [DEBUG] MCTS iteration 1: Backed up Finish.
2025-04-11 20:12:56,762 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,762 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,762 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,762 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,762 [DEBUG] MCTS iteration 2: Rollout reward: 1.
2025-04-11 20:12:56,762 [DEBUG] MCTS iteration 2: Backed up Finish.
2025-04-11 20:12:56,762 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,762 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,762 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,762 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,762 [DEBUG] MCTS iteration 3: Rollout reward: 1.
2025-04-11 20:12:56,762 [DEBUG] MCTS iteration 3: Backed up Finish.
2025-04-11 20:12:56,762 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,762 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,762 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,762 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,762 [DEBUG] MCTS iteration 4: Rollout reward: 1.
2025-04-11 20:12:56,762 [DEBUG] MCTS iteration 4: Backed up Finish.
2025-04-11 20:12:56,762 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,762 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,762 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,762 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,762 [DEBUG] MCTS iteration 5: Rollout reward: 1.
2025-04-11 20:12:56,762 [DEBUG] MCTS iteration 5: Backed up Finish.
2025-04-11 20:12:56,762 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,762 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,762 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,762 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,762 [DEBUG] MCTS iteration 6: Rollout reward: 1.
2025-04-11 20:12:56,762 [DEBUG] MCTS iteration 6: Backed up Finish.
2025-04-11 20:12:56,762 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,762 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,763 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,763 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,763 [DEBUG] MCTS iteration 7: Rollout reward: 1.
2025-04-11 20:12:56,763 [DEBUG] MCTS iteration 7: Backed up Finish.
2025-04-11 20:12:56,763 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,763 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,763 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,763 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,763 [DEBUG] MCTS iteration 8: Rollout reward: 1.
2025-04-11 20:12:56,763 [DEBUG] MCTS iteration 8: Backed up Finish.
2025-04-11 20:12:56,763 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,763 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,763 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,763 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,763 [DEBUG] MCTS iteration 9: Rollout reward: 1.
2025-04-11 20:12:56,763 [DEBUG] MCTS iteration 9: Backed up Finish.
2025-04-11 20:12:56,763 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,763 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,763 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,763 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,763 [DEBUG] MCTS iteration 10: Rollout reward: 1.
2025-04-11 20:12:56,763 [DEBUG] MCTS iteration 10: Backed up Finish.
2025-04-11 20:12:56,763 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,763 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,763 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,763 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,763 [DEBUG] MCTS iteration 11: Rollout reward: 1.
2025-04-11 20:12:56,763 [DEBUG] MCTS iteration 11: Backed up Finish.
2025-04-11 20:12:56,763 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,763 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,763 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,763 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,763 [DEBUG] MCTS iteration 12: Rollout reward: 1.
2025-04-11 20:12:56,763 [DEBUG] MCTS iteration 12: Backed up Finish.
2025-04-11 20:12:56,763 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,764 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,764 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,764 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,764 [DEBUG] MCTS iteration 13: Rollout reward: 1.
2025-04-11 20:12:56,764 [DEBUG] MCTS iteration 13: Backed up Finish.
2025-04-11 20:12:56,764 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,764 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,764 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,764 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,764 [DEBUG] MCTS iteration 14: Rollout reward: 1.
2025-04-11 20:12:56,764 [DEBUG] MCTS iteration 14: Backed up Finish.
2025-04-11 20:12:56,764 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,764 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,764 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,764 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,764 [DEBUG] MCTS iteration 15: Rollout reward: 1.
2025-04-11 20:12:56,764 [DEBUG] MCTS iteration 15: Backed up Finish.
2025-04-11 20:12:56,764 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,764 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,764 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,764 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,764 [DEBUG] MCTS iteration 16: Rollout reward: 1.
2025-04-11 20:12:56,764 [DEBUG] MCTS iteration 16: Backed up Finish.
2025-04-11 20:12:56,764 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,764 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,764 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,764 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,764 [DEBUG] MCTS iteration 17: Rollout reward: 1.
2025-04-11 20:12:56,764 [DEBUG] MCTS iteration 17: Backed up Finish.
2025-04-11 20:12:56,764 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,764 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,764 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,764 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,764 [DEBUG] MCTS iteration 18: Rollout reward: 1.
2025-04-11 20:12:56,764 [DEBUG] MCTS iteration 18: Backed up Finish.
2025-04-11 20:12:56,765 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,765 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,765 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,765 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,765 [DEBUG] MCTS iteration 19: Rollout reward: 1.
2025-04-11 20:12:56,765 [DEBUG] MCTS iteration 19: Backed up Finish.
2025-04-11 20:12:56,765 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,765 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,765 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,765 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,765 [DEBUG] MCTS iteration 20: Rollout reward: 1.
2025-04-11 20:12:56,765 [DEBUG] MCTS iteration 20: Backed up Finish.
2025-04-11 20:12:56,765 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,765 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,765 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,765 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,765 [DEBUG] MCTS iteration 21: Rollout reward: 1.
2025-04-11 20:12:56,765 [DEBUG] MCTS iteration 21: Backed up Finish.
2025-04-11 20:12:56,765 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,765 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,765 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,765 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,765 [DEBUG] MCTS iteration 22: Rollout reward: 1.
2025-04-11 20:12:56,765 [DEBUG] MCTS iteration 22: Backed up Finish.
2025-04-11 20:12:56,765 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,765 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,765 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,765 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,765 [DEBUG] MCTS iteration 23: Rollout reward: 1.
2025-04-11 20:12:56,765 [DEBUG] MCTS iteration 23: Backed up Finish.
2025-04-11 20:12:56,765 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,765 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,765 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,765 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,766 [DEBUG] MCTS iteration 24: Rollout reward: 1.
2025-04-11 20:12:56,766 [DEBUG] MCTS iteration 24: Backed up Finish.
2025-04-11 20:12:56,766 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,766 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,766 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,766 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,766 [DEBUG] MCTS iteration 25: Rollout reward: 1.
2025-04-11 20:12:56,766 [DEBUG] MCTS iteration 25: Backed up Finish.
2025-04-11 20:12:56,766 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,766 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,766 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,766 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,766 [DEBUG] MCTS iteration 26: Rollout reward: 1.
2025-04-11 20:12:56,766 [DEBUG] MCTS iteration 26: Backed up Finish.
2025-04-11 20:12:56,766 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,766 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,766 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,766 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,766 [DEBUG] MCTS iteration 27: Rollout reward: 1.
2025-04-11 20:12:56,766 [DEBUG] MCTS iteration 27: Backed up Finish.
2025-04-11 20:12:56,766 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,766 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,766 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,766 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,766 [DEBUG] MCTS iteration 28: Rollout reward: 1.
2025-04-11 20:12:56,766 [DEBUG] MCTS iteration 28: Backed up Finish.
2025-04-11 20:12:56,766 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,766 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,766 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,766 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,766 [DEBUG] MCTS iteration 29: Rollout reward: 1.
2025-04-11 20:12:56,766 [DEBUG] MCTS iteration 29: Backed up Finish.
2025-04-11 20:12:56,766 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,766 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,766 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,767 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,767 [DEBUG] MCTS iteration 30: Rollout reward: 1.
2025-04-11 20:12:56,767 [DEBUG] MCTS iteration 30: Backed up Finish.
2025-04-11 20:12:56,767 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,767 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,767 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,767 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,767 [DEBUG] MCTS iteration 31: Rollout reward: 1.
2025-04-11 20:12:56,767 [DEBUG] MCTS iteration 31: Backed up Finish.
2025-04-11 20:12:56,767 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,767 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,767 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,767 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,767 [DEBUG] MCTS iteration 32: Rollout reward: 1.
2025-04-11 20:12:56,767 [DEBUG] MCTS iteration 32: Backed up Finish.
2025-04-11 20:12:56,767 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,767 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,767 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,767 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,767 [DEBUG] MCTS iteration 33: Rollout reward: 1.
2025-04-11 20:12:56,767 [DEBUG] MCTS iteration 33: Backed up Finish.
2025-04-11 20:12:56,767 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,767 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,767 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,767 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,767 [DEBUG] MCTS iteration 34: Rollout reward: 1.
2025-04-11 20:12:56,767 [DEBUG] MCTS iteration 34: Backed up Finish.
2025-04-11 20:12:56,767 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,767 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,767 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,767 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,767 [DEBUG] MCTS iteration 35: Rollout reward: 1.
2025-04-11 20:12:56,767 [DEBUG] MCTS iteration 35: Backed up Finish.
2025-04-11 20:12:56,767 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,767 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,768 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,768 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,768 [DEBUG] MCTS iteration 36: Rollout reward: 1.
2025-04-11 20:12:56,768 [DEBUG] MCTS iteration 36: Backed up Finish.
2025-04-11 20:12:56,768 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,768 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,768 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,768 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,768 [DEBUG] MCTS iteration 37: Rollout reward: 1.
2025-04-11 20:12:56,768 [DEBUG] MCTS iteration 37: Backed up Finish.
2025-04-11 20:12:56,768 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,768 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,768 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,768 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,768 [DEBUG] MCTS iteration 38: Rollout reward: 1.
2025-04-11 20:12:56,768 [DEBUG] MCTS iteration 38: Backed up Finish.
2025-04-11 20:12:56,768 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,768 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,768 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,768 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,768 [DEBUG] MCTS iteration 39: Rollout reward: 1.
2025-04-11 20:12:56,768 [DEBUG] MCTS iteration 39: Backed up Finish.
2025-04-11 20:12:56,768 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,768 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,768 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,768 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,768 [DEBUG] MCTS iteration 40: Rollout reward: 1.
2025-04-11 20:12:56,768 [DEBUG] MCTS iteration 40: Backed up Finish.
2025-04-11 20:12:56,768 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,768 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,768 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,768 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,768 [DEBUG] MCTS iteration 41: Rollout reward: 1.
2025-04-11 20:12:56,768 [DEBUG] MCTS iteration 41: Backed up Finish.
2025-04-11 20:12:56,768 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,769 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,769 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,769 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,769 [DEBUG] MCTS iteration 42: Rollout reward: 1.
2025-04-11 20:12:56,769 [DEBUG] MCTS iteration 42: Backed up Finish.
2025-04-11 20:12:56,769 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,769 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,769 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,769 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,769 [DEBUG] MCTS iteration 43: Rollout reward: 1.
2025-04-11 20:12:56,769 [DEBUG] MCTS iteration 43: Backed up Finish.
2025-04-11 20:12:56,769 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,769 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,769 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,769 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,769 [DEBUG] MCTS iteration 44: Rollout reward: 1.
2025-04-11 20:12:56,769 [DEBUG] MCTS iteration 44: Backed up Finish.
2025-04-11 20:12:56,769 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,769 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,769 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,769 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,769 [DEBUG] MCTS iteration 45: Rollout reward: 1.
2025-04-11 20:12:56,769 [DEBUG] MCTS iteration 45: Backed up Finish.
2025-04-11 20:12:56,769 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,769 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,769 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,769 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,769 [DEBUG] MCTS iteration 46: Rollout reward: 1.
2025-04-11 20:12:56,769 [DEBUG] MCTS iteration 46: Backed up Finish.
2025-04-11 20:12:56,769 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,769 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,769 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,769 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,769 [DEBUG] MCTS iteration 47: Rollout reward: 1.
2025-04-11 20:12:56,769 [DEBUG] MCTS iteration 47: Backed up Finish.
2025-04-11 20:12:56,770 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,770 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,770 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,770 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,770 [DEBUG] MCTS iteration 48: Rollout reward: 1.
2025-04-11 20:12:56,770 [DEBUG] MCTS iteration 48: Backed up Finish.
2025-04-11 20:12:56,770 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,770 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,770 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,770 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,770 [DEBUG] MCTS iteration 49: Rollout reward: 1.
2025-04-11 20:12:56,770 [DEBUG] MCTS iteration 49: Backed up Finish.
2025-04-11 20:12:56,770 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,770 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,770 [DEBUG] MCTS iteration 50: reached a node with 50 visits.
2025-04-11 20:12:56,770 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,770 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,770 [DEBUG] MCTS iteration 50: Rollout reward: 1.
2025-04-11 20:12:56,770 [DEBUG] MCTS iteration 50: Backed up Finish.
2025-04-11 20:12:56,770 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,770 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,770 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,770 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,770 [DEBUG] MCTS iteration 51: Rollout reward: 1.
2025-04-11 20:12:56,770 [DEBUG] MCTS iteration 51: Backed up Finish.
2025-04-11 20:12:56,770 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,770 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,770 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,770 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,770 [DEBUG] MCTS iteration 52: Rollout reward: 1.
2025-04-11 20:12:56,770 [DEBUG] MCTS iteration 52: Backed up Finish.
2025-04-11 20:12:56,770 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,770 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,770 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,770 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,770 [DEBUG] MCTS iteration 53: Rollout reward: 1.
2025-04-11 20:12:56,770 [DEBUG] MCTS iteration 53: Backed up Finish.
2025-04-11 20:12:56,771 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,771 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,771 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,771 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,771 [DEBUG] MCTS iteration 54: Rollout reward: 1.
2025-04-11 20:12:56,771 [DEBUG] MCTS iteration 54: Backed up Finish.
2025-04-11 20:12:56,771 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,771 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,771 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,771 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,771 [DEBUG] MCTS iteration 55: Rollout reward: 1.
2025-04-11 20:12:56,771 [DEBUG] MCTS iteration 55: Backed up Finish.
2025-04-11 20:12:56,771 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,771 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,771 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,771 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,771 [DEBUG] MCTS iteration 56: Rollout reward: 1.
2025-04-11 20:12:56,771 [DEBUG] MCTS iteration 56: Backed up Finish.
2025-04-11 20:12:56,771 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,771 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,771 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,771 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,771 [DEBUG] MCTS iteration 57: Rollout reward: 1.
2025-04-11 20:12:56,771 [DEBUG] MCTS iteration 57: Backed up Finish.
2025-04-11 20:12:56,771 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,771 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,771 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,771 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,771 [DEBUG] MCTS iteration 58: Rollout reward: 1.
2025-04-11 20:12:56,771 [DEBUG] MCTS iteration 58: Backed up Finish.
2025-04-11 20:12:56,771 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,771 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,771 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,772 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,772 [DEBUG] MCTS iteration 59: Rollout reward: 1.
2025-04-11 20:12:56,772 [DEBUG] MCTS iteration 59: Backed up Finish.
2025-04-11 20:12:56,772 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,772 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,772 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,772 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,772 [DEBUG] MCTS iteration 60: Rollout reward: 1.
2025-04-11 20:12:56,772 [DEBUG] MCTS iteration 60: Backed up Finish.
2025-04-11 20:12:56,772 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,772 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,772 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,772 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,772 [DEBUG] MCTS iteration 61: Rollout reward: 1.
2025-04-11 20:12:56,772 [DEBUG] MCTS iteration 61: Backed up Finish.
2025-04-11 20:12:56,772 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,772 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,772 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,772 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,772 [DEBUG] MCTS iteration 62: Rollout reward: 1.
2025-04-11 20:12:56,772 [DEBUG] MCTS iteration 62: Backed up Finish.
2025-04-11 20:12:56,772 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,772 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,772 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,772 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,772 [DEBUG] MCTS iteration 63: Rollout reward: 1.
2025-04-11 20:12:56,772 [DEBUG] MCTS iteration 63: Backed up Finish.
2025-04-11 20:12:56,772 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,772 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,772 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,772 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,772 [DEBUG] MCTS iteration 64: Rollout reward: 1.
2025-04-11 20:12:56,772 [DEBUG] MCTS iteration 64: Backed up Finish.
2025-04-11 20:12:56,772 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,773 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,773 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,773 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,773 [DEBUG] MCTS iteration 65: Rollout reward: 1.
2025-04-11 20:12:56,773 [DEBUG] MCTS iteration 65: Backed up Finish.
2025-04-11 20:12:56,773 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,773 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,773 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,773 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,773 [DEBUG] MCTS iteration 66: Rollout reward: 1.
2025-04-11 20:12:56,773 [DEBUG] MCTS iteration 66: Backed up Finish.
2025-04-11 20:12:56,773 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,773 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,773 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,773 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,773 [DEBUG] MCTS iteration 67: Rollout reward: 1.
2025-04-11 20:12:56,773 [DEBUG] MCTS iteration 67: Backed up Finish.
2025-04-11 20:12:56,773 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,773 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,773 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,773 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,773 [DEBUG] MCTS iteration 68: Rollout reward: 1.
2025-04-11 20:12:56,773 [DEBUG] MCTS iteration 68: Backed up Finish.
2025-04-11 20:12:56,773 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,773 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,773 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,773 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,773 [DEBUG] MCTS iteration 69: Rollout reward: 1.
2025-04-11 20:12:56,773 [DEBUG] MCTS iteration 69: Backed up Finish.
2025-04-11 20:12:56,773 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,773 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,773 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,773 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,773 [DEBUG] MCTS iteration 70: Rollout reward: 1.
2025-04-11 20:12:56,773 [DEBUG] MCTS iteration 70: Backed up Finish.
2025-04-11 20:12:56,774 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,774 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,774 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,774 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,774 [DEBUG] MCTS iteration 71: Rollout reward: 1.
2025-04-11 20:12:56,774 [DEBUG] MCTS iteration 71: Backed up Finish.
2025-04-11 20:12:56,774 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,774 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,774 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,774 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,774 [DEBUG] MCTS iteration 72: Rollout reward: 1.
2025-04-11 20:12:56,774 [DEBUG] MCTS iteration 72: Backed up Finish.
2025-04-11 20:12:56,774 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,774 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,774 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,774 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,774 [DEBUG] MCTS iteration 73: Rollout reward: 1.
2025-04-11 20:12:56,774 [DEBUG] MCTS iteration 73: Backed up Finish.
2025-04-11 20:12:56,774 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,774 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,774 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,774 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,775 [DEBUG] MCTS iteration 74: Rollout reward: 1.
2025-04-11 20:12:56,775 [DEBUG] MCTS iteration 74: Backed up Finish.
2025-04-11 20:12:56,775 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,775 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,775 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,775 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,775 [DEBUG] MCTS iteration 75: Rollout reward: 1.
2025-04-11 20:12:56,775 [DEBUG] MCTS iteration 75: Backed up Finish.
2025-04-11 20:12:56,775 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,775 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,775 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,775 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,775 [DEBUG] MCTS iteration 76: Rollout reward: 1.
2025-04-11 20:12:56,775 [DEBUG] MCTS iteration 76: Backed up Finish.
2025-04-11 20:12:56,775 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,775 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,775 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,775 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,775 [DEBUG] MCTS iteration 77: Rollout reward: 1.
2025-04-11 20:12:56,775 [DEBUG] MCTS iteration 77: Backed up Finish.
2025-04-11 20:12:56,775 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,775 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,775 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,775 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,775 [DEBUG] MCTS iteration 78: Rollout reward: 1.
2025-04-11 20:12:56,775 [DEBUG] MCTS iteration 78: Backed up Finish.
2025-04-11 20:12:56,775 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,776 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,776 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,776 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,776 [DEBUG] MCTS iteration 79: Rollout reward: 1.
2025-04-11 20:12:56,776 [DEBUG] MCTS iteration 79: Backed up Finish.
2025-04-11 20:12:56,776 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,776 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,776 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,776 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,776 [DEBUG] MCTS iteration 80: Rollout reward: 1.
2025-04-11 20:12:56,776 [DEBUG] MCTS iteration 80: Backed up Finish.
2025-04-11 20:12:56,776 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,776 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,776 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,776 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,776 [DEBUG] MCTS iteration 81: Rollout reward: 1.
2025-04-11 20:12:56,776 [DEBUG] MCTS iteration 81: Backed up Finish.
2025-04-11 20:12:56,776 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,776 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,776 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,776 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,776 [DEBUG] MCTS iteration 82: Rollout reward: 1.
2025-04-11 20:12:56,776 [DEBUG] MCTS iteration 82: Backed up Finish.
2025-04-11 20:12:56,776 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,776 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,776 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,776 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,776 [DEBUG] MCTS iteration 83: Rollout reward: 1.
2025-04-11 20:12:56,776 [DEBUG] MCTS iteration 83: Backed up Finish.
2025-04-11 20:12:56,776 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,776 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,776 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,776 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,776 [DEBUG] MCTS iteration 84: Rollout reward: 1.
2025-04-11 20:12:56,776 [DEBUG] MCTS iteration 84: Backed up Finish.
2025-04-11 20:12:56,777 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,777 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,777 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,777 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,777 [DEBUG] MCTS iteration 85: Rollout reward: 1.
2025-04-11 20:12:56,777 [DEBUG] MCTS iteration 85: Backed up Finish.
2025-04-11 20:12:56,777 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,777 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,777 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,777 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,777 [DEBUG] MCTS iteration 86: Rollout reward: 1.
2025-04-11 20:12:56,777 [DEBUG] MCTS iteration 86: Backed up Finish.
2025-04-11 20:12:56,777 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,777 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,777 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,777 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,777 [DEBUG] MCTS iteration 87: Rollout reward: 1.
2025-04-11 20:12:56,777 [DEBUG] MCTS iteration 87: Backed up Finish.
2025-04-11 20:12:56,777 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,777 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,777 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,777 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,777 [DEBUG] MCTS iteration 88: Rollout reward: 1.
2025-04-11 20:12:56,777 [DEBUG] MCTS iteration 88: Backed up Finish.
2025-04-11 20:12:56,777 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,777 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,777 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,777 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,777 [DEBUG] MCTS iteration 89: Rollout reward: 1.
2025-04-11 20:12:56,777 [DEBUG] MCTS iteration 89: Backed up Finish.
2025-04-11 20:12:56,777 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,777 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,777 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,777 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,777 [DEBUG] MCTS iteration 90: Rollout reward: 1.
2025-04-11 20:12:56,777 [DEBUG] MCTS iteration 90: Backed up Finish.
2025-04-11 20:12:56,778 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,778 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,778 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,778 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,778 [DEBUG] MCTS iteration 91: Rollout reward: 1.
2025-04-11 20:12:56,778 [DEBUG] MCTS iteration 91: Backed up Finish.
2025-04-11 20:12:56,778 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,778 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,778 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,778 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,778 [DEBUG] MCTS iteration 92: Rollout reward: 1.
2025-04-11 20:12:56,778 [DEBUG] MCTS iteration 92: Backed up Finish.
2025-04-11 20:12:56,778 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,778 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,778 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,778 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,778 [DEBUG] MCTS iteration 93: Rollout reward: 1.
2025-04-11 20:12:56,778 [DEBUG] MCTS iteration 93: Backed up Finish.
2025-04-11 20:12:56,778 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,778 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,778 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,778 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,778 [DEBUG] MCTS iteration 94: Rollout reward: 1.
2025-04-11 20:12:56,778 [DEBUG] MCTS iteration 94: Backed up Finish.
2025-04-11 20:12:56,778 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,778 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,778 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,778 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,778 [DEBUG] MCTS iteration 95: Rollout reward: 1.
2025-04-11 20:12:56,778 [DEBUG] MCTS iteration 95: Backed up Finish.
2025-04-11 20:12:56,778 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,778 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,778 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,778 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,779 [DEBUG] MCTS iteration 96: Rollout reward: 1.
2025-04-11 20:12:56,779 [DEBUG] MCTS iteration 96: Backed up Finish.
2025-04-11 20:12:56,779 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,779 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,779 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,779 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,779 [DEBUG] MCTS iteration 97: Rollout reward: 1.
2025-04-11 20:12:56,779 [DEBUG] MCTS iteration 97: Backed up Finish.
2025-04-11 20:12:56,779 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,779 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,779 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,779 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,779 [DEBUG] MCTS iteration 98: Rollout reward: 1.
2025-04-11 20:12:56,779 [DEBUG] MCTS iteration 98: Backed up Finish.
2025-04-11 20:12:56,779 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:12:56,779 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:12:56,779 [INFO] Default policy: Starting random playout.
2025-04-11 20:12:56,779 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:12:56,779 [DEBUG] MCTS iteration 99: Rollout reward: 1.
2025-04-11 20:12:56,779 [DEBUG] MCTS iteration 99: Backed up Finish.
2025-04-11 20:12:56,779 [INFO] MCTS: Search completed after 100 iterations.
2025-04-11 20:12:56,779 [DEBUG] MCTS: BEST ((10, 8), (5, 13)) with 100 visits.
2025-04-11 20:12:56,779 [INFO] MCTS: Search finished. Best move selected with 100 visits.
2025-04-11 20:12:56,779 [INFO] Phase 2 (defense): MCTS selected move: ((10, 8), (5, 13))
2025-04-11 20:12:56,779 [INFO] Phase 2 (defense): MCTS selected move string : J11,O6
2025-04-11 20:12:56,779 [INFO] MCTS (defense candidates) selected move: J11,O6
2025-04-11 20:13:01,209 [INFO] Starting pre-MCTS candidate collection.
2025-04-11 20:13:01,217 [INFO] Final candidates: []
2025-04-11 20:13:01,217 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:01,225 [INFO] Final candidates: []
2025-04-11 20:13:01,225 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:01,225 [INFO] No candidate found in Phase 1 or 2; using full legal moves for MCTS.
2025-04-11 20:13:01,226 [INFO] MCTS: Starting search for 100 iterations.
2025-04-11 20:13:01,234 [INFO] Final candidates: []
2025-04-11 20:13:01,234 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:01,243 [INFO] Final candidates: []
2025-04-11 20:13:01,243 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:01,243 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(9)), (np.int64(4), np.int64(16)))
2025-04-11 20:13:01,243 [DEBUG] MCTS iteration 0: reached a node with 0 visits.
2025-04-11 20:13:01,243 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:01,362 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:01,362 [DEBUG] MCTS iteration 0: Rollout reward: 1.
2025-04-11 20:13:01,362 [DEBUG] MCTS iteration 0: Backed up Finish.
2025-04-11 20:13:01,370 [INFO] Final candidates: []
2025-04-11 20:13:01,370 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:01,378 [INFO] Final candidates: []
2025-04-11 20:13:01,378 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:01,379 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(13)), (np.int64(7), np.int64(8)))
2025-04-11 20:13:01,379 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:01,423 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:01,423 [DEBUG] MCTS iteration 1: Rollout reward: 1.
2025-04-11 20:13:01,423 [DEBUG] MCTS iteration 1: Backed up Finish.
2025-04-11 20:13:01,431 [INFO] Final candidates: []
2025-04-11 20:13:01,432 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:01,440 [INFO] Final candidates: []
2025-04-11 20:13:01,440 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:01,440 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(10)), (np.int64(5), np.int64(11)))
2025-04-11 20:13:01,440 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:01,539 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:01,539 [DEBUG] MCTS iteration 2: Rollout reward: 1.
2025-04-11 20:13:01,539 [DEBUG] MCTS iteration 2: Backed up Finish.
2025-04-11 20:13:01,548 [INFO] Final candidates: []
2025-04-11 20:13:01,548 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:01,556 [INFO] Final candidates: []
2025-04-11 20:13:01,556 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:01,556 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(11)), (np.int64(16), np.int64(11)))
2025-04-11 20:13:01,557 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:01,743 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:01,743 [DEBUG] MCTS iteration 3: Rollout reward: 0.
2025-04-11 20:13:01,743 [DEBUG] MCTS iteration 3: Backed up Finish.
2025-04-11 20:13:01,751 [INFO] Final candidates: []
2025-04-11 20:13:01,751 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:01,759 [INFO] Final candidates: []
2025-04-11 20:13:01,759 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:01,759 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(7)), (np.int64(16), np.int64(11)))
2025-04-11 20:13:01,760 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:01,836 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:01,837 [DEBUG] MCTS iteration 4: Rollout reward: 0.
2025-04-11 20:13:01,837 [DEBUG] MCTS iteration 4: Backed up Finish.
2025-04-11 20:13:01,845 [INFO] Final candidates: []
2025-04-11 20:13:01,845 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:01,853 [INFO] Final candidates: []
2025-04-11 20:13:01,853 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:01,853 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(9)), (np.int64(10), np.int64(11)))
2025-04-11 20:13:01,854 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:01,979 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:01,979 [DEBUG] MCTS iteration 5: Rollout reward: 0.
2025-04-11 20:13:01,979 [DEBUG] MCTS iteration 5: Backed up Finish.
2025-04-11 20:13:01,988 [INFO] Final candidates: []
2025-04-11 20:13:01,988 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:01,996 [INFO] Final candidates: []
2025-04-11 20:13:01,996 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:01,996 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(12)), (np.int64(6), np.int64(13)))
2025-04-11 20:13:01,996 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:02,242 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:02,243 [DEBUG] MCTS iteration 6: Rollout reward: 1.
2025-04-11 20:13:02,243 [DEBUG] MCTS iteration 6: Backed up Finish.
2025-04-11 20:13:02,251 [INFO] Final candidates: []
2025-04-11 20:13:02,251 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:02,261 [INFO] Final candidates: []
2025-04-11 20:13:02,261 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:02,261 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(14)), (np.int64(7), np.int64(9)))
2025-04-11 20:13:02,262 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:02,280 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:02,281 [DEBUG] MCTS iteration 7: Rollout reward: 0.
2025-04-11 20:13:02,281 [DEBUG] MCTS iteration 7: Backed up Finish.
2025-04-11 20:13:02,291 [INFO] Final candidates: []
2025-04-11 20:13:02,291 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:02,299 [INFO] Final candidates: []
2025-04-11 20:13:02,299 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:02,299 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(18), np.int64(1)), (np.int64(7), np.int64(10)))
2025-04-11 20:13:02,300 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:02,553 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:02,553 [DEBUG] MCTS iteration 8: Rollout reward: 0.
2025-04-11 20:13:02,553 [DEBUG] MCTS iteration 8: Backed up Finish.
2025-04-11 20:13:02,562 [INFO] Final candidates: []
2025-04-11 20:13:02,562 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:02,570 [INFO] Final candidates: []
2025-04-11 20:13:02,570 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:02,570 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(9)), (np.int64(6), np.int64(9)))
2025-04-11 20:13:02,571 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:02,778 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:02,778 [DEBUG] MCTS iteration 9: Rollout reward: 1.
2025-04-11 20:13:02,778 [DEBUG] MCTS iteration 9: Backed up Finish.
2025-04-11 20:13:02,787 [INFO] Final candidates: []
2025-04-11 20:13:02,787 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:02,795 [INFO] Final candidates: []
2025-04-11 20:13:02,795 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:02,795 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(10)), (np.int64(14), np.int64(8)))
2025-04-11 20:13:02,795 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:03,017 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:03,017 [DEBUG] MCTS iteration 10: Rollout reward: 1.
2025-04-11 20:13:03,017 [DEBUG] MCTS iteration 10: Backed up Finish.
2025-04-11 20:13:03,026 [INFO] Final candidates: []
2025-04-11 20:13:03,026 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:03,034 [INFO] Final candidates: []
2025-04-11 20:13:03,034 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:03,034 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(17), np.int64(9)), (np.int64(9), np.int64(7)))
2025-04-11 20:13:03,036 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:03,127 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:03,127 [DEBUG] MCTS iteration 11: Rollout reward: 0.
2025-04-11 20:13:03,127 [DEBUG] MCTS iteration 11: Backed up Finish.
2025-04-11 20:13:03,135 [INFO] Final candidates: []
2025-04-11 20:13:03,135 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:03,145 [INFO] Final candidates: []
2025-04-11 20:13:03,145 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:03,145 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(9)), (np.int64(15), np.int64(12)))
2025-04-11 20:13:03,146 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:03,346 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:03,346 [DEBUG] MCTS iteration 12: Rollout reward: 0.
2025-04-11 20:13:03,346 [DEBUG] MCTS iteration 12: Backed up Finish.
2025-04-11 20:13:03,357 [INFO] Final candidates: []
2025-04-11 20:13:03,357 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:03,365 [INFO] Final candidates: []
2025-04-11 20:13:03,365 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:03,365 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(12)), (np.int64(7), np.int64(10)))
2025-04-11 20:13:03,365 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:03,444 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:03,444 [DEBUG] MCTS iteration 13: Rollout reward: 0.
2025-04-11 20:13:03,444 [DEBUG] MCTS iteration 13: Backed up Finish.
2025-04-11 20:13:03,453 [INFO] Final candidates: []
2025-04-11 20:13:03,453 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:03,461 [INFO] Final candidates: []
2025-04-11 20:13:03,461 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:03,461 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(10)), (np.int64(3), np.int64(14)))
2025-04-11 20:13:03,461 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:03,543 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:03,543 [DEBUG] MCTS iteration 14: Rollout reward: 1.
2025-04-11 20:13:03,543 [DEBUG] MCTS iteration 14: Backed up Finish.
2025-04-11 20:13:03,551 [INFO] Final candidates: []
2025-04-11 20:13:03,551 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:03,559 [INFO] Final candidates: []
2025-04-11 20:13:03,559 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:03,559 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(10)), (np.int64(15), np.int64(12)))
2025-04-11 20:13:03,560 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:03,909 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:03,909 [DEBUG] MCTS iteration 15: Rollout reward: 1.
2025-04-11 20:13:03,909 [DEBUG] MCTS iteration 15: Backed up Finish.
2025-04-11 20:13:03,918 [INFO] Final candidates: []
2025-04-11 20:13:03,918 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:03,926 [INFO] Final candidates: []
2025-04-11 20:13:03,926 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:03,926 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(10)), (np.int64(15), np.int64(7)))
2025-04-11 20:13:03,926 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:04,241 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:04,241 [DEBUG] MCTS iteration 16: Rollout reward: 1.
2025-04-11 20:13:04,241 [DEBUG] MCTS iteration 16: Backed up Finish.
2025-04-11 20:13:04,250 [INFO] Final candidates: []
2025-04-11 20:13:04,250 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:04,258 [INFO] Final candidates: []
2025-04-11 20:13:04,258 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:04,258 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(11)), (np.int64(17), np.int64(1)))
2025-04-11 20:13:04,259 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:04,377 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:04,377 [DEBUG] MCTS iteration 17: Rollout reward: 0.
2025-04-11 20:13:04,377 [DEBUG] MCTS iteration 17: Backed up Finish.
2025-04-11 20:13:04,386 [INFO] Final candidates: []
2025-04-11 20:13:04,386 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:04,394 [INFO] Final candidates: []
2025-04-11 20:13:04,394 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:04,394 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(12)), (np.int64(4), np.int64(10)))
2025-04-11 20:13:04,395 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:04,679 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:04,679 [DEBUG] MCTS iteration 18: Rollout reward: 1.
2025-04-11 20:13:04,679 [DEBUG] MCTS iteration 18: Backed up Finish.
2025-04-11 20:13:04,688 [INFO] Final candidates: []
2025-04-11 20:13:04,688 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:04,697 [INFO] Final candidates: []
2025-04-11 20:13:04,697 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:04,697 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(2), np.int64(14)), (np.int64(7), np.int64(12)))
2025-04-11 20:13:04,698 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:04,859 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:04,860 [DEBUG] MCTS iteration 19: Rollout reward: 0.
2025-04-11 20:13:04,860 [DEBUG] MCTS iteration 19: Backed up Finish.
2025-04-11 20:13:04,868 [INFO] Final candidates: []
2025-04-11 20:13:04,868 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:04,876 [INFO] Final candidates: []
2025-04-11 20:13:04,876 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:04,876 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(16)), (np.int64(13), np.int64(9)))
2025-04-11 20:13:04,877 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:04,997 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:04,997 [DEBUG] MCTS iteration 20: Rollout reward: 0.
2025-04-11 20:13:04,997 [DEBUG] MCTS iteration 20: Backed up Finish.
2025-04-11 20:13:05,005 [INFO] Final candidates: []
2025-04-11 20:13:05,005 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:05,014 [INFO] Final candidates: []
2025-04-11 20:13:05,014 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:05,014 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(8)), (np.int64(10), np.int64(7)))
2025-04-11 20:13:05,014 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:05,177 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:05,177 [DEBUG] MCTS iteration 21: Rollout reward: 1.
2025-04-11 20:13:05,177 [DEBUG] MCTS iteration 21: Backed up Finish.
2025-04-11 20:13:05,186 [INFO] Final candidates: []
2025-04-11 20:13:05,186 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:05,194 [INFO] Final candidates: []
2025-04-11 20:13:05,194 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:05,195 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(11)), (np.int64(9), np.int64(7)))
2025-04-11 20:13:05,195 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:05,328 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:05,328 [DEBUG] MCTS iteration 22: Rollout reward: 1.
2025-04-11 20:13:05,328 [DEBUG] MCTS iteration 22: Backed up Finish.
2025-04-11 20:13:05,337 [INFO] Final candidates: []
2025-04-11 20:13:05,337 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:05,345 [INFO] Final candidates: []
2025-04-11 20:13:05,345 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:05,345 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(11)), (np.int64(11), np.int64(12)))
2025-04-11 20:13:05,345 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:05,559 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:05,559 [DEBUG] MCTS iteration 23: Rollout reward: 1.
2025-04-11 20:13:05,559 [DEBUG] MCTS iteration 23: Backed up Finish.
2025-04-11 20:13:05,568 [INFO] Final candidates: []
2025-04-11 20:13:05,568 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:05,576 [INFO] Final candidates: []
2025-04-11 20:13:05,576 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:05,576 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(12)), (np.int64(6), np.int64(9)))
2025-04-11 20:13:05,577 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:05,862 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:05,862 [DEBUG] MCTS iteration 24: Rollout reward: 1.
2025-04-11 20:13:05,862 [DEBUG] MCTS iteration 24: Backed up Finish.
2025-04-11 20:13:05,871 [INFO] Final candidates: []
2025-04-11 20:13:05,871 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:05,879 [INFO] Final candidates: []
2025-04-11 20:13:05,879 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:05,879 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(12)), (np.int64(15), np.int64(7)))
2025-04-11 20:13:05,880 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:06,131 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:06,131 [DEBUG] MCTS iteration 25: Rollout reward: 1.
2025-04-11 20:13:06,131 [DEBUG] MCTS iteration 25: Backed up Finish.
2025-04-11 20:13:06,140 [INFO] Final candidates: []
2025-04-11 20:13:06,140 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:06,149 [INFO] Final candidates: []
2025-04-11 20:13:06,150 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:06,150 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(10)), (np.int64(15), np.int64(0)))
2025-04-11 20:13:06,150 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:06,290 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:06,290 [DEBUG] MCTS iteration 26: Rollout reward: 0.
2025-04-11 20:13:06,290 [DEBUG] MCTS iteration 26: Backed up Finish.
2025-04-11 20:13:06,298 [INFO] Final candidates: []
2025-04-11 20:13:06,298 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:06,307 [INFO] Final candidates: []
2025-04-11 20:13:06,307 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:06,307 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(11)), (np.int64(10), np.int64(7)))
2025-04-11 20:13:06,308 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:06,367 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:06,367 [DEBUG] MCTS iteration 27: Rollout reward: 1.
2025-04-11 20:13:06,367 [DEBUG] MCTS iteration 27: Backed up Finish.
2025-04-11 20:13:06,376 [INFO] Final candidates: []
2025-04-11 20:13:06,376 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:06,384 [INFO] Final candidates: []
2025-04-11 20:13:06,384 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:06,384 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(11)), (np.int64(13), np.int64(9)))
2025-04-11 20:13:06,384 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:06,529 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:06,530 [DEBUG] MCTS iteration 28: Rollout reward: 0.
2025-04-11 20:13:06,530 [DEBUG] MCTS iteration 28: Backed up Finish.
2025-04-11 20:13:06,538 [INFO] Final candidates: []
2025-04-11 20:13:06,538 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:06,546 [INFO] Final candidates: []
2025-04-11 20:13:06,546 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:06,546 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(9)), (np.int64(17), np.int64(10)))
2025-04-11 20:13:06,547 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:06,751 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:06,751 [DEBUG] MCTS iteration 29: Rollout reward: 0.
2025-04-11 20:13:06,751 [DEBUG] MCTS iteration 29: Backed up Finish.
2025-04-11 20:13:06,762 [INFO] Final candidates: []
2025-04-11 20:13:06,762 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:06,770 [INFO] Final candidates: []
2025-04-11 20:13:06,770 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:06,770 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(12)), (np.int64(9), np.int64(7)))
2025-04-11 20:13:06,771 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:06,989 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:06,989 [DEBUG] MCTS iteration 30: Rollout reward: 1.
2025-04-11 20:13:06,989 [DEBUG] MCTS iteration 30: Backed up Finish.
2025-04-11 20:13:06,997 [INFO] Final candidates: []
2025-04-11 20:13:06,997 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:07,005 [INFO] Final candidates: []
2025-04-11 20:13:07,005 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:07,005 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(10)), (np.int64(15), np.int64(8)))
2025-04-11 20:13:07,006 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:07,167 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:07,167 [DEBUG] MCTS iteration 31: Rollout reward: 1.
2025-04-11 20:13:07,167 [DEBUG] MCTS iteration 31: Backed up Finish.
2025-04-11 20:13:07,176 [INFO] Final candidates: []
2025-04-11 20:13:07,176 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:07,184 [INFO] Final candidates: []
2025-04-11 20:13:07,184 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:07,184 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(10)), (np.int64(11), np.int64(10)))
2025-04-11 20:13:07,185 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:07,393 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:07,393 [DEBUG] MCTS iteration 32: Rollout reward: 0.
2025-04-11 20:13:07,393 [DEBUG] MCTS iteration 32: Backed up Finish.
2025-04-11 20:13:07,401 [INFO] Final candidates: []
2025-04-11 20:13:07,401 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:07,409 [INFO] Final candidates: []
2025-04-11 20:13:07,409 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:07,410 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(17), np.int64(9)), (np.int64(7), np.int64(8)))
2025-04-11 20:13:07,410 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:07,571 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:07,571 [DEBUG] MCTS iteration 33: Rollout reward: 1.
2025-04-11 20:13:07,571 [DEBUG] MCTS iteration 33: Backed up Finish.
2025-04-11 20:13:07,579 [INFO] Final candidates: []
2025-04-11 20:13:07,579 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:07,588 [INFO] Final candidates: []
2025-04-11 20:13:07,588 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:07,588 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(14)), (np.int64(4), np.int64(10)))
2025-04-11 20:13:07,588 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:07,783 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:07,783 [DEBUG] MCTS iteration 34: Rollout reward: 0.
2025-04-11 20:13:07,783 [DEBUG] MCTS iteration 34: Backed up Finish.
2025-04-11 20:13:07,791 [INFO] Final candidates: []
2025-04-11 20:13:07,791 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:07,800 [INFO] Final candidates: []
2025-04-11 20:13:07,800 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:07,800 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(16)), (np.int64(8), np.int64(7)))
2025-04-11 20:13:07,800 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:07,955 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:07,955 [DEBUG] MCTS iteration 35: Rollout reward: 1.
2025-04-11 20:13:07,955 [DEBUG] MCTS iteration 35: Backed up Finish.
2025-04-11 20:13:07,963 [INFO] Final candidates: []
2025-04-11 20:13:07,963 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:07,972 [INFO] Final candidates: []
2025-04-11 20:13:07,972 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:07,972 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(12)), (np.int64(7), np.int64(9)))
2025-04-11 20:13:07,973 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:08,210 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:08,210 [DEBUG] MCTS iteration 36: Rollout reward: 1.
2025-04-11 20:13:08,210 [DEBUG] MCTS iteration 36: Backed up Finish.
2025-04-11 20:13:08,218 [INFO] Final candidates: []
2025-04-11 20:13:08,218 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:08,228 [INFO] Final candidates: []
2025-04-11 20:13:08,228 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:08,228 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(2), np.int64(14)), (np.int64(14), np.int64(9)))
2025-04-11 20:13:08,228 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:08,405 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:08,405 [DEBUG] MCTS iteration 37: Rollout reward: 0.
2025-04-11 20:13:08,405 [DEBUG] MCTS iteration 37: Backed up Finish.
2025-04-11 20:13:08,414 [INFO] Final candidates: []
2025-04-11 20:13:08,414 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:08,422 [INFO] Final candidates: []
2025-04-11 20:13:08,422 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:08,422 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(8)), (np.int64(12), np.int64(8)))
2025-04-11 20:13:08,423 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:08,529 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:08,530 [DEBUG] MCTS iteration 38: Rollout reward: 1.
2025-04-11 20:13:08,530 [DEBUG] MCTS iteration 38: Backed up Finish.
2025-04-11 20:13:08,538 [INFO] Final candidates: []
2025-04-11 20:13:08,538 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:08,546 [INFO] Final candidates: []
2025-04-11 20:13:08,547 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:08,547 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(3), np.int64(13)), (np.int64(16), np.int64(11)))
2025-04-11 20:13:08,547 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:08,686 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:08,687 [DEBUG] MCTS iteration 39: Rollout reward: 1.
2025-04-11 20:13:08,687 [DEBUG] MCTS iteration 39: Backed up Finish.
2025-04-11 20:13:08,695 [INFO] Final candidates: []
2025-04-11 20:13:08,695 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:08,703 [INFO] Final candidates: []
2025-04-11 20:13:08,703 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:08,703 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(10)), (np.int64(6), np.int64(9)))
2025-04-11 20:13:08,704 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:08,863 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:08,863 [DEBUG] MCTS iteration 40: Rollout reward: 0.
2025-04-11 20:13:08,863 [DEBUG] MCTS iteration 40: Backed up Finish.
2025-04-11 20:13:08,872 [INFO] Final candidates: []
2025-04-11 20:13:08,872 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:08,880 [INFO] Final candidates: []
2025-04-11 20:13:08,880 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:08,880 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(8)), (np.int64(17), np.int64(2)))
2025-04-11 20:13:08,881 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:09,049 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:09,049 [DEBUG] MCTS iteration 41: Rollout reward: 1.
2025-04-11 20:13:09,049 [DEBUG] MCTS iteration 41: Backed up Finish.
2025-04-11 20:13:09,057 [INFO] Final candidates: []
2025-04-11 20:13:09,057 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:09,066 [INFO] Final candidates: []
2025-04-11 20:13:09,066 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:09,066 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(9)), (np.int64(4), np.int64(16)))
2025-04-11 20:13:09,066 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:09,172 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:09,172 [DEBUG] MCTS iteration 42: Rollout reward: 0.
2025-04-11 20:13:09,172 [DEBUG] MCTS iteration 42: Backed up Finish.
2025-04-11 20:13:09,181 [INFO] Final candidates: []
2025-04-11 20:13:09,181 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:09,189 [INFO] Final candidates: []
2025-04-11 20:13:09,189 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:09,189 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(14)), (np.int64(18), np.int64(0)))
2025-04-11 20:13:09,190 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:09,347 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:09,348 [DEBUG] MCTS iteration 43: Rollout reward: 1.
2025-04-11 20:13:09,348 [DEBUG] MCTS iteration 43: Backed up Finish.
2025-04-11 20:13:09,357 [INFO] Final candidates: []
2025-04-11 20:13:09,357 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:09,366 [INFO] Final candidates: []
2025-04-11 20:13:09,366 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:09,366 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(17), np.int64(9)), (np.int64(8), np.int64(7)))
2025-04-11 20:13:09,366 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:09,545 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:09,545 [DEBUG] MCTS iteration 44: Rollout reward: 1.
2025-04-11 20:13:09,545 [DEBUG] MCTS iteration 44: Backed up Finish.
2025-04-11 20:13:09,553 [INFO] Final candidates: []
2025-04-11 20:13:09,553 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:09,562 [INFO] Final candidates: []
2025-04-11 20:13:09,562 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:09,562 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(8)), (np.int64(16), np.int64(9)))
2025-04-11 20:13:09,562 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:09,717 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:09,717 [DEBUG] MCTS iteration 45: Rollout reward: 1.
2025-04-11 20:13:09,717 [DEBUG] MCTS iteration 45: Backed up Finish.
2025-04-11 20:13:09,725 [INFO] Final candidates: []
2025-04-11 20:13:09,725 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:09,733 [INFO] Final candidates: []
2025-04-11 20:13:09,733 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:09,733 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(10)), (np.int64(6), np.int64(13)))
2025-04-11 20:13:09,734 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:09,862 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:09,862 [DEBUG] MCTS iteration 46: Rollout reward: 0.
2025-04-11 20:13:09,862 [DEBUG] MCTS iteration 46: Backed up Finish.
2025-04-11 20:13:09,871 [INFO] Final candidates: []
2025-04-11 20:13:09,871 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:09,879 [INFO] Final candidates: []
2025-04-11 20:13:09,879 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:09,879 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(8)), (np.int64(17), np.int64(10)))
2025-04-11 20:13:09,880 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:09,960 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:09,960 [DEBUG] MCTS iteration 47: Rollout reward: 1.
2025-04-11 20:13:09,960 [DEBUG] MCTS iteration 47: Backed up Finish.
2025-04-11 20:13:09,969 [INFO] Final candidates: []
2025-04-11 20:13:09,969 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:09,978 [INFO] Final candidates: []
2025-04-11 20:13:09,978 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:09,978 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(7)), (np.int64(8), np.int64(13)))
2025-04-11 20:13:09,978 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:10,142 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:10,142 [DEBUG] MCTS iteration 48: Rollout reward: 1.
2025-04-11 20:13:10,142 [DEBUG] MCTS iteration 48: Backed up Finish.
2025-04-11 20:13:10,150 [INFO] Final candidates: []
2025-04-11 20:13:10,151 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:10,159 [INFO] Final candidates: []
2025-04-11 20:13:10,159 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:10,159 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(17), np.int64(2)), (np.int64(18), np.int64(0)))
2025-04-11 20:13:10,159 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:10,194 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:10,194 [DEBUG] MCTS iteration 49: Rollout reward: 1.
2025-04-11 20:13:10,194 [DEBUG] MCTS iteration 49: Backed up Finish.
2025-04-11 20:13:10,202 [INFO] Final candidates: []
2025-04-11 20:13:10,202 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:10,213 [INFO] Final candidates: []
2025-04-11 20:13:10,213 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:10,213 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(9)), (np.int64(3), np.int64(14)))
2025-04-11 20:13:10,214 [DEBUG] MCTS iteration 50: reached a node with 0 visits.
2025-04-11 20:13:10,214 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:10,313 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:10,313 [DEBUG] MCTS iteration 50: Rollout reward: 1.
2025-04-11 20:13:10,313 [DEBUG] MCTS iteration 50: Backed up Finish.
2025-04-11 20:13:10,322 [INFO] Final candidates: []
2025-04-11 20:13:10,322 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:10,330 [INFO] Final candidates: []
2025-04-11 20:13:10,330 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:10,330 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(3), np.int64(13)), (np.int64(6), np.int64(14)))
2025-04-11 20:13:10,330 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:10,454 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:10,454 [DEBUG] MCTS iteration 51: Rollout reward: 1.
2025-04-11 20:13:10,454 [DEBUG] MCTS iteration 51: Backed up Finish.
2025-04-11 20:13:10,463 [INFO] Final candidates: []
2025-04-11 20:13:10,463 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:10,471 [INFO] Final candidates: []
2025-04-11 20:13:10,471 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:10,471 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(12)), (np.int64(6), np.int64(11)))
2025-04-11 20:13:10,472 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:10,655 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:10,655 [DEBUG] MCTS iteration 52: Rollout reward: 0.
2025-04-11 20:13:10,655 [DEBUG] MCTS iteration 52: Backed up Finish.
2025-04-11 20:13:10,663 [INFO] Final candidates: []
2025-04-11 20:13:10,663 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:10,671 [INFO] Final candidates: []
2025-04-11 20:13:10,671 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:10,671 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(16)), (np.int64(6), np.int64(9)))
2025-04-11 20:13:10,672 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:10,760 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:10,761 [DEBUG] MCTS iteration 53: Rollout reward: 1.
2025-04-11 20:13:10,761 [DEBUG] MCTS iteration 53: Backed up Finish.
2025-04-11 20:13:10,769 [INFO] Final candidates: []
2025-04-11 20:13:10,769 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:10,777 [INFO] Final candidates: []
2025-04-11 20:13:10,777 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:10,777 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(9)), (np.int64(14), np.int64(11)))
2025-04-11 20:13:10,778 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:10,880 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:10,880 [DEBUG] MCTS iteration 54: Rollout reward: 1.
2025-04-11 20:13:10,880 [DEBUG] MCTS iteration 54: Backed up Finish.
2025-04-11 20:13:10,888 [INFO] Final candidates: []
2025-04-11 20:13:10,888 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:10,897 [INFO] Final candidates: []
2025-04-11 20:13:10,897 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:10,897 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(10)), (np.int64(3), np.int64(15)))
2025-04-11 20:13:10,897 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:11,073 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:11,074 [DEBUG] MCTS iteration 55: Rollout reward: 0.
2025-04-11 20:13:11,074 [DEBUG] MCTS iteration 55: Backed up Finish.
2025-04-11 20:13:11,082 [INFO] Final candidates: []
2025-04-11 20:13:11,082 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:11,090 [INFO] Final candidates: []
2025-04-11 20:13:11,090 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:11,090 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(10)), (np.int64(4), np.int64(10)))
2025-04-11 20:13:11,091 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:11,189 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:11,189 [DEBUG] MCTS iteration 56: Rollout reward: 0.
2025-04-11 20:13:11,189 [DEBUG] MCTS iteration 56: Backed up Finish.
2025-04-11 20:13:11,197 [INFO] Final candidates: []
2025-04-11 20:13:11,197 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:11,206 [INFO] Final candidates: []
2025-04-11 20:13:11,206 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:11,206 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(1)), (np.int64(15), np.int64(7)))
2025-04-11 20:13:11,206 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:11,371 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:11,371 [DEBUG] MCTS iteration 57: Rollout reward: 0.
2025-04-11 20:13:11,371 [DEBUG] MCTS iteration 57: Backed up Finish.
2025-04-11 20:13:11,379 [INFO] Final candidates: []
2025-04-11 20:13:11,379 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:11,388 [INFO] Final candidates: []
2025-04-11 20:13:11,388 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:11,388 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(1)), (np.int64(6), np.int64(13)))
2025-04-11 20:13:11,388 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:11,499 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:11,500 [DEBUG] MCTS iteration 58: Rollout reward: 0.
2025-04-11 20:13:11,500 [DEBUG] MCTS iteration 58: Backed up Finish.
2025-04-11 20:13:11,508 [INFO] Final candidates: []
2025-04-11 20:13:11,508 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:11,516 [INFO] Final candidates: []
2025-04-11 20:13:11,516 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:11,516 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(12)), (np.int64(7), np.int64(8)))
2025-04-11 20:13:11,517 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:11,758 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:11,758 [DEBUG] MCTS iteration 59: Rollout reward: 0.
2025-04-11 20:13:11,758 [DEBUG] MCTS iteration 59: Backed up Finish.
2025-04-11 20:13:11,767 [INFO] Final candidates: []
2025-04-11 20:13:11,767 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:11,777 [INFO] Final candidates: []
2025-04-11 20:13:11,777 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:11,777 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(14)), (np.int64(4), np.int64(16)))
2025-04-11 20:13:11,778 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:11,878 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:11,878 [DEBUG] MCTS iteration 60: Rollout reward: 0.
2025-04-11 20:13:11,878 [DEBUG] MCTS iteration 60: Backed up Finish.
2025-04-11 20:13:11,887 [INFO] Final candidates: []
2025-04-11 20:13:11,887 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:11,895 [INFO] Final candidates: []
2025-04-11 20:13:11,895 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:11,895 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(9)), (np.int64(11), np.int64(10)))
2025-04-11 20:13:11,896 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:11,959 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:11,959 [DEBUG] MCTS iteration 61: Rollout reward: 0.
2025-04-11 20:13:11,959 [DEBUG] MCTS iteration 61: Backed up Finish.
2025-04-11 20:13:11,967 [INFO] Final candidates: []
2025-04-11 20:13:11,967 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:11,976 [INFO] Final candidates: []
2025-04-11 20:13:11,976 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:11,976 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(12)), (np.int64(11), np.int64(8)))
2025-04-11 20:13:11,976 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:12,048 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:12,048 [DEBUG] MCTS iteration 62: Rollout reward: 0.
2025-04-11 20:13:12,048 [DEBUG] MCTS iteration 62: Backed up Finish.
2025-04-11 20:13:12,056 [INFO] Final candidates: []
2025-04-11 20:13:12,057 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:12,065 [INFO] Final candidates: []
2025-04-11 20:13:12,065 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:12,065 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(3), np.int64(15)), (np.int64(16), np.int64(8)))
2025-04-11 20:13:12,065 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:12,271 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:12,271 [DEBUG] MCTS iteration 63: Rollout reward: 1.
2025-04-11 20:13:12,271 [DEBUG] MCTS iteration 63: Backed up Finish.
2025-04-11 20:13:12,280 [INFO] Final candidates: []
2025-04-11 20:13:12,280 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:12,291 [INFO] Final candidates: []
2025-04-11 20:13:12,291 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:12,291 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(8)), (np.int64(5), np.int64(12)))
2025-04-11 20:13:12,292 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:12,521 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:12,521 [DEBUG] MCTS iteration 64: Rollout reward: 1.
2025-04-11 20:13:12,521 [DEBUG] MCTS iteration 64: Backed up Finish.
2025-04-11 20:13:12,529 [INFO] Final candidates: []
2025-04-11 20:13:12,529 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:12,538 [INFO] Final candidates: []
2025-04-11 20:13:12,538 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:12,538 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(18), np.int64(1)), (np.int64(5), np.int64(9)))
2025-04-11 20:13:12,538 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:12,728 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:12,728 [DEBUG] MCTS iteration 65: Rollout reward: 1.
2025-04-11 20:13:12,728 [DEBUG] MCTS iteration 65: Backed up Finish.
2025-04-11 20:13:12,736 [INFO] Final candidates: []
2025-04-11 20:13:12,736 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:12,745 [INFO] Final candidates: []
2025-04-11 20:13:12,745 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:12,745 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(15)), (np.int64(8), np.int64(8)))
2025-04-11 20:13:12,745 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:12,885 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:12,885 [DEBUG] MCTS iteration 66: Rollout reward: 1.
2025-04-11 20:13:12,885 [DEBUG] MCTS iteration 66: Backed up Finish.
2025-04-11 20:13:12,894 [INFO] Final candidates: []
2025-04-11 20:13:12,894 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:12,902 [INFO] Final candidates: []
2025-04-11 20:13:12,902 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:12,902 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(8)), (np.int64(10), np.int64(13)))
2025-04-11 20:13:12,903 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:13,095 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:13,095 [DEBUG] MCTS iteration 67: Rollout reward: 1.
2025-04-11 20:13:13,096 [DEBUG] MCTS iteration 67: Backed up Finish.
2025-04-11 20:13:13,104 [INFO] Final candidates: []
2025-04-11 20:13:13,104 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:13,112 [INFO] Final candidates: []
2025-04-11 20:13:13,112 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:13,112 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(11)), (np.int64(15), np.int64(7)))
2025-04-11 20:13:13,113 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:13,268 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:13,268 [DEBUG] MCTS iteration 68: Rollout reward: 1.
2025-04-11 20:13:13,268 [DEBUG] MCTS iteration 68: Backed up Finish.
2025-04-11 20:13:13,276 [INFO] Final candidates: []
2025-04-11 20:13:13,276 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:13,284 [INFO] Final candidates: []
2025-04-11 20:13:13,284 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:13,284 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(7)), (np.int64(13), np.int64(10)))
2025-04-11 20:13:13,285 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:13,423 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:13,423 [DEBUG] MCTS iteration 69: Rollout reward: 1.
2025-04-11 20:13:13,423 [DEBUG] MCTS iteration 69: Backed up Finish.
2025-04-11 20:13:13,431 [INFO] Final candidates: []
2025-04-11 20:13:13,431 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:13,439 [INFO] Final candidates: []
2025-04-11 20:13:13,439 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:13,439 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(10)), (np.int64(11), np.int64(11)))
2025-04-11 20:13:13,440 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:13,636 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:13,636 [DEBUG] MCTS iteration 70: Rollout reward: 1.
2025-04-11 20:13:13,636 [DEBUG] MCTS iteration 70: Backed up Finish.
2025-04-11 20:13:13,647 [INFO] Final candidates: []
2025-04-11 20:13:13,647 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:13,656 [INFO] Final candidates: []
2025-04-11 20:13:13,656 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:13,656 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(12)), (np.int64(16), np.int64(11)))
2025-04-11 20:13:13,656 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:13,771 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:13,771 [DEBUG] MCTS iteration 71: Rollout reward: 0.
2025-04-11 20:13:13,771 [DEBUG] MCTS iteration 71: Backed up Finish.
2025-04-11 20:13:13,780 [INFO] Final candidates: []
2025-04-11 20:13:13,780 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:13,788 [INFO] Final candidates: []
2025-04-11 20:13:13,788 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:13,788 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(14)), (np.int64(9), np.int64(13)))
2025-04-11 20:13:13,789 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:13,859 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:13,859 [DEBUG] MCTS iteration 72: Rollout reward: 1.
2025-04-11 20:13:13,859 [DEBUG] MCTS iteration 72: Backed up Finish.
2025-04-11 20:13:13,867 [INFO] Final candidates: []
2025-04-11 20:13:13,867 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:13,876 [INFO] Final candidates: []
2025-04-11 20:13:13,876 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:13,876 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(15)), (np.int64(11), np.int64(11)))
2025-04-11 20:13:13,876 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:13,946 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:13,946 [DEBUG] MCTS iteration 73: Rollout reward: 0.
2025-04-11 20:13:13,946 [DEBUG] MCTS iteration 73: Backed up Finish.
2025-04-11 20:13:13,954 [INFO] Final candidates: []
2025-04-11 20:13:13,954 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:13,963 [INFO] Final candidates: []
2025-04-11 20:13:13,963 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:13,963 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(10)), (np.int64(14), np.int64(9)))
2025-04-11 20:13:13,964 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:14,026 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:14,026 [DEBUG] MCTS iteration 74: Rollout reward: 0.
2025-04-11 20:13:14,026 [DEBUG] MCTS iteration 74: Backed up Finish.
2025-04-11 20:13:14,034 [INFO] Final candidates: []
2025-04-11 20:13:14,034 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:14,043 [INFO] Final candidates: []
2025-04-11 20:13:14,043 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:14,043 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(12)), (np.int64(17), np.int64(2)))
2025-04-11 20:13:14,043 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:14,153 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:14,153 [DEBUG] MCTS iteration 75: Rollout reward: 1.
2025-04-11 20:13:14,153 [DEBUG] MCTS iteration 75: Backed up Finish.
2025-04-11 20:13:14,162 [INFO] Final candidates: []
2025-04-11 20:13:14,162 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:14,170 [INFO] Final candidates: []
2025-04-11 20:13:14,170 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:14,170 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(8)), (np.int64(9), np.int64(7)))
2025-04-11 20:13:14,171 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:14,410 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:14,411 [DEBUG] MCTS iteration 76: Rollout reward: 1.
2025-04-11 20:13:14,411 [DEBUG] MCTS iteration 76: Backed up Finish.
2025-04-11 20:13:14,420 [INFO] Final candidates: []
2025-04-11 20:13:14,420 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:14,428 [INFO] Final candidates: []
2025-04-11 20:13:14,428 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:14,428 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(8)), (np.int64(5), np.int64(14)))
2025-04-11 20:13:14,429 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:14,713 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:14,713 [DEBUG] MCTS iteration 77: Rollout reward: 0.
2025-04-11 20:13:14,713 [DEBUG] MCTS iteration 77: Backed up Finish.
2025-04-11 20:13:14,722 [INFO] Final candidates: []
2025-04-11 20:13:14,722 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:14,730 [INFO] Final candidates: []
2025-04-11 20:13:14,730 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:14,730 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(13)), (np.int64(8), np.int64(13)))
2025-04-11 20:13:14,731 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:14,832 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:14,833 [DEBUG] MCTS iteration 78: Rollout reward: 0.
2025-04-11 20:13:14,833 [DEBUG] MCTS iteration 78: Backed up Finish.
2025-04-11 20:13:14,844 [INFO] Final candidates: []
2025-04-11 20:13:14,844 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:14,853 [INFO] Final candidates: []
2025-04-11 20:13:14,853 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:14,854 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(9)), (np.int64(5), np.int64(12)))
2025-04-11 20:13:14,854 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:14,887 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:14,887 [DEBUG] MCTS iteration 79: Rollout reward: 0.
2025-04-11 20:13:14,887 [DEBUG] MCTS iteration 79: Backed up Finish.
2025-04-11 20:13:14,897 [INFO] Final candidates: []
2025-04-11 20:13:14,897 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:14,910 [INFO] Final candidates: []
2025-04-11 20:13:14,910 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:14,910 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(11)), (np.int64(2), np.int64(14)))
2025-04-11 20:13:14,910 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:15,125 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:15,125 [DEBUG] MCTS iteration 80: Rollout reward: 1.
2025-04-11 20:13:15,125 [DEBUG] MCTS iteration 80: Backed up Finish.
2025-04-11 20:13:15,133 [INFO] Final candidates: []
2025-04-11 20:13:15,133 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:15,142 [INFO] Final candidates: []
2025-04-11 20:13:15,142 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:15,142 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(1)), (np.int64(8), np.int64(13)))
2025-04-11 20:13:15,142 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:15,333 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:15,333 [DEBUG] MCTS iteration 81: Rollout reward: 0.
2025-04-11 20:13:15,333 [DEBUG] MCTS iteration 81: Backed up Finish.
2025-04-11 20:13:15,342 [INFO] Final candidates: []
2025-04-11 20:13:15,342 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:15,350 [INFO] Final candidates: []
2025-04-11 20:13:15,350 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:15,350 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(10)), (np.int64(4), np.int64(13)))
2025-04-11 20:13:15,350 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:15,479 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:15,479 [DEBUG] MCTS iteration 82: Rollout reward: 1.
2025-04-11 20:13:15,479 [DEBUG] MCTS iteration 82: Backed up Finish.
2025-04-11 20:13:15,490 [INFO] Final candidates: []
2025-04-11 20:13:15,490 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:15,499 [INFO] Final candidates: []
2025-04-11 20:13:15,499 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:15,499 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(6)), (np.int64(3), np.int64(14)))
2025-04-11 20:13:15,500 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:15,706 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:15,706 [DEBUG] MCTS iteration 83: Rollout reward: 1.
2025-04-11 20:13:15,707 [DEBUG] MCTS iteration 83: Backed up Finish.
2025-04-11 20:13:15,715 [INFO] Final candidates: []
2025-04-11 20:13:15,715 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:15,723 [INFO] Final candidates: []
2025-04-11 20:13:15,723 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:15,723 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(10)), (np.int64(15), np.int64(0)))
2025-04-11 20:13:15,724 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:15,958 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:15,958 [DEBUG] MCTS iteration 84: Rollout reward: 1.
2025-04-11 20:13:15,958 [DEBUG] MCTS iteration 84: Backed up Finish.
2025-04-11 20:13:15,966 [INFO] Final candidates: []
2025-04-11 20:13:15,966 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:15,975 [INFO] Final candidates: []
2025-04-11 20:13:15,975 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:15,975 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(8)), (np.int64(6), np.int64(11)))
2025-04-11 20:13:15,975 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:16,048 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:16,048 [DEBUG] MCTS iteration 85: Rollout reward: 1.
2025-04-11 20:13:16,048 [DEBUG] MCTS iteration 85: Backed up Finish.
2025-04-11 20:13:16,056 [INFO] Final candidates: []
2025-04-11 20:13:16,056 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:16,065 [INFO] Final candidates: []
2025-04-11 20:13:16,065 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:16,065 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(7)), (np.int64(6), np.int64(13)))
2025-04-11 20:13:16,065 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:16,098 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:16,098 [DEBUG] MCTS iteration 86: Rollout reward: 0.
2025-04-11 20:13:16,098 [DEBUG] MCTS iteration 86: Backed up Finish.
2025-04-11 20:13:16,107 [INFO] Final candidates: []
2025-04-11 20:13:16,107 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:16,115 [INFO] Final candidates: []
2025-04-11 20:13:16,115 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:16,115 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(10)), (np.int64(7), np.int64(12)))
2025-04-11 20:13:16,116 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:16,198 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:16,199 [DEBUG] MCTS iteration 87: Rollout reward: 0.
2025-04-11 20:13:16,199 [DEBUG] MCTS iteration 87: Backed up Finish.
2025-04-11 20:13:16,207 [INFO] Final candidates: []
2025-04-11 20:13:16,207 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:16,215 [INFO] Final candidates: []
2025-04-11 20:13:16,215 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:16,215 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(12)), (np.int64(5), np.int64(11)))
2025-04-11 20:13:16,216 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:16,401 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:16,401 [DEBUG] MCTS iteration 88: Rollout reward: 0.
2025-04-11 20:13:16,401 [DEBUG] MCTS iteration 88: Backed up Finish.
2025-04-11 20:13:16,409 [INFO] Final candidates: []
2025-04-11 20:13:16,409 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:16,417 [INFO] Final candidates: []
2025-04-11 20:13:16,417 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:16,417 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(17), np.int64(9)), (np.int64(17), np.int64(10)))
2025-04-11 20:13:16,418 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:16,628 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:16,628 [DEBUG] MCTS iteration 89: Rollout reward: 0.
2025-04-11 20:13:16,628 [DEBUG] MCTS iteration 89: Backed up Finish.
2025-04-11 20:13:16,636 [INFO] Final candidates: []
2025-04-11 20:13:16,637 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:16,645 [INFO] Final candidates: []
2025-04-11 20:13:16,645 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:16,645 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(11)), (np.int64(16), np.int64(11)))
2025-04-11 20:13:16,645 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:16,830 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:16,830 [DEBUG] MCTS iteration 90: Rollout reward: 0.
2025-04-11 20:13:16,830 [DEBUG] MCTS iteration 90: Backed up Finish.
2025-04-11 20:13:16,838 [INFO] Final candidates: []
2025-04-11 20:13:16,838 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:16,846 [INFO] Final candidates: []
2025-04-11 20:13:16,846 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:16,846 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(11)), (np.int64(7), np.int64(8)))
2025-04-11 20:13:16,847 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:16,958 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:16,958 [DEBUG] MCTS iteration 91: Rollout reward: 1.
2025-04-11 20:13:16,959 [DEBUG] MCTS iteration 91: Backed up Finish.
2025-04-11 20:13:16,967 [INFO] Final candidates: []
2025-04-11 20:13:16,967 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:16,975 [INFO] Final candidates: []
2025-04-11 20:13:16,975 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:16,975 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(12)), (np.int64(4), np.int64(16)))
2025-04-11 20:13:16,976 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:17,201 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:17,202 [DEBUG] MCTS iteration 92: Rollout reward: 1.
2025-04-11 20:13:17,202 [DEBUG] MCTS iteration 92: Backed up Finish.
2025-04-11 20:13:17,210 [INFO] Final candidates: []
2025-04-11 20:13:17,210 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:17,218 [INFO] Final candidates: []
2025-04-11 20:13:17,218 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:17,218 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(10)), (np.int64(8), np.int64(13)))
2025-04-11 20:13:17,219 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:17,402 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:17,402 [DEBUG] MCTS iteration 93: Rollout reward: 1.
2025-04-11 20:13:17,402 [DEBUG] MCTS iteration 93: Backed up Finish.
2025-04-11 20:13:17,410 [INFO] Final candidates: []
2025-04-11 20:13:17,410 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:17,419 [INFO] Final candidates: []
2025-04-11 20:13:17,419 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:17,419 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(3), np.int64(15)), (np.int64(11), np.int64(12)))
2025-04-11 20:13:17,419 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:17,592 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:17,592 [DEBUG] MCTS iteration 94: Rollout reward: 1.
2025-04-11 20:13:17,592 [DEBUG] MCTS iteration 94: Backed up Finish.
2025-04-11 20:13:17,600 [INFO] Final candidates: []
2025-04-11 20:13:17,600 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:17,609 [INFO] Final candidates: []
2025-04-11 20:13:17,609 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:17,609 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(10)), (np.int64(16), np.int64(11)))
2025-04-11 20:13:17,609 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:17,685 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:17,685 [DEBUG] MCTS iteration 95: Rollout reward: 1.
2025-04-11 20:13:17,685 [DEBUG] MCTS iteration 95: Backed up Finish.
2025-04-11 20:13:17,694 [INFO] Final candidates: []
2025-04-11 20:13:17,694 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:17,702 [INFO] Final candidates: []
2025-04-11 20:13:17,702 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:17,702 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(11)), (np.int64(12), np.int64(9)))
2025-04-11 20:13:17,703 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:17,904 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:17,904 [DEBUG] MCTS iteration 96: Rollout reward: 1.
2025-04-11 20:13:17,904 [DEBUG] MCTS iteration 96: Backed up Finish.
2025-04-11 20:13:17,913 [INFO] Final candidates: []
2025-04-11 20:13:17,913 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:17,921 [INFO] Final candidates: []
2025-04-11 20:13:17,921 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:17,921 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(0)), (np.int64(4), np.int64(16)))
2025-04-11 20:13:17,921 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:18,116 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:18,116 [DEBUG] MCTS iteration 97: Rollout reward: 1.
2025-04-11 20:13:18,116 [DEBUG] MCTS iteration 97: Backed up Finish.
2025-04-11 20:13:18,124 [INFO] Final candidates: []
2025-04-11 20:13:18,124 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:18,132 [INFO] Final candidates: []
2025-04-11 20:13:18,133 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:18,133 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(13)), (np.int64(11), np.int64(12)))
2025-04-11 20:13:18,133 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:18,193 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:18,194 [DEBUG] MCTS iteration 98: Rollout reward: 0.
2025-04-11 20:13:18,194 [DEBUG] MCTS iteration 98: Backed up Finish.
2025-04-11 20:13:18,202 [INFO] Final candidates: []
2025-04-11 20:13:18,202 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:18,210 [INFO] Final candidates: []
2025-04-11 20:13:18,210 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:18,210 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(7)), (np.int64(6), np.int64(13)))
2025-04-11 20:13:18,211 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:18,442 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:18,442 [DEBUG] MCTS iteration 99: Rollout reward: 0.
2025-04-11 20:13:18,442 [DEBUG] MCTS iteration 99: Backed up Finish.
2025-04-11 20:13:18,442 [INFO] MCTS: Search completed after 100 iterations.
2025-04-11 20:13:18,442 [DEBUG] MCTS: BEST ((np.int64(14), np.int64(9)), (np.int64(4), np.int64(16))) with 1 visits.
2025-04-11 20:13:18,442 [INFO] MCTS: Search finished. Best move selected with 1 visits.
2025-04-11 20:13:18,442 [INFO] MCTS selected move: K15,R5
2025-04-11 20:13:18,442 [INFO] ===============NEW MOVE================
2025-04-11 20:13:21,236 [INFO] Starting pre-MCTS candidate collection.
2025-04-11 20:13:21,244 [INFO] Final candidates: []
2025-04-11 20:13:21,244 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:21,244 [DEBUG] board coords: [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:21,244 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 20:13:21,244 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 7), (9, 10)]
2025-04-11 20:13:21,244 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:21,244 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 10)]
2025-04-11 20:13:21,244 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)]
2025-04-11 20:13:21,245 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 20:13:21,245 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 10), (9, 13)]
2025-04-11 20:13:21,245 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:21,245 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 10)]
2025-04-11 20:13:21,252 [INFO] Final candidates: [(9, 10)]
2025-04-11 20:13:21,252 [INFO] Phase defense: Found only one candidate: (9, 10)
2025-04-11 20:13:21,252 [INFO] Phase defense: Collected 5unique candidate(s):[((9, 10), (np.int64(10), np.int64(9))), ((9, 10), (np.int64(11), np.int64(10))), ((9, 10), (np.int64(10), np.int64(11))), ((9, 10), (np.int64(7), np.int64(10))), ((9, 10), (np.int64(10), np.int64(10)))]
2025-04-11 20:13:21,252 [INFO] Phase 2 (defense): 5 candidate(s) found.
2025-04-11 20:13:21,252 [INFO] MCTS: Starting search for 100 iterations.
2025-04-11 20:13:21,253 [DEBUG] board coords: [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:21,253 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 20:13:21,253 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 7), (9, 10)]
2025-04-11 20:13:21,253 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:21,253 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)]
2025-04-11 20:13:21,253 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 20:13:21,253 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 10), (9, 13)]
2025-04-11 20:13:21,253 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:21,261 [INFO] Final candidates: [(9, 10), (9, 13), (9, 7)]
2025-04-11 20:13:21,261 [INFO] Phase win: Collected 3unique candidate(s):[((9, 13), (9, 7)), ((9, 10), (9, 7)), ((9, 10), (9, 13))]
2025-04-11 20:13:21,269 [INFO] Final candidates: []
2025-04-11 20:13:21,269 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:21,269 [DEBUG] Tree_policy iteration 1: Expanding move ((9, 10), (np.int64(10), np.int64(11)))
2025-04-11 20:13:21,270 [DEBUG] MCTS iteration 0: reached a node with 0 visits.
2025-04-11 20:13:21,270 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:21,274 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:21,274 [DEBUG] MCTS iteration 0: Rollout reward: 1.
2025-04-11 20:13:21,274 [DEBUG] MCTS iteration 0: Backed up Finish.
2025-04-11 20:13:21,274 [DEBUG] board coords: [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:21,274 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 20:13:21,274 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 7), (9, 10)]
2025-04-11 20:13:21,274 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:21,274 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)]
2025-04-11 20:13:21,275 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 20:13:21,275 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 10), (9, 13)]
2025-04-11 20:13:21,275 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:21,282 [INFO] Final candidates: [(9, 10), (9, 13), (9, 7)]
2025-04-11 20:13:21,282 [INFO] Phase win: Collected 3unique candidate(s):[((9, 13), (9, 7)), ((9, 10), (9, 7)), ((9, 10), (9, 13))]
2025-04-11 20:13:21,290 [INFO] Final candidates: []
2025-04-11 20:13:21,290 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:21,290 [DEBUG] Tree_policy iteration 1: Expanding move ((9, 10), (np.int64(7), np.int64(10)))
2025-04-11 20:13:21,291 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:21,490 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:21,490 [DEBUG] MCTS iteration 1: Rollout reward: 1.
2025-04-11 20:13:21,490 [DEBUG] MCTS iteration 1: Backed up Finish.
2025-04-11 20:13:21,491 [DEBUG] board coords: [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:21,491 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 20:13:21,491 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 7), (9, 10)]
2025-04-11 20:13:21,491 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:21,491 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)]
2025-04-11 20:13:21,491 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 20:13:21,491 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 10), (9, 13)]
2025-04-11 20:13:21,491 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:21,499 [INFO] Final candidates: [(9, 10), (9, 13), (9, 7)]
2025-04-11 20:13:21,499 [INFO] Phase win: Collected 3unique candidate(s):[((9, 13), (9, 7)), ((9, 10), (9, 7)), ((9, 10), (9, 13))]
2025-04-11 20:13:21,507 [INFO] Final candidates: []
2025-04-11 20:13:21,507 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:21,507 [DEBUG] Tree_policy iteration 1: Expanding move ((9, 10), (np.int64(11), np.int64(10)))
2025-04-11 20:13:21,508 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:21,521 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:21,521 [DEBUG] MCTS iteration 2: Rollout reward: 1.
2025-04-11 20:13:21,521 [DEBUG] MCTS iteration 2: Backed up Finish.
2025-04-11 20:13:21,522 [DEBUG] board coords: [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:21,522 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 20:13:21,522 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 7), (9, 10)]
2025-04-11 20:13:21,522 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:21,522 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)]
2025-04-11 20:13:21,522 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 20:13:21,522 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 10), (9, 13)]
2025-04-11 20:13:21,522 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:21,530 [INFO] Final candidates: [(9, 10), (9, 13), (9, 7)]
2025-04-11 20:13:21,530 [INFO] Phase win: Collected 3unique candidate(s):[((9, 13), (9, 7)), ((9, 10), (9, 7)), ((9, 10), (9, 13))]
2025-04-11 20:13:21,538 [INFO] Final candidates: []
2025-04-11 20:13:21,538 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:21,538 [DEBUG] Tree_policy iteration 1: Expanding move ((9, 10), (np.int64(10), np.int64(9)))
2025-04-11 20:13:21,539 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:21,687 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:21,687 [DEBUG] MCTS iteration 3: Rollout reward: 0.
2025-04-11 20:13:21,687 [DEBUG] MCTS iteration 3: Backed up Finish.
2025-04-11 20:13:21,687 [DEBUG] board coords: [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:21,687 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 20:13:21,687 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 7), (9, 10)]
2025-04-11 20:13:21,687 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 0 2 2] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:21,688 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)]
2025-04-11 20:13:21,688 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 20:13:21,688 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 10), (9, 13)]
2025-04-11 20:13:21,688 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:21,695 [INFO] Final candidates: [(9, 10), (9, 13), (9, 7)]
2025-04-11 20:13:21,695 [INFO] Phase win: Collected 3unique candidate(s):[((9, 13), (9, 7)), ((9, 10), (9, 7)), ((9, 10), (9, 13))]
2025-04-11 20:13:21,704 [INFO] Final candidates: []
2025-04-11 20:13:21,704 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:21,704 [DEBUG] Tree_policy iteration 1: Expanding move ((9, 10), (np.int64(10), np.int64(10)))
2025-04-11 20:13:21,704 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:21,712 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:21,712 [DEBUG] MCTS iteration 4: Rollout reward: 1.
2025-04-11 20:13:21,712 [DEBUG] MCTS iteration 4: Backed up Finish.
2025-04-11 20:13:21,712 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:21,720 [INFO] Final candidates: []
2025-04-11 20:13:21,720 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:21,720 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:21,720 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:21,721 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:21,721 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:21,721 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:21,721 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:21,721 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:21,721 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:21,721 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:21,721 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:21,722 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:21,722 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:21,722 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:21,722 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:21,722 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:21,722 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:21,722 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:21,722 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:21,722 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:21,722 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:21,722 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:21,722 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:21,729 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:21,729 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:21,729 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(10)), (np.int64(2), np.int64(14)))
2025-04-11 20:13:21,729 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:21,768 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:21,768 [DEBUG] MCTS iteration 5: Rollout reward: 1.
2025-04-11 20:13:21,768 [DEBUG] MCTS iteration 5: Backed up Finish.
2025-04-11 20:13:21,769 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:21,777 [INFO] Final candidates: []
2025-04-11 20:13:21,777 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:21,777 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:21,777 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:21,777 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:21,777 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:21,777 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:21,777 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:21,777 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:21,777 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:21,777 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:21,777 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:21,779 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:21,779 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:21,779 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:21,779 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:21,779 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:21,779 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:21,779 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:21,779 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:21,779 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:21,779 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:21,779 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:21,779 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:21,785 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:21,785 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:21,786 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(3), np.int64(16)), (np.int64(14), np.int64(11)))
2025-04-11 20:13:21,786 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:21,825 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:21,825 [DEBUG] MCTS iteration 6: Rollout reward: 0.
2025-04-11 20:13:21,825 [DEBUG] MCTS iteration 6: Backed up Finish.
2025-04-11 20:13:21,825 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:21,834 [INFO] Final candidates: []
2025-04-11 20:13:21,834 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:21,834 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:21,834 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:21,834 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:21,834 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:21,834 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:21,834 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:21,834 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:21,834 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:21,834 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:21,834 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:21,836 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:21,836 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:21,836 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:21,836 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:21,836 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:21,836 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:21,836 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:21,836 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:21,836 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:21,836 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:21,836 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:21,836 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:21,845 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:21,845 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:21,845 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(8)), (np.int64(8), np.int64(8)))
2025-04-11 20:13:21,846 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:21,889 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:21,890 [DEBUG] MCTS iteration 7: Rollout reward: 0.
2025-04-11 20:13:21,890 [DEBUG] MCTS iteration 7: Backed up Finish.
2025-04-11 20:13:21,890 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:21,898 [INFO] Final candidates: []
2025-04-11 20:13:21,898 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:21,898 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:21,898 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:21,898 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:21,898 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:21,898 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:21,898 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:21,898 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:21,898 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:21,898 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:21,898 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:21,900 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:21,900 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:21,900 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:21,900 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:21,900 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:21,900 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:21,900 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:21,900 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:21,900 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:21,900 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:21,900 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:21,900 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:21,906 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:21,906 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:21,907 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(4), np.int64(18)), (np.int64(14), np.int64(11)))
2025-04-11 20:13:21,907 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:21,908 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:21,908 [DEBUG] MCTS iteration 8: Rollout reward: 1.
2025-04-11 20:13:21,908 [DEBUG] MCTS iteration 8: Backed up Finish.
2025-04-11 20:13:21,908 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:21,916 [INFO] Final candidates: []
2025-04-11 20:13:21,916 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:21,916 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:21,916 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:21,916 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:21,917 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:21,917 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:21,917 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:21,917 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:21,917 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:21,917 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:21,917 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:21,919 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:21,919 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:21,919 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:21,919 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:21,919 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:21,919 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:21,919 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:21,920 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:21,920 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:21,920 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:21,920 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:21,920 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:21,926 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:21,926 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:21,926 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(6)), (np.int64(15), np.int64(11)))
2025-04-11 20:13:21,927 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:22,155 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:22,155 [DEBUG] MCTS iteration 9: Rollout reward: 1.
2025-04-11 20:13:22,155 [DEBUG] MCTS iteration 9: Backed up Finish.
2025-04-11 20:13:22,156 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:22,163 [INFO] Final candidates: []
2025-04-11 20:13:22,163 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:22,164 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:22,164 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:22,164 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:22,164 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:22,164 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:22,164 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:22,164 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:22,164 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:22,164 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:22,164 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:22,165 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:22,165 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:22,165 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:22,165 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:22,165 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:22,166 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:22,166 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:22,166 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:22,166 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:22,166 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:22,166 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:22,166 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:22,172 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:22,172 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:22,172 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(8)), (np.int64(15), np.int64(12)))
2025-04-11 20:13:22,174 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:22,204 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:22,204 [DEBUG] MCTS iteration 10: Rollout reward: 1.
2025-04-11 20:13:22,204 [DEBUG] MCTS iteration 10: Backed up Finish.
2025-04-11 20:13:22,204 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:22,212 [INFO] Final candidates: []
2025-04-11 20:13:22,212 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:22,213 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:22,213 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:22,213 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:22,213 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:22,213 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:22,213 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:22,213 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:22,213 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:22,213 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:22,213 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:22,214 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:22,214 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:22,214 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:22,214 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:22,214 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:22,214 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:22,214 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:22,214 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:22,214 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:22,214 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:22,214 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:22,214 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:22,221 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:22,221 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:22,221 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(0)), (np.int64(12), np.int64(10)))
2025-04-11 20:13:22,221 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:22,521 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:22,521 [DEBUG] MCTS iteration 11: Rollout reward: 0.
2025-04-11 20:13:22,521 [DEBUG] MCTS iteration 11: Backed up Finish.
2025-04-11 20:13:22,521 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:22,529 [INFO] Final candidates: []
2025-04-11 20:13:22,529 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:22,530 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:22,530 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:22,530 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:22,530 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:22,530 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:22,530 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:22,530 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:22,530 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:22,530 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:22,530 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:22,531 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:22,531 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:22,531 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:22,531 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:22,531 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:22,531 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:22,531 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:22,531 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:22,531 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:22,531 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:22,531 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:22,531 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:22,538 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:22,538 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:22,538 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(13)), (np.int64(5), np.int64(17)))
2025-04-11 20:13:22,539 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:22,696 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:22,696 [DEBUG] MCTS iteration 12: Rollout reward: 1.
2025-04-11 20:13:22,696 [DEBUG] MCTS iteration 12: Backed up Finish.
2025-04-11 20:13:22,696 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:22,704 [INFO] Final candidates: []
2025-04-11 20:13:22,704 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:22,705 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:22,705 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:22,705 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:22,705 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:22,705 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:22,705 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:22,705 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:22,705 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:22,705 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:22,705 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:22,706 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:22,706 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:22,706 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:22,706 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:22,706 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:22,706 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:22,706 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:22,706 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:22,706 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:22,706 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:22,706 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:22,706 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:22,713 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:22,713 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:22,713 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(6)), (np.int64(10), np.int64(13)))
2025-04-11 20:13:22,713 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:22,884 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:22,884 [DEBUG] MCTS iteration 13: Rollout reward: 1.
2025-04-11 20:13:22,884 [DEBUG] MCTS iteration 13: Backed up Finish.
2025-04-11 20:13:22,884 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:22,892 [INFO] Final candidates: []
2025-04-11 20:13:22,892 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:22,892 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:22,892 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:22,892 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:22,892 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:22,893 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:22,893 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:22,893 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:22,893 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:22,893 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:22,893 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:22,894 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:22,894 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:22,894 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:22,894 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:22,894 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:22,894 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:22,894 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:22,894 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:22,894 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:22,894 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:22,894 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:22,894 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:22,901 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:22,901 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:22,901 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(16)), (np.int64(8), np.int64(7)))
2025-04-11 20:13:22,901 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:23,040 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:23,040 [DEBUG] MCTS iteration 14: Rollout reward: 1.
2025-04-11 20:13:23,040 [DEBUG] MCTS iteration 14: Backed up Finish.
2025-04-11 20:13:23,041 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:23,049 [INFO] Final candidates: []
2025-04-11 20:13:23,049 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:23,049 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:23,049 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:23,049 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:23,049 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:23,049 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:23,049 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:23,049 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:23,049 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:23,049 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:23,049 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:23,051 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:23,051 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:23,051 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:23,051 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:23,051 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:23,051 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:23,051 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:23,051 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:23,051 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:23,051 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:23,051 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:23,051 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:23,057 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:23,057 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:23,057 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(9)), (np.int64(11), np.int64(8)))
2025-04-11 20:13:23,058 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:23,113 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:23,113 [DEBUG] MCTS iteration 15: Rollout reward: 1.
2025-04-11 20:13:23,113 [DEBUG] MCTS iteration 15: Backed up Finish.
2025-04-11 20:13:23,114 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:23,121 [INFO] Final candidates: []
2025-04-11 20:13:23,121 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:23,122 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:23,122 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:23,122 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:23,122 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:23,122 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:23,122 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:23,122 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:23,122 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:23,122 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:23,122 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:23,123 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:23,123 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:23,123 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:23,124 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:23,124 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:23,124 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:23,124 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:23,124 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:23,124 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:23,124 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:23,124 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:23,124 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:23,130 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:23,130 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:23,130 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(0)), (np.int64(4), np.int64(12)))
2025-04-11 20:13:23,131 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:23,316 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:23,316 [DEBUG] MCTS iteration 16: Rollout reward: 0.
2025-04-11 20:13:23,316 [DEBUG] MCTS iteration 16: Backed up Finish.
2025-04-11 20:13:23,316 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:23,324 [INFO] Final candidates: []
2025-04-11 20:13:23,324 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:23,325 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:23,325 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:23,325 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:23,325 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:23,325 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:23,325 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:23,325 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:23,325 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:23,325 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:23,325 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:23,326 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:23,326 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:23,326 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:23,326 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:23,326 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:23,326 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:23,326 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:23,326 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:23,326 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:23,326 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:23,326 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:23,326 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:23,333 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:23,333 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:23,333 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(7)), (np.int64(10), np.int64(12)))
2025-04-11 20:13:23,333 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:23,506 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:23,506 [DEBUG] MCTS iteration 17: Rollout reward: 1.
2025-04-11 20:13:23,506 [DEBUG] MCTS iteration 17: Backed up Finish.
2025-04-11 20:13:23,507 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:23,515 [INFO] Final candidates: []
2025-04-11 20:13:23,515 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:23,515 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:23,515 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:23,515 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:23,515 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:23,515 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:23,515 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:23,516 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:23,516 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:23,516 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:23,516 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:23,517 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:23,517 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:23,517 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:23,517 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:23,517 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:23,517 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:23,517 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:23,517 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:23,517 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:23,517 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:23,517 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:23,517 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:23,524 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:23,524 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:23,524 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(9)), (np.int64(10), np.int64(13)))
2025-04-11 20:13:23,524 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:23,747 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:23,747 [DEBUG] MCTS iteration 18: Rollout reward: 1.
2025-04-11 20:13:23,747 [DEBUG] MCTS iteration 18: Backed up Finish.
2025-04-11 20:13:23,747 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:23,755 [INFO] Final candidates: []
2025-04-11 20:13:23,755 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:23,755 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:23,755 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:23,755 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:23,755 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:23,756 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:23,756 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:23,756 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:23,756 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:23,756 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:23,756 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:23,757 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:23,757 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:23,757 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:23,757 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:23,757 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:23,757 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:23,757 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:23,757 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:23,757 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:23,757 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:23,757 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:23,757 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:23,764 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:23,764 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:23,765 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(7)), (np.int64(4), np.int64(12)))
2025-04-11 20:13:23,765 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:24,023 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:24,024 [DEBUG] MCTS iteration 19: Rollout reward: 0.
2025-04-11 20:13:24,024 [DEBUG] MCTS iteration 19: Backed up Finish.
2025-04-11 20:13:24,024 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:24,032 [INFO] Final candidates: []
2025-04-11 20:13:24,032 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:24,032 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:24,032 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:24,032 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:24,032 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:24,032 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:24,032 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:24,032 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:24,032 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:24,032 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:24,032 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:24,034 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:24,034 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:24,034 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:24,034 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:24,034 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:24,034 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:24,034 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:24,034 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:24,034 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:24,034 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:24,034 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:24,034 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:24,040 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:24,040 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:24,041 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(8)), (np.int64(15), np.int64(7)))
2025-04-11 20:13:24,041 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:24,043 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:24,043 [DEBUG] MCTS iteration 20: Rollout reward: 1.
2025-04-11 20:13:24,043 [DEBUG] MCTS iteration 20: Backed up Finish.
2025-04-11 20:13:24,043 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:24,051 [INFO] Final candidates: []
2025-04-11 20:13:24,051 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:24,052 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:24,052 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:24,052 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:24,052 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:24,052 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:24,052 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:24,052 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:24,052 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:24,052 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:24,052 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:24,053 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:24,053 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:24,053 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:24,053 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:24,053 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:24,053 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:24,053 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:24,053 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:24,053 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:24,053 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:24,053 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:24,053 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:24,060 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:24,060 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:24,060 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(10)), (np.int64(14), np.int64(7)))
2025-04-11 20:13:24,061 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:24,326 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:24,326 [DEBUG] MCTS iteration 21: Rollout reward: 0.
2025-04-11 20:13:24,326 [DEBUG] MCTS iteration 21: Backed up Finish.
2025-04-11 20:13:24,326 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:24,334 [INFO] Final candidates: []
2025-04-11 20:13:24,334 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:24,335 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:24,335 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:24,335 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:24,335 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:24,335 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:24,335 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:24,335 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:24,335 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:24,335 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:24,335 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:24,336 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:24,336 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:24,336 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:24,336 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:24,336 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:24,336 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:24,336 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:24,336 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:24,336 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:24,336 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:24,336 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:24,336 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:24,343 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:24,343 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:24,343 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(9)), (np.int64(15), np.int64(12)))
2025-04-11 20:13:24,344 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:24,386 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:24,386 [DEBUG] MCTS iteration 22: Rollout reward: 1.
2025-04-11 20:13:24,386 [DEBUG] MCTS iteration 22: Backed up Finish.
2025-04-11 20:13:24,386 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:24,394 [INFO] Final candidates: []
2025-04-11 20:13:24,394 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:24,395 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:24,395 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:24,395 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:24,395 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:24,395 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:24,395 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:24,395 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:24,395 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:24,395 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:24,395 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:24,396 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:24,396 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:24,396 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:24,396 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:24,396 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:24,396 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:24,396 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:24,396 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:24,396 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:24,396 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:24,397 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:24,397 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:24,403 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:24,403 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:24,403 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(2), np.int64(14)), (np.int64(7), np.int64(8)))
2025-04-11 20:13:24,404 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:24,517 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:24,517 [DEBUG] MCTS iteration 23: Rollout reward: 0.
2025-04-11 20:13:24,517 [DEBUG] MCTS iteration 23: Backed up Finish.
2025-04-11 20:13:24,517 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:24,525 [INFO] Final candidates: []
2025-04-11 20:13:24,525 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:24,526 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:24,526 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:24,526 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:24,526 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:24,526 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:24,526 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:24,526 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:24,526 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:24,526 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:24,526 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:24,527 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:24,527 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:24,527 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:24,527 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:24,527 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:24,527 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:24,527 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:24,527 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:24,527 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:24,527 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:24,527 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:24,527 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:24,534 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:24,534 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:24,534 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(11)), (np.int64(5), np.int64(17)))
2025-04-11 20:13:24,534 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:24,581 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:24,581 [DEBUG] MCTS iteration 24: Rollout reward: 1.
2025-04-11 20:13:24,581 [DEBUG] MCTS iteration 24: Backed up Finish.
2025-04-11 20:13:24,581 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:24,589 [INFO] Final candidates: []
2025-04-11 20:13:24,589 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:24,590 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:24,590 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:24,590 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:24,590 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:24,590 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:24,590 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:24,590 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:24,590 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:24,590 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:24,591 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:24,592 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:24,592 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:24,592 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:24,592 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:24,592 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:24,592 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:24,592 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:24,592 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:24,592 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:24,592 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:24,592 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:24,592 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:24,599 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:24,599 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:24,599 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(9)), (np.int64(12), np.int64(9)))
2025-04-11 20:13:24,599 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:24,717 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:24,718 [DEBUG] MCTS iteration 25: Rollout reward: 1.
2025-04-11 20:13:24,718 [DEBUG] MCTS iteration 25: Backed up Finish.
2025-04-11 20:13:24,718 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:24,726 [INFO] Final candidates: []
2025-04-11 20:13:24,726 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:24,726 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:24,726 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:24,726 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:24,726 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:24,726 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:24,726 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:24,726 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:24,726 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:24,727 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:24,727 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:24,728 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:24,728 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:24,728 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:24,728 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:24,728 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:24,728 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:24,728 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:24,728 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:24,728 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:24,728 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:24,728 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:24,728 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:24,734 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:24,734 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:24,734 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(10)), (np.int64(17), np.int64(2)))
2025-04-11 20:13:24,735 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:24,742 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:24,743 [DEBUG] MCTS iteration 26: Rollout reward: 1.
2025-04-11 20:13:24,743 [DEBUG] MCTS iteration 26: Backed up Finish.
2025-04-11 20:13:24,743 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:24,751 [INFO] Final candidates: []
2025-04-11 20:13:24,751 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:24,751 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:24,751 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:24,751 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:24,751 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:24,751 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:24,752 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:24,752 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:24,752 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:24,752 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:24,752 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:24,753 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:24,753 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:24,753 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:24,753 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:24,753 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:24,753 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:24,753 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:24,753 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:24,753 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:24,753 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:24,753 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:24,753 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:24,759 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:24,759 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:24,760 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(4), np.int64(13)), (np.int64(2), np.int64(14)))
2025-04-11 20:13:24,760 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:24,826 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:24,827 [DEBUG] MCTS iteration 27: Rollout reward: 0.
2025-04-11 20:13:24,827 [DEBUG] MCTS iteration 27: Backed up Finish.
2025-04-11 20:13:24,827 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:24,835 [INFO] Final candidates: []
2025-04-11 20:13:24,835 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:24,835 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:24,835 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:24,835 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:24,835 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:24,835 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:24,835 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:24,835 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:24,835 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:24,835 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:24,836 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:24,837 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:24,837 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:24,837 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:24,837 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:24,837 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:24,837 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:24,837 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:24,837 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:24,837 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:24,837 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:24,837 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:24,837 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:24,844 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:24,844 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:24,844 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(10)), (np.int64(7), np.int64(8)))
2025-04-11 20:13:24,845 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:25,004 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:25,004 [DEBUG] MCTS iteration 28: Rollout reward: 1.
2025-04-11 20:13:25,004 [DEBUG] MCTS iteration 28: Backed up Finish.
2025-04-11 20:13:25,004 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:25,013 [INFO] Final candidates: []
2025-04-11 20:13:25,013 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:25,013 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:25,013 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:25,013 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:25,013 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:25,013 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:25,013 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:25,013 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:25,013 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:25,013 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:25,013 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:25,015 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:25,015 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:25,015 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:25,015 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:25,015 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:25,015 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:25,015 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:25,015 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:25,015 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:25,015 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:25,015 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:25,015 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:25,021 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:25,021 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:25,021 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(3), np.int64(15)), (np.int64(10), np.int64(11)))
2025-04-11 20:13:25,022 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:25,025 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:25,025 [DEBUG] MCTS iteration 29: Rollout reward: 1.
2025-04-11 20:13:25,025 [DEBUG] MCTS iteration 29: Backed up Finish.
2025-04-11 20:13:25,026 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:25,033 [INFO] Final candidates: []
2025-04-11 20:13:25,034 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:25,034 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:25,034 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:25,034 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:25,034 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:25,034 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:25,034 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:25,034 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:25,034 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:25,034 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:25,034 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:25,035 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:25,035 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:25,036 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:25,036 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:25,036 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:25,036 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:25,036 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:25,036 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:25,036 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:25,036 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:25,036 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:25,036 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:25,042 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:25,042 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:25,042 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(11)), (np.int64(15), np.int64(12)))
2025-04-11 20:13:25,043 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:25,109 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:25,109 [DEBUG] MCTS iteration 30: Rollout reward: 0.
2025-04-11 20:13:25,109 [DEBUG] MCTS iteration 30: Backed up Finish.
2025-04-11 20:13:25,109 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:25,117 [INFO] Final candidates: []
2025-04-11 20:13:25,117 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:25,118 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:25,118 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:25,118 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:25,118 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:25,118 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:25,118 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:25,118 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:25,118 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:25,118 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:25,118 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:25,119 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:25,119 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:25,119 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:25,120 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:25,120 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:25,120 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:25,120 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:25,120 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:25,120 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:25,120 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:25,120 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:25,120 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:25,126 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:25,126 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:25,126 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(3), np.int64(15)), (np.int64(4), np.int64(10)))
2025-04-11 20:13:25,127 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:25,129 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:25,129 [DEBUG] MCTS iteration 31: Rollout reward: 1.
2025-04-11 20:13:25,129 [DEBUG] MCTS iteration 31: Backed up Finish.
2025-04-11 20:13:25,129 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:25,137 [INFO] Final candidates: []
2025-04-11 20:13:25,137 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:25,138 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:25,138 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:25,138 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:25,138 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:25,138 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:25,138 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:25,138 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:25,138 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:25,138 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:25,138 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:25,139 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:25,139 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:25,139 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:25,139 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:25,139 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:25,140 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:25,140 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:25,140 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:25,140 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:25,140 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:25,140 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:25,140 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:25,146 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:25,146 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:25,146 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(9)), (np.int64(2), np.int64(14)))
2025-04-11 20:13:25,150 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:25,278 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:25,278 [DEBUG] MCTS iteration 32: Rollout reward: 0.
2025-04-11 20:13:25,278 [DEBUG] MCTS iteration 32: Backed up Finish.
2025-04-11 20:13:25,278 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:25,286 [INFO] Final candidates: []
2025-04-11 20:13:25,286 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:25,287 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:25,287 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:25,287 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:25,287 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:25,287 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:25,287 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:25,287 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:25,287 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:25,287 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:25,287 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:25,288 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:25,288 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:25,288 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:25,288 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:25,288 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:25,288 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:25,288 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:25,288 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:25,288 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:25,288 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:25,289 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:25,289 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:25,295 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:25,295 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:25,295 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(10)), (np.int64(8), np.int64(12)))
2025-04-11 20:13:25,296 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:25,359 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:25,360 [DEBUG] MCTS iteration 33: Rollout reward: 1.
2025-04-11 20:13:25,360 [DEBUG] MCTS iteration 33: Backed up Finish.
2025-04-11 20:13:25,360 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:25,368 [INFO] Final candidates: []
2025-04-11 20:13:25,368 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:25,368 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:25,368 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:25,368 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:25,369 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:25,369 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:25,369 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:25,369 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:25,369 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:25,369 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:25,369 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:25,370 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:25,370 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:25,370 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:25,370 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:25,370 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:25,370 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:25,370 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:25,370 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:25,370 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:25,370 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:25,370 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:25,370 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:25,376 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:25,377 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:25,377 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(8)), (np.int64(3), np.int64(14)))
2025-04-11 20:13:25,377 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:25,384 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:25,384 [DEBUG] MCTS iteration 34: Rollout reward: 1.
2025-04-11 20:13:25,384 [DEBUG] MCTS iteration 34: Backed up Finish.
2025-04-11 20:13:25,385 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:25,392 [INFO] Final candidates: []
2025-04-11 20:13:25,392 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:25,393 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:25,393 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:25,393 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:25,393 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:25,393 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:25,393 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:25,393 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:25,393 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:25,393 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:25,393 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:25,394 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:25,394 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:25,394 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:25,394 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:25,394 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:25,395 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:25,395 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:25,395 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:25,395 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:25,395 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:25,395 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:25,395 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:25,402 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:25,403 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:25,403 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(8)), (np.int64(7), np.int64(8)))
2025-04-11 20:13:25,403 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:25,532 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:25,533 [DEBUG] MCTS iteration 35: Rollout reward: 1.
2025-04-11 20:13:25,533 [DEBUG] MCTS iteration 35: Backed up Finish.
2025-04-11 20:13:25,533 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:25,541 [INFO] Final candidates: []
2025-04-11 20:13:25,541 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:25,541 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:25,541 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:25,541 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:25,542 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:25,542 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:25,542 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:25,542 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:25,542 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:25,542 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:25,542 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:25,543 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:25,543 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:25,543 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:25,543 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:25,543 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:25,543 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:25,543 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:25,543 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:25,543 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:25,543 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:25,543 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:25,543 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:25,550 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:25,550 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:25,550 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(8)), (np.int64(12), np.int64(11)))
2025-04-11 20:13:25,550 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:25,627 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:25,627 [DEBUG] MCTS iteration 36: Rollout reward: 1.
2025-04-11 20:13:25,627 [DEBUG] MCTS iteration 36: Backed up Finish.
2025-04-11 20:13:25,628 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:25,636 [INFO] Final candidates: []
2025-04-11 20:13:25,636 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:25,636 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:25,636 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:25,637 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:25,637 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:25,637 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:25,637 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:25,637 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:25,637 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:25,637 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:25,637 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:25,638 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:25,638 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:25,638 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:25,638 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:25,638 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:25,638 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:25,638 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:25,638 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:25,638 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:25,638 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:25,638 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:25,638 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:25,645 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:25,645 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:25,645 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(11)), (np.int64(2), np.int64(14)))
2025-04-11 20:13:25,645 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:25,788 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:25,789 [DEBUG] MCTS iteration 37: Rollout reward: 0.
2025-04-11 20:13:25,789 [DEBUG] MCTS iteration 37: Backed up Finish.
2025-04-11 20:13:25,789 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:25,797 [INFO] Final candidates: []
2025-04-11 20:13:25,797 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:25,797 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:25,797 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:25,797 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:25,797 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:25,797 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:25,797 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:25,797 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:25,797 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:25,797 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:25,797 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:25,799 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:25,799 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:25,799 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:25,799 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:25,799 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:25,799 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:25,799 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:25,799 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:25,799 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:25,799 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:25,799 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:25,799 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:25,805 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:25,805 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:25,806 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(3), np.int64(17)), (np.int64(5), np.int64(16)))
2025-04-11 20:13:25,806 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:25,847 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:25,847 [DEBUG] MCTS iteration 38: Rollout reward: 1.
2025-04-11 20:13:25,847 [DEBUG] MCTS iteration 38: Backed up Finish.
2025-04-11 20:13:25,847 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:25,855 [INFO] Final candidates: []
2025-04-11 20:13:25,855 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:25,856 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:25,856 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:25,856 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:25,856 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:25,856 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:25,856 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:25,856 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:25,856 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:25,856 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:25,856 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:25,857 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:25,857 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:25,857 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:25,857 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:25,857 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:25,857 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:25,857 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:25,857 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:25,857 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:25,857 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:25,857 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:25,857 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:25,864 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:25,864 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:25,864 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(8)), (np.int64(16), np.int64(9)))
2025-04-11 20:13:25,865 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:25,897 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:25,897 [DEBUG] MCTS iteration 39: Rollout reward: 1.
2025-04-11 20:13:25,897 [DEBUG] MCTS iteration 39: Backed up Finish.
2025-04-11 20:13:25,897 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:25,905 [INFO] Final candidates: []
2025-04-11 20:13:25,905 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:25,905 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:25,905 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:25,905 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:25,905 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:25,905 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:25,906 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:25,906 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:25,906 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:25,906 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:25,906 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:25,907 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:25,907 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:25,907 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:25,907 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:25,907 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:25,907 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:25,907 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:25,907 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:25,907 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:25,907 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:25,907 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:25,907 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:25,913 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:25,913 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:25,914 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(4), np.int64(18)), (np.int64(9), np.int64(7)))
2025-04-11 20:13:25,914 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:25,915 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:25,915 [DEBUG] MCTS iteration 40: Rollout reward: 1.
2025-04-11 20:13:25,915 [DEBUG] MCTS iteration 40: Backed up Finish.
2025-04-11 20:13:25,915 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:25,923 [INFO] Final candidates: []
2025-04-11 20:13:25,923 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:25,923 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:25,924 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:25,924 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:25,924 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:25,924 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:25,924 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:25,924 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:25,924 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:25,924 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:25,924 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:25,925 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:25,925 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:25,925 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:25,925 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:25,925 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:25,925 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:25,925 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:25,925 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:25,925 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:25,925 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:25,925 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:25,925 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:25,932 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:25,932 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:25,932 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(8)), (np.int64(5), np.int64(17)))
2025-04-11 20:13:25,932 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:26,019 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:26,020 [DEBUG] MCTS iteration 41: Rollout reward: 1.
2025-04-11 20:13:26,020 [DEBUG] MCTS iteration 41: Backed up Finish.
2025-04-11 20:13:26,020 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:26,030 [INFO] Final candidates: []
2025-04-11 20:13:26,030 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:26,030 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:26,030 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:26,030 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:26,030 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:26,030 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:26,030 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:26,030 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:26,030 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:26,030 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:26,030 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:26,032 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:26,032 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:26,032 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:26,032 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:26,032 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:26,032 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:26,032 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:26,032 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:26,032 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:26,032 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:26,032 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:26,032 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:26,042 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:26,042 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:26,042 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(17), np.int64(2)), (np.int64(8), np.int64(8)))
2025-04-11 20:13:26,042 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:26,068 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:26,068 [DEBUG] MCTS iteration 42: Rollout reward: 1.
2025-04-11 20:13:26,068 [DEBUG] MCTS iteration 42: Backed up Finish.
2025-04-11 20:13:26,068 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:26,076 [INFO] Final candidates: []
2025-04-11 20:13:26,076 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:26,077 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:26,077 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:26,077 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:26,077 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:26,077 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:26,077 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:26,077 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:26,077 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:26,077 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:26,077 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:26,078 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:26,078 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:26,078 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:26,078 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:26,078 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:26,078 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:26,078 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:26,078 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:26,078 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:26,078 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:26,078 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:26,078 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:26,085 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:26,085 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:26,085 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(7)), (np.int64(9), np.int64(13)))
2025-04-11 20:13:26,085 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:26,226 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:26,226 [DEBUG] MCTS iteration 43: Rollout reward: 0.
2025-04-11 20:13:26,226 [DEBUG] MCTS iteration 43: Backed up Finish.
2025-04-11 20:13:26,226 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:26,234 [INFO] Final candidates: []
2025-04-11 20:13:26,235 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:26,235 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:26,235 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:26,235 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:26,235 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:26,235 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:26,236 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:26,236 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:26,236 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:26,236 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:26,236 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:26,237 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:26,237 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:26,238 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:26,238 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:26,238 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:26,238 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:26,238 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:26,238 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:26,238 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:26,238 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:26,238 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:26,238 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:26,244 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:26,244 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:26,244 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(2), np.int64(14)), (np.int64(2), np.int64(16)))
2025-04-11 20:13:26,245 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:26,468 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:26,468 [DEBUG] MCTS iteration 44: Rollout reward: 1.
2025-04-11 20:13:26,468 [DEBUG] MCTS iteration 44: Backed up Finish.
2025-04-11 20:13:26,468 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:26,476 [INFO] Final candidates: []
2025-04-11 20:13:26,477 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:26,477 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:26,477 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:26,477 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:26,477 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:26,477 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:26,477 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:26,477 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:26,477 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:26,477 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:26,477 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:26,478 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:26,479 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:26,479 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:26,479 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:26,479 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:26,479 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:26,479 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:26,479 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:26,479 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:26,479 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:26,479 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:26,479 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:26,486 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:26,486 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:26,486 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(11)), (np.int64(16), np.int64(9)))
2025-04-11 20:13:26,487 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:26,563 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:26,563 [DEBUG] MCTS iteration 45: Rollout reward: 1.
2025-04-11 20:13:26,563 [DEBUG] MCTS iteration 45: Backed up Finish.
2025-04-11 20:13:26,563 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:26,571 [INFO] Final candidates: []
2025-04-11 20:13:26,571 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:26,572 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:26,572 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:26,572 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:26,572 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:26,572 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:26,572 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:26,572 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:26,572 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:26,572 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:26,572 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:26,573 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:26,573 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:26,573 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:26,573 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:26,573 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:26,573 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:26,573 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:26,573 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:26,573 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:26,573 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:26,573 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:26,574 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:26,580 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:26,580 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:26,580 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(8)), (np.int64(14), np.int64(11)))
2025-04-11 20:13:26,581 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:26,776 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:26,776 [DEBUG] MCTS iteration 46: Rollout reward: 0.
2025-04-11 20:13:26,776 [DEBUG] MCTS iteration 46: Backed up Finish.
2025-04-11 20:13:26,776 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:26,784 [INFO] Final candidates: []
2025-04-11 20:13:26,784 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:26,785 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:26,785 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:26,785 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:26,785 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:26,785 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:26,785 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:26,785 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:26,785 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:26,785 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:26,785 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:26,786 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:26,786 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:26,786 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:26,786 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:26,786 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:26,786 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:26,786 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:26,786 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:26,786 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:26,786 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:26,786 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:26,786 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:26,793 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:26,793 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:26,793 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(3), np.int64(14)), (np.int64(7), np.int64(8)))
2025-04-11 20:13:26,794 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:26,830 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:26,831 [DEBUG] MCTS iteration 47: Rollout reward: 1.
2025-04-11 20:13:26,831 [DEBUG] MCTS iteration 47: Backed up Finish.
2025-04-11 20:13:26,831 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:26,839 [INFO] Final candidates: []
2025-04-11 20:13:26,839 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:26,839 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:26,839 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:26,839 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:26,839 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:26,840 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:26,840 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:26,840 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:26,840 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:26,840 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:26,840 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:26,841 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:26,841 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:26,841 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:26,841 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:26,841 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:26,841 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:26,841 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:26,841 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:26,841 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:26,841 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:26,841 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:26,841 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:26,847 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:26,847 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:26,848 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(10)), (np.int64(16), np.int64(9)))
2025-04-11 20:13:26,848 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:26,876 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:26,877 [DEBUG] MCTS iteration 48: Rollout reward: 1.
2025-04-11 20:13:26,877 [DEBUG] MCTS iteration 48: Backed up Finish.
2025-04-11 20:13:26,877 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:26,885 [INFO] Final candidates: []
2025-04-11 20:13:26,885 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:26,886 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:26,886 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:26,886 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:26,886 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:26,886 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:26,886 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:26,886 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:26,886 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:26,886 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:26,886 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:26,887 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:26,887 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:26,887 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:26,887 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:26,887 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:26,887 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:26,887 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:26,887 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:26,887 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:26,887 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:26,887 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:26,887 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:26,894 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:26,894 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:26,894 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(14)), (np.int64(6), np.int64(14)))
2025-04-11 20:13:26,895 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:27,097 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:27,097 [DEBUG] MCTS iteration 49: Rollout reward: 1.
2025-04-11 20:13:27,097 [DEBUG] MCTS iteration 49: Backed up Finish.
2025-04-11 20:13:27,097 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:27,105 [INFO] Final candidates: []
2025-04-11 20:13:27,105 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:27,106 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:27,106 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:27,106 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:27,106 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:27,106 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:27,106 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:27,106 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:27,106 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:27,106 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:27,106 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:27,107 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:27,107 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:27,107 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:27,107 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:27,107 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:27,107 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:27,107 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:27,107 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:27,107 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:27,107 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:27,107 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:27,107 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:27,114 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:27,114 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:27,114 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(11)), (np.int64(8), np.int64(7)))
2025-04-11 20:13:27,114 [DEBUG] MCTS iteration 50: reached a node with 0 visits.
2025-04-11 20:13:27,114 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:27,132 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:27,132 [DEBUG] MCTS iteration 50: Rollout reward: 1.
2025-04-11 20:13:27,132 [DEBUG] MCTS iteration 50: Backed up Finish.
2025-04-11 20:13:27,132 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:27,140 [INFO] Final candidates: []
2025-04-11 20:13:27,140 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:27,141 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:27,141 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:27,141 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:27,141 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:27,141 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:27,141 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:27,141 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:27,141 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:27,141 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:27,141 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:27,142 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:27,142 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:27,142 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:27,142 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:27,142 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:27,142 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:27,142 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:27,142 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:27,142 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:27,142 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:27,142 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:27,142 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:27,149 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:27,149 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:27,149 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(3), np.int64(14)), (np.int64(16), np.int64(11)))
2025-04-11 20:13:27,149 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:27,158 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:27,159 [DEBUG] MCTS iteration 51: Rollout reward: 1.
2025-04-11 20:13:27,159 [DEBUG] MCTS iteration 51: Backed up Finish.
2025-04-11 20:13:27,159 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:27,167 [INFO] Final candidates: []
2025-04-11 20:13:27,167 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:27,168 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:27,168 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:27,168 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:27,168 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:27,168 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:27,168 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:27,168 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:27,168 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:27,168 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:27,168 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:27,170 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:27,170 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:27,170 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:27,170 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:27,170 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:27,170 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:27,170 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:27,170 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:27,170 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:27,170 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:27,170 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:27,170 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:27,176 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:27,176 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:27,177 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(12)), (np.int64(16), np.int64(1)))
2025-04-11 20:13:27,177 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:27,334 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:27,334 [DEBUG] MCTS iteration 52: Rollout reward: 0.
2025-04-11 20:13:27,334 [DEBUG] MCTS iteration 52: Backed up Finish.
2025-04-11 20:13:27,334 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:27,342 [INFO] Final candidates: []
2025-04-11 20:13:27,342 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:27,343 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:27,343 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:27,343 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:27,343 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:27,343 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:27,343 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:27,343 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:27,343 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:27,343 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:27,343 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:27,344 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:27,344 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:27,344 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:27,344 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:27,344 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:27,344 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:27,345 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:27,345 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:27,345 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:27,345 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:27,345 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:27,345 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:27,351 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:27,351 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:27,351 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(3), np.int64(16)), (np.int64(16), np.int64(11)))
2025-04-11 20:13:27,352 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:27,354 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:27,354 [DEBUG] MCTS iteration 53: Rollout reward: 1.
2025-04-11 20:13:27,354 [DEBUG] MCTS iteration 53: Backed up Finish.
2025-04-11 20:13:27,354 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:27,362 [INFO] Final candidates: []
2025-04-11 20:13:27,362 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:27,363 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:27,363 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:27,363 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:27,363 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:27,363 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:27,363 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:27,363 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:27,363 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:27,363 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:27,363 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:27,364 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:27,364 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:27,364 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:27,364 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:27,364 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:27,364 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:27,364 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:27,364 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:27,364 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:27,364 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:27,364 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:27,364 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:27,371 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:27,371 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:27,371 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(10)), (np.int64(5), np.int64(15)))
2025-04-11 20:13:27,371 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:27,373 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:27,373 [DEBUG] MCTS iteration 54: Rollout reward: 1.
2025-04-11 20:13:27,373 [DEBUG] MCTS iteration 54: Backed up Finish.
2025-04-11 20:13:27,373 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:27,381 [INFO] Final candidates: []
2025-04-11 20:13:27,381 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:27,382 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:27,382 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:27,382 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:27,382 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:27,382 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:27,382 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:27,382 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:27,382 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:27,382 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:27,382 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:27,383 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:27,383 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:27,383 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:27,383 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:27,383 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:27,383 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:27,383 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:27,384 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:27,384 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:27,384 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:27,384 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:27,384 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:27,390 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:27,390 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:27,390 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(10)), (np.int64(16), np.int64(1)))
2025-04-11 20:13:27,391 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:27,611 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:27,611 [DEBUG] MCTS iteration 55: Rollout reward: 0.
2025-04-11 20:13:27,611 [DEBUG] MCTS iteration 55: Backed up Finish.
2025-04-11 20:13:27,611 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:27,619 [INFO] Final candidates: []
2025-04-11 20:13:27,619 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:27,620 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:27,620 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:27,620 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:27,620 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:27,620 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:27,620 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:27,620 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:27,620 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:27,620 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:27,620 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:27,621 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:27,621 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:27,621 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:27,621 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:27,621 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:27,621 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:27,621 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:27,621 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:27,621 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:27,621 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:27,621 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:27,621 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:27,628 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:27,628 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:27,628 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(12)), (np.int64(16), np.int64(11)))
2025-04-11 20:13:27,629 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:27,629 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:27,629 [DEBUG] MCTS iteration 56: Rollout reward: 1.
2025-04-11 20:13:27,629 [DEBUG] MCTS iteration 56: Backed up Finish.
2025-04-11 20:13:27,629 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:27,637 [INFO] Final candidates: []
2025-04-11 20:13:27,637 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:27,638 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:27,638 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:27,638 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:27,638 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:27,638 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:27,638 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:27,638 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:27,638 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:27,638 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:27,638 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:27,639 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:27,639 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:27,639 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:27,639 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:27,639 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:27,639 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:27,640 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:27,640 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:27,640 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:27,640 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:27,640 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:27,640 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:27,646 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:27,646 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:27,646 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(8)), (np.int64(12), np.int64(8)))
2025-04-11 20:13:27,647 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:27,816 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:27,817 [DEBUG] MCTS iteration 57: Rollout reward: 1.
2025-04-11 20:13:27,817 [DEBUG] MCTS iteration 57: Backed up Finish.
2025-04-11 20:13:27,817 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:27,825 [INFO] Final candidates: []
2025-04-11 20:13:27,825 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:27,825 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:27,825 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:27,825 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:27,826 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:27,826 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:27,826 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:27,826 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:27,826 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:27,826 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:27,826 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:27,827 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:27,827 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:27,827 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:27,827 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:27,827 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:27,827 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:27,827 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:27,827 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:27,827 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:27,827 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:27,827 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:27,827 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:27,833 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:27,834 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:27,834 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(6)), (np.int64(14), np.int64(10)))
2025-04-11 20:13:27,834 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:27,953 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:27,953 [DEBUG] MCTS iteration 58: Rollout reward: 0.
2025-04-11 20:13:27,953 [DEBUG] MCTS iteration 58: Backed up Finish.
2025-04-11 20:13:27,953 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:27,961 [INFO] Final candidates: []
2025-04-11 20:13:27,961 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:27,962 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:27,962 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:27,962 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:27,962 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:27,962 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:27,962 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:27,962 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:27,962 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:27,962 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:27,962 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:27,963 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:27,963 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:27,963 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:27,963 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:27,963 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:27,963 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:27,963 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:27,963 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:27,963 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:27,963 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:27,963 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:27,963 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:27,970 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:27,970 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:27,970 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(8)), (np.int64(8), np.int64(12)))
2025-04-11 20:13:27,971 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:28,257 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:28,257 [DEBUG] MCTS iteration 59: Rollout reward: 0.
2025-04-11 20:13:28,257 [DEBUG] MCTS iteration 59: Backed up Finish.
2025-04-11 20:13:28,257 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:28,265 [INFO] Final candidates: []
2025-04-11 20:13:28,265 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:28,266 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:28,266 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:28,266 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:28,266 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:28,266 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:28,266 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:28,266 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:28,266 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:28,266 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:28,266 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:28,267 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:28,267 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:28,267 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:28,267 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:28,267 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:28,268 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:28,268 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:28,268 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:28,268 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:28,268 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:28,268 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:28,268 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:28,274 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:28,274 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:28,274 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(3), np.int64(15)), (np.int64(15), np.int64(12)))
2025-04-11 20:13:28,275 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:28,278 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:28,279 [DEBUG] MCTS iteration 60: Rollout reward: 1.
2025-04-11 20:13:28,279 [DEBUG] MCTS iteration 60: Backed up Finish.
2025-04-11 20:13:28,279 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:28,287 [INFO] Final candidates: []
2025-04-11 20:13:28,287 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:28,288 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:28,288 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:28,288 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:28,288 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:28,288 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:28,288 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:28,288 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:28,288 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:28,288 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:28,288 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:28,289 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:28,289 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:28,289 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:28,289 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:28,289 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:28,289 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:28,289 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:28,289 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:28,289 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:28,289 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:28,289 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:28,289 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:28,296 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:28,296 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:28,296 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(10)), (np.int64(7), np.int64(8)))
2025-04-11 20:13:28,296 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:28,388 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:28,388 [DEBUG] MCTS iteration 61: Rollout reward: 1.
2025-04-11 20:13:28,388 [DEBUG] MCTS iteration 61: Backed up Finish.
2025-04-11 20:13:28,388 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:28,396 [INFO] Final candidates: []
2025-04-11 20:13:28,396 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:28,397 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:28,397 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:28,397 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:28,397 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:28,397 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:28,397 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:28,397 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:28,397 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:28,397 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:28,397 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:28,398 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:28,398 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:28,398 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:28,398 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:28,398 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:28,398 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:28,398 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:28,398 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:28,398 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:28,398 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:28,398 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:28,398 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:28,405 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:28,405 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:28,405 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(13)), (np.int64(4), np.int64(12)))
2025-04-11 20:13:28,406 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:28,432 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:28,432 [DEBUG] MCTS iteration 62: Rollout reward: 1.
2025-04-11 20:13:28,432 [DEBUG] MCTS iteration 62: Backed up Finish.
2025-04-11 20:13:28,432 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:28,440 [INFO] Final candidates: []
2025-04-11 20:13:28,440 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:28,441 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:28,441 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:28,441 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:28,441 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:28,441 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:28,441 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:28,441 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:28,441 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:28,441 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:28,441 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:28,442 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:28,442 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:28,442 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:28,442 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:28,442 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:28,442 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:28,442 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:28,442 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:28,443 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:28,443 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:28,443 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:28,443 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:28,449 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:28,449 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:28,449 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(4), np.int64(15)), (np.int64(9), np.int64(6)))
2025-04-11 20:13:28,450 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:28,552 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:28,552 [DEBUG] MCTS iteration 63: Rollout reward: 0.
2025-04-11 20:13:28,552 [DEBUG] MCTS iteration 63: Backed up Finish.
2025-04-11 20:13:28,552 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:28,560 [INFO] Final candidates: []
2025-04-11 20:13:28,560 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:28,561 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:28,561 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:28,561 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:28,561 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:28,561 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:28,561 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:28,561 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:28,561 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:28,561 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:28,561 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:28,562 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:28,562 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:28,562 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:28,562 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:28,562 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:28,562 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:28,562 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:28,562 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:28,562 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:28,562 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:28,562 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:28,562 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:28,569 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:28,569 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:28,569 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(3), np.int64(15)), (np.int64(10), np.int64(9)))
2025-04-11 20:13:28,570 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:28,646 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:28,646 [DEBUG] MCTS iteration 64: Rollout reward: 1.
2025-04-11 20:13:28,646 [DEBUG] MCTS iteration 64: Backed up Finish.
2025-04-11 20:13:28,646 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:28,654 [INFO] Final candidates: []
2025-04-11 20:13:28,654 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:28,655 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:28,655 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:28,655 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:28,655 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:28,655 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:28,655 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:28,655 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:28,655 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:28,655 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:28,655 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:28,656 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:28,656 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:28,656 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:28,657 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:28,657 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:28,657 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:28,657 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:28,657 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:28,657 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:28,657 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:28,657 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:28,657 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:28,663 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:28,663 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:28,664 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(18), np.int64(0)), (np.int64(10), np.int64(13)))
2025-04-11 20:13:28,664 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:28,722 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:28,723 [DEBUG] MCTS iteration 65: Rollout reward: 1.
2025-04-11 20:13:28,723 [DEBUG] MCTS iteration 65: Backed up Finish.
2025-04-11 20:13:28,723 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:28,734 [INFO] Final candidates: []
2025-04-11 20:13:28,734 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:28,734 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:28,734 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:28,734 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:28,734 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:28,734 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:28,734 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:28,734 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:28,734 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:28,734 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:28,734 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:28,736 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:28,736 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:28,736 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:28,736 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:28,736 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:28,736 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:28,736 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:28,736 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:28,736 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:28,736 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:28,736 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:28,736 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:28,742 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:28,743 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:28,743 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(8)), (np.int64(16), np.int64(9)))
2025-04-11 20:13:28,743 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:28,839 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:28,839 [DEBUG] MCTS iteration 66: Rollout reward: 1.
2025-04-11 20:13:28,839 [DEBUG] MCTS iteration 66: Backed up Finish.
2025-04-11 20:13:28,840 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:28,848 [INFO] Final candidates: []
2025-04-11 20:13:28,848 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:28,848 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:28,848 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:28,848 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:28,848 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:28,848 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:28,848 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:28,848 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:28,848 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:28,849 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:28,849 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:28,850 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:28,850 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:28,850 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:28,850 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:28,850 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:28,850 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:28,850 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:28,850 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:28,850 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:28,850 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:28,850 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:28,850 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:28,856 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:28,856 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:28,856 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(11)), (np.int64(6), np.int64(16)))
2025-04-11 20:13:28,857 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:28,940 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:28,940 [DEBUG] MCTS iteration 67: Rollout reward: 1.
2025-04-11 20:13:28,940 [DEBUG] MCTS iteration 67: Backed up Finish.
2025-04-11 20:13:28,940 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:28,949 [INFO] Final candidates: []
2025-04-11 20:13:28,949 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:28,950 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:28,950 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:28,950 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:28,950 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:28,950 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:28,950 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:28,950 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:28,950 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:28,950 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:28,950 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:28,951 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:28,951 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:28,951 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:28,951 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:28,951 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:28,951 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:28,951 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:28,951 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:28,952 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:28,952 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:28,952 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:28,952 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:28,961 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:28,961 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:28,961 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(11)), (np.int64(12), np.int64(9)))
2025-04-11 20:13:28,961 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:29,107 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:29,107 [DEBUG] MCTS iteration 68: Rollout reward: 0.
2025-04-11 20:13:29,107 [DEBUG] MCTS iteration 68: Backed up Finish.
2025-04-11 20:13:29,107 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:29,115 [INFO] Final candidates: []
2025-04-11 20:13:29,115 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:29,115 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:29,115 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:29,115 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:29,116 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:29,116 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:29,116 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:29,116 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:29,116 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:29,116 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:29,116 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:29,117 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:29,117 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:29,117 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:29,117 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:29,117 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:29,117 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:29,117 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:29,117 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:29,117 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:29,117 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:29,117 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:29,117 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:29,123 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:29,123 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:29,124 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(3), np.int64(17)), (np.int64(17), np.int64(10)))
2025-04-11 20:13:29,124 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:29,145 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:29,146 [DEBUG] MCTS iteration 69: Rollout reward: 1.
2025-04-11 20:13:29,146 [DEBUG] MCTS iteration 69: Backed up Finish.
2025-04-11 20:13:29,146 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:29,154 [INFO] Final candidates: []
2025-04-11 20:13:29,154 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:29,154 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:29,154 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:29,154 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:29,154 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:29,154 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:29,154 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:29,154 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:29,154 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:29,154 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:29,154 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:29,156 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:29,156 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:29,156 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:29,156 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:29,156 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:29,156 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:29,156 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:29,156 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:29,156 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:29,156 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:29,156 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:29,156 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:29,162 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:29,163 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:29,163 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(12)), (np.int64(18), np.int64(0)))
2025-04-11 20:13:29,163 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:29,176 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:29,176 [DEBUG] MCTS iteration 70: Rollout reward: 1.
2025-04-11 20:13:29,176 [DEBUG] MCTS iteration 70: Backed up Finish.
2025-04-11 20:13:29,176 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:29,184 [INFO] Final candidates: []
2025-04-11 20:13:29,184 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:29,185 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:29,185 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:29,185 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:29,185 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:29,185 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:29,185 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:29,185 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:29,185 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:29,185 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:29,185 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:29,186 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:29,186 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:29,186 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:29,186 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:29,186 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:29,186 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:29,186 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:29,186 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:29,186 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:29,186 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:29,186 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:29,186 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:29,193 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:29,193 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:29,193 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(4), np.int64(10)), (np.int64(6), np.int64(16)))
2025-04-11 20:13:29,194 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:29,246 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:29,246 [DEBUG] MCTS iteration 71: Rollout reward: 1.
2025-04-11 20:13:29,246 [DEBUG] MCTS iteration 71: Backed up Finish.
2025-04-11 20:13:29,246 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:29,254 [INFO] Final candidates: []
2025-04-11 20:13:29,254 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:29,255 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:29,255 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:29,255 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:29,255 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:29,255 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:29,255 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:29,255 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:29,255 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:29,255 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:29,255 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:29,256 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:29,256 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:29,256 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:29,256 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:29,256 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:29,256 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:29,256 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:29,257 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:29,257 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:29,257 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:29,257 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:29,257 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:29,263 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:29,263 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:29,263 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(10)), (np.int64(8), np.int64(8)))
2025-04-11 20:13:29,264 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:29,421 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:29,421 [DEBUG] MCTS iteration 72: Rollout reward: 0.
2025-04-11 20:13:29,421 [DEBUG] MCTS iteration 72: Backed up Finish.
2025-04-11 20:13:29,421 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:29,429 [INFO] Final candidates: []
2025-04-11 20:13:29,429 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:29,430 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:29,430 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:29,430 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:29,430 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:29,430 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:29,430 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:29,430 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:29,430 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:29,430 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:29,430 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:29,431 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:29,431 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:29,431 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:29,431 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:29,431 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:29,431 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:29,431 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:29,431 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:29,431 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:29,431 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:29,431 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:29,431 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:29,438 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:29,438 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:29,438 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(13)), (np.int64(11), np.int64(11)))
2025-04-11 20:13:29,439 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:29,630 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:29,631 [DEBUG] MCTS iteration 73: Rollout reward: 0.
2025-04-11 20:13:29,631 [DEBUG] MCTS iteration 73: Backed up Finish.
2025-04-11 20:13:29,631 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:29,639 [INFO] Final candidates: []
2025-04-11 20:13:29,639 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:29,639 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:29,639 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:29,639 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:29,639 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:29,639 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:29,639 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:29,640 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:29,640 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:29,640 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:29,640 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:29,641 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:29,641 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:29,641 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:29,641 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:29,641 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:29,641 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:29,641 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:29,641 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:29,641 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:29,641 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:29,641 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:29,641 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:29,647 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:29,647 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:29,648 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(10)), (np.int64(4), np.int64(12)))
2025-04-11 20:13:29,648 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:29,659 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:29,659 [DEBUG] MCTS iteration 74: Rollout reward: 0.
2025-04-11 20:13:29,659 [DEBUG] MCTS iteration 74: Backed up Finish.
2025-04-11 20:13:29,660 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:29,667 [INFO] Final candidates: []
2025-04-11 20:13:29,667 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:29,668 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:29,668 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:29,668 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:29,668 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:29,668 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:29,668 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:29,668 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:29,668 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:29,668 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:29,668 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:29,669 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:29,669 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:29,669 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:29,669 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:29,669 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:29,670 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:29,670 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:29,670 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:29,670 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:29,670 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:29,670 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:29,670 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:29,676 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:29,676 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:29,676 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(7)), (np.int64(17), np.int64(1)))
2025-04-11 20:13:29,677 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:29,785 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:29,786 [DEBUG] MCTS iteration 75: Rollout reward: 0.
2025-04-11 20:13:29,786 [DEBUG] MCTS iteration 75: Backed up Finish.
2025-04-11 20:13:29,786 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:29,794 [INFO] Final candidates: []
2025-04-11 20:13:29,794 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:29,794 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:29,794 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:29,794 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:29,794 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:29,794 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:29,795 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:29,795 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:29,795 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:29,795 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:29,795 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:29,796 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:29,796 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:29,796 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:29,796 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:29,796 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:29,796 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:29,796 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:29,796 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:29,796 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:29,796 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:29,796 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:29,796 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:29,802 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:29,803 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:29,803 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(7)), (np.int64(5), np.int64(9)))
2025-04-11 20:13:29,803 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:29,807 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:29,807 [DEBUG] MCTS iteration 76: Rollout reward: 1.
2025-04-11 20:13:29,807 [DEBUG] MCTS iteration 76: Backed up Finish.
2025-04-11 20:13:29,807 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:29,815 [INFO] Final candidates: []
2025-04-11 20:13:29,815 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:29,816 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:29,816 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:29,816 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:29,816 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:29,816 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:29,816 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:29,816 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:29,816 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:29,816 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:29,816 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:29,817 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:29,817 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:29,817 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:29,817 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:29,817 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:29,817 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:29,817 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:29,817 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:29,817 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:29,817 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:29,817 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:29,817 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:29,825 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:29,825 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:29,825 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(14)), (np.int64(4), np.int64(12)))
2025-04-11 20:13:29,825 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:29,876 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:29,877 [DEBUG] MCTS iteration 77: Rollout reward: 1.
2025-04-11 20:13:29,877 [DEBUG] MCTS iteration 77: Backed up Finish.
2025-04-11 20:13:29,877 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:29,886 [INFO] Final candidates: []
2025-04-11 20:13:29,886 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:29,886 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:29,886 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:29,886 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:29,887 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:29,887 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:29,887 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:29,887 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:29,887 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:29,887 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:29,887 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:29,888 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:29,888 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:29,888 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:29,888 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:29,888 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:29,888 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:29,888 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:29,888 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:29,888 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:29,889 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:29,889 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:29,889 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:29,896 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:29,896 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:29,896 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(11)), (np.int64(14), np.int64(10)))
2025-04-11 20:13:29,897 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:30,037 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:30,038 [DEBUG] MCTS iteration 78: Rollout reward: 0.
2025-04-11 20:13:30,038 [DEBUG] MCTS iteration 78: Backed up Finish.
2025-04-11 20:13:30,038 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:30,046 [INFO] Final candidates: []
2025-04-11 20:13:30,046 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:30,046 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:30,046 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:30,046 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:30,047 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:30,047 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:30,047 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:30,047 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:30,047 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:30,047 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:30,047 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:30,048 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:30,048 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:30,048 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:30,048 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:30,048 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:30,048 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:30,048 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:30,048 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:30,048 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:30,048 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:30,048 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:30,048 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:30,054 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:30,054 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:30,055 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(3), np.int64(15)), (np.int64(9), np.int64(6)))
2025-04-11 20:13:30,055 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:30,241 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:30,241 [DEBUG] MCTS iteration 79: Rollout reward: 1.
2025-04-11 20:13:30,241 [DEBUG] MCTS iteration 79: Backed up Finish.
2025-04-11 20:13:30,241 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:30,251 [INFO] Final candidates: []
2025-04-11 20:13:30,251 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:30,252 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:30,252 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:30,252 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:30,252 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:30,252 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:30,252 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:30,252 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:30,252 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:30,252 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:30,252 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:30,254 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:30,256 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:30,256 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:30,256 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:30,256 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:30,256 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:30,256 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:30,256 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:30,256 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:30,256 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:30,256 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:30,256 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:30,263 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:30,263 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:30,263 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(8)), (np.int64(10), np.int64(7)))
2025-04-11 20:13:30,264 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:30,369 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:30,369 [DEBUG] MCTS iteration 80: Rollout reward: 1.
2025-04-11 20:13:30,369 [DEBUG] MCTS iteration 80: Backed up Finish.
2025-04-11 20:13:30,369 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:30,377 [INFO] Final candidates: []
2025-04-11 20:13:30,377 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:30,377 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:30,377 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:30,377 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:30,378 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:30,378 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:30,378 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:30,378 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:30,378 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:30,378 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:30,378 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:30,379 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:30,379 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:30,379 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:30,379 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:30,379 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:30,379 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:30,379 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:30,379 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:30,379 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:30,379 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:30,379 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:30,379 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:30,386 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:30,386 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:30,386 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(10)), (np.int64(15), np.int64(0)))
2025-04-11 20:13:30,387 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:30,469 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:30,470 [DEBUG] MCTS iteration 81: Rollout reward: 1.
2025-04-11 20:13:30,470 [DEBUG] MCTS iteration 81: Backed up Finish.
2025-04-11 20:13:30,470 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:30,478 [INFO] Final candidates: []
2025-04-11 20:13:30,478 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:30,478 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:30,478 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:30,478 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:30,479 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:30,479 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:30,479 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:30,479 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:30,479 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:30,479 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:30,479 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:30,480 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:30,480 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:30,480 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:30,480 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:30,480 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:30,480 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:30,480 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:30,480 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:30,480 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:30,480 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:30,480 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:30,480 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:30,487 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:30,487 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:30,487 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(12)), (np.int64(6), np.int64(9)))
2025-04-11 20:13:30,487 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:30,710 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:30,710 [DEBUG] MCTS iteration 82: Rollout reward: 1.
2025-04-11 20:13:30,710 [DEBUG] MCTS iteration 82: Backed up Finish.
2025-04-11 20:13:30,710 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:30,719 [INFO] Final candidates: []
2025-04-11 20:13:30,719 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:30,719 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:30,719 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:30,719 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:30,719 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:30,719 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:30,719 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:30,719 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:30,719 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:30,719 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:30,719 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:30,721 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:30,721 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:30,721 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:30,721 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:30,721 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:30,721 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:30,721 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:30,721 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:30,721 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:30,721 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:30,721 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:30,721 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:30,727 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:30,727 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:30,728 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(10)), (np.int64(3), np.int64(16)))
2025-04-11 20:13:30,728 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:30,817 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:30,817 [DEBUG] MCTS iteration 83: Rollout reward: 0.
2025-04-11 20:13:30,817 [DEBUG] MCTS iteration 83: Backed up Finish.
2025-04-11 20:13:30,818 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:30,825 [INFO] Final candidates: []
2025-04-11 20:13:30,825 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:30,826 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:30,826 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:30,826 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:30,826 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:30,826 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:30,826 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:30,826 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:30,826 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:30,826 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:30,826 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:30,827 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:30,827 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:30,827 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:30,827 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:30,827 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:30,828 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:30,828 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:30,828 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:30,828 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:30,828 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:30,828 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:30,828 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:30,834 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:30,834 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:30,834 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(10)), (np.int64(5), np.int64(9)))
2025-04-11 20:13:30,835 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:30,838 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:30,838 [DEBUG] MCTS iteration 84: Rollout reward: 1.
2025-04-11 20:13:30,838 [DEBUG] MCTS iteration 84: Backed up Finish.
2025-04-11 20:13:30,838 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:30,846 [INFO] Final candidates: []
2025-04-11 20:13:30,846 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:30,847 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:30,847 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:30,847 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:30,847 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:30,847 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:30,847 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:30,847 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:30,847 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:30,847 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:30,847 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:30,848 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:30,848 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:30,848 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:30,848 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:30,848 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:30,848 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:30,848 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:30,848 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:30,848 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:30,848 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:30,848 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:30,848 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:30,855 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:30,855 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:30,855 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(3), np.int64(16)), (np.int64(10), np.int64(13)))
2025-04-11 20:13:30,856 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:31,112 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:31,113 [DEBUG] MCTS iteration 85: Rollout reward: 1.
2025-04-11 20:13:31,113 [DEBUG] MCTS iteration 85: Backed up Finish.
2025-04-11 20:13:31,113 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:31,121 [INFO] Final candidates: []
2025-04-11 20:13:31,121 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:31,121 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:31,121 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:31,121 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:31,121 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:31,121 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:31,122 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:31,122 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:31,122 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:31,122 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:31,122 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:31,123 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:31,123 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:31,123 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:31,123 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:31,123 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:31,123 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:31,123 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:31,123 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:31,123 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:31,123 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:31,123 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:31,123 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:31,129 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:31,129 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:31,130 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(8)), (np.int64(5), np.int64(17)))
2025-04-11 20:13:31,130 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:31,208 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:31,208 [DEBUG] MCTS iteration 86: Rollout reward: 1.
2025-04-11 20:13:31,208 [DEBUG] MCTS iteration 86: Backed up Finish.
2025-04-11 20:13:31,208 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:31,216 [INFO] Final candidates: []
2025-04-11 20:13:31,216 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:31,217 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:31,217 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:31,217 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:31,217 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:31,217 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:31,217 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:31,217 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:31,217 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:31,217 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:31,217 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:31,218 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:31,218 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:31,218 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:31,218 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:31,218 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:31,218 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:31,218 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:31,218 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:31,218 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:31,218 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:31,218 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:31,218 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:31,225 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:31,225 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:31,225 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(8)), (np.int64(11), np.int64(8)))
2025-04-11 20:13:31,225 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:31,253 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:31,253 [DEBUG] MCTS iteration 87: Rollout reward: 1.
2025-04-11 20:13:31,253 [DEBUG] MCTS iteration 87: Backed up Finish.
2025-04-11 20:13:31,253 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:31,261 [INFO] Final candidates: []
2025-04-11 20:13:31,261 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:31,261 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:31,261 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:31,261 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:31,261 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:31,262 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:31,262 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:31,262 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:31,262 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:31,262 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:31,262 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:31,263 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:31,263 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:31,263 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:31,263 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:31,263 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:31,263 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:31,263 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:31,263 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:31,263 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:31,263 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:31,263 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:31,263 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:31,269 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:31,269 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:31,270 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(14)), (np.int64(7), np.int64(8)))
2025-04-11 20:13:31,270 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:31,335 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:31,335 [DEBUG] MCTS iteration 88: Rollout reward: 0.
2025-04-11 20:13:31,335 [DEBUG] MCTS iteration 88: Backed up Finish.
2025-04-11 20:13:31,336 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:31,343 [INFO] Final candidates: []
2025-04-11 20:13:31,344 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:31,344 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:31,344 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:31,344 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:31,344 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:31,344 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:31,344 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:31,344 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:31,344 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:31,344 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:31,344 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:31,345 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:31,346 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:31,346 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:31,346 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:31,346 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:31,346 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:31,346 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:31,346 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:31,346 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:31,346 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:31,346 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:31,346 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:31,352 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:31,352 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:31,352 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(11)), (np.int64(15), np.int64(12)))
2025-04-11 20:13:31,353 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:31,496 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:31,496 [DEBUG] MCTS iteration 89: Rollout reward: 1.
2025-04-11 20:13:31,496 [DEBUG] MCTS iteration 89: Backed up Finish.
2025-04-11 20:13:31,497 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:31,505 [INFO] Final candidates: []
2025-04-11 20:13:31,505 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:31,506 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:31,506 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:31,506 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:31,506 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:31,506 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:31,506 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:31,506 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:31,506 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:31,506 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:31,506 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:31,507 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:31,507 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:31,507 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:31,507 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:31,507 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:31,507 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:31,507 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:31,507 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:31,507 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:31,507 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:31,507 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:31,507 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:31,514 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:31,514 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:31,515 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(11)), (np.int64(8), np.int64(7)))
2025-04-11 20:13:31,515 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:31,621 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:31,621 [DEBUG] MCTS iteration 90: Rollout reward: 1.
2025-04-11 20:13:31,621 [DEBUG] MCTS iteration 90: Backed up Finish.
2025-04-11 20:13:31,621 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:31,629 [INFO] Final candidates: []
2025-04-11 20:13:31,629 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:31,630 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:31,630 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:31,630 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:31,630 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:31,630 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:31,630 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:31,630 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:31,630 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:31,630 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:31,630 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:31,631 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:31,631 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:31,631 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:31,631 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:31,632 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:31,632 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:31,632 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:31,632 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:31,632 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:31,632 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:31,632 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:31,632 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:31,638 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:31,638 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:31,638 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(10)), (np.int64(17), np.int64(10)))
2025-04-11 20:13:31,639 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:31,850 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:31,850 [DEBUG] MCTS iteration 91: Rollout reward: 1.
2025-04-11 20:13:31,851 [DEBUG] MCTS iteration 91: Backed up Finish.
2025-04-11 20:13:31,851 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:31,859 [INFO] Final candidates: []
2025-04-11 20:13:31,859 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:31,859 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:31,859 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:31,859 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:31,859 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:31,859 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:31,859 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:31,859 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:31,859 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:31,859 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:31,859 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:31,861 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:31,861 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:31,861 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:31,861 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:31,861 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:31,861 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:31,861 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:31,861 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:31,861 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:31,861 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:31,861 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:31,861 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:31,867 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:31,867 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:31,867 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(6)), (np.int64(2), np.int64(16)))
2025-04-11 20:13:31,868 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:31,995 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:31,995 [DEBUG] MCTS iteration 92: Rollout reward: 0.
2025-04-11 20:13:31,995 [DEBUG] MCTS iteration 92: Backed up Finish.
2025-04-11 20:13:31,995 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:32,004 [INFO] Final candidates: []
2025-04-11 20:13:32,004 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:32,006 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:32,006 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:32,006 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:32,006 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:32,006 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:32,006 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:32,006 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:32,006 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:32,006 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:32,006 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:32,007 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:32,007 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:32,007 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:32,007 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:32,007 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:32,007 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:32,007 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:32,007 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:32,007 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:32,007 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:32,008 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:32,008 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:32,014 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:32,014 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:32,015 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(16)), (np.int64(16), np.int64(1)))
2025-04-11 20:13:32,015 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:32,016 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:32,016 [DEBUG] MCTS iteration 93: Rollout reward: 1.
2025-04-11 20:13:32,016 [DEBUG] MCTS iteration 93: Backed up Finish.
2025-04-11 20:13:32,016 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:32,024 [INFO] Final candidates: []
2025-04-11 20:13:32,024 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:32,025 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:32,025 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:32,025 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:32,025 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:32,025 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:32,025 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:32,025 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:32,025 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:32,025 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:32,025 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:32,026 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:32,026 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:32,026 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:32,026 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:32,026 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:32,026 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:32,026 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:32,026 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:32,026 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:32,026 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:32,026 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:32,026 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:32,033 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:32,033 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:32,033 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(13)), (np.int64(17), np.int64(10)))
2025-04-11 20:13:32,034 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:32,036 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:32,036 [DEBUG] MCTS iteration 94: Rollout reward: 1.
2025-04-11 20:13:32,036 [DEBUG] MCTS iteration 94: Backed up Finish.
2025-04-11 20:13:32,036 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:32,044 [INFO] Final candidates: []
2025-04-11 20:13:32,044 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:32,045 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:32,045 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:32,045 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:32,045 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:32,045 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:32,045 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:32,045 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:32,045 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:32,045 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:32,045 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:32,046 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:32,046 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:32,046 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:32,046 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:32,046 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:32,046 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:32,046 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:32,046 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:32,046 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:32,046 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:32,046 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:32,046 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:32,053 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:32,053 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:32,053 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(10)), (np.int64(16), np.int64(0)))
2025-04-11 20:13:32,054 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:32,263 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:32,263 [DEBUG] MCTS iteration 95: Rollout reward: 1.
2025-04-11 20:13:32,263 [DEBUG] MCTS iteration 95: Backed up Finish.
2025-04-11 20:13:32,264 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:32,271 [INFO] Final candidates: []
2025-04-11 20:13:32,272 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:32,272 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:32,272 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:32,272 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:32,272 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:32,272 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:32,272 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:32,272 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:32,272 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:32,272 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:32,272 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:32,273 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:32,273 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:32,274 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:32,274 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:32,274 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:32,274 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:32,274 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:32,274 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:32,274 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:32,274 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:32,274 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:32,274 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:32,280 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:32,280 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:32,280 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(4), np.int64(18)), (np.int64(3), np.int64(14)))
2025-04-11 20:13:32,281 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:32,330 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:32,330 [DEBUG] MCTS iteration 96: Rollout reward: 0.
2025-04-11 20:13:32,330 [DEBUG] MCTS iteration 96: Backed up Finish.
2025-04-11 20:13:32,330 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:32,338 [INFO] Final candidates: []
2025-04-11 20:13:32,338 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:32,338 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:32,339 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:32,339 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:32,339 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:32,339 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:32,339 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:32,339 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:32,339 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:32,339 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:32,339 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:32,340 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:32,340 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:32,340 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:32,340 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:32,340 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:32,340 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:32,340 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:32,340 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:32,340 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:32,340 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:32,340 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:32,340 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:32,347 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:32,347 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:32,347 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(11)), (np.int64(11), np.int64(11)))
2025-04-11 20:13:32,348 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:32,506 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:32,506 [DEBUG] MCTS iteration 97: Rollout reward: 1.
2025-04-11 20:13:32,506 [DEBUG] MCTS iteration 97: Backed up Finish.
2025-04-11 20:13:32,506 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:32,514 [INFO] Final candidates: []
2025-04-11 20:13:32,515 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:32,515 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:32,515 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:32,515 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:32,515 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:32,515 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:32,515 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:32,515 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:32,515 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:32,515 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:32,515 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:32,516 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:32,516 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:32,516 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:32,517 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:32,517 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:32,517 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:32,517 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:32,517 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:32,517 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:32,517 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:32,517 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:32,517 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:32,523 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:32,523 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:32,523 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(10)), (np.int64(16), np.int64(9)))
2025-04-11 20:13:32,524 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:32,594 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:32,594 [DEBUG] MCTS iteration 98: Rollout reward: 0.
2025-04-11 20:13:32,594 [DEBUG] MCTS iteration 98: Backed up Finish.
2025-04-11 20:13:32,594 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:32,602 [INFO] Final candidates: []
2025-04-11 20:13:32,602 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:32,603 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)]
2025-04-11 20:13:32,603 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:32,603 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:32,603 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] triggers candidate.
2025-04-11 20:13:32,603 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:32,603 [DEBUG] board coords: [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:32,603 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:32,603 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:32,603 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:32,603 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:32,604 [DEBUG] board coords: [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)]
2025-04-11 20:13:32,604 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:13:32,604 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 6), (9, 7)]
2025-04-11 20:13:32,604 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12)] triggers candidate.
2025-04-11 20:13:32,604 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 7)]
2025-04-11 20:13:32,604 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(9, 7), (9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13)] triggers candidate.
2025-04-11 20:13:32,604 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:13:32,604 [DEBUG] board coords: [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)]
2025-04-11 20:13:32,604 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:13:32,604 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (9, 14)]
2025-04-11 20:13:32,604 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(9, 8), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14)] triggers candidate.
2025-04-11 20:13:32,604 [DEBUG] check_window_intermediate_custom: valid_move=[(9, 13)]
2025-04-11 20:13:32,611 [INFO] Final candidates: [(9, 13), (9, 7)]
2025-04-11 20:13:32,611 [INFO] Phase defense: Collected 1unique candidate(s):[((9, 13), (9, 7))]
2025-04-11 20:13:32,611 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(9)), (np.int64(10), np.int64(12)))
2025-04-11 20:13:32,612 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:32,801 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:32,801 [DEBUG] MCTS iteration 99: Rollout reward: 1.
2025-04-11 20:13:32,801 [DEBUG] MCTS iteration 99: Backed up Finish.
2025-04-11 20:13:32,801 [INFO] MCTS: Search completed after 100 iterations.
2025-04-11 20:13:32,801 [DEBUG] MCTS: BEST ((9, 10), (np.int64(7), np.int64(10))) with 29 visits.
2025-04-11 20:13:32,801 [INFO] MCTS: Search finished. Best move selected with 29 visits.
2025-04-11 20:13:32,801 [INFO] Phase 2 (defense): MCTS selected move: ((9, 10), (np.int64(7), np.int64(10)))
2025-04-11 20:13:32,801 [INFO] Phase 2 (defense): MCTS selected move string : L10,L8
2025-04-11 20:13:32,801 [INFO] MCTS (defense candidates) selected move: L10,L8
2025-04-11 20:13:55,968 [INFO] Starting pre-MCTS candidate collection.
2025-04-11 20:13:55,976 [INFO] Final candidates: []
2025-04-11 20:13:55,976 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:55,981 [DEBUG] board coords: [(6, 8), (7, 9), (8, 10), (9, 11), (10, 12), (11, 13)]
2025-04-11 20:13:55,981 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(2)]
2025-04-11 20:13:55,981 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 8), (10, 12)]
2025-04-11 20:13:55,981 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 2 0 2] with coords [(6, 8), (7, 9), (8, 10), (9, 11), (10, 12), (11, 13)] triggers candidate.
2025-04-11 20:13:55,981 [DEBUG] check_window_intermediate_custom: valid_move=[(10, 12)]
2025-04-11 20:13:55,981 [DEBUG] board coords: [(7, 9), (8, 10), (9, 11), (10, 12), (11, 13), (12, 14)]
2025-04-11 20:13:55,981 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(0)]
2025-04-11 20:13:55,981 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 12), (12, 14)]
2025-04-11 20:13:55,981 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 0 2 0] with coords [(7, 9), (8, 10), (9, 11), (10, 12), (11, 13), (12, 14)] triggers candidate.
2025-04-11 20:13:55,981 [DEBUG] check_window_intermediate_custom: valid_move=[(10, 12)]
2025-04-11 20:13:55,986 [INFO] Final candidates: [(10, 12)]
2025-04-11 20:13:55,986 [INFO] Phase defense: Found only one candidate: (10, 12)
2025-04-11 20:13:55,986 [INFO] Phase defense: Collected 9unique candidate(s):[((10, 12), (np.int64(11), np.int64(11))), ((10, 12), (np.int64(10), np.int64(14))), ((10, 12), (np.int64(10), np.int64(11))), ((10, 12), (np.int64(9), np.int64(13))), ((10, 12), (np.int64(10), np.int64(13))), ((10, 12), (np.int64(11), np.int64(12))), ((10, 12), (np.int64(12), np.int64(12))), ((10, 12), (np.int64(8), np.int64(12))), ((10, 12), (np.int64(10), np.int64(10)))]
2025-04-11 20:13:55,986 [INFO] Phase 2 (defense): 9 candidate(s) found.
2025-04-11 20:13:55,986 [INFO] MCTS: Starting search for 100 iterations.
2025-04-11 20:13:55,995 [INFO] Final candidates: []
2025-04-11 20:13:55,996 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:56,000 [DEBUG] board coords: [(6, 8), (7, 9), (8, 10), (9, 11), (10, 12), (11, 13)]
2025-04-11 20:13:56,000 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(2)]
2025-04-11 20:13:56,000 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 8), (10, 12)]
2025-04-11 20:13:56,000 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 2 0 2] with coords [(6, 8), (7, 9), (8, 10), (9, 11), (10, 12), (11, 13)] triggers candidate.
2025-04-11 20:13:56,000 [DEBUG] check_window_intermediate_custom: valid_move=[(10, 12)]
2025-04-11 20:13:56,000 [DEBUG] board coords: [(7, 9), (8, 10), (9, 11), (10, 12), (11, 13), (12, 14)]
2025-04-11 20:13:56,001 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(0)]
2025-04-11 20:13:56,001 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 12), (12, 14)]
2025-04-11 20:13:56,001 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 0 2 0] with coords [(7, 9), (8, 10), (9, 11), (10, 12), (11, 13), (12, 14)] triggers candidate.
2025-04-11 20:13:56,001 [DEBUG] check_window_intermediate_custom: valid_move=[(10, 12)]
2025-04-11 20:13:56,008 [INFO] Final candidates: [(10, 12)]
2025-04-11 20:13:56,008 [INFO] Phase defense: Found only one candidate: (10, 12)
2025-04-11 20:13:56,008 [INFO] Phase defense: Collected 9unique candidate(s):[((10, 12), (np.int64(11), np.int64(11))), ((10, 12), (np.int64(10), np.int64(14))), ((10, 12), (np.int64(10), np.int64(11))), ((10, 12), (np.int64(9), np.int64(13))), ((10, 12), (np.int64(10), np.int64(13))), ((10, 12), (np.int64(11), np.int64(12))), ((10, 12), (np.int64(12), np.int64(12))), ((10, 12), (np.int64(8), np.int64(12))), ((10, 12), (np.int64(10), np.int64(10)))]
2025-04-11 20:13:56,008 [DEBUG] Tree_policy iteration 1: Expanding move ((10, 12), (np.int64(10), np.int64(14)))
2025-04-11 20:13:56,009 [DEBUG] MCTS iteration 0: reached a node with 0 visits.
2025-04-11 20:13:56,009 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:56,114 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:56,114 [DEBUG] MCTS iteration 0: Rollout reward: 1.
2025-04-11 20:13:56,114 [DEBUG] MCTS iteration 0: Backed up Finish.
2025-04-11 20:13:56,122 [INFO] Final candidates: []
2025-04-11 20:13:56,122 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:56,127 [DEBUG] board coords: [(6, 8), (7, 9), (8, 10), (9, 11), (10, 12), (11, 13)]
2025-04-11 20:13:56,127 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(2)]
2025-04-11 20:13:56,127 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 8), (10, 12)]
2025-04-11 20:13:56,127 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 2 0 2] with coords [(6, 8), (7, 9), (8, 10), (9, 11), (10, 12), (11, 13)] triggers candidate.
2025-04-11 20:13:56,127 [DEBUG] check_window_intermediate_custom: valid_move=[(10, 12)]
2025-04-11 20:13:56,127 [DEBUG] board coords: [(7, 9), (8, 10), (9, 11), (10, 12), (11, 13), (12, 14)]
2025-04-11 20:13:56,127 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(0)]
2025-04-11 20:13:56,127 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 12), (12, 14)]
2025-04-11 20:13:56,127 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 0 2 0] with coords [(7, 9), (8, 10), (9, 11), (10, 12), (11, 13), (12, 14)] triggers candidate.
2025-04-11 20:13:56,127 [DEBUG] check_window_intermediate_custom: valid_move=[(10, 12)]
2025-04-11 20:13:56,130 [INFO] Final candidates: [(10, 12)]
2025-04-11 20:13:56,130 [INFO] Phase defense: Found only one candidate: (10, 12)
2025-04-11 20:13:56,130 [INFO] Phase defense: Collected 9unique candidate(s):[((10, 12), (np.int64(11), np.int64(11))), ((10, 12), (np.int64(10), np.int64(14))), ((10, 12), (np.int64(10), np.int64(11))), ((10, 12), (np.int64(9), np.int64(13))), ((10, 12), (np.int64(10), np.int64(13))), ((10, 12), (np.int64(11), np.int64(12))), ((10, 12), (np.int64(12), np.int64(12))), ((10, 12), (np.int64(8), np.int64(12))), ((10, 12), (np.int64(10), np.int64(10)))]
2025-04-11 20:13:56,130 [DEBUG] Tree_policy iteration 1: Expanding move ((10, 12), (np.int64(12), np.int64(12)))
2025-04-11 20:13:56,131 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:56,287 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:56,287 [DEBUG] MCTS iteration 1: Rollout reward: 1.
2025-04-11 20:13:56,287 [DEBUG] MCTS iteration 1: Backed up Finish.
2025-04-11 20:13:56,295 [INFO] Final candidates: []
2025-04-11 20:13:56,295 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:56,300 [DEBUG] board coords: [(6, 8), (7, 9), (8, 10), (9, 11), (10, 12), (11, 13)]
2025-04-11 20:13:56,300 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(2)]
2025-04-11 20:13:56,300 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 8), (10, 12)]
2025-04-11 20:13:56,300 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 2 0 2] with coords [(6, 8), (7, 9), (8, 10), (9, 11), (10, 12), (11, 13)] triggers candidate.
2025-04-11 20:13:56,300 [DEBUG] check_window_intermediate_custom: valid_move=[(10, 12)]
2025-04-11 20:13:56,300 [DEBUG] board coords: [(7, 9), (8, 10), (9, 11), (10, 12), (11, 13), (12, 14)]
2025-04-11 20:13:56,300 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(0)]
2025-04-11 20:13:56,300 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 12), (12, 14)]
2025-04-11 20:13:56,300 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 0 2 0] with coords [(7, 9), (8, 10), (9, 11), (10, 12), (11, 13), (12, 14)] triggers candidate.
2025-04-11 20:13:56,300 [DEBUG] check_window_intermediate_custom: valid_move=[(10, 12)]
2025-04-11 20:13:56,304 [INFO] Final candidates: [(10, 12)]
2025-04-11 20:13:56,304 [INFO] Phase defense: Found only one candidate: (10, 12)
2025-04-11 20:13:56,304 [INFO] Phase defense: Collected 9unique candidate(s):[((10, 12), (np.int64(11), np.int64(11))), ((10, 12), (np.int64(10), np.int64(14))), ((10, 12), (np.int64(10), np.int64(11))), ((10, 12), (np.int64(9), np.int64(13))), ((10, 12), (np.int64(10), np.int64(13))), ((10, 12), (np.int64(11), np.int64(12))), ((10, 12), (np.int64(12), np.int64(12))), ((10, 12), (np.int64(8), np.int64(12))), ((10, 12), (np.int64(10), np.int64(10)))]
2025-04-11 20:13:56,304 [DEBUG] Tree_policy iteration 1: Expanding move ((10, 12), (np.int64(10), np.int64(11)))
2025-04-11 20:13:56,304 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:56,317 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:56,317 [DEBUG] MCTS iteration 2: Rollout reward: 1.
2025-04-11 20:13:56,318 [DEBUG] MCTS iteration 2: Backed up Finish.
2025-04-11 20:13:56,325 [INFO] Final candidates: []
2025-04-11 20:13:56,326 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:56,330 [DEBUG] board coords: [(6, 8), (7, 9), (8, 10), (9, 11), (10, 12), (11, 13)]
2025-04-11 20:13:56,330 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(2)]
2025-04-11 20:13:56,330 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 8), (10, 12)]
2025-04-11 20:13:56,330 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 2 0 2] with coords [(6, 8), (7, 9), (8, 10), (9, 11), (10, 12), (11, 13)] triggers candidate.
2025-04-11 20:13:56,330 [DEBUG] check_window_intermediate_custom: valid_move=[(10, 12)]
2025-04-11 20:13:56,330 [DEBUG] board coords: [(7, 9), (8, 10), (9, 11), (10, 12), (11, 13), (12, 14)]
2025-04-11 20:13:56,331 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(0)]
2025-04-11 20:13:56,331 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 12), (12, 14)]
2025-04-11 20:13:56,331 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 0 2 0] with coords [(7, 9), (8, 10), (9, 11), (10, 12), (11, 13), (12, 14)] triggers candidate.
2025-04-11 20:13:56,331 [DEBUG] check_window_intermediate_custom: valid_move=[(10, 12)]
2025-04-11 20:13:56,334 [INFO] Final candidates: [(10, 12)]
2025-04-11 20:13:56,334 [INFO] Phase defense: Found only one candidate: (10, 12)
2025-04-11 20:13:56,334 [INFO] Phase defense: Collected 9unique candidate(s):[((10, 12), (np.int64(11), np.int64(11))), ((10, 12), (np.int64(10), np.int64(14))), ((10, 12), (np.int64(10), np.int64(11))), ((10, 12), (np.int64(9), np.int64(13))), ((10, 12), (np.int64(10), np.int64(13))), ((10, 12), (np.int64(11), np.int64(12))), ((10, 12), (np.int64(12), np.int64(12))), ((10, 12), (np.int64(8), np.int64(12))), ((10, 12), (np.int64(10), np.int64(10)))]
2025-04-11 20:13:56,334 [DEBUG] Tree_policy iteration 1: Expanding move ((10, 12), (np.int64(10), np.int64(10)))
2025-04-11 20:13:56,334 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:56,407 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:56,408 [DEBUG] MCTS iteration 3: Rollout reward: 1.
2025-04-11 20:13:56,408 [DEBUG] MCTS iteration 3: Backed up Finish.
2025-04-11 20:13:56,415 [INFO] Final candidates: []
2025-04-11 20:13:56,415 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:56,420 [DEBUG] board coords: [(6, 8), (7, 9), (8, 10), (9, 11), (10, 12), (11, 13)]
2025-04-11 20:13:56,420 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(2)]
2025-04-11 20:13:56,420 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 8), (10, 12)]
2025-04-11 20:13:56,420 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 2 0 2] with coords [(6, 8), (7, 9), (8, 10), (9, 11), (10, 12), (11, 13)] triggers candidate.
2025-04-11 20:13:56,420 [DEBUG] check_window_intermediate_custom: valid_move=[(10, 12)]
2025-04-11 20:13:56,420 [DEBUG] board coords: [(7, 9), (8, 10), (9, 11), (10, 12), (11, 13), (12, 14)]
2025-04-11 20:13:56,420 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(0)]
2025-04-11 20:13:56,420 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 12), (12, 14)]
2025-04-11 20:13:56,421 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 0 2 0] with coords [(7, 9), (8, 10), (9, 11), (10, 12), (11, 13), (12, 14)] triggers candidate.
2025-04-11 20:13:56,421 [DEBUG] check_window_intermediate_custom: valid_move=[(10, 12)]
2025-04-11 20:13:56,424 [INFO] Final candidates: [(10, 12)]
2025-04-11 20:13:56,424 [INFO] Phase defense: Found only one candidate: (10, 12)
2025-04-11 20:13:56,424 [INFO] Phase defense: Collected 9unique candidate(s):[((10, 12), (np.int64(11), np.int64(11))), ((10, 12), (np.int64(10), np.int64(14))), ((10, 12), (np.int64(10), np.int64(11))), ((10, 12), (np.int64(9), np.int64(13))), ((10, 12), (np.int64(10), np.int64(13))), ((10, 12), (np.int64(11), np.int64(12))), ((10, 12), (np.int64(12), np.int64(12))), ((10, 12), (np.int64(8), np.int64(12))), ((10, 12), (np.int64(10), np.int64(10)))]
2025-04-11 20:13:56,424 [DEBUG] Tree_policy iteration 1: Expanding move ((10, 12), (np.int64(11), np.int64(11)))
2025-04-11 20:13:56,424 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:56,475 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:56,475 [DEBUG] MCTS iteration 4: Rollout reward: 0.
2025-04-11 20:13:56,475 [DEBUG] MCTS iteration 4: Backed up Finish.
2025-04-11 20:13:56,483 [INFO] Final candidates: []
2025-04-11 20:13:56,483 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:56,488 [DEBUG] board coords: [(6, 8), (7, 9), (8, 10), (9, 11), (10, 12), (11, 13)]
2025-04-11 20:13:56,488 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(2)]
2025-04-11 20:13:56,488 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 8), (10, 12)]
2025-04-11 20:13:56,488 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 2 0 2] with coords [(6, 8), (7, 9), (8, 10), (9, 11), (10, 12), (11, 13)] triggers candidate.
2025-04-11 20:13:56,488 [DEBUG] check_window_intermediate_custom: valid_move=[(10, 12)]
2025-04-11 20:13:56,488 [DEBUG] board coords: [(7, 9), (8, 10), (9, 11), (10, 12), (11, 13), (12, 14)]
2025-04-11 20:13:56,488 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(0)]
2025-04-11 20:13:56,488 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 12), (12, 14)]
2025-04-11 20:13:56,488 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 0 2 0] with coords [(7, 9), (8, 10), (9, 11), (10, 12), (11, 13), (12, 14)] triggers candidate.
2025-04-11 20:13:56,488 [DEBUG] check_window_intermediate_custom: valid_move=[(10, 12)]
2025-04-11 20:13:56,492 [INFO] Final candidates: [(10, 12)]
2025-04-11 20:13:56,492 [INFO] Phase defense: Found only one candidate: (10, 12)
2025-04-11 20:13:56,492 [INFO] Phase defense: Collected 9unique candidate(s):[((10, 12), (np.int64(11), np.int64(11))), ((10, 12), (np.int64(10), np.int64(14))), ((10, 12), (np.int64(10), np.int64(11))), ((10, 12), (np.int64(9), np.int64(13))), ((10, 12), (np.int64(10), np.int64(13))), ((10, 12), (np.int64(11), np.int64(12))), ((10, 12), (np.int64(12), np.int64(12))), ((10, 12), (np.int64(8), np.int64(12))), ((10, 12), (np.int64(10), np.int64(10)))]
2025-04-11 20:13:56,492 [DEBUG] Tree_policy iteration 1: Expanding move ((10, 12), (np.int64(11), np.int64(12)))
2025-04-11 20:13:56,493 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:56,584 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:56,584 [DEBUG] MCTS iteration 5: Rollout reward: 0.
2025-04-11 20:13:56,584 [DEBUG] MCTS iteration 5: Backed up Finish.
2025-04-11 20:13:56,593 [INFO] Final candidates: []
2025-04-11 20:13:56,593 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:56,598 [DEBUG] board coords: [(6, 8), (7, 9), (8, 10), (9, 11), (10, 12), (11, 13)]
2025-04-11 20:13:56,598 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(2)]
2025-04-11 20:13:56,598 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 8), (10, 12)]
2025-04-11 20:13:56,598 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 2 0 2] with coords [(6, 8), (7, 9), (8, 10), (9, 11), (10, 12), (11, 13)] triggers candidate.
2025-04-11 20:13:56,598 [DEBUG] check_window_intermediate_custom: valid_move=[(10, 12)]
2025-04-11 20:13:56,598 [DEBUG] board coords: [(7, 9), (8, 10), (9, 11), (10, 12), (11, 13), (12, 14)]
2025-04-11 20:13:56,598 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(0)]
2025-04-11 20:13:56,598 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 12), (12, 14)]
2025-04-11 20:13:56,598 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 0 2 0] with coords [(7, 9), (8, 10), (9, 11), (10, 12), (11, 13), (12, 14)] triggers candidate.
2025-04-11 20:13:56,598 [DEBUG] check_window_intermediate_custom: valid_move=[(10, 12)]
2025-04-11 20:13:56,601 [INFO] Final candidates: [(10, 12)]
2025-04-11 20:13:56,601 [INFO] Phase defense: Found only one candidate: (10, 12)
2025-04-11 20:13:56,601 [INFO] Phase defense: Collected 9unique candidate(s):[((10, 12), (np.int64(11), np.int64(11))), ((10, 12), (np.int64(10), np.int64(14))), ((10, 12), (np.int64(10), np.int64(11))), ((10, 12), (np.int64(9), np.int64(13))), ((10, 12), (np.int64(10), np.int64(13))), ((10, 12), (np.int64(11), np.int64(12))), ((10, 12), (np.int64(12), np.int64(12))), ((10, 12), (np.int64(8), np.int64(12))), ((10, 12), (np.int64(10), np.int64(10)))]
2025-04-11 20:13:56,602 [DEBUG] Tree_policy iteration 1: Expanding move ((10, 12), (np.int64(10), np.int64(13)))
2025-04-11 20:13:56,602 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:56,782 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:56,782 [DEBUG] MCTS iteration 6: Rollout reward: 1.
2025-04-11 20:13:56,782 [DEBUG] MCTS iteration 6: Backed up Finish.
2025-04-11 20:13:56,790 [INFO] Final candidates: []
2025-04-11 20:13:56,790 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:56,795 [DEBUG] board coords: [(6, 8), (7, 9), (8, 10), (9, 11), (10, 12), (11, 13)]
2025-04-11 20:13:56,795 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(2)]
2025-04-11 20:13:56,795 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 8), (10, 12)]
2025-04-11 20:13:56,795 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 2 0 2] with coords [(6, 8), (7, 9), (8, 10), (9, 11), (10, 12), (11, 13)] triggers candidate.
2025-04-11 20:13:56,795 [DEBUG] check_window_intermediate_custom: valid_move=[(10, 12)]
2025-04-11 20:13:56,795 [DEBUG] board coords: [(7, 9), (8, 10), (9, 11), (10, 12), (11, 13), (12, 14)]
2025-04-11 20:13:56,795 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(0)]
2025-04-11 20:13:56,795 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 12), (12, 14)]
2025-04-11 20:13:56,795 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 0 2 0] with coords [(7, 9), (8, 10), (9, 11), (10, 12), (11, 13), (12, 14)] triggers candidate.
2025-04-11 20:13:56,795 [DEBUG] check_window_intermediate_custom: valid_move=[(10, 12)]
2025-04-11 20:13:56,798 [INFO] Final candidates: [(10, 12)]
2025-04-11 20:13:56,798 [INFO] Phase defense: Found only one candidate: (10, 12)
2025-04-11 20:13:56,798 [INFO] Phase defense: Collected 9unique candidate(s):[((10, 12), (np.int64(11), np.int64(11))), ((10, 12), (np.int64(10), np.int64(14))), ((10, 12), (np.int64(10), np.int64(11))), ((10, 12), (np.int64(9), np.int64(13))), ((10, 12), (np.int64(10), np.int64(13))), ((10, 12), (np.int64(11), np.int64(12))), ((10, 12), (np.int64(12), np.int64(12))), ((10, 12), (np.int64(8), np.int64(12))), ((10, 12), (np.int64(10), np.int64(10)))]
2025-04-11 20:13:56,798 [DEBUG] Tree_policy iteration 1: Expanding move ((10, 12), (np.int64(9), np.int64(13)))
2025-04-11 20:13:56,799 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:57,066 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:57,066 [DEBUG] MCTS iteration 7: Rollout reward: 0.
2025-04-11 20:13:57,066 [DEBUG] MCTS iteration 7: Backed up Finish.
2025-04-11 20:13:57,074 [INFO] Final candidates: []
2025-04-11 20:13:57,074 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:57,079 [DEBUG] board coords: [(6, 8), (7, 9), (8, 10), (9, 11), (10, 12), (11, 13)]
2025-04-11 20:13:57,079 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(2)]
2025-04-11 20:13:57,079 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 8), (10, 12)]
2025-04-11 20:13:57,079 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 2 0 2] with coords [(6, 8), (7, 9), (8, 10), (9, 11), (10, 12), (11, 13)] triggers candidate.
2025-04-11 20:13:57,079 [DEBUG] check_window_intermediate_custom: valid_move=[(10, 12)]
2025-04-11 20:13:57,079 [DEBUG] board coords: [(7, 9), (8, 10), (9, 11), (10, 12), (11, 13), (12, 14)]
2025-04-11 20:13:57,079 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(0)]
2025-04-11 20:13:57,079 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 12), (12, 14)]
2025-04-11 20:13:57,079 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 0 2 0] with coords [(7, 9), (8, 10), (9, 11), (10, 12), (11, 13), (12, 14)] triggers candidate.
2025-04-11 20:13:57,079 [DEBUG] check_window_intermediate_custom: valid_move=[(10, 12)]
2025-04-11 20:13:57,083 [INFO] Final candidates: [(10, 12)]
2025-04-11 20:13:57,083 [INFO] Phase defense: Found only one candidate: (10, 12)
2025-04-11 20:13:57,083 [INFO] Phase defense: Collected 9unique candidate(s):[((10, 12), (np.int64(11), np.int64(11))), ((10, 12), (np.int64(10), np.int64(14))), ((10, 12), (np.int64(10), np.int64(11))), ((10, 12), (np.int64(9), np.int64(13))), ((10, 12), (np.int64(10), np.int64(13))), ((10, 12), (np.int64(11), np.int64(12))), ((10, 12), (np.int64(12), np.int64(12))), ((10, 12), (np.int64(8), np.int64(12))), ((10, 12), (np.int64(10), np.int64(10)))]
2025-04-11 20:13:57,083 [DEBUG] Tree_policy iteration 1: Expanding move ((10, 12), (np.int64(8), np.int64(12)))
2025-04-11 20:13:57,083 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:57,148 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:57,148 [DEBUG] MCTS iteration 8: Rollout reward: 1.
2025-04-11 20:13:57,148 [DEBUG] MCTS iteration 8: Backed up Finish.
2025-04-11 20:13:57,148 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:57,156 [INFO] Final candidates: []
2025-04-11 20:13:57,156 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:57,164 [INFO] Final candidates: []
2025-04-11 20:13:57,164 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:57,164 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(17), np.int64(2)), (np.int64(4), np.int64(17)))
2025-04-11 20:13:57,165 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:57,313 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:57,313 [DEBUG] MCTS iteration 9: Rollout reward: 0.
2025-04-11 20:13:57,313 [DEBUG] MCTS iteration 9: Backed up Finish.
2025-04-11 20:13:57,314 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:57,321 [INFO] Final candidates: []
2025-04-11 20:13:57,321 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:57,329 [INFO] Final candidates: []
2025-04-11 20:13:57,329 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:57,329 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(10)), (np.int64(9), np.int64(6)))
2025-04-11 20:13:57,330 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:57,553 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:57,553 [DEBUG] MCTS iteration 10: Rollout reward: 1.
2025-04-11 20:13:57,553 [DEBUG] MCTS iteration 10: Backed up Finish.
2025-04-11 20:13:57,553 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:57,561 [INFO] Final candidates: []
2025-04-11 20:13:57,561 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:57,569 [INFO] Final candidates: []
2025-04-11 20:13:57,569 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:57,569 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(6)), (np.int64(4), np.int64(15)))
2025-04-11 20:13:57,570 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:57,811 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:57,811 [DEBUG] MCTS iteration 11: Rollout reward: 1.
2025-04-11 20:13:57,811 [DEBUG] MCTS iteration 11: Backed up Finish.
2025-04-11 20:13:57,811 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:57,819 [INFO] Final candidates: []
2025-04-11 20:13:57,819 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:57,827 [INFO] Final candidates: []
2025-04-11 20:13:57,827 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:57,827 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(7)), (np.int64(9), np.int64(7)))
2025-04-11 20:13:57,828 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:57,925 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:57,925 [DEBUG] MCTS iteration 12: Rollout reward: 0.
2025-04-11 20:13:57,925 [DEBUG] MCTS iteration 12: Backed up Finish.
2025-04-11 20:13:57,925 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:57,933 [INFO] Final candidates: []
2025-04-11 20:13:57,933 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:57,941 [INFO] Final candidates: []
2025-04-11 20:13:57,941 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:57,941 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(3), np.int64(17)), (np.int64(16), np.int64(11)))
2025-04-11 20:13:57,941 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:58,000 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:58,000 [DEBUG] MCTS iteration 13: Rollout reward: 1.
2025-04-11 20:13:58,000 [DEBUG] MCTS iteration 13: Backed up Finish.
2025-04-11 20:13:58,000 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:58,008 [INFO] Final candidates: []
2025-04-11 20:13:58,008 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:58,016 [INFO] Final candidates: []
2025-04-11 20:13:58,016 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:58,016 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(8)), (np.int64(8), np.int64(13)))
2025-04-11 20:13:58,016 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:58,304 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:58,304 [DEBUG] MCTS iteration 14: Rollout reward: 0.
2025-04-11 20:13:58,304 [DEBUG] MCTS iteration 14: Backed up Finish.
2025-04-11 20:13:58,304 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:58,312 [INFO] Final candidates: []
2025-04-11 20:13:58,312 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:58,319 [INFO] Final candidates: []
2025-04-11 20:13:58,320 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:58,320 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(10)), (np.int64(7), np.int64(7)))
2025-04-11 20:13:58,320 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:58,537 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:58,537 [DEBUG] MCTS iteration 15: Rollout reward: 1.
2025-04-11 20:13:58,537 [DEBUG] MCTS iteration 15: Backed up Finish.
2025-04-11 20:13:58,537 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:58,545 [INFO] Final candidates: []
2025-04-11 20:13:58,545 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:58,553 [INFO] Final candidates: []
2025-04-11 20:13:58,553 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:58,553 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(8)), (np.int64(12), np.int64(14)))
2025-04-11 20:13:58,554 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:58,657 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:58,657 [DEBUG] MCTS iteration 16: Rollout reward: 1.
2025-04-11 20:13:58,657 [DEBUG] MCTS iteration 16: Backed up Finish.
2025-04-11 20:13:58,657 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:58,665 [INFO] Final candidates: []
2025-04-11 20:13:58,665 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:58,672 [INFO] Final candidates: []
2025-04-11 20:13:58,673 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:58,673 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(17), np.int64(9)), (np.int64(9), np.int64(7)))
2025-04-11 20:13:58,673 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:58,781 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:58,781 [DEBUG] MCTS iteration 17: Rollout reward: 1.
2025-04-11 20:13:58,781 [DEBUG] MCTS iteration 17: Backed up Finish.
2025-04-11 20:13:58,781 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:58,791 [INFO] Final candidates: []
2025-04-11 20:13:58,791 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:58,799 [INFO] Final candidates: []
2025-04-11 20:13:58,800 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:58,800 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(8)), (np.int64(5), np.int64(11)))
2025-04-11 20:13:58,800 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:58,947 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:58,947 [DEBUG] MCTS iteration 18: Rollout reward: 1.
2025-04-11 20:13:58,947 [DEBUG] MCTS iteration 18: Backed up Finish.
2025-04-11 20:13:58,947 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:58,956 [INFO] Final candidates: []
2025-04-11 20:13:58,956 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:58,964 [INFO] Final candidates: []
2025-04-11 20:13:58,964 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:58,964 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(7)), (np.int64(11), np.int64(12)))
2025-04-11 20:13:58,965 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:59,195 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:59,196 [DEBUG] MCTS iteration 19: Rollout reward: 0.
2025-04-11 20:13:59,196 [DEBUG] MCTS iteration 19: Backed up Finish.
2025-04-11 20:13:59,196 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:59,205 [INFO] Final candidates: []
2025-04-11 20:13:59,205 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:59,213 [INFO] Final candidates: []
2025-04-11 20:13:59,213 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:59,213 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(3), np.int64(14)), (np.int64(2), np.int64(16)))
2025-04-11 20:13:59,214 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:59,299 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:59,299 [DEBUG] MCTS iteration 20: Rollout reward: 1.
2025-04-11 20:13:59,299 [DEBUG] MCTS iteration 20: Backed up Finish.
2025-04-11 20:13:59,299 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:59,307 [INFO] Final candidates: []
2025-04-11 20:13:59,307 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:59,315 [INFO] Final candidates: []
2025-04-11 20:13:59,315 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:59,315 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(17), np.int64(9)), (np.int64(11), np.int64(15)))
2025-04-11 20:13:59,316 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:59,528 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:59,528 [DEBUG] MCTS iteration 21: Rollout reward: 0.
2025-04-11 20:13:59,529 [DEBUG] MCTS iteration 21: Backed up Finish.
2025-04-11 20:13:59,529 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:59,536 [INFO] Final candidates: []
2025-04-11 20:13:59,536 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:59,545 [INFO] Final candidates: []
2025-04-11 20:13:59,545 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:59,546 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(12)), (np.int64(4), np.int64(15)))
2025-04-11 20:13:59,548 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:59,736 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:13:59,736 [DEBUG] MCTS iteration 22: Rollout reward: 0.
2025-04-11 20:13:59,736 [DEBUG] MCTS iteration 22: Backed up Finish.
2025-04-11 20:13:59,736 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:59,744 [INFO] Final candidates: []
2025-04-11 20:13:59,744 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:59,752 [INFO] Final candidates: []
2025-04-11 20:13:59,752 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:59,752 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(0)), (np.int64(6), np.int64(9)))
2025-04-11 20:13:59,753 [INFO] Default policy: Starting random playout.
2025-04-11 20:13:59,871 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:13:59,871 [DEBUG] MCTS iteration 23: Rollout reward: 1.
2025-04-11 20:13:59,871 [DEBUG] MCTS iteration 23: Backed up Finish.
2025-04-11 20:13:59,871 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:13:59,879 [INFO] Final candidates: []
2025-04-11 20:13:59,879 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:13:59,887 [INFO] Final candidates: []
2025-04-11 20:13:59,887 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:13:59,887 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(9)), (np.int64(12), np.int64(12)))
2025-04-11 20:13:59,887 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:00,035 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:00,035 [DEBUG] MCTS iteration 24: Rollout reward: 1.
2025-04-11 20:14:00,035 [DEBUG] MCTS iteration 24: Backed up Finish.
2025-04-11 20:14:00,035 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:00,046 [INFO] Final candidates: []
2025-04-11 20:14:00,046 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:00,054 [INFO] Final candidates: []
2025-04-11 20:14:00,054 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:00,054 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(18), np.int64(1)), (np.int64(3), np.int64(16)))
2025-04-11 20:14:00,055 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:00,096 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:00,096 [DEBUG] MCTS iteration 25: Rollout reward: 0.
2025-04-11 20:14:00,096 [DEBUG] MCTS iteration 25: Backed up Finish.
2025-04-11 20:14:00,096 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:00,104 [INFO] Final candidates: []
2025-04-11 20:14:00,104 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:00,112 [INFO] Final candidates: []
2025-04-11 20:14:00,112 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:00,112 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(15)), (np.int64(11), np.int64(8)))
2025-04-11 20:14:00,113 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:00,222 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:00,222 [DEBUG] MCTS iteration 26: Rollout reward: 1.
2025-04-11 20:14:00,222 [DEBUG] MCTS iteration 26: Backed up Finish.
2025-04-11 20:14:00,222 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:00,230 [INFO] Final candidates: []
2025-04-11 20:14:00,230 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:00,240 [INFO] Final candidates: []
2025-04-11 20:14:00,241 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:00,241 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(10)), (np.int64(6), np.int64(14)))
2025-04-11 20:14:00,241 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:00,370 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:00,370 [DEBUG] MCTS iteration 27: Rollout reward: 0.
2025-04-11 20:14:00,370 [DEBUG] MCTS iteration 27: Backed up Finish.
2025-04-11 20:14:00,370 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:00,378 [INFO] Final candidates: []
2025-04-11 20:14:00,378 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:00,386 [INFO] Final candidates: []
2025-04-11 20:14:00,386 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:00,386 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(11)), (np.int64(11), np.int64(10)))
2025-04-11 20:14:00,387 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:00,546 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:00,546 [DEBUG] MCTS iteration 28: Rollout reward: 0.
2025-04-11 20:14:00,546 [DEBUG] MCTS iteration 28: Backed up Finish.
2025-04-11 20:14:00,546 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:00,554 [INFO] Final candidates: []
2025-04-11 20:14:00,554 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:00,562 [INFO] Final candidates: []
2025-04-11 20:14:00,562 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:00,562 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(13)), (np.int64(15), np.int64(12)))
2025-04-11 20:14:00,562 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:00,767 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:00,767 [DEBUG] MCTS iteration 29: Rollout reward: 0.
2025-04-11 20:14:00,767 [DEBUG] MCTS iteration 29: Backed up Finish.
2025-04-11 20:14:00,767 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:00,775 [INFO] Final candidates: []
2025-04-11 20:14:00,775 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:00,783 [INFO] Final candidates: []
2025-04-11 20:14:00,783 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:00,783 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(11)), (np.int64(16), np.int64(10)))
2025-04-11 20:14:00,784 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:00,880 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:00,881 [DEBUG] MCTS iteration 30: Rollout reward: 0.
2025-04-11 20:14:00,881 [DEBUG] MCTS iteration 30: Backed up Finish.
2025-04-11 20:14:00,881 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:00,888 [INFO] Final candidates: []
2025-04-11 20:14:00,889 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:00,896 [INFO] Final candidates: []
2025-04-11 20:14:00,897 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:00,897 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(7)), (np.int64(7), np.int64(13)))
2025-04-11 20:14:00,897 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:01,037 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:01,037 [DEBUG] MCTS iteration 31: Rollout reward: 1.
2025-04-11 20:14:01,037 [DEBUG] MCTS iteration 31: Backed up Finish.
2025-04-11 20:14:01,037 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:01,045 [INFO] Final candidates: []
2025-04-11 20:14:01,045 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:01,053 [INFO] Final candidates: []
2025-04-11 20:14:01,053 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:01,053 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(0)), (np.int64(16), np.int64(11)))
2025-04-11 20:14:01,053 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:01,242 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:01,242 [DEBUG] MCTS iteration 32: Rollout reward: 0.
2025-04-11 20:14:01,242 [DEBUG] MCTS iteration 32: Backed up Finish.
2025-04-11 20:14:01,242 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:01,250 [INFO] Final candidates: []
2025-04-11 20:14:01,250 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:01,258 [INFO] Final candidates: []
2025-04-11 20:14:01,258 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:01,258 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(11)), (np.int64(16), np.int64(9)))
2025-04-11 20:14:01,258 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:01,425 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:01,425 [DEBUG] MCTS iteration 33: Rollout reward: 1.
2025-04-11 20:14:01,425 [DEBUG] MCTS iteration 33: Backed up Finish.
2025-04-11 20:14:01,426 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:01,433 [INFO] Final candidates: []
2025-04-11 20:14:01,433 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:01,441 [INFO] Final candidates: []
2025-04-11 20:14:01,441 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:01,441 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(18), np.int64(0)), (np.int64(15), np.int64(12)))
2025-04-11 20:14:01,442 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:01,644 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:01,645 [DEBUG] MCTS iteration 34: Rollout reward: 0.
2025-04-11 20:14:01,645 [DEBUG] MCTS iteration 34: Backed up Finish.
2025-04-11 20:14:01,645 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:01,652 [INFO] Final candidates: []
2025-04-11 20:14:01,652 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:01,660 [INFO] Final candidates: []
2025-04-11 20:14:01,660 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:01,660 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(11)), (np.int64(9), np.int64(13)))
2025-04-11 20:14:01,661 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:01,708 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:01,708 [DEBUG] MCTS iteration 35: Rollout reward: 1.
2025-04-11 20:14:01,708 [DEBUG] MCTS iteration 35: Backed up Finish.
2025-04-11 20:14:01,708 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:01,716 [INFO] Final candidates: []
2025-04-11 20:14:01,716 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:01,723 [INFO] Final candidates: []
2025-04-11 20:14:01,723 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:01,723 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(0)), (np.int64(5), np.int64(15)))
2025-04-11 20:14:01,724 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:01,749 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:01,749 [DEBUG] MCTS iteration 36: Rollout reward: 0.
2025-04-11 20:14:01,749 [DEBUG] MCTS iteration 36: Backed up Finish.
2025-04-11 20:14:01,749 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:01,757 [INFO] Final candidates: []
2025-04-11 20:14:01,757 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:01,765 [INFO] Final candidates: []
2025-04-11 20:14:01,765 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:01,765 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(13)), (np.int64(5), np.int64(17)))
2025-04-11 20:14:01,765 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:01,795 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:01,795 [DEBUG] MCTS iteration 37: Rollout reward: 0.
2025-04-11 20:14:01,795 [DEBUG] MCTS iteration 37: Backed up Finish.
2025-04-11 20:14:01,795 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:01,803 [INFO] Final candidates: []
2025-04-11 20:14:01,803 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:01,811 [INFO] Final candidates: []
2025-04-11 20:14:01,811 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:01,811 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(13)), (np.int64(8), np.int64(7)))
2025-04-11 20:14:01,811 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:01,996 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:01,996 [DEBUG] MCTS iteration 38: Rollout reward: 1.
2025-04-11 20:14:01,996 [DEBUG] MCTS iteration 38: Backed up Finish.
2025-04-11 20:14:01,996 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:02,004 [INFO] Final candidates: []
2025-04-11 20:14:02,004 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:02,012 [INFO] Final candidates: []
2025-04-11 20:14:02,012 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:02,012 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(13)), (np.int64(18), np.int64(0)))
2025-04-11 20:14:02,013 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:02,044 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:02,044 [DEBUG] MCTS iteration 39: Rollout reward: 1.
2025-04-11 20:14:02,044 [DEBUG] MCTS iteration 39: Backed up Finish.
2025-04-11 20:14:02,044 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:02,052 [INFO] Final candidates: []
2025-04-11 20:14:02,052 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:02,060 [INFO] Final candidates: []
2025-04-11 20:14:02,060 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:02,060 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(1)), (np.int64(12), np.int64(11)))
2025-04-11 20:14:02,061 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:02,329 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:02,329 [DEBUG] MCTS iteration 40: Rollout reward: 1.
2025-04-11 20:14:02,329 [DEBUG] MCTS iteration 40: Backed up Finish.
2025-04-11 20:14:02,329 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:02,337 [INFO] Final candidates: []
2025-04-11 20:14:02,337 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:02,345 [INFO] Final candidates: []
2025-04-11 20:14:02,345 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:02,345 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(3), np.int64(15)), (np.int64(4), np.int64(13)))
2025-04-11 20:14:02,346 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:02,480 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:02,480 [DEBUG] MCTS iteration 41: Rollout reward: 1.
2025-04-11 20:14:02,480 [DEBUG] MCTS iteration 41: Backed up Finish.
2025-04-11 20:14:02,480 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:02,488 [INFO] Final candidates: []
2025-04-11 20:14:02,488 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:02,496 [INFO] Final candidates: []
2025-04-11 20:14:02,496 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:02,496 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(8)), (np.int64(17), np.int64(10)))
2025-04-11 20:14:02,496 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:02,691 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:02,691 [DEBUG] MCTS iteration 42: Rollout reward: 0.
2025-04-11 20:14:02,691 [DEBUG] MCTS iteration 42: Backed up Finish.
2025-04-11 20:14:02,691 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:02,699 [INFO] Final candidates: []
2025-04-11 20:14:02,699 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:02,706 [INFO] Final candidates: []
2025-04-11 20:14:02,706 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:02,706 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(13)), (np.int64(10), np.int64(9)))
2025-04-11 20:14:02,707 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:02,838 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:02,839 [DEBUG] MCTS iteration 43: Rollout reward: 0.
2025-04-11 20:14:02,839 [DEBUG] MCTS iteration 43: Backed up Finish.
2025-04-11 20:14:02,839 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:02,847 [INFO] Final candidates: []
2025-04-11 20:14:02,847 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:02,855 [INFO] Final candidates: []
2025-04-11 20:14:02,855 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:02,855 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(8)), (np.int64(7), np.int64(13)))
2025-04-11 20:14:02,857 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:03,167 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:03,167 [DEBUG] MCTS iteration 44: Rollout reward: 1.
2025-04-11 20:14:03,167 [DEBUG] MCTS iteration 44: Backed up Finish.
2025-04-11 20:14:03,168 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:03,175 [INFO] Final candidates: []
2025-04-11 20:14:03,175 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:03,183 [INFO] Final candidates: []
2025-04-11 20:14:03,183 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:03,183 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(4), np.int64(13)), (np.int64(7), np.int64(8)))
2025-04-11 20:14:03,184 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:03,253 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:03,253 [DEBUG] MCTS iteration 45: Rollout reward: 0.
2025-04-11 20:14:03,253 [DEBUG] MCTS iteration 45: Backed up Finish.
2025-04-11 20:14:03,253 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:03,261 [INFO] Final candidates: []
2025-04-11 20:14:03,261 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:03,269 [INFO] Final candidates: []
2025-04-11 20:14:03,269 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:03,269 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(12)), (np.int64(2), np.int64(16)))
2025-04-11 20:14:03,270 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:03,364 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:03,364 [DEBUG] MCTS iteration 46: Rollout reward: 1.
2025-04-11 20:14:03,364 [DEBUG] MCTS iteration 46: Backed up Finish.
2025-04-11 20:14:03,365 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:03,372 [INFO] Final candidates: []
2025-04-11 20:14:03,372 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:03,380 [INFO] Final candidates: []
2025-04-11 20:14:03,380 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:03,380 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(18), np.int64(1)), (np.int64(5), np.int64(15)))
2025-04-11 20:14:03,381 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:03,540 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:03,540 [DEBUG] MCTS iteration 47: Rollout reward: 1.
2025-04-11 20:14:03,540 [DEBUG] MCTS iteration 47: Backed up Finish.
2025-04-11 20:14:03,540 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:03,548 [INFO] Final candidates: []
2025-04-11 20:14:03,548 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:03,557 [INFO] Final candidates: []
2025-04-11 20:14:03,557 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:03,557 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(3), np.int64(14)), (np.int64(4), np.int64(15)))
2025-04-11 20:14:03,558 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:03,869 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:03,869 [DEBUG] MCTS iteration 48: Rollout reward: 0.
2025-04-11 20:14:03,869 [DEBUG] MCTS iteration 48: Backed up Finish.
2025-04-11 20:14:03,869 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:03,877 [INFO] Final candidates: []
2025-04-11 20:14:03,877 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:03,885 [INFO] Final candidates: []
2025-04-11 20:14:03,885 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:03,885 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(10)), (np.int64(16), np.int64(0)))
2025-04-11 20:14:03,885 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:04,014 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:04,015 [DEBUG] MCTS iteration 49: Rollout reward: 0.
2025-04-11 20:14:04,015 [DEBUG] MCTS iteration 49: Backed up Finish.
2025-04-11 20:14:04,015 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:04,022 [INFO] Final candidates: []
2025-04-11 20:14:04,022 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:04,030 [INFO] Final candidates: []
2025-04-11 20:14:04,030 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:04,030 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(8)), (np.int64(9), np.int64(15)))
2025-04-11 20:14:04,031 [DEBUG] MCTS iteration 50: reached a node with 0 visits.
2025-04-11 20:14:04,031 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:04,068 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:04,068 [DEBUG] MCTS iteration 50: Rollout reward: 1.
2025-04-11 20:14:04,068 [DEBUG] MCTS iteration 50: Backed up Finish.
2025-04-11 20:14:04,068 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:04,077 [INFO] Final candidates: []
2025-04-11 20:14:04,077 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:04,085 [INFO] Final candidates: []
2025-04-11 20:14:04,085 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:04,085 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(11)), (np.int64(4), np.int64(10)))
2025-04-11 20:14:04,085 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:04,132 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:04,132 [DEBUG] MCTS iteration 51: Rollout reward: 1.
2025-04-11 20:14:04,132 [DEBUG] MCTS iteration 51: Backed up Finish.
2025-04-11 20:14:04,132 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:04,140 [INFO] Final candidates: []
2025-04-11 20:14:04,140 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:04,148 [INFO] Final candidates: []
2025-04-11 20:14:04,148 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:04,148 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(12)), (np.int64(7), np.int64(13)))
2025-04-11 20:14:04,149 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:04,322 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:04,322 [DEBUG] MCTS iteration 52: Rollout reward: 1.
2025-04-11 20:14:04,322 [DEBUG] MCTS iteration 52: Backed up Finish.
2025-04-11 20:14:04,322 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:04,330 [INFO] Final candidates: []
2025-04-11 20:14:04,330 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:04,339 [INFO] Final candidates: []
2025-04-11 20:14:04,339 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:04,339 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(11)), (np.int64(11), np.int64(8)))
2025-04-11 20:14:04,340 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:04,398 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:04,398 [DEBUG] MCTS iteration 53: Rollout reward: 0.
2025-04-11 20:14:04,398 [DEBUG] MCTS iteration 53: Backed up Finish.
2025-04-11 20:14:04,398 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:04,406 [INFO] Final candidates: []
2025-04-11 20:14:04,406 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:04,414 [INFO] Final candidates: []
2025-04-11 20:14:04,414 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:04,414 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(3), np.int64(15)), (np.int64(5), np.int64(15)))
2025-04-11 20:14:04,415 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:04,502 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:04,502 [DEBUG] MCTS iteration 54: Rollout reward: 1.
2025-04-11 20:14:04,502 [DEBUG] MCTS iteration 54: Backed up Finish.
2025-04-11 20:14:04,502 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:04,510 [INFO] Final candidates: []
2025-04-11 20:14:04,510 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:04,518 [INFO] Final candidates: []
2025-04-11 20:14:04,518 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:04,518 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(8)), (np.int64(6), np.int64(9)))
2025-04-11 20:14:04,519 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:04,617 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:04,617 [DEBUG] MCTS iteration 55: Rollout reward: 0.
2025-04-11 20:14:04,617 [DEBUG] MCTS iteration 55: Backed up Finish.
2025-04-11 20:14:04,618 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:04,625 [INFO] Final candidates: []
2025-04-11 20:14:04,626 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:04,633 [INFO] Final candidates: []
2025-04-11 20:14:04,633 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:04,633 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(7)), (np.int64(8), np.int64(14)))
2025-04-11 20:14:04,634 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:04,828 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:04,828 [DEBUG] MCTS iteration 56: Rollout reward: 0.
2025-04-11 20:14:04,828 [DEBUG] MCTS iteration 56: Backed up Finish.
2025-04-11 20:14:04,829 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:04,836 [INFO] Final candidates: []
2025-04-11 20:14:04,836 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:04,844 [INFO] Final candidates: []
2025-04-11 20:14:04,844 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:04,844 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(9)), (np.int64(2), np.int64(14)))
2025-04-11 20:14:04,845 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:04,911 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:04,911 [DEBUG] MCTS iteration 57: Rollout reward: 1.
2025-04-11 20:14:04,911 [DEBUG] MCTS iteration 57: Backed up Finish.
2025-04-11 20:14:04,911 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:04,919 [INFO] Final candidates: []
2025-04-11 20:14:04,919 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:04,927 [INFO] Final candidates: []
2025-04-11 20:14:04,927 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:04,927 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(15)), (np.int64(11), np.int64(10)))
2025-04-11 20:14:04,928 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:05,038 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:05,038 [DEBUG] MCTS iteration 58: Rollout reward: 0.
2025-04-11 20:14:05,038 [DEBUG] MCTS iteration 58: Backed up Finish.
2025-04-11 20:14:05,038 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:05,046 [INFO] Final candidates: []
2025-04-11 20:14:05,046 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:05,054 [INFO] Final candidates: []
2025-04-11 20:14:05,054 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:05,054 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(3), np.int64(17)), (np.int64(9), np.int64(15)))
2025-04-11 20:14:05,055 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:05,203 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:05,204 [DEBUG] MCTS iteration 59: Rollout reward: 1.
2025-04-11 20:14:05,204 [DEBUG] MCTS iteration 59: Backed up Finish.
2025-04-11 20:14:05,204 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:05,211 [INFO] Final candidates: []
2025-04-11 20:14:05,211 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:05,220 [INFO] Final candidates: []
2025-04-11 20:14:05,220 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:05,220 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(11)), (np.int64(4), np.int64(15)))
2025-04-11 20:14:05,220 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:05,391 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:05,391 [DEBUG] MCTS iteration 60: Rollout reward: 0.
2025-04-11 20:14:05,391 [DEBUG] MCTS iteration 60: Backed up Finish.
2025-04-11 20:14:05,391 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:05,400 [INFO] Final candidates: []
2025-04-11 20:14:05,400 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:05,408 [INFO] Final candidates: []
2025-04-11 20:14:05,408 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:05,408 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(8)), (np.int64(5), np.int64(15)))
2025-04-11 20:14:05,409 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:05,651 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:05,651 [DEBUG] MCTS iteration 61: Rollout reward: 1.
2025-04-11 20:14:05,651 [DEBUG] MCTS iteration 61: Backed up Finish.
2025-04-11 20:14:05,651 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:05,659 [INFO] Final candidates: []
2025-04-11 20:14:05,659 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:05,667 [INFO] Final candidates: []
2025-04-11 20:14:05,667 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:05,667 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(9)), (np.int64(12), np.int64(12)))
2025-04-11 20:14:05,668 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:05,834 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:05,834 [DEBUG] MCTS iteration 62: Rollout reward: 0.
2025-04-11 20:14:05,834 [DEBUG] MCTS iteration 62: Backed up Finish.
2025-04-11 20:14:05,834 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:05,842 [INFO] Final candidates: []
2025-04-11 20:14:05,842 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:05,850 [INFO] Final candidates: []
2025-04-11 20:14:05,850 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:05,850 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(13)), (np.int64(8), np.int64(12)))
2025-04-11 20:14:05,851 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:05,953 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:05,953 [DEBUG] MCTS iteration 63: Rollout reward: 1.
2025-04-11 20:14:05,953 [DEBUG] MCTS iteration 63: Backed up Finish.
2025-04-11 20:14:05,953 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:05,961 [INFO] Final candidates: []
2025-04-11 20:14:05,961 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:05,969 [INFO] Final candidates: []
2025-04-11 20:14:05,969 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:05,969 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(10)), (np.int64(4), np.int64(15)))
2025-04-11 20:14:05,970 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:06,054 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:06,054 [DEBUG] MCTS iteration 64: Rollout reward: 0.
2025-04-11 20:14:06,054 [DEBUG] MCTS iteration 64: Backed up Finish.
2025-04-11 20:14:06,054 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:06,062 [INFO] Final candidates: []
2025-04-11 20:14:06,062 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:06,070 [INFO] Final candidates: []
2025-04-11 20:14:06,070 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:06,070 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(8)), (np.int64(5), np.int64(11)))
2025-04-11 20:14:06,071 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:06,287 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:06,287 [DEBUG] MCTS iteration 65: Rollout reward: 0.
2025-04-11 20:14:06,287 [DEBUG] MCTS iteration 65: Backed up Finish.
2025-04-11 20:14:06,287 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:06,295 [INFO] Final candidates: []
2025-04-11 20:14:06,295 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:06,303 [INFO] Final candidates: []
2025-04-11 20:14:06,303 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:06,303 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(10)), (np.int64(11), np.int64(12)))
2025-04-11 20:14:06,304 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:06,416 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:06,417 [DEBUG] MCTS iteration 66: Rollout reward: 0.
2025-04-11 20:14:06,417 [DEBUG] MCTS iteration 66: Backed up Finish.
2025-04-11 20:14:06,417 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:06,424 [INFO] Final candidates: []
2025-04-11 20:14:06,425 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:06,433 [INFO] Final candidates: []
2025-04-11 20:14:06,433 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:06,433 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(13)), (np.int64(12), np.int64(12)))
2025-04-11 20:14:06,433 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:06,697 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:06,697 [DEBUG] MCTS iteration 67: Rollout reward: 0.
2025-04-11 20:14:06,697 [DEBUG] MCTS iteration 67: Backed up Finish.
2025-04-11 20:14:06,697 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:06,707 [INFO] Final candidates: []
2025-04-11 20:14:06,707 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:06,716 [INFO] Final candidates: []
2025-04-11 20:14:06,716 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:06,716 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(11)), (np.int64(10), np.int64(14)))
2025-04-11 20:14:06,717 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:06,898 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:06,898 [DEBUG] MCTS iteration 68: Rollout reward: 0.
2025-04-11 20:14:06,898 [DEBUG] MCTS iteration 68: Backed up Finish.
2025-04-11 20:14:06,898 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:06,907 [INFO] Final candidates: []
2025-04-11 20:14:06,907 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:06,915 [INFO] Final candidates: []
2025-04-11 20:14:06,915 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:06,915 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(14)), (np.int64(6), np.int64(14)))
2025-04-11 20:14:06,916 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:07,175 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:07,175 [DEBUG] MCTS iteration 69: Rollout reward: 0.
2025-04-11 20:14:07,175 [DEBUG] MCTS iteration 69: Backed up Finish.
2025-04-11 20:14:07,175 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:07,183 [INFO] Final candidates: []
2025-04-11 20:14:07,183 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:07,194 [INFO] Final candidates: []
2025-04-11 20:14:07,194 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:07,194 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(10)), (np.int64(11), np.int64(11)))
2025-04-11 20:14:07,194 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:07,297 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:07,297 [DEBUG] MCTS iteration 70: Rollout reward: 0.
2025-04-11 20:14:07,297 [DEBUG] MCTS iteration 70: Backed up Finish.
2025-04-11 20:14:07,297 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:07,305 [INFO] Final candidates: []
2025-04-11 20:14:07,305 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:07,313 [INFO] Final candidates: []
2025-04-11 20:14:07,313 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:07,313 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(4), np.int64(18)), (np.int64(9), np.int64(13)))
2025-04-11 20:14:07,318 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:07,348 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:07,349 [DEBUG] MCTS iteration 71: Rollout reward: 0.
2025-04-11 20:14:07,349 [DEBUG] MCTS iteration 71: Backed up Finish.
2025-04-11 20:14:07,349 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:07,357 [INFO] Final candidates: []
2025-04-11 20:14:07,357 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:07,364 [INFO] Final candidates: []
2025-04-11 20:14:07,364 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:07,364 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(13)), (np.int64(15), np.int64(12)))
2025-04-11 20:14:07,365 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:07,462 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:07,462 [DEBUG] MCTS iteration 72: Rollout reward: 0.
2025-04-11 20:14:07,462 [DEBUG] MCTS iteration 72: Backed up Finish.
2025-04-11 20:14:07,462 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:07,470 [INFO] Final candidates: []
2025-04-11 20:14:07,470 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:07,478 [INFO] Final candidates: []
2025-04-11 20:14:07,478 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:07,478 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(7)), (np.int64(10), np.int64(13)))
2025-04-11 20:14:07,479 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:07,740 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:07,741 [DEBUG] MCTS iteration 73: Rollout reward: 1.
2025-04-11 20:14:07,741 [DEBUG] MCTS iteration 73: Backed up Finish.
2025-04-11 20:14:07,742 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:07,750 [INFO] Final candidates: []
2025-04-11 20:14:07,750 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:07,757 [INFO] Final candidates: []
2025-04-11 20:14:07,758 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:07,758 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(8)), (np.int64(12), np.int64(11)))
2025-04-11 20:14:07,758 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:07,816 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:07,816 [DEBUG] MCTS iteration 74: Rollout reward: 1.
2025-04-11 20:14:07,816 [DEBUG] MCTS iteration 74: Backed up Finish.
2025-04-11 20:14:07,816 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:07,824 [INFO] Final candidates: []
2025-04-11 20:14:07,824 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:07,831 [INFO] Final candidates: []
2025-04-11 20:14:07,831 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:07,831 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(15)), (np.int64(15), np.int64(12)))
2025-04-11 20:14:07,832 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:07,945 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:07,945 [DEBUG] MCTS iteration 75: Rollout reward: 1.
2025-04-11 20:14:07,945 [DEBUG] MCTS iteration 75: Backed up Finish.
2025-04-11 20:14:07,945 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:07,953 [INFO] Final candidates: []
2025-04-11 20:14:07,953 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:07,961 [INFO] Final candidates: []
2025-04-11 20:14:07,961 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:07,961 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(14)), (np.int64(6), np.int64(14)))
2025-04-11 20:14:07,961 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:08,149 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:08,149 [DEBUG] MCTS iteration 76: Rollout reward: 1.
2025-04-11 20:14:08,150 [DEBUG] MCTS iteration 76: Backed up Finish.
2025-04-11 20:14:08,150 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:08,157 [INFO] Final candidates: []
2025-04-11 20:14:08,157 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:08,165 [INFO] Final candidates: []
2025-04-11 20:14:08,165 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:08,165 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(16)), (np.int64(13), np.int64(13)))
2025-04-11 20:14:08,166 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:08,416 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:08,416 [DEBUG] MCTS iteration 77: Rollout reward: 0.
2025-04-11 20:14:08,416 [DEBUG] MCTS iteration 77: Backed up Finish.
2025-04-11 20:14:08,416 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:08,424 [INFO] Final candidates: []
2025-04-11 20:14:08,424 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:08,432 [INFO] Final candidates: []
2025-04-11 20:14:08,432 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:08,432 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(3), np.int64(13)), (np.int64(17), np.int64(2)))
2025-04-11 20:14:08,433 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:08,526 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:08,526 [DEBUG] MCTS iteration 78: Rollout reward: 0.
2025-04-11 20:14:08,526 [DEBUG] MCTS iteration 78: Backed up Finish.
2025-04-11 20:14:08,526 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:08,534 [INFO] Final candidates: []
2025-04-11 20:14:08,534 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:08,541 [INFO] Final candidates: []
2025-04-11 20:14:08,541 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:08,541 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(7)), (np.int64(10), np.int64(14)))
2025-04-11 20:14:08,542 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:08,681 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:08,682 [DEBUG] MCTS iteration 79: Rollout reward: 1.
2025-04-11 20:14:08,682 [DEBUG] MCTS iteration 79: Backed up Finish.
2025-04-11 20:14:08,682 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:08,689 [INFO] Final candidates: []
2025-04-11 20:14:08,689 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:08,697 [INFO] Final candidates: []
2025-04-11 20:14:08,697 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:08,697 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(3), np.int64(13)), (np.int64(12), np.int64(8)))
2025-04-11 20:14:08,698 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:08,721 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:08,721 [DEBUG] MCTS iteration 80: Rollout reward: 1.
2025-04-11 20:14:08,721 [DEBUG] MCTS iteration 80: Backed up Finish.
2025-04-11 20:14:08,721 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:08,728 [INFO] Final candidates: []
2025-04-11 20:14:08,729 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:08,736 [INFO] Final candidates: []
2025-04-11 20:14:08,736 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:08,736 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(3), np.int64(14)), (np.int64(16), np.int64(9)))
2025-04-11 20:14:08,737 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:09,028 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:09,028 [DEBUG] MCTS iteration 81: Rollout reward: 1.
2025-04-11 20:14:09,028 [DEBUG] MCTS iteration 81: Backed up Finish.
2025-04-11 20:14:09,028 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:09,036 [INFO] Final candidates: []
2025-04-11 20:14:09,036 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:09,044 [INFO] Final candidates: []
2025-04-11 20:14:09,044 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:09,044 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(17), np.int64(2)), (np.int64(13), np.int64(9)))
2025-04-11 20:14:09,045 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:09,095 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:09,095 [DEBUG] MCTS iteration 82: Rollout reward: 1.
2025-04-11 20:14:09,095 [DEBUG] MCTS iteration 82: Backed up Finish.
2025-04-11 20:14:09,096 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:09,103 [INFO] Final candidates: []
2025-04-11 20:14:09,103 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:09,111 [INFO] Final candidates: []
2025-04-11 20:14:09,111 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:09,111 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(4), np.int64(13)), (np.int64(5), np.int64(17)))
2025-04-11 20:14:09,112 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:09,221 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:09,222 [DEBUG] MCTS iteration 83: Rollout reward: 1.
2025-04-11 20:14:09,222 [DEBUG] MCTS iteration 83: Backed up Finish.
2025-04-11 20:14:09,222 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:09,230 [INFO] Final candidates: []
2025-04-11 20:14:09,230 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:09,238 [INFO] Final candidates: []
2025-04-11 20:14:09,238 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:09,238 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(4), np.int64(18)), (np.int64(7), np.int64(7)))
2025-04-11 20:14:09,239 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:09,407 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:09,407 [DEBUG] MCTS iteration 84: Rollout reward: 1.
2025-04-11 20:14:09,407 [DEBUG] MCTS iteration 84: Backed up Finish.
2025-04-11 20:14:09,407 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:09,415 [INFO] Final candidates: []
2025-04-11 20:14:09,415 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:09,423 [INFO] Final candidates: []
2025-04-11 20:14:09,423 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:09,423 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(8)), (np.int64(10), np.int64(11)))
2025-04-11 20:14:09,423 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:09,693 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:09,693 [DEBUG] MCTS iteration 85: Rollout reward: 0.
2025-04-11 20:14:09,693 [DEBUG] MCTS iteration 85: Backed up Finish.
2025-04-11 20:14:09,693 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:09,701 [INFO] Final candidates: []
2025-04-11 20:14:09,701 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:09,709 [INFO] Final candidates: []
2025-04-11 20:14:09,709 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:09,709 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(14)), (np.int64(11), np.int64(8)))
2025-04-11 20:14:09,709 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:09,763 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:09,763 [DEBUG] MCTS iteration 86: Rollout reward: 1.
2025-04-11 20:14:09,763 [DEBUG] MCTS iteration 86: Backed up Finish.
2025-04-11 20:14:09,763 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:09,771 [INFO] Final candidates: []
2025-04-11 20:14:09,771 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:09,780 [INFO] Final candidates: []
2025-04-11 20:14:09,780 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:09,780 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(4), np.int64(15)), (np.int64(4), np.int64(12)))
2025-04-11 20:14:09,780 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:10,021 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:10,021 [DEBUG] MCTS iteration 87: Rollout reward: 0.
2025-04-11 20:14:10,021 [DEBUG] MCTS iteration 87: Backed up Finish.
2025-04-11 20:14:10,022 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:10,029 [INFO] Final candidates: []
2025-04-11 20:14:10,029 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:10,037 [INFO] Final candidates: []
2025-04-11 20:14:10,037 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:10,037 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(3), np.int64(16)), (np.int64(11), np.int64(10)))
2025-04-11 20:14:10,038 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:10,117 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:10,118 [DEBUG] MCTS iteration 88: Rollout reward: 1.
2025-04-11 20:14:10,118 [DEBUG] MCTS iteration 88: Backed up Finish.
2025-04-11 20:14:10,118 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:10,129 [INFO] Final candidates: []
2025-04-11 20:14:10,129 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:10,137 [INFO] Final candidates: []
2025-04-11 20:14:10,137 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:10,137 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(3), np.int64(13)), (np.int64(2), np.int64(14)))
2025-04-11 20:14:10,138 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:10,317 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:10,318 [DEBUG] MCTS iteration 89: Rollout reward: 0.
2025-04-11 20:14:10,318 [DEBUG] MCTS iteration 89: Backed up Finish.
2025-04-11 20:14:10,318 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:10,327 [INFO] Final candidates: []
2025-04-11 20:14:10,328 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:10,336 [INFO] Final candidates: []
2025-04-11 20:14:10,336 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:10,336 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(12)), (np.int64(5), np.int64(9)))
2025-04-11 20:14:10,336 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:10,408 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:10,408 [DEBUG] MCTS iteration 90: Rollout reward: 1.
2025-04-11 20:14:10,408 [DEBUG] MCTS iteration 90: Backed up Finish.
2025-04-11 20:14:10,409 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:10,416 [INFO] Final candidates: []
2025-04-11 20:14:10,416 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:10,424 [INFO] Final candidates: []
2025-04-11 20:14:10,424 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:10,424 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(14)), (np.int64(5), np.int64(12)))
2025-04-11 20:14:10,425 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:10,496 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:10,496 [DEBUG] MCTS iteration 91: Rollout reward: 1.
2025-04-11 20:14:10,496 [DEBUG] MCTS iteration 91: Backed up Finish.
2025-04-11 20:14:10,496 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:10,504 [INFO] Final candidates: []
2025-04-11 20:14:10,504 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:10,512 [INFO] Final candidates: []
2025-04-11 20:14:10,512 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:10,512 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(15)), (np.int64(8), np.int64(7)))
2025-04-11 20:14:10,513 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:10,769 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:10,769 [DEBUG] MCTS iteration 92: Rollout reward: 1.
2025-04-11 20:14:10,770 [DEBUG] MCTS iteration 92: Backed up Finish.
2025-04-11 20:14:10,770 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:10,779 [INFO] Final candidates: []
2025-04-11 20:14:10,779 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:10,787 [INFO] Final candidates: []
2025-04-11 20:14:10,787 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:10,787 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(13)), (np.int64(12), np.int64(10)))
2025-04-11 20:14:10,788 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:11,027 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:11,028 [DEBUG] MCTS iteration 93: Rollout reward: 1.
2025-04-11 20:14:11,028 [DEBUG] MCTS iteration 93: Backed up Finish.
2025-04-11 20:14:11,028 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:11,035 [INFO] Final candidates: []
2025-04-11 20:14:11,036 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:11,044 [INFO] Final candidates: []
2025-04-11 20:14:11,044 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:11,044 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(10)), (np.int64(15), np.int64(12)))
2025-04-11 20:14:11,044 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:11,122 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:11,122 [DEBUG] MCTS iteration 94: Rollout reward: 0.
2025-04-11 20:14:11,122 [DEBUG] MCTS iteration 94: Backed up Finish.
2025-04-11 20:14:11,122 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:11,130 [INFO] Final candidates: []
2025-04-11 20:14:11,130 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:11,138 [INFO] Final candidates: []
2025-04-11 20:14:11,138 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:11,138 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(1)), (np.int64(10), np.int64(13)))
2025-04-11 20:14:11,139 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:11,340 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:11,340 [DEBUG] MCTS iteration 95: Rollout reward: 0.
2025-04-11 20:14:11,340 [DEBUG] MCTS iteration 95: Backed up Finish.
2025-04-11 20:14:11,341 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:11,348 [INFO] Final candidates: []
2025-04-11 20:14:11,348 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:11,356 [INFO] Final candidates: []
2025-04-11 20:14:11,356 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:11,356 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(10)), (np.int64(15), np.int64(8)))
2025-04-11 20:14:11,357 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:11,478 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:11,479 [DEBUG] MCTS iteration 96: Rollout reward: 0.
2025-04-11 20:14:11,479 [DEBUG] MCTS iteration 96: Backed up Finish.
2025-04-11 20:14:11,479 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:11,486 [INFO] Final candidates: []
2025-04-11 20:14:11,486 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:11,494 [INFO] Final candidates: []
2025-04-11 20:14:11,494 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:11,494 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(16)), (np.int64(11), np.int64(15)))
2025-04-11 20:14:11,495 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:11,564 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:11,564 [DEBUG] MCTS iteration 97: Rollout reward: 1.
2025-04-11 20:14:11,564 [DEBUG] MCTS iteration 97: Backed up Finish.
2025-04-11 20:14:11,564 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:11,572 [INFO] Final candidates: []
2025-04-11 20:14:11,572 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:11,580 [INFO] Final candidates: []
2025-04-11 20:14:11,580 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:11,580 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(3), np.int64(17)), (np.int64(13), np.int64(13)))
2025-04-11 20:14:11,581 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:11,655 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:11,656 [DEBUG] MCTS iteration 98: Rollout reward: 1.
2025-04-11 20:14:11,656 [DEBUG] MCTS iteration 98: Backed up Finish.
2025-04-11 20:14:11,656 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:11,665 [INFO] Final candidates: []
2025-04-11 20:14:11,666 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:11,673 [INFO] Final candidates: []
2025-04-11 20:14:11,673 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:11,673 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(14)), (np.int64(11), np.int64(8)))
2025-04-11 20:14:11,674 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:11,881 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:11,882 [DEBUG] MCTS iteration 99: Rollout reward: 0.
2025-04-11 20:14:11,882 [DEBUG] MCTS iteration 99: Backed up Finish.
2025-04-11 20:14:11,882 [INFO] MCTS: Search completed after 100 iterations.
2025-04-11 20:14:11,882 [DEBUG] MCTS: BEST ((10, 12), (np.int64(9), np.int64(13))) with 16 visits.
2025-04-11 20:14:11,882 [INFO] MCTS: Search finished. Best move selected with 16 visits.
2025-04-11 20:14:11,882 [INFO] Phase 2 (defense): MCTS selected move: ((10, 12), (np.int64(9), np.int64(13)))
2025-04-11 20:14:11,882 [INFO] Phase 2 (defense): MCTS selected move string : N11,O10
2025-04-11 20:14:11,882 [INFO] MCTS (defense candidates) selected move: N11,O10
2025-04-11 20:14:26,188 [INFO] Starting pre-MCTS candidate collection.
2025-04-11 20:14:26,196 [INFO] Final candidates: []
2025-04-11 20:14:26,196 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:26,203 [INFO] Final candidates: []
2025-04-11 20:14:26,204 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:26,204 [INFO] No candidate found in Phase 1 or 2; using full legal moves for MCTS.
2025-04-11 20:14:26,204 [INFO] MCTS: Starting search for 100 iterations.
2025-04-11 20:14:26,212 [INFO] Final candidates: []
2025-04-11 20:14:26,212 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:26,220 [INFO] Final candidates: []
2025-04-11 20:14:26,220 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:26,220 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(7)), (np.int64(18), np.int64(0)))
2025-04-11 20:14:26,221 [DEBUG] MCTS iteration 0: reached a node with 0 visits.
2025-04-11 20:14:26,221 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:26,283 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:26,283 [DEBUG] MCTS iteration 0: Rollout reward: 0.
2025-04-11 20:14:26,283 [DEBUG] MCTS iteration 0: Backed up Finish.
2025-04-11 20:14:26,291 [INFO] Final candidates: []
2025-04-11 20:14:26,291 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:26,298 [INFO] Final candidates: []
2025-04-11 20:14:26,298 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:26,298 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(3), np.int64(16)), (np.int64(17), np.int64(10)))
2025-04-11 20:14:26,299 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:26,342 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:26,342 [DEBUG] MCTS iteration 1: Rollout reward: 1.
2025-04-11 20:14:26,342 [DEBUG] MCTS iteration 1: Backed up Finish.
2025-04-11 20:14:26,350 [INFO] Final candidates: []
2025-04-11 20:14:26,350 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:26,358 [INFO] Final candidates: []
2025-04-11 20:14:26,358 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:26,358 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(10)), (np.int64(17), np.int64(1)))
2025-04-11 20:14:26,358 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:26,592 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:26,592 [DEBUG] MCTS iteration 2: Rollout reward: 0.
2025-04-11 20:14:26,592 [DEBUG] MCTS iteration 2: Backed up Finish.
2025-04-11 20:14:26,600 [INFO] Final candidates: []
2025-04-11 20:14:26,600 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:26,608 [INFO] Final candidates: []
2025-04-11 20:14:26,608 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:26,608 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(1)), (np.int64(16), np.int64(9)))
2025-04-11 20:14:26,609 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:26,780 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:26,780 [DEBUG] MCTS iteration 3: Rollout reward: 0.
2025-04-11 20:14:26,780 [DEBUG] MCTS iteration 3: Backed up Finish.
2025-04-11 20:14:26,788 [INFO] Final candidates: []
2025-04-11 20:14:26,788 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:26,796 [INFO] Final candidates: []
2025-04-11 20:14:26,796 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:26,796 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(10)), (np.int64(9), np.int64(14)))
2025-04-11 20:14:26,797 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:26,966 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:26,966 [DEBUG] MCTS iteration 4: Rollout reward: 1.
2025-04-11 20:14:26,966 [DEBUG] MCTS iteration 4: Backed up Finish.
2025-04-11 20:14:26,974 [INFO] Final candidates: []
2025-04-11 20:14:26,974 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:26,982 [INFO] Final candidates: []
2025-04-11 20:14:26,982 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:26,982 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(7)), (np.int64(10), np.int64(11)))
2025-04-11 20:14:26,983 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:27,124 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:27,125 [DEBUG] MCTS iteration 5: Rollout reward: 0.
2025-04-11 20:14:27,125 [DEBUG] MCTS iteration 5: Backed up Finish.
2025-04-11 20:14:27,133 [INFO] Final candidates: []
2025-04-11 20:14:27,133 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:27,140 [INFO] Final candidates: []
2025-04-11 20:14:27,140 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:27,140 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(17), np.int64(2)), (np.int64(12), np.int64(10)))
2025-04-11 20:14:27,141 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:27,252 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:27,252 [DEBUG] MCTS iteration 6: Rollout reward: 1.
2025-04-11 20:14:27,252 [DEBUG] MCTS iteration 6: Backed up Finish.
2025-04-11 20:14:27,260 [INFO] Final candidates: []
2025-04-11 20:14:27,260 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:27,268 [INFO] Final candidates: []
2025-04-11 20:14:27,268 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:27,268 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(12)), (np.int64(5), np.int64(17)))
2025-04-11 20:14:27,269 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:27,444 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:27,445 [DEBUG] MCTS iteration 7: Rollout reward: 0.
2025-04-11 20:14:27,445 [DEBUG] MCTS iteration 7: Backed up Finish.
2025-04-11 20:14:27,452 [INFO] Final candidates: []
2025-04-11 20:14:27,453 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:27,460 [INFO] Final candidates: []
2025-04-11 20:14:27,460 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:27,460 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(9)), (np.int64(7), np.int64(8)))
2025-04-11 20:14:27,461 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:27,569 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:27,569 [DEBUG] MCTS iteration 8: Rollout reward: 0.
2025-04-11 20:14:27,569 [DEBUG] MCTS iteration 8: Backed up Finish.
2025-04-11 20:14:27,577 [INFO] Final candidates: []
2025-04-11 20:14:27,577 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:27,585 [INFO] Final candidates: []
2025-04-11 20:14:27,585 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:27,585 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(11)), (np.int64(16), np.int64(11)))
2025-04-11 20:14:27,585 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:27,799 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:27,799 [DEBUG] MCTS iteration 9: Rollout reward: 0.
2025-04-11 20:14:27,799 [DEBUG] MCTS iteration 9: Backed up Finish.
2025-04-11 20:14:27,807 [INFO] Final candidates: []
2025-04-11 20:14:27,807 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:27,815 [INFO] Final candidates: []
2025-04-11 20:14:27,815 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:27,815 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(3), np.int64(17)), (np.int64(2), np.int64(14)))
2025-04-11 20:14:27,816 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:27,870 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:27,870 [DEBUG] MCTS iteration 10: Rollout reward: 1.
2025-04-11 20:14:27,870 [DEBUG] MCTS iteration 10: Backed up Finish.
2025-04-11 20:14:27,878 [INFO] Final candidates: []
2025-04-11 20:14:27,878 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:27,886 [INFO] Final candidates: []
2025-04-11 20:14:27,886 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:27,886 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(18), np.int64(0)), (np.int64(5), np.int64(15)))
2025-04-11 20:14:27,886 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:28,022 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:28,022 [DEBUG] MCTS iteration 11: Rollout reward: 1.
2025-04-11 20:14:28,022 [DEBUG] MCTS iteration 11: Backed up Finish.
2025-04-11 20:14:28,030 [INFO] Final candidates: []
2025-04-11 20:14:28,030 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:28,038 [INFO] Final candidates: []
2025-04-11 20:14:28,038 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:28,038 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(14)), (np.int64(17), np.int64(10)))
2025-04-11 20:14:28,038 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:28,357 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:28,357 [DEBUG] MCTS iteration 12: Rollout reward: 1.
2025-04-11 20:14:28,357 [DEBUG] MCTS iteration 12: Backed up Finish.
2025-04-11 20:14:28,365 [INFO] Final candidates: []
2025-04-11 20:14:28,365 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:28,373 [INFO] Final candidates: []
2025-04-11 20:14:28,373 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:28,373 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(9)), (np.int64(14), np.int64(11)))
2025-04-11 20:14:28,373 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:28,568 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:28,568 [DEBUG] MCTS iteration 13: Rollout reward: 1.
2025-04-11 20:14:28,568 [DEBUG] MCTS iteration 13: Backed up Finish.
2025-04-11 20:14:28,576 [INFO] Final candidates: []
2025-04-11 20:14:28,576 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:28,584 [INFO] Final candidates: []
2025-04-11 20:14:28,584 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:28,584 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(13)), (np.int64(12), np.int64(12)))
2025-04-11 20:14:28,585 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:28,807 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:28,808 [DEBUG] MCTS iteration 14: Rollout reward: 0.
2025-04-11 20:14:28,808 [DEBUG] MCTS iteration 14: Backed up Finish.
2025-04-11 20:14:28,815 [INFO] Final candidates: []
2025-04-11 20:14:28,815 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:28,823 [INFO] Final candidates: []
2025-04-11 20:14:28,823 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:28,823 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(9)), (np.int64(2), np.int64(14)))
2025-04-11 20:14:28,824 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:29,104 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:29,104 [DEBUG] MCTS iteration 15: Rollout reward: 0.
2025-04-11 20:14:29,104 [DEBUG] MCTS iteration 15: Backed up Finish.
2025-04-11 20:14:29,112 [INFO] Final candidates: []
2025-04-11 20:14:29,112 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:29,120 [INFO] Final candidates: []
2025-04-11 20:14:29,120 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:29,120 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(3), np.int64(13)), (np.int64(17), np.int64(2)))
2025-04-11 20:14:29,120 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:29,195 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:29,195 [DEBUG] MCTS iteration 16: Rollout reward: 1.
2025-04-11 20:14:29,195 [DEBUG] MCTS iteration 16: Backed up Finish.
2025-04-11 20:14:29,203 [INFO] Final candidates: []
2025-04-11 20:14:29,216 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:29,224 [INFO] Final candidates: []
2025-04-11 20:14:29,224 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:29,224 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(7)), (np.int64(2), np.int64(16)))
2025-04-11 20:14:29,225 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:29,317 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:29,317 [DEBUG] MCTS iteration 17: Rollout reward: 0.
2025-04-11 20:14:29,317 [DEBUG] MCTS iteration 17: Backed up Finish.
2025-04-11 20:14:29,325 [INFO] Final candidates: []
2025-04-11 20:14:29,325 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:29,333 [INFO] Final candidates: []
2025-04-11 20:14:29,333 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:29,333 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(8)), (np.int64(4), np.int64(10)))
2025-04-11 20:14:29,334 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:29,465 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:29,465 [DEBUG] MCTS iteration 18: Rollout reward: 0.
2025-04-11 20:14:29,465 [DEBUG] MCTS iteration 18: Backed up Finish.
2025-04-11 20:14:29,473 [INFO] Final candidates: []
2025-04-11 20:14:29,473 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:29,481 [INFO] Final candidates: []
2025-04-11 20:14:29,481 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:29,481 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(3), np.int64(14)), (np.int64(2), np.int64(14)))
2025-04-11 20:14:29,482 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:29,617 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:29,617 [DEBUG] MCTS iteration 19: Rollout reward: 1.
2025-04-11 20:14:29,617 [DEBUG] MCTS iteration 19: Backed up Finish.
2025-04-11 20:14:29,625 [INFO] Final candidates: []
2025-04-11 20:14:29,625 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:29,633 [INFO] Final candidates: []
2025-04-11 20:14:29,633 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:29,633 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(14)), (np.int64(13), np.int64(9)))
2025-04-11 20:14:29,633 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:29,780 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:29,780 [DEBUG] MCTS iteration 20: Rollout reward: 0.
2025-04-11 20:14:29,780 [DEBUG] MCTS iteration 20: Backed up Finish.
2025-04-11 20:14:29,788 [INFO] Final candidates: []
2025-04-11 20:14:29,788 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:29,796 [INFO] Final candidates: []
2025-04-11 20:14:29,796 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:29,796 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(0)), (np.int64(11), np.int64(15)))
2025-04-11 20:14:29,797 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:29,997 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:29,997 [DEBUG] MCTS iteration 21: Rollout reward: 0.
2025-04-11 20:14:29,997 [DEBUG] MCTS iteration 21: Backed up Finish.
2025-04-11 20:14:30,005 [INFO] Final candidates: []
2025-04-11 20:14:30,005 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:30,013 [INFO] Final candidates: []
2025-04-11 20:14:30,013 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:30,013 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(10)), (np.int64(4), np.int64(12)))
2025-04-11 20:14:30,013 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:30,302 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:30,302 [DEBUG] MCTS iteration 22: Rollout reward: 1.
2025-04-11 20:14:30,302 [DEBUG] MCTS iteration 22: Backed up Finish.
2025-04-11 20:14:30,310 [INFO] Final candidates: []
2025-04-11 20:14:30,310 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:30,317 [INFO] Final candidates: []
2025-04-11 20:14:30,317 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:30,318 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(3), np.int64(14)), (np.int64(4), np.int64(10)))
2025-04-11 20:14:30,318 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:30,397 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:30,397 [DEBUG] MCTS iteration 23: Rollout reward: 1.
2025-04-11 20:14:30,397 [DEBUG] MCTS iteration 23: Backed up Finish.
2025-04-11 20:14:30,405 [INFO] Final candidates: []
2025-04-11 20:14:30,405 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:30,412 [INFO] Final candidates: []
2025-04-11 20:14:30,412 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:30,412 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(14)), (np.int64(10), np.int64(9)))
2025-04-11 20:14:30,413 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:30,517 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:30,517 [DEBUG] MCTS iteration 24: Rollout reward: 1.
2025-04-11 20:14:30,517 [DEBUG] MCTS iteration 24: Backed up Finish.
2025-04-11 20:14:30,525 [INFO] Final candidates: []
2025-04-11 20:14:30,525 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:30,533 [INFO] Final candidates: []
2025-04-11 20:14:30,533 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:30,533 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(14)), (np.int64(8), np.int64(7)))
2025-04-11 20:14:30,534 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:30,625 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:30,625 [DEBUG] MCTS iteration 25: Rollout reward: 1.
2025-04-11 20:14:30,625 [DEBUG] MCTS iteration 25: Backed up Finish.
2025-04-11 20:14:30,632 [INFO] Final candidates: []
2025-04-11 20:14:30,633 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:30,640 [INFO] Final candidates: []
2025-04-11 20:14:30,640 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:30,640 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(13)), (np.int64(9), np.int64(6)))
2025-04-11 20:14:30,641 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:30,910 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:30,910 [DEBUG] MCTS iteration 26: Rollout reward: 1.
2025-04-11 20:14:30,910 [DEBUG] MCTS iteration 26: Backed up Finish.
2025-04-11 20:14:30,918 [INFO] Final candidates: []
2025-04-11 20:14:30,918 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:30,925 [INFO] Final candidates: []
2025-04-11 20:14:30,925 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:30,926 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(11)), (np.int64(11), np.int64(10)))
2025-04-11 20:14:30,926 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:31,158 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:31,158 [DEBUG] MCTS iteration 27: Rollout reward: 1.
2025-04-11 20:14:31,158 [DEBUG] MCTS iteration 27: Backed up Finish.
2025-04-11 20:14:31,166 [INFO] Final candidates: []
2025-04-11 20:14:31,166 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:31,174 [INFO] Final candidates: []
2025-04-11 20:14:31,174 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:31,174 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(12)), (np.int64(13), np.int64(13)))
2025-04-11 20:14:31,175 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:31,233 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:31,234 [DEBUG] MCTS iteration 28: Rollout reward: 0.
2025-04-11 20:14:31,234 [DEBUG] MCTS iteration 28: Backed up Finish.
2025-04-11 20:14:31,242 [INFO] Final candidates: []
2025-04-11 20:14:31,242 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:31,249 [INFO] Final candidates: []
2025-04-11 20:14:31,249 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:31,249 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(10)), (np.int64(15), np.int64(12)))
2025-04-11 20:14:31,250 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:31,432 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:31,432 [DEBUG] MCTS iteration 29: Rollout reward: 0.
2025-04-11 20:14:31,432 [DEBUG] MCTS iteration 29: Backed up Finish.
2025-04-11 20:14:31,440 [INFO] Final candidates: []
2025-04-11 20:14:31,440 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:31,447 [INFO] Final candidates: []
2025-04-11 20:14:31,447 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:31,447 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(13)), (np.int64(14), np.int64(11)))
2025-04-11 20:14:31,448 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:31,617 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:31,618 [DEBUG] MCTS iteration 30: Rollout reward: 0.
2025-04-11 20:14:31,618 [DEBUG] MCTS iteration 30: Backed up Finish.
2025-04-11 20:14:31,628 [INFO] Final candidates: []
2025-04-11 20:14:31,628 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:31,635 [INFO] Final candidates: []
2025-04-11 20:14:31,635 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:31,635 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(14)), (np.int64(15), np.int64(12)))
2025-04-11 20:14:31,636 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:31,657 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:31,658 [DEBUG] MCTS iteration 31: Rollout reward: 1.
2025-04-11 20:14:31,658 [DEBUG] MCTS iteration 31: Backed up Finish.
2025-04-11 20:14:31,666 [INFO] Final candidates: []
2025-04-11 20:14:31,666 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:31,673 [INFO] Final candidates: []
2025-04-11 20:14:31,673 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:31,673 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(14)), (np.int64(5), np.int64(16)))
2025-04-11 20:14:31,674 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:31,821 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:31,821 [DEBUG] MCTS iteration 32: Rollout reward: 1.
2025-04-11 20:14:31,821 [DEBUG] MCTS iteration 32: Backed up Finish.
2025-04-11 20:14:31,830 [INFO] Final candidates: []
2025-04-11 20:14:31,830 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:31,838 [INFO] Final candidates: []
2025-04-11 20:14:31,838 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:31,838 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(8)), (np.int64(11), np.int64(10)))
2025-04-11 20:14:31,839 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:32,019 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:32,019 [DEBUG] MCTS iteration 33: Rollout reward: 0.
2025-04-11 20:14:32,019 [DEBUG] MCTS iteration 33: Backed up Finish.
2025-04-11 20:14:32,027 [INFO] Final candidates: []
2025-04-11 20:14:32,027 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:32,035 [INFO] Final candidates: []
2025-04-11 20:14:32,035 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:32,035 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(3), np.int64(15)), (np.int64(17), np.int64(10)))
2025-04-11 20:14:32,036 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:32,130 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:32,130 [DEBUG] MCTS iteration 34: Rollout reward: 0.
2025-04-11 20:14:32,130 [DEBUG] MCTS iteration 34: Backed up Finish.
2025-04-11 20:14:32,141 [INFO] Final candidates: []
2025-04-11 20:14:32,141 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:32,149 [INFO] Final candidates: []
2025-04-11 20:14:32,149 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:32,149 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(3), np.int64(15)), (np.int64(7), np.int64(13)))
2025-04-11 20:14:32,150 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:32,215 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:32,215 [DEBUG] MCTS iteration 35: Rollout reward: 0.
2025-04-11 20:14:32,215 [DEBUG] MCTS iteration 35: Backed up Finish.
2025-04-11 20:14:32,223 [INFO] Final candidates: []
2025-04-11 20:14:32,223 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:32,231 [INFO] Final candidates: []
2025-04-11 20:14:32,231 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:32,231 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(7)), (np.int64(7), np.int64(8)))
2025-04-11 20:14:32,231 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:32,442 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:32,443 [DEBUG] MCTS iteration 36: Rollout reward: 1.
2025-04-11 20:14:32,443 [DEBUG] MCTS iteration 36: Backed up Finish.
2025-04-11 20:14:32,450 [INFO] Final candidates: []
2025-04-11 20:14:32,450 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:32,458 [INFO] Final candidates: []
2025-04-11 20:14:32,458 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:32,458 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(17), np.int64(9)), (np.int64(8), np.int64(14)))
2025-04-11 20:14:32,459 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:32,721 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:32,721 [DEBUG] MCTS iteration 37: Rollout reward: 1.
2025-04-11 20:14:32,721 [DEBUG] MCTS iteration 37: Backed up Finish.
2025-04-11 20:14:32,729 [INFO] Final candidates: []
2025-04-11 20:14:32,729 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:32,736 [INFO] Final candidates: []
2025-04-11 20:14:32,736 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:32,736 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(12)), (np.int64(16), np.int64(11)))
2025-04-11 20:14:32,737 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:32,820 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:32,820 [DEBUG] MCTS iteration 38: Rollout reward: 0.
2025-04-11 20:14:32,820 [DEBUG] MCTS iteration 38: Backed up Finish.
2025-04-11 20:14:32,828 [INFO] Final candidates: []
2025-04-11 20:14:32,828 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:32,836 [INFO] Final candidates: []
2025-04-11 20:14:32,836 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:32,836 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(10)), (np.int64(10), np.int64(7)))
2025-04-11 20:14:32,837 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:32,951 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:32,951 [DEBUG] MCTS iteration 39: Rollout reward: 1.
2025-04-11 20:14:32,951 [DEBUG] MCTS iteration 39: Backed up Finish.
2025-04-11 20:14:32,959 [INFO] Final candidates: []
2025-04-11 20:14:32,959 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:32,967 [INFO] Final candidates: []
2025-04-11 20:14:32,967 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:32,967 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(2), np.int64(16)), (np.int64(11), np.int64(12)))
2025-04-11 20:14:32,968 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:33,101 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:33,102 [DEBUG] MCTS iteration 40: Rollout reward: 0.
2025-04-11 20:14:33,102 [DEBUG] MCTS iteration 40: Backed up Finish.
2025-04-11 20:14:33,109 [INFO] Final candidates: []
2025-04-11 20:14:33,109 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:33,117 [INFO] Final candidates: []
2025-04-11 20:14:33,117 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:33,117 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(17), np.int64(9)), (np.int64(4), np.int64(15)))
2025-04-11 20:14:33,118 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:33,230 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:33,230 [DEBUG] MCTS iteration 41: Rollout reward: 0.
2025-04-11 20:14:33,230 [DEBUG] MCTS iteration 41: Backed up Finish.
2025-04-11 20:14:33,238 [INFO] Final candidates: []
2025-04-11 20:14:33,238 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:33,245 [INFO] Final candidates: []
2025-04-11 20:14:33,245 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:33,245 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(10)), (np.int64(9), np.int64(6)))
2025-04-11 20:14:33,246 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:33,465 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:33,465 [DEBUG] MCTS iteration 42: Rollout reward: 1.
2025-04-11 20:14:33,465 [DEBUG] MCTS iteration 42: Backed up Finish.
2025-04-11 20:14:33,472 [INFO] Final candidates: []
2025-04-11 20:14:33,473 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:33,480 [INFO] Final candidates: []
2025-04-11 20:14:33,480 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:33,480 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(10)), (np.int64(14), np.int64(7)))
2025-04-11 20:14:33,481 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:33,580 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:33,580 [DEBUG] MCTS iteration 43: Rollout reward: 1.
2025-04-11 20:14:33,580 [DEBUG] MCTS iteration 43: Backed up Finish.
2025-04-11 20:14:33,588 [INFO] Final candidates: []
2025-04-11 20:14:33,588 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:33,595 [INFO] Final candidates: []
2025-04-11 20:14:33,595 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:33,595 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(8)), (np.int64(8), np.int64(12)))
2025-04-11 20:14:33,596 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:33,615 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:33,615 [DEBUG] MCTS iteration 44: Rollout reward: 1.
2025-04-11 20:14:33,615 [DEBUG] MCTS iteration 44: Backed up Finish.
2025-04-11 20:14:33,623 [INFO] Final candidates: []
2025-04-11 20:14:33,623 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:33,631 [INFO] Final candidates: []
2025-04-11 20:14:33,631 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:33,631 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(2), np.int64(14)), (np.int64(12), np.int64(9)))
2025-04-11 20:14:33,631 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:33,747 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:33,748 [DEBUG] MCTS iteration 45: Rollout reward: 0.
2025-04-11 20:14:33,748 [DEBUG] MCTS iteration 45: Backed up Finish.
2025-04-11 20:14:33,755 [INFO] Final candidates: []
2025-04-11 20:14:33,755 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:33,763 [INFO] Final candidates: []
2025-04-11 20:14:33,763 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:33,763 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(17), np.int64(1)), (np.int64(17), np.int64(10)))
2025-04-11 20:14:33,764 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:33,924 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:33,924 [DEBUG] MCTS iteration 46: Rollout reward: 1.
2025-04-11 20:14:33,924 [DEBUG] MCTS iteration 46: Backed up Finish.
2025-04-11 20:14:33,932 [INFO] Final candidates: []
2025-04-11 20:14:33,932 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:33,940 [INFO] Final candidates: []
2025-04-11 20:14:33,940 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:33,940 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(3), np.int64(13)), (np.int64(14), np.int64(11)))
2025-04-11 20:14:33,940 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:34,009 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:34,009 [DEBUG] MCTS iteration 47: Rollout reward: 1.
2025-04-11 20:14:34,009 [DEBUG] MCTS iteration 47: Backed up Finish.
2025-04-11 20:14:34,017 [INFO] Final candidates: []
2025-04-11 20:14:34,017 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:34,024 [INFO] Final candidates: []
2025-04-11 20:14:34,024 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:34,024 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(8)), (np.int64(7), np.int64(8)))
2025-04-11 20:14:34,025 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:34,064 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:34,064 [DEBUG] MCTS iteration 48: Rollout reward: 1.
2025-04-11 20:14:34,064 [DEBUG] MCTS iteration 48: Backed up Finish.
2025-04-11 20:14:34,072 [INFO] Final candidates: []
2025-04-11 20:14:34,072 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:34,080 [INFO] Final candidates: []
2025-04-11 20:14:34,080 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:34,080 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(11)), (np.int64(4), np.int64(15)))
2025-04-11 20:14:34,081 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:34,302 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:34,302 [DEBUG] MCTS iteration 49: Rollout reward: 1.
2025-04-11 20:14:34,302 [DEBUG] MCTS iteration 49: Backed up Finish.
2025-04-11 20:14:34,310 [INFO] Final candidates: []
2025-04-11 20:14:34,310 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:34,318 [INFO] Final candidates: []
2025-04-11 20:14:34,318 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:34,318 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(18), np.int64(0)), (np.int64(10), np.int64(14)))
2025-04-11 20:14:34,319 [DEBUG] MCTS iteration 50: reached a node with 0 visits.
2025-04-11 20:14:34,319 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:34,558 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:34,558 [DEBUG] MCTS iteration 50: Rollout reward: 0.
2025-04-11 20:14:34,558 [DEBUG] MCTS iteration 50: Backed up Finish.
2025-04-11 20:14:34,566 [INFO] Final candidates: []
2025-04-11 20:14:34,566 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:34,574 [INFO] Final candidates: []
2025-04-11 20:14:34,574 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:34,574 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(12)), (np.int64(8), np.int64(8)))
2025-04-11 20:14:34,575 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:34,578 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:34,578 [DEBUG] MCTS iteration 51: Rollout reward: 1.
2025-04-11 20:14:34,578 [DEBUG] MCTS iteration 51: Backed up Finish.
2025-04-11 20:14:34,586 [INFO] Final candidates: []
2025-04-11 20:14:34,586 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:34,593 [INFO] Final candidates: []
2025-04-11 20:14:34,593 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:34,593 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(2), np.int64(16)), (np.int64(13), np.int64(13)))
2025-04-11 20:14:34,594 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:34,862 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:34,863 [DEBUG] MCTS iteration 52: Rollout reward: 1.
2025-04-11 20:14:34,863 [DEBUG] MCTS iteration 52: Backed up Finish.
2025-04-11 20:14:34,872 [INFO] Final candidates: []
2025-04-11 20:14:34,872 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:34,880 [INFO] Final candidates: []
2025-04-11 20:14:34,880 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:34,880 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(14)), (np.int64(3), np.int64(15)))
2025-04-11 20:14:34,880 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:35,014 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:35,014 [DEBUG] MCTS iteration 53: Rollout reward: 0.
2025-04-11 20:14:35,014 [DEBUG] MCTS iteration 53: Backed up Finish.
2025-04-11 20:14:35,022 [INFO] Final candidates: []
2025-04-11 20:14:35,022 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:35,030 [INFO] Final candidates: []
2025-04-11 20:14:35,030 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:35,030 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(13)), (np.int64(14), np.int64(8)))
2025-04-11 20:14:35,030 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:35,108 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:35,108 [DEBUG] MCTS iteration 54: Rollout reward: 1.
2025-04-11 20:14:35,108 [DEBUG] MCTS iteration 54: Backed up Finish.
2025-04-11 20:14:35,116 [INFO] Final candidates: []
2025-04-11 20:14:35,116 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:35,123 [INFO] Final candidates: []
2025-04-11 20:14:35,123 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:35,123 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(18)), (np.int64(5), np.int64(11)))
2025-04-11 20:14:35,124 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:35,265 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:35,265 [DEBUG] MCTS iteration 55: Rollout reward: 0.
2025-04-11 20:14:35,265 [DEBUG] MCTS iteration 55: Backed up Finish.
2025-04-11 20:14:35,273 [INFO] Final candidates: []
2025-04-11 20:14:35,273 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:35,281 [INFO] Final candidates: []
2025-04-11 20:14:35,281 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:35,281 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(7)), (np.int64(10), np.int64(7)))
2025-04-11 20:14:35,282 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:35,313 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:35,313 [DEBUG] MCTS iteration 56: Rollout reward: 0.
2025-04-11 20:14:35,314 [DEBUG] MCTS iteration 56: Backed up Finish.
2025-04-11 20:14:35,321 [INFO] Final candidates: []
2025-04-11 20:14:35,321 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:35,330 [INFO] Final candidates: []
2025-04-11 20:14:35,330 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:35,330 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(8)), (np.int64(2), np.int64(16)))
2025-04-11 20:14:35,331 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:35,511 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:35,511 [DEBUG] MCTS iteration 57: Rollout reward: 1.
2025-04-11 20:14:35,511 [DEBUG] MCTS iteration 57: Backed up Finish.
2025-04-11 20:14:35,520 [INFO] Final candidates: []
2025-04-11 20:14:35,520 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:35,528 [INFO] Final candidates: []
2025-04-11 20:14:35,528 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:35,528 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(7)), (np.int64(3), np.int64(14)))
2025-04-11 20:14:35,529 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:35,721 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:35,721 [DEBUG] MCTS iteration 58: Rollout reward: 0.
2025-04-11 20:14:35,721 [DEBUG] MCTS iteration 58: Backed up Finish.
2025-04-11 20:14:35,730 [INFO] Final candidates: []
2025-04-11 20:14:35,730 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:35,738 [INFO] Final candidates: []
2025-04-11 20:14:35,738 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:35,738 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(1)), (np.int64(2), np.int64(14)))
2025-04-11 20:14:35,739 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:35,968 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:35,968 [DEBUG] MCTS iteration 59: Rollout reward: 0.
2025-04-11 20:14:35,968 [DEBUG] MCTS iteration 59: Backed up Finish.
2025-04-11 20:14:35,976 [INFO] Final candidates: []
2025-04-11 20:14:35,976 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:35,984 [INFO] Final candidates: []
2025-04-11 20:14:35,984 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:35,984 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(13)), (np.int64(6), np.int64(8)))
2025-04-11 20:14:35,985 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:36,229 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:36,229 [DEBUG] MCTS iteration 60: Rollout reward: 0.
2025-04-11 20:14:36,229 [DEBUG] MCTS iteration 60: Backed up Finish.
2025-04-11 20:14:36,238 [INFO] Final candidates: []
2025-04-11 20:14:36,238 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:36,246 [INFO] Final candidates: []
2025-04-11 20:14:36,246 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:36,246 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(11)), (np.int64(18), np.int64(0)))
2025-04-11 20:14:36,246 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:36,334 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:36,334 [DEBUG] MCTS iteration 61: Rollout reward: 0.
2025-04-11 20:14:36,334 [DEBUG] MCTS iteration 61: Backed up Finish.
2025-04-11 20:14:36,345 [INFO] Final candidates: []
2025-04-11 20:14:36,345 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:36,353 [INFO] Final candidates: []
2025-04-11 20:14:36,353 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:36,353 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(9)), (np.int64(6), np.int64(16)))
2025-04-11 20:14:36,353 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:36,455 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:36,455 [DEBUG] MCTS iteration 62: Rollout reward: 1.
2025-04-11 20:14:36,455 [DEBUG] MCTS iteration 62: Backed up Finish.
2025-04-11 20:14:36,463 [INFO] Final candidates: []
2025-04-11 20:14:36,463 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:36,470 [INFO] Final candidates: []
2025-04-11 20:14:36,470 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:36,470 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(14)), (np.int64(11), np.int64(10)))
2025-04-11 20:14:36,471 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:36,748 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:36,748 [DEBUG] MCTS iteration 63: Rollout reward: 1.
2025-04-11 20:14:36,748 [DEBUG] MCTS iteration 63: Backed up Finish.
2025-04-11 20:14:36,756 [INFO] Final candidates: []
2025-04-11 20:14:36,756 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:36,764 [INFO] Final candidates: []
2025-04-11 20:14:36,764 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:36,764 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(8)), (np.int64(10), np.int64(13)))
2025-04-11 20:14:36,764 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:37,062 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:37,062 [DEBUG] MCTS iteration 64: Rollout reward: 1.
2025-04-11 20:14:37,062 [DEBUG] MCTS iteration 64: Backed up Finish.
2025-04-11 20:14:37,070 [INFO] Final candidates: []
2025-04-11 20:14:37,070 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:37,078 [INFO] Final candidates: []
2025-04-11 20:14:37,078 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:37,078 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(1)), (np.int64(12), np.int64(12)))
2025-04-11 20:14:37,079 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:37,148 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:37,148 [DEBUG] MCTS iteration 65: Rollout reward: 0.
2025-04-11 20:14:37,148 [DEBUG] MCTS iteration 65: Backed up Finish.
2025-04-11 20:14:37,156 [INFO] Final candidates: []
2025-04-11 20:14:37,156 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:37,164 [INFO] Final candidates: []
2025-04-11 20:14:37,164 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:37,164 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(11)), (np.int64(10), np.int64(7)))
2025-04-11 20:14:37,164 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:37,418 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:37,419 [DEBUG] MCTS iteration 66: Rollout reward: 0.
2025-04-11 20:14:37,419 [DEBUG] MCTS iteration 66: Backed up Finish.
2025-04-11 20:14:37,426 [INFO] Final candidates: []
2025-04-11 20:14:37,426 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:37,434 [INFO] Final candidates: []
2025-04-11 20:14:37,434 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:37,434 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(18), np.int64(0)), (np.int64(16), np.int64(9)))
2025-04-11 20:14:37,435 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:37,480 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:37,480 [DEBUG] MCTS iteration 67: Rollout reward: 1.
2025-04-11 20:14:37,480 [DEBUG] MCTS iteration 67: Backed up Finish.
2025-04-11 20:14:37,487 [INFO] Final candidates: []
2025-04-11 20:14:37,488 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:37,495 [INFO] Final candidates: []
2025-04-11 20:14:37,495 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:37,495 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(16)), (np.int64(7), np.int64(8)))
2025-04-11 20:14:37,496 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:37,756 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:37,756 [DEBUG] MCTS iteration 68: Rollout reward: 1.
2025-04-11 20:14:37,756 [DEBUG] MCTS iteration 68: Backed up Finish.
2025-04-11 20:14:37,764 [INFO] Final candidates: []
2025-04-11 20:14:37,764 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:37,772 [INFO] Final candidates: []
2025-04-11 20:14:37,772 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:37,772 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(13)), (np.int64(13), np.int64(13)))
2025-04-11 20:14:37,773 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:38,030 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:38,031 [DEBUG] MCTS iteration 69: Rollout reward: 1.
2025-04-11 20:14:38,031 [DEBUG] MCTS iteration 69: Backed up Finish.
2025-04-11 20:14:38,042 [INFO] Final candidates: []
2025-04-11 20:14:38,042 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:38,051 [INFO] Final candidates: []
2025-04-11 20:14:38,051 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:38,051 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(10)), (np.int64(10), np.int64(11)))
2025-04-11 20:14:38,052 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:38,204 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:38,204 [DEBUG] MCTS iteration 70: Rollout reward: 0.
2025-04-11 20:14:38,204 [DEBUG] MCTS iteration 70: Backed up Finish.
2025-04-11 20:14:38,212 [INFO] Final candidates: []
2025-04-11 20:14:38,212 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:38,220 [INFO] Final candidates: []
2025-04-11 20:14:38,220 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:38,220 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(3), np.int64(15)), (np.int64(8), np.int64(14)))
2025-04-11 20:14:38,221 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:38,403 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:38,403 [DEBUG] MCTS iteration 71: Rollout reward: 1.
2025-04-11 20:14:38,403 [DEBUG] MCTS iteration 71: Backed up Finish.
2025-04-11 20:14:38,411 [INFO] Final candidates: []
2025-04-11 20:14:38,411 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:38,418 [INFO] Final candidates: []
2025-04-11 20:14:38,418 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:38,418 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(7)), (np.int64(10), np.int64(13)))
2025-04-11 20:14:38,419 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:38,460 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:38,460 [DEBUG] MCTS iteration 72: Rollout reward: 1.
2025-04-11 20:14:38,460 [DEBUG] MCTS iteration 72: Backed up Finish.
2025-04-11 20:14:38,468 [INFO] Final candidates: []
2025-04-11 20:14:38,468 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:38,477 [INFO] Final candidates: []
2025-04-11 20:14:38,477 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:38,477 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(7)), (np.int64(10), np.int64(13)))
2025-04-11 20:14:38,477 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:38,835 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:38,835 [DEBUG] MCTS iteration 73: Rollout reward: 1.
2025-04-11 20:14:38,835 [DEBUG] MCTS iteration 73: Backed up Finish.
2025-04-11 20:14:38,844 [INFO] Final candidates: []
2025-04-11 20:14:38,844 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:38,852 [INFO] Final candidates: []
2025-04-11 20:14:38,852 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:38,852 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(18)), (np.int64(15), np.int64(8)))
2025-04-11 20:14:38,853 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:38,991 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:38,991 [DEBUG] MCTS iteration 74: Rollout reward: 1.
2025-04-11 20:14:38,991 [DEBUG] MCTS iteration 74: Backed up Finish.
2025-04-11 20:14:38,999 [INFO] Final candidates: []
2025-04-11 20:14:38,999 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:39,007 [INFO] Final candidates: []
2025-04-11 20:14:39,007 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:39,007 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(7)), (np.int64(10), np.int64(11)))
2025-04-11 20:14:39,007 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:39,065 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:39,065 [DEBUG] MCTS iteration 75: Rollout reward: 0.
2025-04-11 20:14:39,065 [DEBUG] MCTS iteration 75: Backed up Finish.
2025-04-11 20:14:39,073 [INFO] Final candidates: []
2025-04-11 20:14:39,073 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:39,081 [INFO] Final candidates: []
2025-04-11 20:14:39,081 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:39,081 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(10)), (np.int64(9), np.int64(15)))
2025-04-11 20:14:39,082 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:39,409 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:39,409 [DEBUG] MCTS iteration 76: Rollout reward: 1.
2025-04-11 20:14:39,409 [DEBUG] MCTS iteration 76: Backed up Finish.
2025-04-11 20:14:39,417 [INFO] Final candidates: []
2025-04-11 20:14:39,417 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:39,424 [INFO] Final candidates: []
2025-04-11 20:14:39,424 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:39,425 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(0)), (np.int64(8), np.int64(8)))
2025-04-11 20:14:39,425 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:39,610 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:39,610 [DEBUG] MCTS iteration 77: Rollout reward: 0.
2025-04-11 20:14:39,610 [DEBUG] MCTS iteration 77: Backed up Finish.
2025-04-11 20:14:39,618 [INFO] Final candidates: []
2025-04-11 20:14:39,618 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:39,626 [INFO] Final candidates: []
2025-04-11 20:14:39,626 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:39,626 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(3), np.int64(15)), (np.int64(2), np.int64(14)))
2025-04-11 20:14:39,626 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:39,738 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:39,738 [DEBUG] MCTS iteration 78: Rollout reward: 0.
2025-04-11 20:14:39,738 [DEBUG] MCTS iteration 78: Backed up Finish.
2025-04-11 20:14:39,746 [INFO] Final candidates: []
2025-04-11 20:14:39,746 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:39,753 [INFO] Final candidates: []
2025-04-11 20:14:39,753 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:39,753 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(18), np.int64(1)), (np.int64(4), np.int64(10)))
2025-04-11 20:14:39,754 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:39,945 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:39,945 [DEBUG] MCTS iteration 79: Rollout reward: 0.
2025-04-11 20:14:39,945 [DEBUG] MCTS iteration 79: Backed up Finish.
2025-04-11 20:14:39,953 [INFO] Final candidates: []
2025-04-11 20:14:39,953 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:39,960 [INFO] Final candidates: []
2025-04-11 20:14:39,960 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:39,960 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(8)), (np.int64(15), np.int64(8)))
2025-04-11 20:14:39,961 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:40,331 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:40,332 [DEBUG] MCTS iteration 80: Rollout reward: 0.
2025-04-11 20:14:40,332 [DEBUG] MCTS iteration 80: Backed up Finish.
2025-04-11 20:14:40,340 [INFO] Final candidates: []
2025-04-11 20:14:40,340 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:40,347 [INFO] Final candidates: []
2025-04-11 20:14:40,347 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:40,347 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(14)), (np.int64(8), np.int64(14)))
2025-04-11 20:14:40,348 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:40,432 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:40,432 [DEBUG] MCTS iteration 81: Rollout reward: 1.
2025-04-11 20:14:40,432 [DEBUG] MCTS iteration 81: Backed up Finish.
2025-04-11 20:14:40,440 [INFO] Final candidates: []
2025-04-11 20:14:40,440 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:40,447 [INFO] Final candidates: []
2025-04-11 20:14:40,447 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:40,447 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(14)), (np.int64(14), np.int64(7)))
2025-04-11 20:14:40,448 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:40,470 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:40,471 [DEBUG] MCTS iteration 82: Rollout reward: 1.
2025-04-11 20:14:40,471 [DEBUG] MCTS iteration 82: Backed up Finish.
2025-04-11 20:14:40,478 [INFO] Final candidates: []
2025-04-11 20:14:40,478 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:40,486 [INFO] Final candidates: []
2025-04-11 20:14:40,487 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:40,487 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(11)), (np.int64(16), np.int64(8)))
2025-04-11 20:14:40,488 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:40,561 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:40,561 [DEBUG] MCTS iteration 83: Rollout reward: 0.
2025-04-11 20:14:40,561 [DEBUG] MCTS iteration 83: Backed up Finish.
2025-04-11 20:14:40,569 [INFO] Final candidates: []
2025-04-11 20:14:40,569 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:40,577 [INFO] Final candidates: []
2025-04-11 20:14:40,577 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:40,577 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(6)), (np.int64(13), np.int64(10)))
2025-04-11 20:14:40,577 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:40,769 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:40,769 [DEBUG] MCTS iteration 84: Rollout reward: 1.
2025-04-11 20:14:40,769 [DEBUG] MCTS iteration 84: Backed up Finish.
2025-04-11 20:14:40,780 [INFO] Final candidates: []
2025-04-11 20:14:40,780 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:40,788 [INFO] Final candidates: []
2025-04-11 20:14:40,788 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:40,788 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(18), np.int64(0)), (np.int64(8), np.int64(14)))
2025-04-11 20:14:40,788 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:41,121 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:41,121 [DEBUG] MCTS iteration 85: Rollout reward: 1.
2025-04-11 20:14:41,121 [DEBUG] MCTS iteration 85: Backed up Finish.
2025-04-11 20:14:41,129 [INFO] Final candidates: []
2025-04-11 20:14:41,130 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:41,137 [INFO] Final candidates: []
2025-04-11 20:14:41,137 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:41,137 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(7)), (np.int64(10), np.int64(13)))
2025-04-11 20:14:41,138 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:41,243 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:41,243 [DEBUG] MCTS iteration 86: Rollout reward: 0.
2025-04-11 20:14:41,243 [DEBUG] MCTS iteration 86: Backed up Finish.
2025-04-11 20:14:41,251 [INFO] Final candidates: []
2025-04-11 20:14:41,251 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:41,259 [INFO] Final candidates: []
2025-04-11 20:14:41,259 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:41,259 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(7)), (np.int64(8), np.int64(7)))
2025-04-11 20:14:41,259 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:41,433 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:41,433 [DEBUG] MCTS iteration 87: Rollout reward: 0.
2025-04-11 20:14:41,433 [DEBUG] MCTS iteration 87: Backed up Finish.
2025-04-11 20:14:41,441 [INFO] Final candidates: []
2025-04-11 20:14:41,441 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:41,448 [INFO] Final candidates: []
2025-04-11 20:14:41,448 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:41,448 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(8)), (np.int64(10), np.int64(14)))
2025-04-11 20:14:41,449 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:41,735 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:41,735 [DEBUG] MCTS iteration 88: Rollout reward: 1.
2025-04-11 20:14:41,735 [DEBUG] MCTS iteration 88: Backed up Finish.
2025-04-11 20:14:41,746 [INFO] Final candidates: []
2025-04-11 20:14:41,746 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:41,755 [INFO] Final candidates: []
2025-04-11 20:14:41,755 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:41,755 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(17)), (np.int64(11), np.int64(12)))
2025-04-11 20:14:41,756 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:41,954 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:41,954 [DEBUG] MCTS iteration 89: Rollout reward: 1.
2025-04-11 20:14:41,954 [DEBUG] MCTS iteration 89: Backed up Finish.
2025-04-11 20:14:41,962 [INFO] Final candidates: []
2025-04-11 20:14:41,962 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:41,970 [INFO] Final candidates: []
2025-04-11 20:14:41,970 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:41,970 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(1)), (np.int64(5), np.int64(17)))
2025-04-11 20:14:41,970 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:42,231 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:42,231 [DEBUG] MCTS iteration 90: Rollout reward: 1.
2025-04-11 20:14:42,231 [DEBUG] MCTS iteration 90: Backed up Finish.
2025-04-11 20:14:42,241 [INFO] Final candidates: []
2025-04-11 20:14:42,241 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:42,250 [INFO] Final candidates: []
2025-04-11 20:14:42,250 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:42,250 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(7)), (np.int64(10), np.int64(11)))
2025-04-11 20:14:42,250 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:42,366 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:42,366 [DEBUG] MCTS iteration 91: Rollout reward: 0.
2025-04-11 20:14:42,366 [DEBUG] MCTS iteration 91: Backed up Finish.
2025-04-11 20:14:42,374 [INFO] Final candidates: []
2025-04-11 20:14:42,374 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:42,381 [INFO] Final candidates: []
2025-04-11 20:14:42,381 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:42,381 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(8)), (np.int64(10), np.int64(11)))
2025-04-11 20:14:42,382 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:42,496 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:42,496 [DEBUG] MCTS iteration 92: Rollout reward: 1.
2025-04-11 20:14:42,496 [DEBUG] MCTS iteration 92: Backed up Finish.
2025-04-11 20:14:42,504 [INFO] Final candidates: []
2025-04-11 20:14:42,504 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:42,511 [INFO] Final candidates: []
2025-04-11 20:14:42,511 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:42,511 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(18), np.int64(0)), (np.int64(12), np.int64(10)))
2025-04-11 20:14:42,512 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:42,679 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:42,679 [DEBUG] MCTS iteration 93: Rollout reward: 0.
2025-04-11 20:14:42,679 [DEBUG] MCTS iteration 93: Backed up Finish.
2025-04-11 20:14:42,687 [INFO] Final candidates: []
2025-04-11 20:14:42,687 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:42,695 [INFO] Final candidates: []
2025-04-11 20:14:42,695 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:42,695 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(8)), (np.int64(10), np.int64(9)))
2025-04-11 20:14:42,695 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:42,873 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:42,873 [DEBUG] MCTS iteration 94: Rollout reward: 0.
2025-04-11 20:14:42,873 [DEBUG] MCTS iteration 94: Backed up Finish.
2025-04-11 20:14:42,881 [INFO] Final candidates: []
2025-04-11 20:14:42,881 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:42,888 [INFO] Final candidates: []
2025-04-11 20:14:42,888 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:42,889 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(7)), (np.int64(14), np.int64(10)))
2025-04-11 20:14:42,889 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:42,985 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:42,985 [DEBUG] MCTS iteration 95: Rollout reward: 0.
2025-04-11 20:14:42,985 [DEBUG] MCTS iteration 95: Backed up Finish.
2025-04-11 20:14:42,993 [INFO] Final candidates: []
2025-04-11 20:14:42,993 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:43,001 [INFO] Final candidates: []
2025-04-11 20:14:43,001 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:43,001 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(16)), (np.int64(6), np.int64(14)))
2025-04-11 20:14:43,001 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:43,244 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:43,244 [DEBUG] MCTS iteration 96: Rollout reward: 0.
2025-04-11 20:14:43,244 [DEBUG] MCTS iteration 96: Backed up Finish.
2025-04-11 20:14:43,252 [INFO] Final candidates: []
2025-04-11 20:14:43,252 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:43,260 [INFO] Final candidates: []
2025-04-11 20:14:43,260 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:43,260 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(15)), (np.int64(5), np.int64(17)))
2025-04-11 20:14:43,261 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:43,373 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:43,374 [DEBUG] MCTS iteration 97: Rollout reward: 0.
2025-04-11 20:14:43,374 [DEBUG] MCTS iteration 97: Backed up Finish.
2025-04-11 20:14:43,381 [INFO] Final candidates: []
2025-04-11 20:14:43,381 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:43,389 [INFO] Final candidates: []
2025-04-11 20:14:43,389 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:43,389 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(10)), (np.int64(6), np.int64(14)))
2025-04-11 20:14:43,390 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:43,466 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:43,466 [DEBUG] MCTS iteration 98: Rollout reward: 1.
2025-04-11 20:14:43,466 [DEBUG] MCTS iteration 98: Backed up Finish.
2025-04-11 20:14:43,474 [INFO] Final candidates: []
2025-04-11 20:14:43,474 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:43,481 [INFO] Final candidates: []
2025-04-11 20:14:43,481 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:43,481 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(7)), (np.int64(4), np.int64(15)))
2025-04-11 20:14:43,482 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:43,693 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:43,693 [DEBUG] MCTS iteration 99: Rollout reward: 1.
2025-04-11 20:14:43,693 [DEBUG] MCTS iteration 99: Backed up Finish.
2025-04-11 20:14:43,693 [INFO] MCTS: Search completed after 100 iterations.
2025-04-11 20:14:43,693 [DEBUG] MCTS: BEST ((np.int64(15), np.int64(7)), (np.int64(18), np.int64(0))) with 1 visits.
2025-04-11 20:14:43,693 [INFO] MCTS: Search finished. Best move selected with 1 visits.
2025-04-11 20:14:43,693 [INFO] MCTS selected move: H16,A19
2025-04-11 20:14:43,693 [INFO] ===============NEW MOVE================
2025-04-11 20:14:48,332 [INFO] Starting pre-MCTS candidate collection.
2025-04-11 20:14:48,340 [INFO] Final candidates: []
2025-04-11 20:14:48,340 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:48,345 [DEBUG] board coords: [(6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)]
2025-04-11 20:14:48,345 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:14:48,345 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 6), (7, 7)]
2025-04-11 20:14:48,345 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)] triggers candidate.
2025-04-11 20:14:48,345 [DEBUG] check_window_intermediate_custom: valid_move=[(7, 7)]
2025-04-11 20:14:48,345 [DEBUG] board coords: [(9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14)]
2025-04-11 20:14:48,345 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:14:48,345 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 13), (14, 14)]
2025-04-11 20:14:48,345 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14)] triggers candidate.
2025-04-11 20:14:48,345 [DEBUG] check_window_intermediate_custom: valid_move=[(13, 13)]
2025-04-11 20:14:48,346 [DEBUG] board coords: [(6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12)]
2025-04-11 20:14:48,346 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:14:48,346 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 6), (7, 7)]
2025-04-11 20:14:48,346 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12)] triggers candidate.
2025-04-11 20:14:48,346 [DEBUG] check_window_intermediate_custom: valid_move=[(7, 7)]
2025-04-11 20:14:48,346 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13)] triggers candidate.
2025-04-11 20:14:48,346 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:14:48,346 [DEBUG] board coords: [(8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14)]
2025-04-11 20:14:48,346 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:14:48,346 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 13), (14, 14)]
2025-04-11 20:14:48,347 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14)] triggers candidate.
2025-04-11 20:14:48,347 [DEBUG] check_window_intermediate_custom: valid_move=[(13, 13)]
2025-04-11 20:14:48,349 [INFO] Final candidates: [(7, 7), (13, 13)]
2025-04-11 20:14:48,349 [INFO] Phase defense: Collected 1unique candidate(s):[((7, 7), (13, 13))]
2025-04-11 20:14:48,349 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 20:14:48,349 [INFO] MCTS: Starting search for 100 iterations.
2025-04-11 20:14:48,356 [INFO] Final candidates: []
2025-04-11 20:14:48,356 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:48,361 [DEBUG] board coords: [(6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)]
2025-04-11 20:14:48,361 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:14:48,361 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 6), (7, 7)]
2025-04-11 20:14:48,361 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)] triggers candidate.
2025-04-11 20:14:48,361 [DEBUG] check_window_intermediate_custom: valid_move=[(7, 7)]
2025-04-11 20:14:48,361 [DEBUG] board coords: [(9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14)]
2025-04-11 20:14:48,361 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:14:48,361 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 13), (14, 14)]
2025-04-11 20:14:48,361 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 2 0 0] with coords [(9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14)] triggers candidate.
2025-04-11 20:14:48,361 [DEBUG] check_window_intermediate_custom: valid_move=[(13, 13)]
2025-04-11 20:14:48,362 [DEBUG] board coords: [(6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12)]
2025-04-11 20:14:48,362 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:14:48,362 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 6), (7, 7)]
2025-04-11 20:14:48,362 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 2 2 2 2 2] with coords [(6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12)] triggers candidate.
2025-04-11 20:14:48,362 [DEBUG] check_window_intermediate_custom: valid_move=[(7, 7)]
2025-04-11 20:14:48,362 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13)] triggers candidate.
2025-04-11 20:14:48,362 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:14:48,362 [DEBUG] board coords: [(8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14)]
2025-04-11 20:14:48,362 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 20:14:48,362 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 13), (14, 14)]
2025-04-11 20:14:48,362 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 2 2 0 0] with coords [(8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14)] triggers candidate.
2025-04-11 20:14:48,362 [DEBUG] check_window_intermediate_custom: valid_move=[(13, 13)]
2025-04-11 20:14:48,364 [INFO] Final candidates: [(7, 7), (13, 13)]
2025-04-11 20:14:48,364 [INFO] Phase defense: Collected 1unique candidate(s):[((7, 7), (13, 13))]
2025-04-11 20:14:48,364 [DEBUG] Tree_policy iteration 1: Expanding move ((7, 7), (13, 13))
2025-04-11 20:14:48,365 [DEBUG] MCTS iteration 0: reached a node with 0 visits.
2025-04-11 20:14:48,365 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:48,576 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:48,576 [DEBUG] MCTS iteration 0: Rollout reward: 1.
2025-04-11 20:14:48,577 [DEBUG] MCTS iteration 0: Backed up Finish.
2025-04-11 20:14:48,577 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:48,584 [INFO] Final candidates: []
2025-04-11 20:14:48,584 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:48,592 [INFO] Final candidates: []
2025-04-11 20:14:48,592 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:48,592 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(4), np.int64(12)), (np.int64(6), np.int64(9)))
2025-04-11 20:14:48,592 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:48,649 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:48,649 [DEBUG] MCTS iteration 1: Rollout reward: 0.
2025-04-11 20:14:48,649 [DEBUG] MCTS iteration 1: Backed up Finish.
2025-04-11 20:14:48,649 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:48,656 [INFO] Final candidates: []
2025-04-11 20:14:48,656 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:48,664 [INFO] Final candidates: []
2025-04-11 20:14:48,664 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:48,664 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(15)), (np.int64(8), np.int64(14)))
2025-04-11 20:14:48,665 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:48,771 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:48,772 [DEBUG] MCTS iteration 2: Rollout reward: 1.
2025-04-11 20:14:48,772 [DEBUG] MCTS iteration 2: Backed up Finish.
2025-04-11 20:14:48,772 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:48,779 [INFO] Final candidates: []
2025-04-11 20:14:48,779 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:48,787 [INFO] Final candidates: []
2025-04-11 20:14:48,787 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:48,787 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(6)), (np.int64(5), np.int64(17)))
2025-04-11 20:14:48,788 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:49,016 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:49,016 [DEBUG] MCTS iteration 3: Rollout reward: 0.
2025-04-11 20:14:49,016 [DEBUG] MCTS iteration 3: Backed up Finish.
2025-04-11 20:14:49,016 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:49,023 [INFO] Final candidates: []
2025-04-11 20:14:49,023 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:49,031 [INFO] Final candidates: []
2025-04-11 20:14:49,031 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:49,031 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(8)), (np.int64(8), np.int64(14)))
2025-04-11 20:14:49,032 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:49,372 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:49,372 [DEBUG] MCTS iteration 4: Rollout reward: 0.
2025-04-11 20:14:49,372 [DEBUG] MCTS iteration 4: Backed up Finish.
2025-04-11 20:14:49,372 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:49,380 [INFO] Final candidates: []
2025-04-11 20:14:49,380 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:49,387 [INFO] Final candidates: []
2025-04-11 20:14:49,387 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:49,387 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(8)), (np.int64(13), np.int64(9)))
2025-04-11 20:14:49,388 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:49,518 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:49,518 [DEBUG] MCTS iteration 5: Rollout reward: 1.
2025-04-11 20:14:49,518 [DEBUG] MCTS iteration 5: Backed up Finish.
2025-04-11 20:14:49,518 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:49,525 [INFO] Final candidates: []
2025-04-11 20:14:49,525 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:49,533 [INFO] Final candidates: []
2025-04-11 20:14:49,533 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:49,533 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(3), np.int64(17)), (np.int64(3), np.int64(16)))
2025-04-11 20:14:49,534 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:49,579 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:49,579 [DEBUG] MCTS iteration 6: Rollout reward: 1.
2025-04-11 20:14:49,579 [DEBUG] MCTS iteration 6: Backed up Finish.
2025-04-11 20:14:49,579 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:49,587 [INFO] Final candidates: []
2025-04-11 20:14:49,587 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:49,597 [INFO] Final candidates: []
2025-04-11 20:14:49,597 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:49,597 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(9)), (np.int64(5), np.int64(15)))
2025-04-11 20:14:49,598 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:49,668 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:49,668 [DEBUG] MCTS iteration 7: Rollout reward: 1.
2025-04-11 20:14:49,668 [DEBUG] MCTS iteration 7: Backed up Finish.
2025-04-11 20:14:49,669 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:49,676 [INFO] Final candidates: []
2025-04-11 20:14:49,676 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:49,684 [INFO] Final candidates: []
2025-04-11 20:14:49,684 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:49,684 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(17), np.int64(7)), (np.int64(8), np.int64(13)))
2025-04-11 20:14:49,685 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:49,807 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:49,807 [DEBUG] MCTS iteration 8: Rollout reward: 1.
2025-04-11 20:14:49,807 [DEBUG] MCTS iteration 8: Backed up Finish.
2025-04-11 20:14:49,807 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:49,814 [INFO] Final candidates: []
2025-04-11 20:14:49,814 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:49,822 [INFO] Final candidates: []
2025-04-11 20:14:49,822 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:49,822 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(11)), (np.int64(17), np.int64(7)))
2025-04-11 20:14:49,823 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:49,988 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:49,988 [DEBUG] MCTS iteration 9: Rollout reward: 1.
2025-04-11 20:14:49,988 [DEBUG] MCTS iteration 9: Backed up Finish.
2025-04-11 20:14:49,988 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:49,996 [INFO] Final candidates: []
2025-04-11 20:14:49,996 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:50,003 [INFO] Final candidates: []
2025-04-11 20:14:50,003 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:50,003 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(11)), (np.int64(16), np.int64(11)))
2025-04-11 20:14:50,004 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:50,051 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:50,051 [DEBUG] MCTS iteration 10: Rollout reward: 0.
2025-04-11 20:14:50,051 [DEBUG] MCTS iteration 10: Backed up Finish.
2025-04-11 20:14:50,051 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:50,058 [INFO] Final candidates: []
2025-04-11 20:14:50,058 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:50,066 [INFO] Final candidates: []
2025-04-11 20:14:50,066 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:50,066 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(11)), (np.int64(15), np.int64(13)))
2025-04-11 20:14:50,067 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:50,287 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:50,287 [DEBUG] MCTS iteration 11: Rollout reward: 0.
2025-04-11 20:14:50,287 [DEBUG] MCTS iteration 11: Backed up Finish.
2025-04-11 20:14:50,287 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:50,295 [INFO] Final candidates: []
2025-04-11 20:14:50,295 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:50,302 [INFO] Final candidates: []
2025-04-11 20:14:50,302 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:50,302 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(14)), (np.int64(6), np.int64(16)))
2025-04-11 20:14:50,303 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:50,542 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:50,542 [DEBUG] MCTS iteration 12: Rollout reward: 0.
2025-04-11 20:14:50,542 [DEBUG] MCTS iteration 12: Backed up Finish.
2025-04-11 20:14:50,542 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:50,550 [INFO] Final candidates: []
2025-04-11 20:14:50,550 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:50,557 [INFO] Final candidates: []
2025-04-11 20:14:50,557 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:50,557 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(14)), (np.int64(6), np.int64(9)))
2025-04-11 20:14:50,558 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:50,794 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:50,795 [DEBUG] MCTS iteration 13: Rollout reward: 1.
2025-04-11 20:14:50,795 [DEBUG] MCTS iteration 13: Backed up Finish.
2025-04-11 20:14:50,795 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:50,802 [INFO] Final candidates: []
2025-04-11 20:14:50,802 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:50,810 [INFO] Final candidates: []
2025-04-11 20:14:50,810 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:50,810 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(6)), (np.int64(4), np.int64(18)))
2025-04-11 20:14:50,811 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:51,027 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:51,027 [DEBUG] MCTS iteration 14: Rollout reward: 1.
2025-04-11 20:14:51,027 [DEBUG] MCTS iteration 14: Backed up Finish.
2025-04-11 20:14:51,027 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:51,035 [INFO] Final candidates: []
2025-04-11 20:14:51,035 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:51,042 [INFO] Final candidates: []
2025-04-11 20:14:51,042 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:51,042 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(8)), (np.int64(12), np.int64(13)))
2025-04-11 20:14:51,043 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:51,255 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:51,255 [DEBUG] MCTS iteration 15: Rollout reward: 0.
2025-04-11 20:14:51,255 [DEBUG] MCTS iteration 15: Backed up Finish.
2025-04-11 20:14:51,255 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:51,262 [INFO] Final candidates: []
2025-04-11 20:14:51,262 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:51,270 [INFO] Final candidates: []
2025-04-11 20:14:51,270 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:51,270 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(12)), (np.int64(5), np.int64(9)))
2025-04-11 20:14:51,271 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:51,408 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:51,408 [DEBUG] MCTS iteration 16: Rollout reward: 0.
2025-04-11 20:14:51,408 [DEBUG] MCTS iteration 16: Backed up Finish.
2025-04-11 20:14:51,409 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:51,416 [INFO] Final candidates: []
2025-04-11 20:14:51,416 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:51,424 [INFO] Final candidates: []
2025-04-11 20:14:51,424 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:51,424 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(6)), (np.int64(6), np.int64(16)))
2025-04-11 20:14:51,425 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:51,744 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:51,744 [DEBUG] MCTS iteration 17: Rollout reward: 1.
2025-04-11 20:14:51,744 [DEBUG] MCTS iteration 17: Backed up Finish.
2025-04-11 20:14:51,744 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:51,751 [INFO] Final candidates: []
2025-04-11 20:14:51,752 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:51,759 [INFO] Final candidates: []
2025-04-11 20:14:51,759 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:51,759 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(2), np.int64(14)), (np.int64(10), np.int64(11)))
2025-04-11 20:14:51,760 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:51,848 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:51,848 [DEBUG] MCTS iteration 18: Rollout reward: 0.
2025-04-11 20:14:51,848 [DEBUG] MCTS iteration 18: Backed up Finish.
2025-04-11 20:14:51,848 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:51,856 [INFO] Final candidates: []
2025-04-11 20:14:51,856 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:51,863 [INFO] Final candidates: []
2025-04-11 20:14:51,863 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:51,863 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(10)), (np.int64(9), np.int64(6)))
2025-04-11 20:14:51,864 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:52,055 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:52,056 [DEBUG] MCTS iteration 19: Rollout reward: 0.
2025-04-11 20:14:52,056 [DEBUG] MCTS iteration 19: Backed up Finish.
2025-04-11 20:14:52,056 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:52,063 [INFO] Final candidates: []
2025-04-11 20:14:52,063 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:52,071 [INFO] Final candidates: []
2025-04-11 20:14:52,071 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:52,072 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(12)), (np.int64(10), np.int64(13)))
2025-04-11 20:14:52,072 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:52,228 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:52,228 [DEBUG] MCTS iteration 20: Rollout reward: 0.
2025-04-11 20:14:52,228 [DEBUG] MCTS iteration 20: Backed up Finish.
2025-04-11 20:14:52,229 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:52,236 [INFO] Final candidates: []
2025-04-11 20:14:52,236 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:52,243 [INFO] Final candidates: []
2025-04-11 20:14:52,243 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:52,243 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(8)), (np.int64(13), np.int64(15)))
2025-04-11 20:14:52,244 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:52,407 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:52,407 [DEBUG] MCTS iteration 21: Rollout reward: 0.
2025-04-11 20:14:52,407 [DEBUG] MCTS iteration 21: Backed up Finish.
2025-04-11 20:14:52,407 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:52,414 [INFO] Final candidates: []
2025-04-11 20:14:52,414 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:52,422 [INFO] Final candidates: []
2025-04-11 20:14:52,422 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:52,422 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(5)), (np.int64(9), np.int64(6)))
2025-04-11 20:14:52,423 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:52,540 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:52,540 [DEBUG] MCTS iteration 22: Rollout reward: 0.
2025-04-11 20:14:52,540 [DEBUG] MCTS iteration 22: Backed up Finish.
2025-04-11 20:14:52,540 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:52,548 [INFO] Final candidates: []
2025-04-11 20:14:52,548 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:52,557 [INFO] Final candidates: []
2025-04-11 20:14:52,557 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:52,557 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(6)), (np.int64(10), np.int64(13)))
2025-04-11 20:14:52,558 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:52,713 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:52,714 [DEBUG] MCTS iteration 23: Rollout reward: 0.
2025-04-11 20:14:52,714 [DEBUG] MCTS iteration 23: Backed up Finish.
2025-04-11 20:14:52,714 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:52,722 [INFO] Final candidates: []
2025-04-11 20:14:52,722 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:52,729 [INFO] Final candidates: []
2025-04-11 20:14:52,729 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:52,730 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(18), np.int64(1)), (np.int64(13), np.int64(12)))
2025-04-11 20:14:52,730 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:52,845 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:52,846 [DEBUG] MCTS iteration 24: Rollout reward: 0.
2025-04-11 20:14:52,846 [DEBUG] MCTS iteration 24: Backed up Finish.
2025-04-11 20:14:52,846 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:52,853 [INFO] Final candidates: []
2025-04-11 20:14:52,853 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:52,860 [INFO] Final candidates: []
2025-04-11 20:14:52,860 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:52,861 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(12)), (np.int64(14), np.int64(10)))
2025-04-11 20:14:52,861 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:53,081 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:53,081 [DEBUG] MCTS iteration 25: Rollout reward: 1.
2025-04-11 20:14:53,081 [DEBUG] MCTS iteration 25: Backed up Finish.
2025-04-11 20:14:53,081 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:53,089 [INFO] Final candidates: []
2025-04-11 20:14:53,089 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:53,096 [INFO] Final candidates: []
2025-04-11 20:14:53,096 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:53,096 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(7)), (np.int64(4), np.int64(10)))
2025-04-11 20:14:53,097 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:53,277 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:53,277 [DEBUG] MCTS iteration 26: Rollout reward: 0.
2025-04-11 20:14:53,277 [DEBUG] MCTS iteration 26: Backed up Finish.
2025-04-11 20:14:53,277 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:53,285 [INFO] Final candidates: []
2025-04-11 20:14:53,285 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:53,292 [INFO] Final candidates: []
2025-04-11 20:14:53,292 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:53,292 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(17), np.int64(9)), (np.int64(13), np.int64(11)))
2025-04-11 20:14:53,293 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:53,427 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:53,428 [DEBUG] MCTS iteration 27: Rollout reward: 1.
2025-04-11 20:14:53,428 [DEBUG] MCTS iteration 27: Backed up Finish.
2025-04-11 20:14:53,428 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:53,435 [INFO] Final candidates: []
2025-04-11 20:14:53,435 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:53,443 [INFO] Final candidates: []
2025-04-11 20:14:53,443 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:53,443 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(5)), (np.int64(11), np.int64(8)))
2025-04-11 20:14:53,444 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:53,635 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:53,636 [DEBUG] MCTS iteration 28: Rollout reward: 1.
2025-04-11 20:14:53,636 [DEBUG] MCTS iteration 28: Backed up Finish.
2025-04-11 20:14:53,636 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:53,643 [INFO] Final candidates: []
2025-04-11 20:14:53,643 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:53,651 [INFO] Final candidates: []
2025-04-11 20:14:53,651 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:53,651 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(13)), (np.int64(8), np.int64(7)))
2025-04-11 20:14:53,652 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:53,863 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:53,863 [DEBUG] MCTS iteration 29: Rollout reward: 0.
2025-04-11 20:14:53,863 [DEBUG] MCTS iteration 29: Backed up Finish.
2025-04-11 20:14:53,863 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:53,871 [INFO] Final candidates: []
2025-04-11 20:14:53,871 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:53,879 [INFO] Final candidates: []
2025-04-11 20:14:53,879 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:53,879 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(7)), (np.int64(16), np.int64(0)))
2025-04-11 20:14:53,880 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:53,961 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:53,961 [DEBUG] MCTS iteration 30: Rollout reward: 0.
2025-04-11 20:14:53,961 [DEBUG] MCTS iteration 30: Backed up Finish.
2025-04-11 20:14:53,962 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:53,969 [INFO] Final candidates: []
2025-04-11 20:14:53,969 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:53,977 [INFO] Final candidates: []
2025-04-11 20:14:53,977 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:53,977 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(7)), (np.int64(16), np.int64(7)))
2025-04-11 20:14:53,978 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:54,104 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:54,105 [DEBUG] MCTS iteration 31: Rollout reward: 0.
2025-04-11 20:14:54,105 [DEBUG] MCTS iteration 31: Backed up Finish.
2025-04-11 20:14:54,105 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:54,112 [INFO] Final candidates: []
2025-04-11 20:14:54,112 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:54,120 [INFO] Final candidates: []
2025-04-11 20:14:54,120 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:54,120 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(13)), (np.int64(8), np.int64(13)))
2025-04-11 20:14:54,121 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:54,280 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:54,281 [DEBUG] MCTS iteration 32: Rollout reward: 0.
2025-04-11 20:14:54,281 [DEBUG] MCTS iteration 32: Backed up Finish.
2025-04-11 20:14:54,281 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:54,288 [INFO] Final candidates: []
2025-04-11 20:14:54,288 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:54,296 [INFO] Final candidates: []
2025-04-11 20:14:54,296 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:54,296 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(5)), (np.int64(11), np.int64(15)))
2025-04-11 20:14:54,297 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:54,472 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:54,472 [DEBUG] MCTS iteration 33: Rollout reward: 1.
2025-04-11 20:14:54,472 [DEBUG] MCTS iteration 33: Backed up Finish.
2025-04-11 20:14:54,472 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:54,480 [INFO] Final candidates: []
2025-04-11 20:14:54,480 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:54,488 [INFO] Final candidates: []
2025-04-11 20:14:54,488 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:54,488 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(14)), (np.int64(17), np.int64(1)))
2025-04-11 20:14:54,488 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:54,694 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:54,694 [DEBUG] MCTS iteration 34: Rollout reward: 0.
2025-04-11 20:14:54,694 [DEBUG] MCTS iteration 34: Backed up Finish.
2025-04-11 20:14:54,694 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:54,701 [INFO] Final candidates: []
2025-04-11 20:14:54,701 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:54,709 [INFO] Final candidates: []
2025-04-11 20:14:54,709 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:54,709 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(11)), (np.int64(14), np.int64(12)))
2025-04-11 20:14:54,710 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:54,870 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:54,870 [DEBUG] MCTS iteration 35: Rollout reward: 1.
2025-04-11 20:14:54,871 [DEBUG] MCTS iteration 35: Backed up Finish.
2025-04-11 20:14:54,871 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:54,878 [INFO] Final candidates: []
2025-04-11 20:14:54,878 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:54,886 [INFO] Final candidates: []
2025-04-11 20:14:54,886 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:54,886 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(7)), (np.int64(3), np.int64(14)))
2025-04-11 20:14:54,886 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:55,114 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:55,114 [DEBUG] MCTS iteration 36: Rollout reward: 0.
2025-04-11 20:14:55,114 [DEBUG] MCTS iteration 36: Backed up Finish.
2025-04-11 20:14:55,114 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:55,122 [INFO] Final candidates: []
2025-04-11 20:14:55,122 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:55,129 [INFO] Final candidates: []
2025-04-11 20:14:55,129 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:55,129 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(14)), (np.int64(6), np.int64(14)))
2025-04-11 20:14:55,130 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:55,430 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:55,430 [DEBUG] MCTS iteration 37: Rollout reward: 1.
2025-04-11 20:14:55,430 [DEBUG] MCTS iteration 37: Backed up Finish.
2025-04-11 20:14:55,430 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:55,438 [INFO] Final candidates: []
2025-04-11 20:14:55,438 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:55,445 [INFO] Final candidates: []
2025-04-11 20:14:55,445 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:55,445 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(13)), (np.int64(4), np.int64(18)))
2025-04-11 20:14:55,446 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:55,571 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:55,572 [DEBUG] MCTS iteration 38: Rollout reward: 1.
2025-04-11 20:14:55,572 [DEBUG] MCTS iteration 38: Backed up Finish.
2025-04-11 20:14:55,572 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:55,579 [INFO] Final candidates: []
2025-04-11 20:14:55,579 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:55,587 [INFO] Final candidates: []
2025-04-11 20:14:55,587 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:55,587 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(14)), (np.int64(2), np.int64(14)))
2025-04-11 20:14:55,588 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:55,778 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:55,778 [DEBUG] MCTS iteration 39: Rollout reward: 0.
2025-04-11 20:14:55,778 [DEBUG] MCTS iteration 39: Backed up Finish.
2025-04-11 20:14:55,778 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:55,785 [INFO] Final candidates: []
2025-04-11 20:14:55,785 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:55,793 [INFO] Final candidates: []
2025-04-11 20:14:55,793 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:55,793 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(14)), (np.int64(14), np.int64(11)))
2025-04-11 20:14:55,794 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:55,952 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:55,952 [DEBUG] MCTS iteration 40: Rollout reward: 0.
2025-04-11 20:14:55,952 [DEBUG] MCTS iteration 40: Backed up Finish.
2025-04-11 20:14:55,952 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:55,959 [INFO] Final candidates: []
2025-04-11 20:14:55,959 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:55,967 [INFO] Final candidates: []
2025-04-11 20:14:55,967 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:55,967 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(3), np.int64(15)), (np.int64(15), np.int64(8)))
2025-04-11 20:14:55,968 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:56,109 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:56,110 [DEBUG] MCTS iteration 41: Rollout reward: 1.
2025-04-11 20:14:56,110 [DEBUG] MCTS iteration 41: Backed up Finish.
2025-04-11 20:14:56,110 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:56,117 [INFO] Final candidates: []
2025-04-11 20:14:56,117 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:56,125 [INFO] Final candidates: []
2025-04-11 20:14:56,125 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:56,125 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(8)), (np.int64(17), np.int64(7)))
2025-04-11 20:14:56,126 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:56,326 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:56,326 [DEBUG] MCTS iteration 42: Rollout reward: 0.
2025-04-11 20:14:56,326 [DEBUG] MCTS iteration 42: Backed up Finish.
2025-04-11 20:14:56,326 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:56,334 [INFO] Final candidates: []
2025-04-11 20:14:56,334 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:56,341 [INFO] Final candidates: []
2025-04-11 20:14:56,341 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:56,341 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(8)), (np.int64(8), np.int64(13)))
2025-04-11 20:14:56,342 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:56,541 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:56,541 [DEBUG] MCTS iteration 43: Rollout reward: 0.
2025-04-11 20:14:56,541 [DEBUG] MCTS iteration 43: Backed up Finish.
2025-04-11 20:14:56,541 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:56,549 [INFO] Final candidates: []
2025-04-11 20:14:56,549 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:56,556 [INFO] Final candidates: []
2025-04-11 20:14:56,556 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:56,557 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(14)), (np.int64(13), np.int64(8)))
2025-04-11 20:14:56,557 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:56,817 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:56,817 [DEBUG] MCTS iteration 44: Rollout reward: 1.
2025-04-11 20:14:56,817 [DEBUG] MCTS iteration 44: Backed up Finish.
2025-04-11 20:14:56,817 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:56,825 [INFO] Final candidates: []
2025-04-11 20:14:56,825 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:56,832 [INFO] Final candidates: []
2025-04-11 20:14:56,832 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:56,832 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(14)), (np.int64(17), np.int64(1)))
2025-04-11 20:14:56,833 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:57,053 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:57,053 [DEBUG] MCTS iteration 45: Rollout reward: 0.
2025-04-11 20:14:57,053 [DEBUG] MCTS iteration 45: Backed up Finish.
2025-04-11 20:14:57,053 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:57,061 [INFO] Final candidates: []
2025-04-11 20:14:57,061 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:57,068 [INFO] Final candidates: []
2025-04-11 20:14:57,068 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:57,069 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(0)), (np.int64(6), np.int64(14)))
2025-04-11 20:14:57,071 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:57,231 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:57,231 [DEBUG] MCTS iteration 46: Rollout reward: 1.
2025-04-11 20:14:57,231 [DEBUG] MCTS iteration 46: Backed up Finish.
2025-04-11 20:14:57,231 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:57,238 [INFO] Final candidates: []
2025-04-11 20:14:57,239 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:57,246 [INFO] Final candidates: []
2025-04-11 20:14:57,246 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:57,246 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(3), np.int64(13)), (np.int64(10), np.int64(9)))
2025-04-11 20:14:57,247 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:57,458 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:57,458 [DEBUG] MCTS iteration 47: Rollout reward: 0.
2025-04-11 20:14:57,458 [DEBUG] MCTS iteration 47: Backed up Finish.
2025-04-11 20:14:57,458 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:57,466 [INFO] Final candidates: []
2025-04-11 20:14:57,466 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:57,473 [INFO] Final candidates: []
2025-04-11 20:14:57,473 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:57,473 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(7)), (np.int64(2), np.int64(16)))
2025-04-11 20:14:57,474 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:57,638 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:57,638 [DEBUG] MCTS iteration 48: Rollout reward: 0.
2025-04-11 20:14:57,638 [DEBUG] MCTS iteration 48: Backed up Finish.
2025-04-11 20:14:57,639 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:57,646 [INFO] Final candidates: []
2025-04-11 20:14:57,646 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:57,653 [INFO] Final candidates: []
2025-04-11 20:14:57,654 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:57,654 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(10)), (np.int64(11), np.int64(12)))
2025-04-11 20:14:57,654 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:57,779 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:57,779 [DEBUG] MCTS iteration 49: Rollout reward: 0.
2025-04-11 20:14:57,779 [DEBUG] MCTS iteration 49: Backed up Finish.
2025-04-11 20:14:57,779 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:57,786 [INFO] Final candidates: []
2025-04-11 20:14:57,786 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:57,794 [INFO] Final candidates: []
2025-04-11 20:14:57,794 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:57,794 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(13)), (np.int64(14), np.int64(7)))
2025-04-11 20:14:57,795 [DEBUG] MCTS iteration 50: reached a node with 0 visits.
2025-04-11 20:14:57,795 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:58,025 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:58,025 [DEBUG] MCTS iteration 50: Rollout reward: 1.
2025-04-11 20:14:58,025 [DEBUG] MCTS iteration 50: Backed up Finish.
2025-04-11 20:14:58,025 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:58,033 [INFO] Final candidates: []
2025-04-11 20:14:58,033 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:58,040 [INFO] Final candidates: []
2025-04-11 20:14:58,040 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:58,040 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(13)), (np.int64(17), np.int64(9)))
2025-04-11 20:14:58,041 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:58,373 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:58,373 [DEBUG] MCTS iteration 51: Rollout reward: 1.
2025-04-11 20:14:58,373 [DEBUG] MCTS iteration 51: Backed up Finish.
2025-04-11 20:14:58,373 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:58,380 [INFO] Final candidates: []
2025-04-11 20:14:58,381 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:58,388 [INFO] Final candidates: []
2025-04-11 20:14:58,388 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:58,388 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(13)), (np.int64(17), np.int64(2)))
2025-04-11 20:14:58,389 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:58,570 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:58,571 [DEBUG] MCTS iteration 52: Rollout reward: 1.
2025-04-11 20:14:58,571 [DEBUG] MCTS iteration 52: Backed up Finish.
2025-04-11 20:14:58,571 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:58,578 [INFO] Final candidates: []
2025-04-11 20:14:58,578 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:58,586 [INFO] Final candidates: []
2025-04-11 20:14:58,586 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:58,586 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(14)), (np.int64(6), np.int64(7)))
2025-04-11 20:14:58,587 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:58,740 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:58,741 [DEBUG] MCTS iteration 53: Rollout reward: 1.
2025-04-11 20:14:58,741 [DEBUG] MCTS iteration 53: Backed up Finish.
2025-04-11 20:14:58,741 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:58,750 [INFO] Final candidates: []
2025-04-11 20:14:58,750 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:58,757 [INFO] Final candidates: []
2025-04-11 20:14:58,757 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:58,757 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(14)), (np.int64(16), np.int64(11)))
2025-04-11 20:14:58,758 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:58,903 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:58,904 [DEBUG] MCTS iteration 54: Rollout reward: 1.
2025-04-11 20:14:58,904 [DEBUG] MCTS iteration 54: Backed up Finish.
2025-04-11 20:14:58,904 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:58,911 [INFO] Final candidates: []
2025-04-11 20:14:58,911 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:58,919 [INFO] Final candidates: []
2025-04-11 20:14:58,919 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:58,919 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(7)), (np.int64(17), np.int64(1)))
2025-04-11 20:14:58,920 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:59,037 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:59,037 [DEBUG] MCTS iteration 55: Rollout reward: 1.
2025-04-11 20:14:59,037 [DEBUG] MCTS iteration 55: Backed up Finish.
2025-04-11 20:14:59,037 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:59,044 [INFO] Final candidates: []
2025-04-11 20:14:59,044 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:59,052 [INFO] Final candidates: []
2025-04-11 20:14:59,052 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:59,052 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(8)), (np.int64(10), np.int64(11)))
2025-04-11 20:14:59,053 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:59,283 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:59,283 [DEBUG] MCTS iteration 56: Rollout reward: 0.
2025-04-11 20:14:59,283 [DEBUG] MCTS iteration 56: Backed up Finish.
2025-04-11 20:14:59,283 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:59,290 [INFO] Final candidates: []
2025-04-11 20:14:59,290 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:59,298 [INFO] Final candidates: []
2025-04-11 20:14:59,298 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:59,298 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(4), np.int64(18)), (np.int64(6), np.int64(14)))
2025-04-11 20:14:59,299 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:59,523 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:59,523 [DEBUG] MCTS iteration 57: Rollout reward: 1.
2025-04-11 20:14:59,523 [DEBUG] MCTS iteration 57: Backed up Finish.
2025-04-11 20:14:59,523 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:59,530 [INFO] Final candidates: []
2025-04-11 20:14:59,530 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:59,538 [INFO] Final candidates: []
2025-04-11 20:14:59,538 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:59,538 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(5)), (np.int64(13), np.int64(9)))
2025-04-11 20:14:59,539 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:59,678 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:14:59,678 [DEBUG] MCTS iteration 58: Rollout reward: 1.
2025-04-11 20:14:59,678 [DEBUG] MCTS iteration 58: Backed up Finish.
2025-04-11 20:14:59,678 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:59,686 [INFO] Final candidates: []
2025-04-11 20:14:59,686 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:59,693 [INFO] Final candidates: []
2025-04-11 20:14:59,693 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:59,693 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(10)), (np.int64(14), np.int64(7)))
2025-04-11 20:14:59,694 [INFO] Default policy: Starting random playout.
2025-04-11 20:14:59,949 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:14:59,949 [DEBUG] MCTS iteration 59: Rollout reward: 0.
2025-04-11 20:14:59,949 [DEBUG] MCTS iteration 59: Backed up Finish.
2025-04-11 20:14:59,949 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:14:59,957 [INFO] Final candidates: []
2025-04-11 20:14:59,957 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:14:59,964 [INFO] Final candidates: []
2025-04-11 20:14:59,964 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:14:59,964 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(13)), (np.int64(6), np.int64(14)))
2025-04-11 20:14:59,965 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:00,072 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:00,073 [DEBUG] MCTS iteration 60: Rollout reward: 1.
2025-04-11 20:15:00,073 [DEBUG] MCTS iteration 60: Backed up Finish.
2025-04-11 20:15:00,073 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:00,080 [INFO] Final candidates: []
2025-04-11 20:15:00,080 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:00,088 [INFO] Final candidates: []
2025-04-11 20:15:00,088 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:00,088 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(9)), (np.int64(4), np.int64(17)))
2025-04-11 20:15:00,088 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:00,142 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:00,142 [DEBUG] MCTS iteration 61: Rollout reward: 0.
2025-04-11 20:15:00,142 [DEBUG] MCTS iteration 61: Backed up Finish.
2025-04-11 20:15:00,142 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:00,150 [INFO] Final candidates: []
2025-04-11 20:15:00,150 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:00,157 [INFO] Final candidates: []
2025-04-11 20:15:00,157 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:00,157 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(13)), (np.int64(13), np.int64(8)))
2025-04-11 20:15:00,158 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:00,295 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:00,295 [DEBUG] MCTS iteration 62: Rollout reward: 1.
2025-04-11 20:15:00,295 [DEBUG] MCTS iteration 62: Backed up Finish.
2025-04-11 20:15:00,295 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:00,303 [INFO] Final candidates: []
2025-04-11 20:15:00,303 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:00,311 [INFO] Final candidates: []
2025-04-11 20:15:00,311 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:00,311 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(17), np.int64(7)), (np.int64(12), np.int64(13)))
2025-04-11 20:15:00,312 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:00,382 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:00,382 [DEBUG] MCTS iteration 63: Rollout reward: 1.
2025-04-11 20:15:00,382 [DEBUG] MCTS iteration 63: Backed up Finish.
2025-04-11 20:15:00,382 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:00,389 [INFO] Final candidates: []
2025-04-11 20:15:00,390 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:00,397 [INFO] Final candidates: []
2025-04-11 20:15:00,397 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:00,397 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(14)), (np.int64(4), np.int64(10)))
2025-04-11 20:15:00,398 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:00,554 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:00,554 [DEBUG] MCTS iteration 64: Rollout reward: 1.
2025-04-11 20:15:00,554 [DEBUG] MCTS iteration 64: Backed up Finish.
2025-04-11 20:15:00,554 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:00,562 [INFO] Final candidates: []
2025-04-11 20:15:00,563 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:00,571 [INFO] Final candidates: []
2025-04-11 20:15:00,571 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:00,571 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(9)), (np.int64(4), np.int64(15)))
2025-04-11 20:15:00,572 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:00,625 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:00,626 [DEBUG] MCTS iteration 65: Rollout reward: 0.
2025-04-11 20:15:00,626 [DEBUG] MCTS iteration 65: Backed up Finish.
2025-04-11 20:15:00,626 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:00,633 [INFO] Final candidates: []
2025-04-11 20:15:00,633 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:00,641 [INFO] Final candidates: []
2025-04-11 20:15:00,641 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:00,641 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(12)), (np.int64(10), np.int64(9)))
2025-04-11 20:15:00,642 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:00,794 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:00,794 [DEBUG] MCTS iteration 66: Rollout reward: 0.
2025-04-11 20:15:00,795 [DEBUG] MCTS iteration 66: Backed up Finish.
2025-04-11 20:15:00,795 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:00,802 [INFO] Final candidates: []
2025-04-11 20:15:00,802 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:00,810 [INFO] Final candidates: []
2025-04-11 20:15:00,810 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:00,810 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(8)), (np.int64(9), np.int64(14)))
2025-04-11 20:15:00,811 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:01,056 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:01,056 [DEBUG] MCTS iteration 67: Rollout reward: 1.
2025-04-11 20:15:01,056 [DEBUG] MCTS iteration 67: Backed up Finish.
2025-04-11 20:15:01,056 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:01,063 [INFO] Final candidates: []
2025-04-11 20:15:01,063 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:01,071 [INFO] Final candidates: []
2025-04-11 20:15:01,071 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:01,071 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(5)), (np.int64(18), np.int64(2)))
2025-04-11 20:15:01,072 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:01,297 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:01,297 [DEBUG] MCTS iteration 68: Rollout reward: 1.
2025-04-11 20:15:01,297 [DEBUG] MCTS iteration 68: Backed up Finish.
2025-04-11 20:15:01,297 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:01,304 [INFO] Final candidates: []
2025-04-11 20:15:01,304 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:01,313 [INFO] Final candidates: []
2025-04-11 20:15:01,313 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:01,313 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(0)), (np.int64(6), np.int64(16)))
2025-04-11 20:15:01,314 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:01,520 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:01,520 [DEBUG] MCTS iteration 69: Rollout reward: 1.
2025-04-11 20:15:01,520 [DEBUG] MCTS iteration 69: Backed up Finish.
2025-04-11 20:15:01,521 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:01,528 [INFO] Final candidates: []
2025-04-11 20:15:01,528 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:01,536 [INFO] Final candidates: []
2025-04-11 20:15:01,536 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:01,536 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(9)), (np.int64(5), np.int64(15)))
2025-04-11 20:15:01,536 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:01,793 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:01,793 [DEBUG] MCTS iteration 70: Rollout reward: 0.
2025-04-11 20:15:01,794 [DEBUG] MCTS iteration 70: Backed up Finish.
2025-04-11 20:15:01,794 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:01,801 [INFO] Final candidates: []
2025-04-11 20:15:01,801 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:01,808 [INFO] Final candidates: []
2025-04-11 20:15:01,808 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:01,808 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(7)), (np.int64(5), np.int64(17)))
2025-04-11 20:15:01,809 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:02,042 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:02,042 [DEBUG] MCTS iteration 71: Rollout reward: 0.
2025-04-11 20:15:02,042 [DEBUG] MCTS iteration 71: Backed up Finish.
2025-04-11 20:15:02,042 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:02,050 [INFO] Final candidates: []
2025-04-11 20:15:02,050 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:02,057 [INFO] Final candidates: []
2025-04-11 20:15:02,058 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:02,058 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(4), np.int64(15)), (np.int64(6), np.int64(7)))
2025-04-11 20:15:02,058 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:02,322 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:02,322 [DEBUG] MCTS iteration 72: Rollout reward: 0.
2025-04-11 20:15:02,322 [DEBUG] MCTS iteration 72: Backed up Finish.
2025-04-11 20:15:02,322 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:02,329 [INFO] Final candidates: []
2025-04-11 20:15:02,329 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:02,337 [INFO] Final candidates: []
2025-04-11 20:15:02,337 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:02,337 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(11)), (np.int64(5), np.int64(7)))
2025-04-11 20:15:02,338 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:02,543 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:02,543 [DEBUG] MCTS iteration 73: Rollout reward: 1.
2025-04-11 20:15:02,543 [DEBUG] MCTS iteration 73: Backed up Finish.
2025-04-11 20:15:02,543 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:02,552 [INFO] Final candidates: []
2025-04-11 20:15:02,552 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:02,560 [INFO] Final candidates: []
2025-04-11 20:15:02,560 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:02,560 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(0)), (np.int64(14), np.int64(11)))
2025-04-11 20:15:02,560 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:02,727 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:02,727 [DEBUG] MCTS iteration 74: Rollout reward: 1.
2025-04-11 20:15:02,727 [DEBUG] MCTS iteration 74: Backed up Finish.
2025-04-11 20:15:02,727 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:02,735 [INFO] Final candidates: []
2025-04-11 20:15:02,735 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:02,742 [INFO] Final candidates: []
2025-04-11 20:15:02,742 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:02,742 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(7)), (np.int64(11), np.int64(10)))
2025-04-11 20:15:02,743 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:02,861 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:02,861 [DEBUG] MCTS iteration 75: Rollout reward: 1.
2025-04-11 20:15:02,861 [DEBUG] MCTS iteration 75: Backed up Finish.
2025-04-11 20:15:02,861 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:02,868 [INFO] Final candidates: []
2025-04-11 20:15:02,868 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:02,876 [INFO] Final candidates: []
2025-04-11 20:15:02,876 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:02,876 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(13)), (np.int64(14), np.int64(6)))
2025-04-11 20:15:02,877 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:03,105 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:03,105 [DEBUG] MCTS iteration 76: Rollout reward: 1.
2025-04-11 20:15:03,105 [DEBUG] MCTS iteration 76: Backed up Finish.
2025-04-11 20:15:03,106 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:03,113 [INFO] Final candidates: []
2025-04-11 20:15:03,113 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:03,121 [INFO] Final candidates: []
2025-04-11 20:15:03,121 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:03,121 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(6)), (np.int64(17), np.int64(7)))
2025-04-11 20:15:03,121 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:03,333 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:03,333 [DEBUG] MCTS iteration 77: Rollout reward: 0.
2025-04-11 20:15:03,333 [DEBUG] MCTS iteration 77: Backed up Finish.
2025-04-11 20:15:03,333 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:03,340 [INFO] Final candidates: []
2025-04-11 20:15:03,340 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:03,348 [INFO] Final candidates: []
2025-04-11 20:15:03,348 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:03,348 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(17), np.int64(7)), (np.int64(13), np.int64(9)))
2025-04-11 20:15:03,349 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:03,654 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:03,654 [DEBUG] MCTS iteration 78: Rollout reward: 1.
2025-04-11 20:15:03,654 [DEBUG] MCTS iteration 78: Backed up Finish.
2025-04-11 20:15:03,654 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:03,661 [INFO] Final candidates: []
2025-04-11 20:15:03,661 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:03,669 [INFO] Final candidates: []
2025-04-11 20:15:03,669 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:03,669 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(0)), (np.int64(13), np.int64(12)))
2025-04-11 20:15:03,670 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:03,720 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:03,720 [DEBUG] MCTS iteration 79: Rollout reward: 1.
2025-04-11 20:15:03,720 [DEBUG] MCTS iteration 79: Backed up Finish.
2025-04-11 20:15:03,721 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:03,730 [INFO] Final candidates: []
2025-04-11 20:15:03,730 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:03,737 [INFO] Final candidates: []
2025-04-11 20:15:03,737 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:03,737 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(17), np.int64(2)), (np.int64(5), np.int64(9)))
2025-04-11 20:15:03,738 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:03,782 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:03,783 [DEBUG] MCTS iteration 80: Rollout reward: 0.
2025-04-11 20:15:03,783 [DEBUG] MCTS iteration 80: Backed up Finish.
2025-04-11 20:15:03,783 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:03,792 [INFO] Final candidates: []
2025-04-11 20:15:03,792 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:03,800 [INFO] Final candidates: []
2025-04-11 20:15:03,800 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:03,800 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(14)), (np.int64(3), np.int64(15)))
2025-04-11 20:15:03,801 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:03,872 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:03,872 [DEBUG] MCTS iteration 81: Rollout reward: 0.
2025-04-11 20:15:03,872 [DEBUG] MCTS iteration 81: Backed up Finish.
2025-04-11 20:15:03,873 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:03,880 [INFO] Final candidates: []
2025-04-11 20:15:03,880 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:03,888 [INFO] Final candidates: []
2025-04-11 20:15:03,888 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:03,888 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(10)), (np.int64(11), np.int64(10)))
2025-04-11 20:15:03,888 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:04,006 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:04,006 [DEBUG] MCTS iteration 82: Rollout reward: 0.
2025-04-11 20:15:04,006 [DEBUG] MCTS iteration 82: Backed up Finish.
2025-04-11 20:15:04,007 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:04,014 [INFO] Final candidates: []
2025-04-11 20:15:04,014 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:04,022 [INFO] Final candidates: []
2025-04-11 20:15:04,022 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:04,022 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(9)), (np.int64(11), np.int64(12)))
2025-04-11 20:15:04,022 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:04,166 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:04,166 [DEBUG] MCTS iteration 83: Rollout reward: 0.
2025-04-11 20:15:04,166 [DEBUG] MCTS iteration 83: Backed up Finish.
2025-04-11 20:15:04,166 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:04,173 [INFO] Final candidates: []
2025-04-11 20:15:04,173 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:04,181 [INFO] Final candidates: []
2025-04-11 20:15:04,181 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:04,181 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(14)), (np.int64(11), np.int64(12)))
2025-04-11 20:15:04,182 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:04,225 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:04,225 [DEBUG] MCTS iteration 84: Rollout reward: 0.
2025-04-11 20:15:04,225 [DEBUG] MCTS iteration 84: Backed up Finish.
2025-04-11 20:15:04,225 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:04,233 [INFO] Final candidates: []
2025-04-11 20:15:04,233 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:04,240 [INFO] Final candidates: []
2025-04-11 20:15:04,240 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:04,240 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(14)), (np.int64(8), np.int64(7)))
2025-04-11 20:15:04,241 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:04,319 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:04,319 [DEBUG] MCTS iteration 85: Rollout reward: 0.
2025-04-11 20:15:04,319 [DEBUG] MCTS iteration 85: Backed up Finish.
2025-04-11 20:15:04,319 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:04,327 [INFO] Final candidates: []
2025-04-11 20:15:04,327 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:04,334 [INFO] Final candidates: []
2025-04-11 20:15:04,334 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:04,334 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(8)), (np.int64(4), np.int64(15)))
2025-04-11 20:15:04,335 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:04,439 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:04,440 [DEBUG] MCTS iteration 86: Rollout reward: 0.
2025-04-11 20:15:04,440 [DEBUG] MCTS iteration 86: Backed up Finish.
2025-04-11 20:15:04,440 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:04,447 [INFO] Final candidates: []
2025-04-11 20:15:04,447 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:04,455 [INFO] Final candidates: []
2025-04-11 20:15:04,455 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:04,455 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(6)), (np.int64(12), np.int64(10)))
2025-04-11 20:15:04,455 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:04,540 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:04,540 [DEBUG] MCTS iteration 87: Rollout reward: 1.
2025-04-11 20:15:04,540 [DEBUG] MCTS iteration 87: Backed up Finish.
2025-04-11 20:15:04,540 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:04,547 [INFO] Final candidates: []
2025-04-11 20:15:04,547 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:04,555 [INFO] Final candidates: []
2025-04-11 20:15:04,555 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:04,555 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(12)), (np.int64(16), np.int64(10)))
2025-04-11 20:15:04,556 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:04,813 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:04,813 [DEBUG] MCTS iteration 88: Rollout reward: 0.
2025-04-11 20:15:04,813 [DEBUG] MCTS iteration 88: Backed up Finish.
2025-04-11 20:15:04,814 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:04,821 [INFO] Final candidates: []
2025-04-11 20:15:04,821 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:04,829 [INFO] Final candidates: []
2025-04-11 20:15:04,829 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:04,829 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(10)), (np.int64(11), np.int64(8)))
2025-04-11 20:15:04,829 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:05,040 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:05,040 [DEBUG] MCTS iteration 89: Rollout reward: 1.
2025-04-11 20:15:05,040 [DEBUG] MCTS iteration 89: Backed up Finish.
2025-04-11 20:15:05,041 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:05,049 [INFO] Final candidates: []
2025-04-11 20:15:05,049 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:05,056 [INFO] Final candidates: []
2025-04-11 20:15:05,056 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:05,056 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(14)), (np.int64(9), np.int64(7)))
2025-04-11 20:15:05,057 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:05,248 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:05,248 [DEBUG] MCTS iteration 90: Rollout reward: 0.
2025-04-11 20:15:05,248 [DEBUG] MCTS iteration 90: Backed up Finish.
2025-04-11 20:15:05,248 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:05,255 [INFO] Final candidates: []
2025-04-11 20:15:05,255 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:05,263 [INFO] Final candidates: []
2025-04-11 20:15:05,263 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:05,263 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(9)), (np.int64(9), np.int64(15)))
2025-04-11 20:15:05,264 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:05,293 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:05,293 [DEBUG] MCTS iteration 91: Rollout reward: 1.
2025-04-11 20:15:05,293 [DEBUG] MCTS iteration 91: Backed up Finish.
2025-04-11 20:15:05,293 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:05,300 [INFO] Final candidates: []
2025-04-11 20:15:05,301 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:05,308 [INFO] Final candidates: []
2025-04-11 20:15:05,308 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:05,308 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(11)), (np.int64(9), np.int64(6)))
2025-04-11 20:15:05,309 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:05,384 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:05,384 [DEBUG] MCTS iteration 92: Rollout reward: 0.
2025-04-11 20:15:05,384 [DEBUG] MCTS iteration 92: Backed up Finish.
2025-04-11 20:15:05,384 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:05,391 [INFO] Final candidates: []
2025-04-11 20:15:05,391 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:05,399 [INFO] Final candidates: []
2025-04-11 20:15:05,399 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:05,399 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(11)), (np.int64(8), np.int64(7)))
2025-04-11 20:15:05,400 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:05,560 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:05,560 [DEBUG] MCTS iteration 93: Rollout reward: 1.
2025-04-11 20:15:05,560 [DEBUG] MCTS iteration 93: Backed up Finish.
2025-04-11 20:15:05,560 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:05,568 [INFO] Final candidates: []
2025-04-11 20:15:05,568 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:05,575 [INFO] Final candidates: []
2025-04-11 20:15:05,575 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:05,575 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(13)), (np.int64(4), np.int64(13)))
2025-04-11 20:15:05,576 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:05,828 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:05,828 [DEBUG] MCTS iteration 94: Rollout reward: 0.
2025-04-11 20:15:05,828 [DEBUG] MCTS iteration 94: Backed up Finish.
2025-04-11 20:15:05,828 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:05,836 [INFO] Final candidates: []
2025-04-11 20:15:05,836 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:05,843 [INFO] Final candidates: []
2025-04-11 20:15:05,843 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:05,843 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(5)), (np.int64(6), np.int64(7)))
2025-04-11 20:15:05,844 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:05,917 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:05,917 [DEBUG] MCTS iteration 95: Rollout reward: 1.
2025-04-11 20:15:05,917 [DEBUG] MCTS iteration 95: Backed up Finish.
2025-04-11 20:15:05,917 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:05,924 [INFO] Final candidates: []
2025-04-11 20:15:05,925 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:05,932 [INFO] Final candidates: []
2025-04-11 20:15:05,932 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:05,932 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(4), np.int64(13)), (np.int64(17), np.int64(1)))
2025-04-11 20:15:05,933 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:06,090 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:06,091 [DEBUG] MCTS iteration 96: Rollout reward: 1.
2025-04-11 20:15:06,091 [DEBUG] MCTS iteration 96: Backed up Finish.
2025-04-11 20:15:06,091 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:06,098 [INFO] Final candidates: []
2025-04-11 20:15:06,098 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:06,106 [INFO] Final candidates: []
2025-04-11 20:15:06,106 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:06,106 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(14)), (np.int64(10), np.int64(7)))
2025-04-11 20:15:06,107 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:06,339 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:06,339 [DEBUG] MCTS iteration 97: Rollout reward: 0.
2025-04-11 20:15:06,339 [DEBUG] MCTS iteration 97: Backed up Finish.
2025-04-11 20:15:06,339 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:06,346 [INFO] Final candidates: []
2025-04-11 20:15:06,346 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:06,354 [INFO] Final candidates: []
2025-04-11 20:15:06,354 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:06,354 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(3), np.int64(13)), (np.int64(11), np.int64(14)))
2025-04-11 20:15:06,355 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:06,644 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:06,644 [DEBUG] MCTS iteration 98: Rollout reward: 1.
2025-04-11 20:15:06,644 [DEBUG] MCTS iteration 98: Backed up Finish.
2025-04-11 20:15:06,644 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:06,652 [INFO] Final candidates: []
2025-04-11 20:15:06,652 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:06,659 [INFO] Final candidates: []
2025-04-11 20:15:06,659 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:06,659 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(8)), (np.int64(8), np.int64(14)))
2025-04-11 20:15:06,660 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:06,739 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:06,739 [DEBUG] MCTS iteration 99: Rollout reward: 1.
2025-04-11 20:15:06,739 [DEBUG] MCTS iteration 99: Backed up Finish.
2025-04-11 20:15:06,739 [INFO] MCTS: Search completed after 100 iterations.
2025-04-11 20:15:06,739 [DEBUG] MCTS: BEST ((7, 7), (13, 13)) with 100 visits.
2025-04-11 20:15:06,739 [INFO] MCTS: Search finished. Best move selected with 100 visits.
2025-04-11 20:15:06,739 [INFO] Phase 2 (defense): MCTS selected move: ((7, 7), (13, 13))
2025-04-11 20:15:06,739 [INFO] Phase 2 (defense): MCTS selected move string : H8,O14
2025-04-11 20:15:06,739 [INFO] MCTS (defense candidates) selected move: H8,O14
2025-04-11 20:15:15,463 [INFO] Starting pre-MCTS candidate collection.
2025-04-11 20:15:15,470 [INFO] Final candidates: []
2025-04-11 20:15:15,470 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:15,477 [INFO] Final candidates: []
2025-04-11 20:15:15,477 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:15,477 [INFO] No candidate found in Phase 1 or 2; using full legal moves for MCTS.
2025-04-11 20:15:15,478 [INFO] MCTS: Starting search for 100 iterations.
2025-04-11 20:15:15,486 [INFO] Final candidates: []
2025-04-11 20:15:15,486 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:15,493 [INFO] Final candidates: []
2025-04-11 20:15:15,493 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:15,493 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(5)), (np.int64(12), np.int64(14)))
2025-04-11 20:15:15,494 [DEBUG] MCTS iteration 0: reached a node with 0 visits.
2025-04-11 20:15:15,494 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:15,534 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:15,534 [DEBUG] MCTS iteration 0: Rollout reward: 0.
2025-04-11 20:15:15,534 [DEBUG] MCTS iteration 0: Backed up Finish.
2025-04-11 20:15:15,541 [INFO] Final candidates: []
2025-04-11 20:15:15,541 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:15,549 [INFO] Final candidates: []
2025-04-11 20:15:15,549 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:15,549 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(9)), (np.int64(15), np.int64(6)))
2025-04-11 20:15:15,550 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:15,641 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:15,641 [DEBUG] MCTS iteration 1: Rollout reward: 1.
2025-04-11 20:15:15,641 [DEBUG] MCTS iteration 1: Backed up Finish.
2025-04-11 20:15:15,649 [INFO] Final candidates: []
2025-04-11 20:15:15,649 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:15,656 [INFO] Final candidates: []
2025-04-11 20:15:15,656 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:15,656 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(9)), (np.int64(17), np.int64(10)))
2025-04-11 20:15:15,657 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:15,864 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:15,864 [DEBUG] MCTS iteration 2: Rollout reward: 0.
2025-04-11 20:15:15,864 [DEBUG] MCTS iteration 2: Backed up Finish.
2025-04-11 20:15:15,871 [INFO] Final candidates: []
2025-04-11 20:15:15,871 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:15,879 [INFO] Final candidates: []
2025-04-11 20:15:15,879 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:15,879 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(11)), (np.int64(3), np.int64(16)))
2025-04-11 20:15:15,880 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:16,021 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:16,021 [DEBUG] MCTS iteration 3: Rollout reward: 0.
2025-04-11 20:15:16,021 [DEBUG] MCTS iteration 3: Backed up Finish.
2025-04-11 20:15:16,028 [INFO] Final candidates: []
2025-04-11 20:15:16,028 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:16,036 [INFO] Final candidates: []
2025-04-11 20:15:16,036 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:16,036 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(14)), (np.int64(5), np.int64(16)))
2025-04-11 20:15:16,037 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:16,234 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:16,234 [DEBUG] MCTS iteration 4: Rollout reward: 1.
2025-04-11 20:15:16,234 [DEBUG] MCTS iteration 4: Backed up Finish.
2025-04-11 20:15:16,241 [INFO] Final candidates: []
2025-04-11 20:15:16,241 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:16,249 [INFO] Final candidates: []
2025-04-11 20:15:16,249 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:16,249 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(7)), (np.int64(12), np.int64(9)))
2025-04-11 20:15:16,250 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:16,316 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:16,316 [DEBUG] MCTS iteration 5: Rollout reward: 1.
2025-04-11 20:15:16,316 [DEBUG] MCTS iteration 5: Backed up Finish.
2025-04-11 20:15:16,323 [INFO] Final candidates: []
2025-04-11 20:15:16,323 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:16,331 [INFO] Final candidates: []
2025-04-11 20:15:16,331 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:16,331 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(10)), (np.int64(18), np.int64(2)))
2025-04-11 20:15:16,332 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:16,536 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:16,536 [DEBUG] MCTS iteration 6: Rollout reward: 1.
2025-04-11 20:15:16,536 [DEBUG] MCTS iteration 6: Backed up Finish.
2025-04-11 20:15:16,544 [INFO] Final candidates: []
2025-04-11 20:15:16,544 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:16,551 [INFO] Final candidates: []
2025-04-11 20:15:16,551 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:16,551 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(15)), (np.int64(8), np.int64(12)))
2025-04-11 20:15:16,552 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:16,713 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:16,713 [DEBUG] MCTS iteration 7: Rollout reward: 1.
2025-04-11 20:15:16,713 [DEBUG] MCTS iteration 7: Backed up Finish.
2025-04-11 20:15:16,721 [INFO] Final candidates: []
2025-04-11 20:15:16,721 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:16,728 [INFO] Final candidates: []
2025-04-11 20:15:16,728 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:16,728 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(3), np.int64(15)), (np.int64(15), np.int64(8)))
2025-04-11 20:15:16,729 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:16,881 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:16,882 [DEBUG] MCTS iteration 8: Rollout reward: 0.
2025-04-11 20:15:16,882 [DEBUG] MCTS iteration 8: Backed up Finish.
2025-04-11 20:15:16,889 [INFO] Final candidates: []
2025-04-11 20:15:16,889 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:16,896 [INFO] Final candidates: []
2025-04-11 20:15:16,896 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:16,896 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(17), np.int64(9)), (np.int64(6), np.int64(9)))
2025-04-11 20:15:16,897 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:17,077 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:17,077 [DEBUG] MCTS iteration 9: Rollout reward: 0.
2025-04-11 20:15:17,077 [DEBUG] MCTS iteration 9: Backed up Finish.
2025-04-11 20:15:17,084 [INFO] Final candidates: []
2025-04-11 20:15:17,084 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:17,091 [INFO] Final candidates: []
2025-04-11 20:15:17,091 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:17,091 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(13)), (np.int64(8), np.int64(6)))
2025-04-11 20:15:17,092 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:17,279 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:17,279 [DEBUG] MCTS iteration 10: Rollout reward: 0.
2025-04-11 20:15:17,279 [DEBUG] MCTS iteration 10: Backed up Finish.
2025-04-11 20:15:17,287 [INFO] Final candidates: []
2025-04-11 20:15:17,287 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:17,295 [INFO] Final candidates: []
2025-04-11 20:15:17,295 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:17,295 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(10)), (np.int64(17), np.int64(1)))
2025-04-11 20:15:17,296 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:17,571 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:17,571 [DEBUG] MCTS iteration 11: Rollout reward: 1.
2025-04-11 20:15:17,571 [DEBUG] MCTS iteration 11: Backed up Finish.
2025-04-11 20:15:17,579 [INFO] Final candidates: []
2025-04-11 20:15:17,579 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:17,586 [INFO] Final candidates: []
2025-04-11 20:15:17,586 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:17,586 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(18)), (np.int64(15), np.int64(8)))
2025-04-11 20:15:17,587 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:17,844 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:17,844 [DEBUG] MCTS iteration 12: Rollout reward: 0.
2025-04-11 20:15:17,844 [DEBUG] MCTS iteration 12: Backed up Finish.
2025-04-11 20:15:17,852 [INFO] Final candidates: []
2025-04-11 20:15:17,852 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:17,859 [INFO] Final candidates: []
2025-04-11 20:15:17,859 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:17,859 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(7)), (np.int64(16), np.int64(9)))
2025-04-11 20:15:17,860 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:17,933 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:17,934 [DEBUG] MCTS iteration 13: Rollout reward: 1.
2025-04-11 20:15:17,934 [DEBUG] MCTS iteration 13: Backed up Finish.
2025-04-11 20:15:17,941 [INFO] Final candidates: []
2025-04-11 20:15:17,941 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:17,949 [INFO] Final candidates: []
2025-04-11 20:15:17,949 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:17,949 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(8)), (np.int64(8), np.int64(12)))
2025-04-11 20:15:17,950 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:18,105 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:18,105 [DEBUG] MCTS iteration 14: Rollout reward: 0.
2025-04-11 20:15:18,106 [DEBUG] MCTS iteration 14: Backed up Finish.
2025-04-11 20:15:18,113 [INFO] Final candidates: []
2025-04-11 20:15:18,113 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:18,120 [INFO] Final candidates: []
2025-04-11 20:15:18,120 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:18,120 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(12)), (np.int64(11), np.int64(10)))
2025-04-11 20:15:18,121 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:18,371 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:18,371 [DEBUG] MCTS iteration 15: Rollout reward: 0.
2025-04-11 20:15:18,371 [DEBUG] MCTS iteration 15: Backed up Finish.
2025-04-11 20:15:18,381 [INFO] Final candidates: []
2025-04-11 20:15:18,381 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:18,388 [INFO] Final candidates: []
2025-04-11 20:15:18,388 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:18,389 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(10)), (np.int64(10), np.int64(14)))
2025-04-11 20:15:18,392 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:18,514 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:18,514 [DEBUG] MCTS iteration 16: Rollout reward: 0.
2025-04-11 20:15:18,514 [DEBUG] MCTS iteration 16: Backed up Finish.
2025-04-11 20:15:18,522 [INFO] Final candidates: []
2025-04-11 20:15:18,522 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:18,529 [INFO] Final candidates: []
2025-04-11 20:15:18,529 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:18,529 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(12)), (np.int64(18), np.int64(2)))
2025-04-11 20:15:18,530 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:18,613 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:18,614 [DEBUG] MCTS iteration 17: Rollout reward: 1.
2025-04-11 20:15:18,614 [DEBUG] MCTS iteration 17: Backed up Finish.
2025-04-11 20:15:18,621 [INFO] Final candidates: []
2025-04-11 20:15:18,621 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:18,629 [INFO] Final candidates: []
2025-04-11 20:15:18,629 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:18,629 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(6)), (np.int64(6), np.int64(9)))
2025-04-11 20:15:18,630 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:18,684 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:18,684 [DEBUG] MCTS iteration 18: Rollout reward: 1.
2025-04-11 20:15:18,684 [DEBUG] MCTS iteration 18: Backed up Finish.
2025-04-11 20:15:18,693 [INFO] Final candidates: []
2025-04-11 20:15:18,693 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:18,700 [INFO] Final candidates: []
2025-04-11 20:15:18,701 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:18,701 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(8)), (np.int64(5), np.int64(17)))
2025-04-11 20:15:18,701 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:18,846 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:18,846 [DEBUG] MCTS iteration 19: Rollout reward: 0.
2025-04-11 20:15:18,846 [DEBUG] MCTS iteration 19: Backed up Finish.
2025-04-11 20:15:18,854 [INFO] Final candidates: []
2025-04-11 20:15:18,854 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:18,861 [INFO] Final candidates: []
2025-04-11 20:15:18,861 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:18,861 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(2), np.int64(14)), (np.int64(10), np.int64(13)))
2025-04-11 20:15:18,862 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:19,068 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:19,068 [DEBUG] MCTS iteration 20: Rollout reward: 1.
2025-04-11 20:15:19,068 [DEBUG] MCTS iteration 20: Backed up Finish.
2025-04-11 20:15:19,076 [INFO] Final candidates: []
2025-04-11 20:15:19,076 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:19,083 [INFO] Final candidates: []
2025-04-11 20:15:19,083 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:19,083 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(8)), (np.int64(13), np.int64(7)))
2025-04-11 20:15:19,084 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:19,179 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:19,179 [DEBUG] MCTS iteration 21: Rollout reward: 1.
2025-04-11 20:15:19,179 [DEBUG] MCTS iteration 21: Backed up Finish.
2025-04-11 20:15:19,186 [INFO] Final candidates: []
2025-04-11 20:15:19,186 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:19,194 [INFO] Final candidates: []
2025-04-11 20:15:19,194 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:19,194 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(15)), (np.int64(7), np.int64(6)))
2025-04-11 20:15:19,195 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:19,291 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:19,291 [DEBUG] MCTS iteration 22: Rollout reward: 1.
2025-04-11 20:15:19,291 [DEBUG] MCTS iteration 22: Backed up Finish.
2025-04-11 20:15:19,299 [INFO] Final candidates: []
2025-04-11 20:15:19,299 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:19,306 [INFO] Final candidates: []
2025-04-11 20:15:19,306 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:19,306 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(0)), (np.int64(11), np.int64(8)))
2025-04-11 20:15:19,307 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:19,407 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:19,407 [DEBUG] MCTS iteration 23: Rollout reward: 1.
2025-04-11 20:15:19,407 [DEBUG] MCTS iteration 23: Backed up Finish.
2025-04-11 20:15:19,414 [INFO] Final candidates: []
2025-04-11 20:15:19,414 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:19,422 [INFO] Final candidates: []
2025-04-11 20:15:19,422 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:19,422 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(18), np.int64(1)), (np.int64(6), np.int64(13)))
2025-04-11 20:15:19,423 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:19,593 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:19,593 [DEBUG] MCTS iteration 24: Rollout reward: 1.
2025-04-11 20:15:19,593 [DEBUG] MCTS iteration 24: Backed up Finish.
2025-04-11 20:15:19,600 [INFO] Final candidates: []
2025-04-11 20:15:19,600 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:19,608 [INFO] Final candidates: []
2025-04-11 20:15:19,608 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:19,608 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(6)), (np.int64(10), np.int64(13)))
2025-04-11 20:15:19,609 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:19,790 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:19,790 [DEBUG] MCTS iteration 25: Rollout reward: 1.
2025-04-11 20:15:19,790 [DEBUG] MCTS iteration 25: Backed up Finish.
2025-04-11 20:15:19,798 [INFO] Final candidates: []
2025-04-11 20:15:19,798 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:19,805 [INFO] Final candidates: []
2025-04-11 20:15:19,805 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:19,805 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(6)), (np.int64(8), np.int64(6)))
2025-04-11 20:15:19,806 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:19,971 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:19,972 [DEBUG] MCTS iteration 26: Rollout reward: 1.
2025-04-11 20:15:19,972 [DEBUG] MCTS iteration 26: Backed up Finish.
2025-04-11 20:15:19,979 [INFO] Final candidates: []
2025-04-11 20:15:19,979 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:19,986 [INFO] Final candidates: []
2025-04-11 20:15:19,986 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:19,987 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(10)), (np.int64(11), np.int64(12)))
2025-04-11 20:15:19,987 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:20,242 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:20,242 [DEBUG] MCTS iteration 27: Rollout reward: 0.
2025-04-11 20:15:20,242 [DEBUG] MCTS iteration 27: Backed up Finish.
2025-04-11 20:15:20,249 [INFO] Final candidates: []
2025-04-11 20:15:20,249 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:20,257 [INFO] Final candidates: []
2025-04-11 20:15:20,257 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:20,257 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(9)), (np.int64(8), np.int64(5)))
2025-04-11 20:15:20,258 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:20,393 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:20,393 [DEBUG] MCTS iteration 28: Rollout reward: 1.
2025-04-11 20:15:20,393 [DEBUG] MCTS iteration 28: Backed up Finish.
2025-04-11 20:15:20,400 [INFO] Final candidates: []
2025-04-11 20:15:20,400 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:20,408 [INFO] Final candidates: []
2025-04-11 20:15:20,408 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:20,408 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(6)), (np.int64(13), np.int64(15)))
2025-04-11 20:15:20,409 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:20,603 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:20,603 [DEBUG] MCTS iteration 29: Rollout reward: 0.
2025-04-11 20:15:20,603 [DEBUG] MCTS iteration 29: Backed up Finish.
2025-04-11 20:15:20,611 [INFO] Final candidates: []
2025-04-11 20:15:20,611 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:20,618 [INFO] Final candidates: []
2025-04-11 20:15:20,618 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:20,618 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(8)), (np.int64(5), np.int64(9)))
2025-04-11 20:15:20,619 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:20,849 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:20,849 [DEBUG] MCTS iteration 30: Rollout reward: 0.
2025-04-11 20:15:20,849 [DEBUG] MCTS iteration 30: Backed up Finish.
2025-04-11 20:15:20,857 [INFO] Final candidates: []
2025-04-11 20:15:20,857 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:20,865 [INFO] Final candidates: []
2025-04-11 20:15:20,865 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:20,865 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(14)), (np.int64(6), np.int64(16)))
2025-04-11 20:15:20,866 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:21,020 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:21,020 [DEBUG] MCTS iteration 31: Rollout reward: 0.
2025-04-11 20:15:21,020 [DEBUG] MCTS iteration 31: Backed up Finish.
2025-04-11 20:15:21,028 [INFO] Final candidates: []
2025-04-11 20:15:21,028 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:21,035 [INFO] Final candidates: []
2025-04-11 20:15:21,035 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:21,035 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(7)), (np.int64(17), np.int64(9)))
2025-04-11 20:15:21,036 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:21,120 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:21,120 [DEBUG] MCTS iteration 32: Rollout reward: 1.
2025-04-11 20:15:21,120 [DEBUG] MCTS iteration 32: Backed up Finish.
2025-04-11 20:15:21,128 [INFO] Final candidates: []
2025-04-11 20:15:21,128 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:21,136 [INFO] Final candidates: []
2025-04-11 20:15:21,136 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:21,136 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(8)), (np.int64(6), np.int64(14)))
2025-04-11 20:15:21,136 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:21,413 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:21,413 [DEBUG] MCTS iteration 33: Rollout reward: 1.
2025-04-11 20:15:21,413 [DEBUG] MCTS iteration 33: Backed up Finish.
2025-04-11 20:15:21,420 [INFO] Final candidates: []
2025-04-11 20:15:21,420 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:21,427 [INFO] Final candidates: []
2025-04-11 20:15:21,427 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:21,427 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(0)), (np.int64(12), np.int64(9)))
2025-04-11 20:15:21,428 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:21,574 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:21,574 [DEBUG] MCTS iteration 34: Rollout reward: 1.
2025-04-11 20:15:21,574 [DEBUG] MCTS iteration 34: Backed up Finish.
2025-04-11 20:15:21,581 [INFO] Final candidates: []
2025-04-11 20:15:21,581 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:21,589 [INFO] Final candidates: []
2025-04-11 20:15:21,589 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:21,589 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(7)), (np.int64(11), np.int64(10)))
2025-04-11 20:15:21,590 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:21,763 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:21,763 [DEBUG] MCTS iteration 35: Rollout reward: 1.
2025-04-11 20:15:21,763 [DEBUG] MCTS iteration 35: Backed up Finish.
2025-04-11 20:15:21,770 [INFO] Final candidates: []
2025-04-11 20:15:21,770 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:21,778 [INFO] Final candidates: []
2025-04-11 20:15:21,778 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:21,778 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(15)), (np.int64(14), np.int64(11)))
2025-04-11 20:15:21,779 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:21,846 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:21,847 [DEBUG] MCTS iteration 36: Rollout reward: 0.
2025-04-11 20:15:21,847 [DEBUG] MCTS iteration 36: Backed up Finish.
2025-04-11 20:15:21,856 [INFO] Final candidates: []
2025-04-11 20:15:21,856 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:21,863 [INFO] Final candidates: []
2025-04-11 20:15:21,863 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:21,863 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(14)), (np.int64(7), np.int64(8)))
2025-04-11 20:15:21,864 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:21,953 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:21,953 [DEBUG] MCTS iteration 37: Rollout reward: 1.
2025-04-11 20:15:21,954 [DEBUG] MCTS iteration 37: Backed up Finish.
2025-04-11 20:15:21,961 [INFO] Final candidates: []
2025-04-11 20:15:21,961 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:21,968 [INFO] Final candidates: []
2025-04-11 20:15:21,968 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:21,968 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(3), np.int64(17)), (np.int64(5), np.int64(14)))
2025-04-11 20:15:21,969 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:22,097 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:22,097 [DEBUG] MCTS iteration 38: Rollout reward: 1.
2025-04-11 20:15:22,097 [DEBUG] MCTS iteration 38: Backed up Finish.
2025-04-11 20:15:22,105 [INFO] Final candidates: []
2025-04-11 20:15:22,105 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:22,115 [INFO] Final candidates: []
2025-04-11 20:15:22,115 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:22,115 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(17), np.int64(9)), (np.int64(11), np.int64(15)))
2025-04-11 20:15:22,116 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:22,295 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:22,295 [DEBUG] MCTS iteration 39: Rollout reward: 1.
2025-04-11 20:15:22,295 [DEBUG] MCTS iteration 39: Backed up Finish.
2025-04-11 20:15:22,303 [INFO] Final candidates: []
2025-04-11 20:15:22,303 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:22,310 [INFO] Final candidates: []
2025-04-11 20:15:22,310 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:22,310 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(18)), (np.int64(7), np.int64(6)))
2025-04-11 20:15:22,311 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:22,395 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:22,395 [DEBUG] MCTS iteration 40: Rollout reward: 1.
2025-04-11 20:15:22,395 [DEBUG] MCTS iteration 40: Backed up Finish.
2025-04-11 20:15:22,403 [INFO] Final candidates: []
2025-04-11 20:15:22,403 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:22,410 [INFO] Final candidates: []
2025-04-11 20:15:22,410 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:22,410 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(8)), (np.int64(14), np.int64(11)))
2025-04-11 20:15:22,411 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:22,772 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:22,772 [DEBUG] MCTS iteration 41: Rollout reward: 0.
2025-04-11 20:15:22,772 [DEBUG] MCTS iteration 41: Backed up Finish.
2025-04-11 20:15:22,780 [INFO] Final candidates: []
2025-04-11 20:15:22,780 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:22,787 [INFO] Final candidates: []
2025-04-11 20:15:22,787 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:22,787 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(11)), (np.int64(6), np.int64(7)))
2025-04-11 20:15:22,788 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:22,933 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:22,933 [DEBUG] MCTS iteration 42: Rollout reward: 1.
2025-04-11 20:15:22,933 [DEBUG] MCTS iteration 42: Backed up Finish.
2025-04-11 20:15:22,940 [INFO] Final candidates: []
2025-04-11 20:15:22,940 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:22,948 [INFO] Final candidates: []
2025-04-11 20:15:22,948 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:22,948 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(8)), (np.int64(9), np.int64(6)))
2025-04-11 20:15:22,949 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:23,251 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:23,251 [DEBUG] MCTS iteration 43: Rollout reward: 1.
2025-04-11 20:15:23,251 [DEBUG] MCTS iteration 43: Backed up Finish.
2025-04-11 20:15:23,258 [INFO] Final candidates: []
2025-04-11 20:15:23,258 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:23,266 [INFO] Final candidates: []
2025-04-11 20:15:23,266 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:23,266 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(11)), (np.int64(5), np.int64(11)))
2025-04-11 20:15:23,266 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:23,376 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:23,376 [DEBUG] MCTS iteration 44: Rollout reward: 1.
2025-04-11 20:15:23,376 [DEBUG] MCTS iteration 44: Backed up Finish.
2025-04-11 20:15:23,383 [INFO] Final candidates: []
2025-04-11 20:15:23,383 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:23,391 [INFO] Final candidates: []
2025-04-11 20:15:23,391 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:23,391 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(18)), (np.int64(8), np.int64(5)))
2025-04-11 20:15:23,392 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:23,569 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:23,569 [DEBUG] MCTS iteration 45: Rollout reward: 1.
2025-04-11 20:15:23,569 [DEBUG] MCTS iteration 45: Backed up Finish.
2025-04-11 20:15:23,576 [INFO] Final candidates: []
2025-04-11 20:15:23,576 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:23,584 [INFO] Final candidates: []
2025-04-11 20:15:23,584 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:23,584 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(7)), (np.int64(4), np.int64(13)))
2025-04-11 20:15:23,585 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:23,625 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:23,626 [DEBUG] MCTS iteration 46: Rollout reward: 0.
2025-04-11 20:15:23,626 [DEBUG] MCTS iteration 46: Backed up Finish.
2025-04-11 20:15:23,634 [INFO] Final candidates: []
2025-04-11 20:15:23,634 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:23,642 [INFO] Final candidates: []
2025-04-11 20:15:23,642 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:23,642 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(9)), (np.int64(10), np.int64(7)))
2025-04-11 20:15:23,642 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:23,731 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:23,731 [DEBUG] MCTS iteration 47: Rollout reward: 1.
2025-04-11 20:15:23,731 [DEBUG] MCTS iteration 47: Backed up Finish.
2025-04-11 20:15:23,738 [INFO] Final candidates: []
2025-04-11 20:15:23,738 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:23,746 [INFO] Final candidates: []
2025-04-11 20:15:23,746 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:23,746 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(14)), (np.int64(15), np.int64(6)))
2025-04-11 20:15:23,747 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:23,813 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:23,813 [DEBUG] MCTS iteration 48: Rollout reward: 1.
2025-04-11 20:15:23,813 [DEBUG] MCTS iteration 48: Backed up Finish.
2025-04-11 20:15:23,822 [INFO] Final candidates: []
2025-04-11 20:15:23,822 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:23,830 [INFO] Final candidates: []
2025-04-11 20:15:23,830 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:23,830 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(11)), (np.int64(12), np.int64(9)))
2025-04-11 20:15:23,831 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:24,015 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:24,015 [DEBUG] MCTS iteration 49: Rollout reward: 0.
2025-04-11 20:15:24,016 [DEBUG] MCTS iteration 49: Backed up Finish.
2025-04-11 20:15:24,023 [INFO] Final candidates: []
2025-04-11 20:15:24,023 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:24,030 [INFO] Final candidates: []
2025-04-11 20:15:24,030 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:24,030 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(10)), (np.int64(16), np.int64(8)))
2025-04-11 20:15:24,031 [DEBUG] MCTS iteration 50: reached a node with 0 visits.
2025-04-11 20:15:24,031 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:24,048 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:24,049 [DEBUG] MCTS iteration 50: Rollout reward: 1.
2025-04-11 20:15:24,049 [DEBUG] MCTS iteration 50: Backed up Finish.
2025-04-11 20:15:24,056 [INFO] Final candidates: []
2025-04-11 20:15:24,056 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:24,065 [INFO] Final candidates: []
2025-04-11 20:15:24,065 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:24,065 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(18), np.int64(1)), (np.int64(16), np.int64(0)))
2025-04-11 20:15:24,066 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:24,171 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:24,171 [DEBUG] MCTS iteration 51: Rollout reward: 0.
2025-04-11 20:15:24,171 [DEBUG] MCTS iteration 51: Backed up Finish.
2025-04-11 20:15:24,179 [INFO] Final candidates: []
2025-04-11 20:15:24,179 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:24,186 [INFO] Final candidates: []
2025-04-11 20:15:24,186 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:24,186 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(11)), (np.int64(8), np.int64(14)))
2025-04-11 20:15:24,187 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:24,365 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:24,365 [DEBUG] MCTS iteration 52: Rollout reward: 1.
2025-04-11 20:15:24,365 [DEBUG] MCTS iteration 52: Backed up Finish.
2025-04-11 20:15:24,373 [INFO] Final candidates: []
2025-04-11 20:15:24,373 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:24,381 [INFO] Final candidates: []
2025-04-11 20:15:24,381 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:24,381 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(5)), (np.int64(7), np.int64(13)))
2025-04-11 20:15:24,381 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:24,460 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:24,460 [DEBUG] MCTS iteration 53: Rollout reward: 1.
2025-04-11 20:15:24,460 [DEBUG] MCTS iteration 53: Backed up Finish.
2025-04-11 20:15:24,468 [INFO] Final candidates: []
2025-04-11 20:15:24,468 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:24,475 [INFO] Final candidates: []
2025-04-11 20:15:24,475 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:24,475 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(6)), (np.int64(5), np.int64(9)))
2025-04-11 20:15:24,476 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:24,571 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:24,572 [DEBUG] MCTS iteration 54: Rollout reward: 1.
2025-04-11 20:15:24,572 [DEBUG] MCTS iteration 54: Backed up Finish.
2025-04-11 20:15:24,579 [INFO] Final candidates: []
2025-04-11 20:15:24,579 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:24,586 [INFO] Final candidates: []
2025-04-11 20:15:24,586 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:24,586 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(3), np.int64(13)), (np.int64(15), np.int64(0)))
2025-04-11 20:15:24,587 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:24,744 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:24,744 [DEBUG] MCTS iteration 55: Rollout reward: 1.
2025-04-11 20:15:24,744 [DEBUG] MCTS iteration 55: Backed up Finish.
2025-04-11 20:15:24,751 [INFO] Final candidates: []
2025-04-11 20:15:24,751 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:24,759 [INFO] Final candidates: []
2025-04-11 20:15:24,759 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:24,759 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(13)), (np.int64(15), np.int64(13)))
2025-04-11 20:15:24,760 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:24,979 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:24,979 [DEBUG] MCTS iteration 56: Rollout reward: 0.
2025-04-11 20:15:24,979 [DEBUG] MCTS iteration 56: Backed up Finish.
2025-04-11 20:15:24,987 [INFO] Final candidates: []
2025-04-11 20:15:24,987 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:24,994 [INFO] Final candidates: []
2025-04-11 20:15:24,994 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:24,994 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(12)), (np.int64(12), np.int64(14)))
2025-04-11 20:15:24,995 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:25,241 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:25,241 [DEBUG] MCTS iteration 57: Rollout reward: 1.
2025-04-11 20:15:25,242 [DEBUG] MCTS iteration 57: Backed up Finish.
2025-04-11 20:15:25,249 [INFO] Final candidates: []
2025-04-11 20:15:25,249 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:25,256 [INFO] Final candidates: []
2025-04-11 20:15:25,256 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:25,256 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(14)), (np.int64(7), np.int64(6)))
2025-04-11 20:15:25,257 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:25,469 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:25,470 [DEBUG] MCTS iteration 58: Rollout reward: 0.
2025-04-11 20:15:25,470 [DEBUG] MCTS iteration 58: Backed up Finish.
2025-04-11 20:15:25,477 [INFO] Final candidates: []
2025-04-11 20:15:25,477 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:25,485 [INFO] Final candidates: []
2025-04-11 20:15:25,485 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:25,485 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(3), np.int64(17)), (np.int64(8), np.int64(5)))
2025-04-11 20:15:25,486 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:25,604 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:25,604 [DEBUG] MCTS iteration 59: Rollout reward: 0.
2025-04-11 20:15:25,604 [DEBUG] MCTS iteration 59: Backed up Finish.
2025-04-11 20:15:25,611 [INFO] Final candidates: []
2025-04-11 20:15:25,611 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:25,619 [INFO] Final candidates: []
2025-04-11 20:15:25,619 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:25,619 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(16)), (np.int64(4), np.int64(10)))
2025-04-11 20:15:25,619 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:25,821 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:25,821 [DEBUG] MCTS iteration 60: Rollout reward: 1.
2025-04-11 20:15:25,821 [DEBUG] MCTS iteration 60: Backed up Finish.
2025-04-11 20:15:25,828 [INFO] Final candidates: []
2025-04-11 20:15:25,828 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:25,835 [INFO] Final candidates: []
2025-04-11 20:15:25,835 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:25,835 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(15)), (np.int64(11), np.int64(15)))
2025-04-11 20:15:25,836 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:25,963 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:25,963 [DEBUG] MCTS iteration 61: Rollout reward: 0.
2025-04-11 20:15:25,963 [DEBUG] MCTS iteration 61: Backed up Finish.
2025-04-11 20:15:25,971 [INFO] Final candidates: []
2025-04-11 20:15:25,971 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:25,978 [INFO] Final candidates: []
2025-04-11 20:15:25,978 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:25,978 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(13)), (np.int64(10), np.int64(11)))
2025-04-11 20:15:25,979 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:26,084 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:26,084 [DEBUG] MCTS iteration 62: Rollout reward: 1.
2025-04-11 20:15:26,084 [DEBUG] MCTS iteration 62: Backed up Finish.
2025-04-11 20:15:26,091 [INFO] Final candidates: []
2025-04-11 20:15:26,091 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:26,098 [INFO] Final candidates: []
2025-04-11 20:15:26,098 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:26,099 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(9)), (np.int64(16), np.int64(7)))
2025-04-11 20:15:26,099 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:26,164 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:26,164 [DEBUG] MCTS iteration 63: Rollout reward: 0.
2025-04-11 20:15:26,164 [DEBUG] MCTS iteration 63: Backed up Finish.
2025-04-11 20:15:26,171 [INFO] Final candidates: []
2025-04-11 20:15:26,171 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:26,179 [INFO] Final candidates: []
2025-04-11 20:15:26,179 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:26,179 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(14)), (np.int64(9), np.int64(6)))
2025-04-11 20:15:26,180 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:26,360 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:26,360 [DEBUG] MCTS iteration 64: Rollout reward: 0.
2025-04-11 20:15:26,360 [DEBUG] MCTS iteration 64: Backed up Finish.
2025-04-11 20:15:26,367 [INFO] Final candidates: []
2025-04-11 20:15:26,367 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:26,375 [INFO] Final candidates: []
2025-04-11 20:15:26,375 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:26,375 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(15)), (np.int64(11), np.int64(10)))
2025-04-11 20:15:26,376 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:26,537 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:26,537 [DEBUG] MCTS iteration 65: Rollout reward: 0.
2025-04-11 20:15:26,537 [DEBUG] MCTS iteration 65: Backed up Finish.
2025-04-11 20:15:26,544 [INFO] Final candidates: []
2025-04-11 20:15:26,544 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:26,552 [INFO] Final candidates: []
2025-04-11 20:15:26,552 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:26,552 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(3), np.int64(17)), (np.int64(13), np.int64(12)))
2025-04-11 20:15:26,553 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:26,697 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:26,697 [DEBUG] MCTS iteration 66: Rollout reward: 1.
2025-04-11 20:15:26,698 [DEBUG] MCTS iteration 66: Backed up Finish.
2025-04-11 20:15:26,705 [INFO] Final candidates: []
2025-04-11 20:15:26,705 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:26,714 [INFO] Final candidates: []
2025-04-11 20:15:26,714 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:26,715 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(13)), (np.int64(6), np.int64(14)))
2025-04-11 20:15:26,715 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:26,774 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:26,774 [DEBUG] MCTS iteration 67: Rollout reward: 1.
2025-04-11 20:15:26,774 [DEBUG] MCTS iteration 67: Backed up Finish.
2025-04-11 20:15:26,781 [INFO] Final candidates: []
2025-04-11 20:15:26,782 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:26,789 [INFO] Final candidates: []
2025-04-11 20:15:26,789 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:26,789 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(13)), (np.int64(10), np.int64(11)))
2025-04-11 20:15:26,790 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:26,868 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:26,868 [DEBUG] MCTS iteration 68: Rollout reward: 1.
2025-04-11 20:15:26,868 [DEBUG] MCTS iteration 68: Backed up Finish.
2025-04-11 20:15:26,876 [INFO] Final candidates: []
2025-04-11 20:15:26,876 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:26,883 [INFO] Final candidates: []
2025-04-11 20:15:26,883 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:26,883 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(18)), (np.int64(17), np.int64(2)))
2025-04-11 20:15:26,884 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:26,962 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:26,962 [DEBUG] MCTS iteration 69: Rollout reward: 1.
2025-04-11 20:15:26,962 [DEBUG] MCTS iteration 69: Backed up Finish.
2025-04-11 20:15:26,970 [INFO] Final candidates: []
2025-04-11 20:15:26,970 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:26,977 [INFO] Final candidates: []
2025-04-11 20:15:26,977 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:26,977 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(1)), (np.int64(2), np.int64(16)))
2025-04-11 20:15:26,978 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:27,172 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:27,172 [DEBUG] MCTS iteration 70: Rollout reward: 1.
2025-04-11 20:15:27,172 [DEBUG] MCTS iteration 70: Backed up Finish.
2025-04-11 20:15:27,180 [INFO] Final candidates: []
2025-04-11 20:15:27,180 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:27,187 [INFO] Final candidates: []
2025-04-11 20:15:27,187 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:27,187 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(14)), (np.int64(6), np.int64(9)))
2025-04-11 20:15:27,188 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:27,257 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:27,257 [DEBUG] MCTS iteration 71: Rollout reward: 1.
2025-04-11 20:15:27,257 [DEBUG] MCTS iteration 71: Backed up Finish.
2025-04-11 20:15:27,264 [INFO] Final candidates: []
2025-04-11 20:15:27,264 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:27,271 [INFO] Final candidates: []
2025-04-11 20:15:27,271 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:27,271 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(5)), (np.int64(12), np.int64(11)))
2025-04-11 20:15:27,272 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:27,546 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:27,546 [DEBUG] MCTS iteration 72: Rollout reward: 0.
2025-04-11 20:15:27,546 [DEBUG] MCTS iteration 72: Backed up Finish.
2025-04-11 20:15:27,554 [INFO] Final candidates: []
2025-04-11 20:15:27,554 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:27,561 [INFO] Final candidates: []
2025-04-11 20:15:27,561 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:27,561 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(0)), (np.int64(2), np.int64(14)))
2025-04-11 20:15:27,562 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:27,830 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:27,830 [DEBUG] MCTS iteration 73: Rollout reward: 1.
2025-04-11 20:15:27,830 [DEBUG] MCTS iteration 73: Backed up Finish.
2025-04-11 20:15:27,838 [INFO] Final candidates: []
2025-04-11 20:15:27,838 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:27,845 [INFO] Final candidates: []
2025-04-11 20:15:27,845 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:27,845 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(6)), (np.int64(14), np.int64(10)))
2025-04-11 20:15:27,846 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:27,992 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:27,993 [DEBUG] MCTS iteration 74: Rollout reward: 1.
2025-04-11 20:15:27,993 [DEBUG] MCTS iteration 74: Backed up Finish.
2025-04-11 20:15:28,000 [INFO] Final candidates: []
2025-04-11 20:15:28,000 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:28,007 [INFO] Final candidates: []
2025-04-11 20:15:28,007 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:28,007 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(8)), (np.int64(16), np.int64(9)))
2025-04-11 20:15:28,008 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:28,160 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:28,160 [DEBUG] MCTS iteration 75: Rollout reward: 1.
2025-04-11 20:15:28,160 [DEBUG] MCTS iteration 75: Backed up Finish.
2025-04-11 20:15:28,168 [INFO] Final candidates: []
2025-04-11 20:15:28,168 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:28,175 [INFO] Final candidates: []
2025-04-11 20:15:28,175 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:28,175 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(18), np.int64(1)), (np.int64(14), np.int64(14)))
2025-04-11 20:15:28,176 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:28,425 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:28,425 [DEBUG] MCTS iteration 76: Rollout reward: 0.
2025-04-11 20:15:28,425 [DEBUG] MCTS iteration 76: Backed up Finish.
2025-04-11 20:15:28,432 [INFO] Final candidates: []
2025-04-11 20:15:28,433 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:28,440 [INFO] Final candidates: []
2025-04-11 20:15:28,440 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:28,440 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(11)), (np.int64(17), np.int64(10)))
2025-04-11 20:15:28,441 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:28,642 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:28,642 [DEBUG] MCTS iteration 77: Rollout reward: 1.
2025-04-11 20:15:28,642 [DEBUG] MCTS iteration 77: Backed up Finish.
2025-04-11 20:15:28,649 [INFO] Final candidates: []
2025-04-11 20:15:28,649 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:28,657 [INFO] Final candidates: []
2025-04-11 20:15:28,657 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:28,657 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(0)), (np.int64(10), np.int64(11)))
2025-04-11 20:15:28,658 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:28,742 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:28,742 [DEBUG] MCTS iteration 78: Rollout reward: 0.
2025-04-11 20:15:28,742 [DEBUG] MCTS iteration 78: Backed up Finish.
2025-04-11 20:15:28,750 [INFO] Final candidates: []
2025-04-11 20:15:28,750 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:28,757 [INFO] Final candidates: []
2025-04-11 20:15:28,757 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:28,757 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(14)), (np.int64(10), np.int64(7)))
2025-04-11 20:15:28,758 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:29,000 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:29,000 [DEBUG] MCTS iteration 79: Rollout reward: 1.
2025-04-11 20:15:29,000 [DEBUG] MCTS iteration 79: Backed up Finish.
2025-04-11 20:15:29,007 [INFO] Final candidates: []
2025-04-11 20:15:29,007 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:29,015 [INFO] Final candidates: []
2025-04-11 20:15:29,015 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:29,015 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(12)), (np.int64(13), np.int64(11)))
2025-04-11 20:15:29,016 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:29,069 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:29,069 [DEBUG] MCTS iteration 80: Rollout reward: 1.
2025-04-11 20:15:29,069 [DEBUG] MCTS iteration 80: Backed up Finish.
2025-04-11 20:15:29,077 [INFO] Final candidates: []
2025-04-11 20:15:29,077 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:29,084 [INFO] Final candidates: []
2025-04-11 20:15:29,084 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:29,084 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(18), np.int64(1)), (np.int64(4), np.int64(12)))
2025-04-11 20:15:29,085 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:29,173 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:29,174 [DEBUG] MCTS iteration 81: Rollout reward: 1.
2025-04-11 20:15:29,174 [DEBUG] MCTS iteration 81: Backed up Finish.
2025-04-11 20:15:29,181 [INFO] Final candidates: []
2025-04-11 20:15:29,181 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:29,188 [INFO] Final candidates: []
2025-04-11 20:15:29,189 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:29,189 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(12)), (np.int64(7), np.int64(6)))
2025-04-11 20:15:29,189 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:29,468 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:29,469 [DEBUG] MCTS iteration 82: Rollout reward: 1.
2025-04-11 20:15:29,469 [DEBUG] MCTS iteration 82: Backed up Finish.
2025-04-11 20:15:29,476 [INFO] Final candidates: []
2025-04-11 20:15:29,476 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:29,483 [INFO] Final candidates: []
2025-04-11 20:15:29,484 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:29,484 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(14)), (np.int64(12), np.int64(10)))
2025-04-11 20:15:29,484 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:29,556 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:29,556 [DEBUG] MCTS iteration 83: Rollout reward: 0.
2025-04-11 20:15:29,556 [DEBUG] MCTS iteration 83: Backed up Finish.
2025-04-11 20:15:29,563 [INFO] Final candidates: []
2025-04-11 20:15:29,563 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:29,571 [INFO] Final candidates: []
2025-04-11 20:15:29,571 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:29,571 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(7)), (np.int64(15), np.int64(0)))
2025-04-11 20:15:29,572 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:29,832 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:29,832 [DEBUG] MCTS iteration 84: Rollout reward: 0.
2025-04-11 20:15:29,832 [DEBUG] MCTS iteration 84: Backed up Finish.
2025-04-11 20:15:29,839 [INFO] Final candidates: []
2025-04-11 20:15:29,839 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:29,847 [INFO] Final candidates: []
2025-04-11 20:15:29,847 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:29,847 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(3), np.int64(13)), (np.int64(4), np.int64(12)))
2025-04-11 20:15:29,847 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:29,951 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:29,952 [DEBUG] MCTS iteration 85: Rollout reward: 1.
2025-04-11 20:15:29,952 [DEBUG] MCTS iteration 85: Backed up Finish.
2025-04-11 20:15:29,959 [INFO] Final candidates: []
2025-04-11 20:15:29,959 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:29,967 [INFO] Final candidates: []
2025-04-11 20:15:29,967 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:29,967 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(15)), (np.int64(16), np.int64(0)))
2025-04-11 20:15:29,967 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:30,112 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:30,112 [DEBUG] MCTS iteration 86: Rollout reward: 1.
2025-04-11 20:15:30,112 [DEBUG] MCTS iteration 86: Backed up Finish.
2025-04-11 20:15:30,120 [INFO] Final candidates: []
2025-04-11 20:15:30,120 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:30,129 [INFO] Final candidates: []
2025-04-11 20:15:30,129 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:30,129 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(11)), (np.int64(9), np.int64(6)))
2025-04-11 20:15:30,130 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:30,335 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:30,335 [DEBUG] MCTS iteration 87: Rollout reward: 1.
2025-04-11 20:15:30,335 [DEBUG] MCTS iteration 87: Backed up Finish.
2025-04-11 20:15:30,342 [INFO] Final candidates: []
2025-04-11 20:15:30,342 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:30,350 [INFO] Final candidates: []
2025-04-11 20:15:30,350 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:30,350 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(8)), (np.int64(2), np.int64(14)))
2025-04-11 20:15:30,351 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:30,434 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:30,434 [DEBUG] MCTS iteration 88: Rollout reward: 1.
2025-04-11 20:15:30,434 [DEBUG] MCTS iteration 88: Backed up Finish.
2025-04-11 20:15:30,442 [INFO] Final candidates: []
2025-04-11 20:15:30,442 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:30,449 [INFO] Final candidates: []
2025-04-11 20:15:30,449 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:30,449 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(7)), (np.int64(7), np.int64(13)))
2025-04-11 20:15:30,450 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:30,689 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:30,689 [DEBUG] MCTS iteration 89: Rollout reward: 0.
2025-04-11 20:15:30,689 [DEBUG] MCTS iteration 89: Backed up Finish.
2025-04-11 20:15:30,696 [INFO] Final candidates: []
2025-04-11 20:15:30,696 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:30,704 [INFO] Final candidates: []
2025-04-11 20:15:30,704 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:30,704 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(3), np.int64(14)), (np.int64(11), np.int64(15)))
2025-04-11 20:15:30,705 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:30,976 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:30,976 [DEBUG] MCTS iteration 90: Rollout reward: 1.
2025-04-11 20:15:30,976 [DEBUG] MCTS iteration 90: Backed up Finish.
2025-04-11 20:15:30,983 [INFO] Final candidates: []
2025-04-11 20:15:30,983 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:30,991 [INFO] Final candidates: []
2025-04-11 20:15:30,991 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:30,991 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(8)), (np.int64(16), np.int64(0)))
2025-04-11 20:15:30,992 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:31,216 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:31,216 [DEBUG] MCTS iteration 91: Rollout reward: 0.
2025-04-11 20:15:31,216 [DEBUG] MCTS iteration 91: Backed up Finish.
2025-04-11 20:15:31,223 [INFO] Final candidates: []
2025-04-11 20:15:31,223 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:31,231 [INFO] Final candidates: []
2025-04-11 20:15:31,231 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:31,231 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(3), np.int64(16)), (np.int64(12), np.int64(14)))
2025-04-11 20:15:31,231 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:31,439 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:31,440 [DEBUG] MCTS iteration 92: Rollout reward: 0.
2025-04-11 20:15:31,440 [DEBUG] MCTS iteration 92: Backed up Finish.
2025-04-11 20:15:31,447 [INFO] Final candidates: []
2025-04-11 20:15:31,447 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:31,454 [INFO] Final candidates: []
2025-04-11 20:15:31,454 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:31,454 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(13)), (np.int64(16), np.int64(9)))
2025-04-11 20:15:31,455 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:31,538 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:31,539 [DEBUG] MCTS iteration 93: Rollout reward: 1.
2025-04-11 20:15:31,539 [DEBUG] MCTS iteration 93: Backed up Finish.
2025-04-11 20:15:31,546 [INFO] Final candidates: []
2025-04-11 20:15:31,546 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:31,554 [INFO] Final candidates: []
2025-04-11 20:15:31,554 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:31,554 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(10)), (np.int64(5), np.int64(7)))
2025-04-11 20:15:31,554 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:31,741 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:31,741 [DEBUG] MCTS iteration 94: Rollout reward: 0.
2025-04-11 20:15:31,741 [DEBUG] MCTS iteration 94: Backed up Finish.
2025-04-11 20:15:31,750 [INFO] Final candidates: []
2025-04-11 20:15:31,750 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:31,757 [INFO] Final candidates: []
2025-04-11 20:15:31,757 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:31,757 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(14)), (np.int64(8), np.int64(5)))
2025-04-11 20:15:31,758 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:31,896 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:31,897 [DEBUG] MCTS iteration 95: Rollout reward: 1.
2025-04-11 20:15:31,897 [DEBUG] MCTS iteration 95: Backed up Finish.
2025-04-11 20:15:31,904 [INFO] Final candidates: []
2025-04-11 20:15:31,904 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:31,912 [INFO] Final candidates: []
2025-04-11 20:15:31,912 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:31,912 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(9)), (np.int64(6), np.int64(14)))
2025-04-11 20:15:31,912 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:32,030 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:32,030 [DEBUG] MCTS iteration 96: Rollout reward: 1.
2025-04-11 20:15:32,030 [DEBUG] MCTS iteration 96: Backed up Finish.
2025-04-11 20:15:32,038 [INFO] Final candidates: []
2025-04-11 20:15:32,038 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:32,045 [INFO] Final candidates: []
2025-04-11 20:15:32,045 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:32,045 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(7)), (np.int64(11), np.int64(12)))
2025-04-11 20:15:32,046 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:32,315 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:32,315 [DEBUG] MCTS iteration 97: Rollout reward: 1.
2025-04-11 20:15:32,315 [DEBUG] MCTS iteration 97: Backed up Finish.
2025-04-11 20:15:32,323 [INFO] Final candidates: []
2025-04-11 20:15:32,323 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:32,330 [INFO] Final candidates: []
2025-04-11 20:15:32,330 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:32,331 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(12)), (np.int64(7), np.int64(13)))
2025-04-11 20:15:32,331 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:32,410 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:32,410 [DEBUG] MCTS iteration 98: Rollout reward: 0.
2025-04-11 20:15:32,410 [DEBUG] MCTS iteration 98: Backed up Finish.
2025-04-11 20:15:32,417 [INFO] Final candidates: []
2025-04-11 20:15:32,417 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:32,425 [INFO] Final candidates: []
2025-04-11 20:15:32,425 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:32,425 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(8)), (np.int64(10), np.int64(11)))
2025-04-11 20:15:32,426 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:32,514 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:32,514 [DEBUG] MCTS iteration 99: Rollout reward: 0.
2025-04-11 20:15:32,514 [DEBUG] MCTS iteration 99: Backed up Finish.
2025-04-11 20:15:32,514 [INFO] MCTS: Search completed after 100 iterations.
2025-04-11 20:15:32,514 [DEBUG] MCTS: BEST ((np.int64(15), np.int64(5)), (np.int64(12), np.int64(14))) with 1 visits.
2025-04-11 20:15:32,514 [INFO] MCTS: Search finished. Best move selected with 1 visits.
2025-04-11 20:15:32,514 [INFO] MCTS selected move: F16,P13
2025-04-11 20:15:32,514 [INFO] ===============NEW MOVE================
2025-04-11 20:15:51,889 [INFO] Starting pre-MCTS candidate collection.
2025-04-11 20:15:51,901 [INFO] Final candidates: []
2025-04-11 20:15:51,901 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:51,908 [DEBUG] board coords: [(8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)]
2025-04-11 20:15:51,908 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0), np.int64(2)]
2025-04-11 20:15:51,908 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 10), (12, 11)]
2025-04-11 20:15:51,908 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 0 0 2] with coords [(8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 20:15:51,908 [DEBUG] check_window_intermediate_custom: valid_move=[(11, 10), (12, 11)]
2025-04-11 20:15:51,908 [DEBUG] board coords: [(9, 8), (10, 9), (11, 10), (12, 11), (13, 12), (14, 13)]
2025-04-11 20:15:51,908 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 20:15:51,908 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 10), (12, 11)]
2025-04-11 20:15:51,909 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 0 2 2] with coords [(9, 8), (10, 9), (11, 10), (12, 11), (13, 12), (14, 13)] triggers candidate.
2025-04-11 20:15:51,909 [DEBUG] check_window_intermediate_custom: valid_move=[(11, 10), (12, 11)]
2025-04-11 20:15:51,911 [DEBUG] board coords: [(8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12), (14, 13)]
2025-04-11 20:15:51,911 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 20:15:51,911 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 10), (12, 11)]
2025-04-11 20:15:51,911 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 0 0 2 2] with coords [(8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12), (14, 13)] triggers candidate.
2025-04-11 20:15:51,911 [DEBUG] check_window_intermediate_custom: valid_move=[(11, 10), (12, 11)]
2025-04-11 20:15:51,915 [INFO] Final candidates: [(12, 11), (11, 10)]
2025-04-11 20:15:51,915 [INFO] Phase defense: Collected 1unique candidate(s):[((12, 11), (11, 10))]
2025-04-11 20:15:51,915 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 20:15:51,915 [INFO] MCTS: Starting search for 100 iterations.
2025-04-11 20:15:51,928 [INFO] Final candidates: []
2025-04-11 20:15:51,928 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:51,934 [DEBUG] board coords: [(8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)]
2025-04-11 20:15:51,934 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0), np.int64(2)]
2025-04-11 20:15:51,934 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 10), (12, 11)]
2025-04-11 20:15:51,934 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 0 0 2] with coords [(8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 20:15:51,934 [DEBUG] check_window_intermediate_custom: valid_move=[(11, 10), (12, 11)]
2025-04-11 20:15:51,934 [DEBUG] board coords: [(9, 8), (10, 9), (11, 10), (12, 11), (13, 12), (14, 13)]
2025-04-11 20:15:51,934 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 20:15:51,934 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 10), (12, 11)]
2025-04-11 20:15:51,934 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 0 2 2] with coords [(9, 8), (10, 9), (11, 10), (12, 11), (13, 12), (14, 13)] triggers candidate.
2025-04-11 20:15:51,934 [DEBUG] check_window_intermediate_custom: valid_move=[(11, 10), (12, 11)]
2025-04-11 20:15:51,935 [DEBUG] board coords: [(8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12), (14, 13)]
2025-04-11 20:15:51,935 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0), np.int64(2), np.int64(2)]
2025-04-11 20:15:51,935 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 10), (12, 11)]
2025-04-11 20:15:51,935 [DEBUG] check_window_intermediate_custom: For L=7, window [2 2 2 0 0 2 2] with coords [(8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12), (14, 13)] triggers candidate.
2025-04-11 20:15:51,935 [DEBUG] check_window_intermediate_custom: valid_move=[(11, 10), (12, 11)]
2025-04-11 20:15:51,937 [INFO] Final candidates: [(12, 11), (11, 10)]
2025-04-11 20:15:51,937 [INFO] Phase defense: Collected 1unique candidate(s):[((12, 11), (11, 10))]
2025-04-11 20:15:51,937 [DEBUG] Tree_policy iteration 1: Expanding move ((12, 11), (11, 10))
2025-04-11 20:15:51,938 [DEBUG] MCTS iteration 0: reached a node with 0 visits.
2025-04-11 20:15:51,938 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:52,235 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:52,235 [DEBUG] MCTS iteration 0: Rollout reward: 0.
2025-04-11 20:15:52,235 [DEBUG] MCTS iteration 0: Backed up Finish.
2025-04-11 20:15:52,235 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:52,242 [INFO] Final candidates: []
2025-04-11 20:15:52,242 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:52,250 [INFO] Final candidates: []
2025-04-11 20:15:52,250 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:52,250 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(6)), (np.int64(8), np.int64(5)))
2025-04-11 20:15:52,251 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:52,316 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:52,316 [DEBUG] MCTS iteration 1: Rollout reward: 1.
2025-04-11 20:15:52,316 [DEBUG] MCTS iteration 1: Backed up Finish.
2025-04-11 20:15:52,317 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:52,324 [INFO] Final candidates: []
2025-04-11 20:15:52,324 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:52,331 [INFO] Final candidates: []
2025-04-11 20:15:52,331 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:52,331 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(8)), (np.int64(9), np.int64(6)))
2025-04-11 20:15:52,332 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:52,544 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:52,545 [DEBUG] MCTS iteration 2: Rollout reward: 0.
2025-04-11 20:15:52,545 [DEBUG] MCTS iteration 2: Backed up Finish.
2025-04-11 20:15:52,545 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:52,552 [INFO] Final candidates: []
2025-04-11 20:15:52,552 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:52,560 [INFO] Final candidates: []
2025-04-11 20:15:52,560 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:52,560 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(10)), (np.int64(6), np.int64(16)))
2025-04-11 20:15:52,561 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:52,668 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:52,668 [DEBUG] MCTS iteration 3: Rollout reward: 0.
2025-04-11 20:15:52,668 [DEBUG] MCTS iteration 3: Backed up Finish.
2025-04-11 20:15:52,668 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:52,675 [INFO] Final candidates: []
2025-04-11 20:15:52,675 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:52,682 [INFO] Final candidates: []
2025-04-11 20:15:52,682 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:52,682 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(13)), (np.int64(5), np.int64(9)))
2025-04-11 20:15:52,683 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:52,856 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:52,857 [DEBUG] MCTS iteration 4: Rollout reward: 1.
2025-04-11 20:15:52,857 [DEBUG] MCTS iteration 4: Backed up Finish.
2025-04-11 20:15:52,857 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:52,864 [INFO] Final candidates: []
2025-04-11 20:15:52,864 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:52,871 [INFO] Final candidates: []
2025-04-11 20:15:52,871 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:52,871 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(7)), (np.int64(4), np.int64(13)))
2025-04-11 20:15:52,874 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:53,079 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:53,079 [DEBUG] MCTS iteration 5: Rollout reward: 1.
2025-04-11 20:15:53,079 [DEBUG] MCTS iteration 5: Backed up Finish.
2025-04-11 20:15:53,079 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:53,086 [INFO] Final candidates: []
2025-04-11 20:15:53,086 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:53,094 [INFO] Final candidates: []
2025-04-11 20:15:53,094 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:53,094 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(17), np.int64(9)), (np.int64(12), np.int64(16)))
2025-04-11 20:15:53,095 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:53,201 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:53,201 [DEBUG] MCTS iteration 6: Rollout reward: 1.
2025-04-11 20:15:53,201 [DEBUG] MCTS iteration 6: Backed up Finish.
2025-04-11 20:15:53,201 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:53,208 [INFO] Final candidates: []
2025-04-11 20:15:53,208 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:53,215 [INFO] Final candidates: []
2025-04-11 20:15:53,215 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:53,215 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(0)), (np.int64(7), np.int64(5)))
2025-04-11 20:15:53,216 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:53,358 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:53,358 [DEBUG] MCTS iteration 7: Rollout reward: 0.
2025-04-11 20:15:53,358 [DEBUG] MCTS iteration 7: Backed up Finish.
2025-04-11 20:15:53,358 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:53,365 [INFO] Final candidates: []
2025-04-11 20:15:53,365 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:53,372 [INFO] Final candidates: []
2025-04-11 20:15:53,372 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:53,373 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(17), np.int64(5)), (np.int64(2), np.int64(14)))
2025-04-11 20:15:53,373 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:53,516 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:53,516 [DEBUG] MCTS iteration 8: Rollout reward: 1.
2025-04-11 20:15:53,516 [DEBUG] MCTS iteration 8: Backed up Finish.
2025-04-11 20:15:53,516 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:53,523 [INFO] Final candidates: []
2025-04-11 20:15:53,523 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:53,530 [INFO] Final candidates: []
2025-04-11 20:15:53,530 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:53,530 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(18), np.int64(1)), (np.int64(16), np.int64(4)))
2025-04-11 20:15:53,531 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:53,602 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:53,603 [DEBUG] MCTS iteration 9: Rollout reward: 0.
2025-04-11 20:15:53,603 [DEBUG] MCTS iteration 9: Backed up Finish.
2025-04-11 20:15:53,603 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:53,610 [INFO] Final candidates: []
2025-04-11 20:15:53,610 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:53,617 [INFO] Final candidates: []
2025-04-11 20:15:53,617 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:53,617 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(11)), (np.int64(6), np.int64(16)))
2025-04-11 20:15:53,618 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:53,746 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:53,746 [DEBUG] MCTS iteration 10: Rollout reward: 1.
2025-04-11 20:15:53,746 [DEBUG] MCTS iteration 10: Backed up Finish.
2025-04-11 20:15:53,746 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:53,753 [INFO] Final candidates: []
2025-04-11 20:15:53,753 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:53,761 [INFO] Final candidates: []
2025-04-11 20:15:53,761 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:53,761 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(3), np.int64(14)), (np.int64(6), np.int64(8)))
2025-04-11 20:15:53,764 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:53,909 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:53,909 [DEBUG] MCTS iteration 11: Rollout reward: 0.
2025-04-11 20:15:53,909 [DEBUG] MCTS iteration 11: Backed up Finish.
2025-04-11 20:15:53,909 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:53,916 [INFO] Final candidates: []
2025-04-11 20:15:53,916 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:53,924 [INFO] Final candidates: []
2025-04-11 20:15:53,924 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:53,924 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(12)), (np.int64(16), np.int64(11)))
2025-04-11 20:15:53,925 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:54,072 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:54,072 [DEBUG] MCTS iteration 12: Rollout reward: 1.
2025-04-11 20:15:54,072 [DEBUG] MCTS iteration 12: Backed up Finish.
2025-04-11 20:15:54,072 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:54,079 [INFO] Final candidates: []
2025-04-11 20:15:54,079 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:54,086 [INFO] Final candidates: []
2025-04-11 20:15:54,086 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:54,086 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(4), np.int64(13)), (np.int64(13), np.int64(11)))
2025-04-11 20:15:54,087 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:54,148 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:54,148 [DEBUG] MCTS iteration 13: Rollout reward: 0.
2025-04-11 20:15:54,148 [DEBUG] MCTS iteration 13: Backed up Finish.
2025-04-11 20:15:54,149 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:54,155 [INFO] Final candidates: []
2025-04-11 20:15:54,155 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:54,163 [INFO] Final candidates: []
2025-04-11 20:15:54,163 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:54,163 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(13)), (np.int64(6), np.int64(13)))
2025-04-11 20:15:54,164 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:54,242 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:54,242 [DEBUG] MCTS iteration 14: Rollout reward: 0.
2025-04-11 20:15:54,242 [DEBUG] MCTS iteration 14: Backed up Finish.
2025-04-11 20:15:54,242 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:54,250 [INFO] Final candidates: []
2025-04-11 20:15:54,250 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:54,257 [INFO] Final candidates: []
2025-04-11 20:15:54,257 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:54,257 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(0)), (np.int64(14), np.int64(4)))
2025-04-11 20:15:54,258 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:54,403 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:54,403 [DEBUG] MCTS iteration 15: Rollout reward: 1.
2025-04-11 20:15:54,403 [DEBUG] MCTS iteration 15: Backed up Finish.
2025-04-11 20:15:54,403 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:54,410 [INFO] Final candidates: []
2025-04-11 20:15:54,410 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:54,418 [INFO] Final candidates: []
2025-04-11 20:15:54,418 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:54,418 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(4), np.int64(10)), (np.int64(8), np.int64(12)))
2025-04-11 20:15:54,419 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:54,696 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:54,696 [DEBUG] MCTS iteration 16: Rollout reward: 1.
2025-04-11 20:15:54,696 [DEBUG] MCTS iteration 16: Backed up Finish.
2025-04-11 20:15:54,696 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:54,703 [INFO] Final candidates: []
2025-04-11 20:15:54,703 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:54,710 [INFO] Final candidates: []
2025-04-11 20:15:54,710 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:54,710 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(13)), (np.int64(12), np.int64(9)))
2025-04-11 20:15:54,711 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:54,960 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:54,960 [DEBUG] MCTS iteration 17: Rollout reward: 1.
2025-04-11 20:15:54,960 [DEBUG] MCTS iteration 17: Backed up Finish.
2025-04-11 20:15:54,960 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:54,968 [INFO] Final candidates: []
2025-04-11 20:15:54,968 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:54,975 [INFO] Final candidates: []
2025-04-11 20:15:54,975 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:54,975 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(4), np.int64(18)), (np.int64(8), np.int64(12)))
2025-04-11 20:15:54,976 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:55,121 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:55,121 [DEBUG] MCTS iteration 18: Rollout reward: 1.
2025-04-11 20:15:55,121 [DEBUG] MCTS iteration 18: Backed up Finish.
2025-04-11 20:15:55,121 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:55,128 [INFO] Final candidates: []
2025-04-11 20:15:55,128 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:55,136 [INFO] Final candidates: []
2025-04-11 20:15:55,136 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:55,136 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(6)), (np.int64(2), np.int64(16)))
2025-04-11 20:15:55,137 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:55,273 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:55,273 [DEBUG] MCTS iteration 19: Rollout reward: 0.
2025-04-11 20:15:55,273 [DEBUG] MCTS iteration 19: Backed up Finish.
2025-04-11 20:15:55,273 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:55,280 [INFO] Final candidates: []
2025-04-11 20:15:55,280 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:55,287 [INFO] Final candidates: []
2025-04-11 20:15:55,287 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:55,287 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(14)), (np.int64(12), np.int64(16)))
2025-04-11 20:15:55,288 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:55,392 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:55,392 [DEBUG] MCTS iteration 20: Rollout reward: 0.
2025-04-11 20:15:55,392 [DEBUG] MCTS iteration 20: Backed up Finish.
2025-04-11 20:15:55,392 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:55,399 [INFO] Final candidates: []
2025-04-11 20:15:55,399 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:55,406 [INFO] Final candidates: []
2025-04-11 20:15:55,406 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:55,406 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(7)), (np.int64(3), np.int64(16)))
2025-04-11 20:15:55,408 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:55,445 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:55,445 [DEBUG] MCTS iteration 21: Rollout reward: 0.
2025-04-11 20:15:55,445 [DEBUG] MCTS iteration 21: Backed up Finish.
2025-04-11 20:15:55,445 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:55,452 [INFO] Final candidates: []
2025-04-11 20:15:55,452 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:55,460 [INFO] Final candidates: []
2025-04-11 20:15:55,460 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:55,460 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(3), np.int64(15)), (np.int64(11), np.int64(15)))
2025-04-11 20:15:55,461 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:55,600 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:55,600 [DEBUG] MCTS iteration 22: Rollout reward: 1.
2025-04-11 20:15:55,600 [DEBUG] MCTS iteration 22: Backed up Finish.
2025-04-11 20:15:55,600 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:55,608 [INFO] Final candidates: []
2025-04-11 20:15:55,608 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:55,615 [INFO] Final candidates: []
2025-04-11 20:15:55,615 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:55,615 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(5)), (np.int64(8), np.int64(13)))
2025-04-11 20:15:55,616 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:55,887 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:55,888 [DEBUG] MCTS iteration 23: Rollout reward: 1.
2025-04-11 20:15:55,888 [DEBUG] MCTS iteration 23: Backed up Finish.
2025-04-11 20:15:55,888 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:55,895 [INFO] Final candidates: []
2025-04-11 20:15:55,895 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:55,902 [INFO] Final candidates: []
2025-04-11 20:15:55,902 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:55,902 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(7)), (np.int64(15), np.int64(4)))
2025-04-11 20:15:55,903 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:56,050 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:56,050 [DEBUG] MCTS iteration 24: Rollout reward: 1.
2025-04-11 20:15:56,050 [DEBUG] MCTS iteration 24: Backed up Finish.
2025-04-11 20:15:56,050 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:56,057 [INFO] Final candidates: []
2025-04-11 20:15:56,057 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:56,064 [INFO] Final candidates: []
2025-04-11 20:15:56,064 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:56,064 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(17), np.int64(2)), (np.int64(9), np.int64(7)))
2025-04-11 20:15:56,065 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:56,158 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:56,158 [DEBUG] MCTS iteration 25: Rollout reward: 1.
2025-04-11 20:15:56,158 [DEBUG] MCTS iteration 25: Backed up Finish.
2025-04-11 20:15:56,158 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:56,165 [INFO] Final candidates: []
2025-04-11 20:15:56,165 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:56,173 [INFO] Final candidates: []
2025-04-11 20:15:56,173 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:56,173 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(17), np.int64(9)), (np.int64(6), np.int64(9)))
2025-04-11 20:15:56,174 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:56,397 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:56,397 [DEBUG] MCTS iteration 26: Rollout reward: 0.
2025-04-11 20:15:56,397 [DEBUG] MCTS iteration 26: Backed up Finish.
2025-04-11 20:15:56,397 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:56,404 [INFO] Final candidates: []
2025-04-11 20:15:56,404 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:56,412 [INFO] Final candidates: []
2025-04-11 20:15:56,412 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:56,412 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(5)), (np.int64(11), np.int64(8)))
2025-04-11 20:15:56,413 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:56,578 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:56,578 [DEBUG] MCTS iteration 27: Rollout reward: 0.
2025-04-11 20:15:56,578 [DEBUG] MCTS iteration 27: Backed up Finish.
2025-04-11 20:15:56,578 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:56,585 [INFO] Final candidates: []
2025-04-11 20:15:56,585 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:56,592 [INFO] Final candidates: []
2025-04-11 20:15:56,592 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:56,592 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(5)), (np.int64(13), np.int64(15)))
2025-04-11 20:15:56,593 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:56,643 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:56,643 [DEBUG] MCTS iteration 28: Rollout reward: 0.
2025-04-11 20:15:56,643 [DEBUG] MCTS iteration 28: Backed up Finish.
2025-04-11 20:15:56,643 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:56,650 [INFO] Final candidates: []
2025-04-11 20:15:56,650 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:56,657 [INFO] Final candidates: []
2025-04-11 20:15:56,657 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:56,657 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(13)), (np.int64(8), np.int64(5)))
2025-04-11 20:15:56,658 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:56,704 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:56,704 [DEBUG] MCTS iteration 29: Rollout reward: 1.
2025-04-11 20:15:56,704 [DEBUG] MCTS iteration 29: Backed up Finish.
2025-04-11 20:15:56,705 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:56,712 [INFO] Final candidates: []
2025-04-11 20:15:56,712 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:56,719 [INFO] Final candidates: []
2025-04-11 20:15:56,719 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:56,719 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(7)), (np.int64(9), np.int64(7)))
2025-04-11 20:15:56,721 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:56,796 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:56,796 [DEBUG] MCTS iteration 30: Rollout reward: 0.
2025-04-11 20:15:56,796 [DEBUG] MCTS iteration 30: Backed up Finish.
2025-04-11 20:15:56,797 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:56,804 [INFO] Final candidates: []
2025-04-11 20:15:56,804 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:56,811 [INFO] Final candidates: []
2025-04-11 20:15:56,811 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:56,811 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(2), np.int64(14)), (np.int64(9), np.int64(15)))
2025-04-11 20:15:56,812 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:56,968 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:56,968 [DEBUG] MCTS iteration 31: Rollout reward: 1.
2025-04-11 20:15:56,968 [DEBUG] MCTS iteration 31: Backed up Finish.
2025-04-11 20:15:56,968 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:56,975 [INFO] Final candidates: []
2025-04-11 20:15:56,975 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:56,983 [INFO] Final candidates: []
2025-04-11 20:15:56,983 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:56,983 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(6)), (np.int64(7), np.int64(6)))
2025-04-11 20:15:56,984 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:57,170 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:57,170 [DEBUG] MCTS iteration 32: Rollout reward: 0.
2025-04-11 20:15:57,170 [DEBUG] MCTS iteration 32: Backed up Finish.
2025-04-11 20:15:57,170 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:57,177 [INFO] Final candidates: []
2025-04-11 20:15:57,177 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:57,184 [INFO] Final candidates: []
2025-04-11 20:15:57,184 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:57,184 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(3), np.int64(15)), (np.int64(3), np.int64(17)))
2025-04-11 20:15:57,185 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:57,410 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:57,410 [DEBUG] MCTS iteration 33: Rollout reward: 0.
2025-04-11 20:15:57,410 [DEBUG] MCTS iteration 33: Backed up Finish.
2025-04-11 20:15:57,410 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:57,417 [INFO] Final candidates: []
2025-04-11 20:15:57,417 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:57,424 [INFO] Final candidates: []
2025-04-11 20:15:57,424 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:57,424 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(3), np.int64(17)), (np.int64(6), np.int64(9)))
2025-04-11 20:15:57,425 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:57,553 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:57,553 [DEBUG] MCTS iteration 34: Rollout reward: 1.
2025-04-11 20:15:57,553 [DEBUG] MCTS iteration 34: Backed up Finish.
2025-04-11 20:15:57,553 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:57,560 [INFO] Final candidates: []
2025-04-11 20:15:57,560 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:57,567 [INFO] Final candidates: []
2025-04-11 20:15:57,567 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:57,567 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(7)), (np.int64(3), np.int64(14)))
2025-04-11 20:15:57,568 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:57,756 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:57,756 [DEBUG] MCTS iteration 35: Rollout reward: 1.
2025-04-11 20:15:57,756 [DEBUG] MCTS iteration 35: Backed up Finish.
2025-04-11 20:15:57,757 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:57,764 [INFO] Final candidates: []
2025-04-11 20:15:57,764 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:57,771 [INFO] Final candidates: []
2025-04-11 20:15:57,771 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:57,771 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(17), np.int64(5)), (np.int64(15), np.int64(11)))
2025-04-11 20:15:57,772 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:57,885 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:57,885 [DEBUG] MCTS iteration 36: Rollout reward: 0.
2025-04-11 20:15:57,885 [DEBUG] MCTS iteration 36: Backed up Finish.
2025-04-11 20:15:57,885 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:57,892 [INFO] Final candidates: []
2025-04-11 20:15:57,892 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:57,899 [INFO] Final candidates: []
2025-04-11 20:15:57,899 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:57,899 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(7)), (np.int64(16), np.int64(11)))
2025-04-11 20:15:57,900 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:58,104 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:58,104 [DEBUG] MCTS iteration 37: Rollout reward: 0.
2025-04-11 20:15:58,104 [DEBUG] MCTS iteration 37: Backed up Finish.
2025-04-11 20:15:58,104 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:58,111 [INFO] Final candidates: []
2025-04-11 20:15:58,111 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:58,118 [INFO] Final candidates: []
2025-04-11 20:15:58,118 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:58,119 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(6)), (np.int64(7), np.int64(5)))
2025-04-11 20:15:58,119 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:58,238 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:58,238 [DEBUG] MCTS iteration 38: Rollout reward: 1.
2025-04-11 20:15:58,238 [DEBUG] MCTS iteration 38: Backed up Finish.
2025-04-11 20:15:58,238 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:58,245 [INFO] Final candidates: []
2025-04-11 20:15:58,246 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:58,253 [INFO] Final candidates: []
2025-04-11 20:15:58,253 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:58,253 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(18), np.int64(1)), (np.int64(4), np.int64(10)))
2025-04-11 20:15:58,254 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:58,471 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:58,471 [DEBUG] MCTS iteration 39: Rollout reward: 0.
2025-04-11 20:15:58,471 [DEBUG] MCTS iteration 39: Backed up Finish.
2025-04-11 20:15:58,471 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:58,478 [INFO] Final candidates: []
2025-04-11 20:15:58,478 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:58,486 [INFO] Final candidates: []
2025-04-11 20:15:58,486 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:58,486 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(7)), (np.int64(5), np.int64(15)))
2025-04-11 20:15:58,487 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:58,597 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:58,597 [DEBUG] MCTS iteration 40: Rollout reward: 0.
2025-04-11 20:15:58,597 [DEBUG] MCTS iteration 40: Backed up Finish.
2025-04-11 20:15:58,598 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:58,605 [INFO] Final candidates: []
2025-04-11 20:15:58,605 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:58,612 [INFO] Final candidates: []
2025-04-11 20:15:58,612 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:58,612 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(13)), (np.int64(8), np.int64(5)))
2025-04-11 20:15:58,613 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:58,710 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:58,710 [DEBUG] MCTS iteration 41: Rollout reward: 0.
2025-04-11 20:15:58,711 [DEBUG] MCTS iteration 41: Backed up Finish.
2025-04-11 20:15:58,711 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:58,718 [INFO] Final candidates: []
2025-04-11 20:15:58,718 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:58,725 [INFO] Final candidates: []
2025-04-11 20:15:58,725 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:58,725 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(3), np.int64(14)), (np.int64(7), np.int64(13)))
2025-04-11 20:15:58,726 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:58,877 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:58,877 [DEBUG] MCTS iteration 42: Rollout reward: 1.
2025-04-11 20:15:58,877 [DEBUG] MCTS iteration 42: Backed up Finish.
2025-04-11 20:15:58,877 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:58,884 [INFO] Final candidates: []
2025-04-11 20:15:58,884 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:58,892 [INFO] Final candidates: []
2025-04-11 20:15:58,892 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:58,892 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(8)), (np.int64(7), np.int64(8)))
2025-04-11 20:15:58,892 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:59,022 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:15:59,022 [DEBUG] MCTS iteration 43: Rollout reward: 0.
2025-04-11 20:15:59,022 [DEBUG] MCTS iteration 43: Backed up Finish.
2025-04-11 20:15:59,023 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:59,030 [INFO] Final candidates: []
2025-04-11 20:15:59,030 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:59,037 [INFO] Final candidates: []
2025-04-11 20:15:59,037 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:59,037 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(15)), (np.int64(13), np.int64(11)))
2025-04-11 20:15:59,038 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:59,125 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:59,125 [DEBUG] MCTS iteration 44: Rollout reward: 1.
2025-04-11 20:15:59,125 [DEBUG] MCTS iteration 44: Backed up Finish.
2025-04-11 20:15:59,125 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:59,132 [INFO] Final candidates: []
2025-04-11 20:15:59,132 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:59,140 [INFO] Final candidates: []
2025-04-11 20:15:59,140 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:59,140 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(6)), (np.int64(14), np.int64(10)))
2025-04-11 20:15:59,141 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:59,367 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:59,368 [DEBUG] MCTS iteration 45: Rollout reward: 1.
2025-04-11 20:15:59,368 [DEBUG] MCTS iteration 45: Backed up Finish.
2025-04-11 20:15:59,368 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:59,375 [INFO] Final candidates: []
2025-04-11 20:15:59,375 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:59,384 [INFO] Final candidates: []
2025-04-11 20:15:59,384 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:59,384 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(15)), (np.int64(14), np.int64(6)))
2025-04-11 20:15:59,385 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:59,596 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:59,596 [DEBUG] MCTS iteration 46: Rollout reward: 1.
2025-04-11 20:15:59,596 [DEBUG] MCTS iteration 46: Backed up Finish.
2025-04-11 20:15:59,596 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:59,603 [INFO] Final candidates: []
2025-04-11 20:15:59,604 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:59,612 [INFO] Final candidates: []
2025-04-11 20:15:59,612 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:59,612 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(17), np.int64(9)), (np.int64(14), np.int64(11)))
2025-04-11 20:15:59,613 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:59,796 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:59,796 [DEBUG] MCTS iteration 47: Rollout reward: 1.
2025-04-11 20:15:59,796 [DEBUG] MCTS iteration 47: Backed up Finish.
2025-04-11 20:15:59,796 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:59,803 [INFO] Final candidates: []
2025-04-11 20:15:59,803 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:59,810 [INFO] Final candidates: []
2025-04-11 20:15:59,810 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:59,810 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(10)), (np.int64(15), np.int64(6)))
2025-04-11 20:15:59,811 [INFO] Default policy: Starting random playout.
2025-04-11 20:15:59,884 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:15:59,884 [DEBUG] MCTS iteration 48: Rollout reward: 1.
2025-04-11 20:15:59,884 [DEBUG] MCTS iteration 48: Backed up Finish.
2025-04-11 20:15:59,884 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:15:59,891 [INFO] Final candidates: []
2025-04-11 20:15:59,891 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:15:59,899 [INFO] Final candidates: []
2025-04-11 20:15:59,899 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:15:59,899 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(7)), (np.int64(2), np.int64(14)))
2025-04-11 20:15:59,899 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:00,101 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:16:00,101 [DEBUG] MCTS iteration 49: Rollout reward: 1.
2025-04-11 20:16:00,101 [DEBUG] MCTS iteration 49: Backed up Finish.
2025-04-11 20:16:00,101 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:00,108 [INFO] Final candidates: []
2025-04-11 20:16:00,108 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:00,116 [INFO] Final candidates: []
2025-04-11 20:16:00,116 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:00,116 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(18), np.int64(1)), (np.int64(5), np.int64(16)))
2025-04-11 20:16:00,117 [DEBUG] MCTS iteration 50: reached a node with 0 visits.
2025-04-11 20:16:00,117 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:00,248 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:00,248 [DEBUG] MCTS iteration 50: Rollout reward: 0.
2025-04-11 20:16:00,248 [DEBUG] MCTS iteration 50: Backed up Finish.
2025-04-11 20:16:00,248 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:00,255 [INFO] Final candidates: []
2025-04-11 20:16:00,255 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:00,262 [INFO] Final candidates: []
2025-04-11 20:16:00,262 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:00,262 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(14)), (np.int64(14), np.int64(7)))
2025-04-11 20:16:00,263 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:00,488 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:16:00,491 [DEBUG] MCTS iteration 51: Rollout reward: 1.
2025-04-11 20:16:00,491 [DEBUG] MCTS iteration 51: Backed up Finish.
2025-04-11 20:16:00,491 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:00,499 [INFO] Final candidates: []
2025-04-11 20:16:00,499 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:00,506 [INFO] Final candidates: []
2025-04-11 20:16:00,506 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:00,506 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(3), np.int64(15)), (np.int64(6), np.int64(14)))
2025-04-11 20:16:00,507 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:00,650 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:16:00,650 [DEBUG] MCTS iteration 52: Rollout reward: 1.
2025-04-11 20:16:00,650 [DEBUG] MCTS iteration 52: Backed up Finish.
2025-04-11 20:16:00,650 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:00,657 [INFO] Final candidates: []
2025-04-11 20:16:00,657 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:00,664 [INFO] Final candidates: []
2025-04-11 20:16:00,664 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:00,664 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(7)), (np.int64(7), np.int64(6)))
2025-04-11 20:16:00,665 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:00,772 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:00,772 [DEBUG] MCTS iteration 53: Rollout reward: 0.
2025-04-11 20:16:00,772 [DEBUG] MCTS iteration 53: Backed up Finish.
2025-04-11 20:16:00,772 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:00,779 [INFO] Final candidates: []
2025-04-11 20:16:00,779 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:00,786 [INFO] Final candidates: []
2025-04-11 20:16:00,786 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:00,786 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(3), np.int64(15)), (np.int64(7), np.int64(5)))
2025-04-11 20:16:00,787 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:00,976 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:00,976 [DEBUG] MCTS iteration 54: Rollout reward: 0.
2025-04-11 20:16:00,976 [DEBUG] MCTS iteration 54: Backed up Finish.
2025-04-11 20:16:00,976 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:00,983 [INFO] Final candidates: []
2025-04-11 20:16:00,983 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:00,992 [INFO] Final candidates: []
2025-04-11 20:16:00,992 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:00,992 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(13)), (np.int64(16), np.int64(9)))
2025-04-11 20:16:00,993 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:01,207 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:01,208 [DEBUG] MCTS iteration 55: Rollout reward: 0.
2025-04-11 20:16:01,208 [DEBUG] MCTS iteration 55: Backed up Finish.
2025-04-11 20:16:01,208 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:01,215 [INFO] Final candidates: []
2025-04-11 20:16:01,215 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:01,223 [INFO] Final candidates: []
2025-04-11 20:16:01,223 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:01,223 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(10)), (np.int64(17), np.int64(9)))
2025-04-11 20:16:01,224 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:01,419 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:01,419 [DEBUG] MCTS iteration 56: Rollout reward: 0.
2025-04-11 20:16:01,419 [DEBUG] MCTS iteration 56: Backed up Finish.
2025-04-11 20:16:01,420 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:01,427 [INFO] Final candidates: []
2025-04-11 20:16:01,427 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:01,434 [INFO] Final candidates: []
2025-04-11 20:16:01,434 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:01,434 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(14)), (np.int64(8), np.int64(12)))
2025-04-11 20:16:01,435 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:01,587 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:16:01,587 [DEBUG] MCTS iteration 57: Rollout reward: 1.
2025-04-11 20:16:01,588 [DEBUG] MCTS iteration 57: Backed up Finish.
2025-04-11 20:16:01,588 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:01,595 [INFO] Final candidates: []
2025-04-11 20:16:01,595 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:01,602 [INFO] Final candidates: []
2025-04-11 20:16:01,602 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:01,602 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(7)), (np.int64(14), np.int64(11)))
2025-04-11 20:16:01,603 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:01,777 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:16:01,777 [DEBUG] MCTS iteration 58: Rollout reward: 1.
2025-04-11 20:16:01,777 [DEBUG] MCTS iteration 58: Backed up Finish.
2025-04-11 20:16:01,777 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:01,784 [INFO] Final candidates: []
2025-04-11 20:16:01,784 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:01,791 [INFO] Final candidates: []
2025-04-11 20:16:01,792 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:01,792 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(6)), (np.int64(2), np.int64(16)))
2025-04-11 20:16:01,792 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:01,894 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:16:01,894 [DEBUG] MCTS iteration 59: Rollout reward: 1.
2025-04-11 20:16:01,894 [DEBUG] MCTS iteration 59: Backed up Finish.
2025-04-11 20:16:01,895 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:01,902 [INFO] Final candidates: []
2025-04-11 20:16:01,902 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:01,909 [INFO] Final candidates: []
2025-04-11 20:16:01,909 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:01,909 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(11)), (np.int64(12), np.int64(9)))
2025-04-11 20:16:01,910 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:02,009 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:02,009 [DEBUG] MCTS iteration 60: Rollout reward: 0.
2025-04-11 20:16:02,009 [DEBUG] MCTS iteration 60: Backed up Finish.
2025-04-11 20:16:02,009 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:02,016 [INFO] Final candidates: []
2025-04-11 20:16:02,016 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:02,023 [INFO] Final candidates: []
2025-04-11 20:16:02,023 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:02,023 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(11)), (np.int64(17), np.int64(1)))
2025-04-11 20:16:02,024 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:02,183 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:02,184 [DEBUG] MCTS iteration 61: Rollout reward: 0.
2025-04-11 20:16:02,184 [DEBUG] MCTS iteration 61: Backed up Finish.
2025-04-11 20:16:02,184 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:02,191 [INFO] Final candidates: []
2025-04-11 20:16:02,191 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:02,198 [INFO] Final candidates: []
2025-04-11 20:16:02,198 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:02,198 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(7)), (np.int64(8), np.int64(5)))
2025-04-11 20:16:02,199 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:02,256 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:16:02,256 [DEBUG] MCTS iteration 62: Rollout reward: 1.
2025-04-11 20:16:02,256 [DEBUG] MCTS iteration 62: Backed up Finish.
2025-04-11 20:16:02,256 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:02,263 [INFO] Final candidates: []
2025-04-11 20:16:02,263 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:02,270 [INFO] Final candidates: []
2025-04-11 20:16:02,270 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:02,270 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(13)), (np.int64(4), np.int64(18)))
2025-04-11 20:16:02,271 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:02,614 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:02,614 [DEBUG] MCTS iteration 63: Rollout reward: 0.
2025-04-11 20:16:02,614 [DEBUG] MCTS iteration 63: Backed up Finish.
2025-04-11 20:16:02,614 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:02,623 [INFO] Final candidates: []
2025-04-11 20:16:02,623 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:02,630 [INFO] Final candidates: []
2025-04-11 20:16:02,630 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:02,630 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(15)), (np.int64(17), np.int64(9)))
2025-04-11 20:16:02,631 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:02,740 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:16:02,740 [DEBUG] MCTS iteration 64: Rollout reward: 1.
2025-04-11 20:16:02,740 [DEBUG] MCTS iteration 64: Backed up Finish.
2025-04-11 20:16:02,740 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:02,747 [INFO] Final candidates: []
2025-04-11 20:16:02,747 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:02,754 [INFO] Final candidates: []
2025-04-11 20:16:02,754 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:02,754 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(9)), (np.int64(5), np.int64(17)))
2025-04-11 20:16:02,755 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:02,842 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:16:02,842 [DEBUG] MCTS iteration 65: Rollout reward: 1.
2025-04-11 20:16:02,842 [DEBUG] MCTS iteration 65: Backed up Finish.
2025-04-11 20:16:02,842 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:02,849 [INFO] Final candidates: []
2025-04-11 20:16:02,849 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:02,856 [INFO] Final candidates: []
2025-04-11 20:16:02,856 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:02,857 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(14)), (np.int64(16), np.int64(13)))
2025-04-11 20:16:02,857 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:02,971 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:16:02,971 [DEBUG] MCTS iteration 66: Rollout reward: 1.
2025-04-11 20:16:02,971 [DEBUG] MCTS iteration 66: Backed up Finish.
2025-04-11 20:16:02,972 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:02,979 [INFO] Final candidates: []
2025-04-11 20:16:02,979 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:02,986 [INFO] Final candidates: []
2025-04-11 20:16:02,986 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:02,986 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(10)), (np.int64(10), np.int64(11)))
2025-04-11 20:16:02,987 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:03,049 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:16:03,049 [DEBUG] MCTS iteration 67: Rollout reward: 1.
2025-04-11 20:16:03,049 [DEBUG] MCTS iteration 67: Backed up Finish.
2025-04-11 20:16:03,049 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:03,056 [INFO] Final candidates: []
2025-04-11 20:16:03,056 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:03,063 [INFO] Final candidates: []
2025-04-11 20:16:03,063 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:03,063 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(3), np.int64(13)), (np.int64(3), np.int64(14)))
2025-04-11 20:16:03,064 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:03,169 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:16:03,169 [DEBUG] MCTS iteration 68: Rollout reward: 1.
2025-04-11 20:16:03,169 [DEBUG] MCTS iteration 68: Backed up Finish.
2025-04-11 20:16:03,169 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:03,176 [INFO] Final candidates: []
2025-04-11 20:16:03,176 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:03,183 [INFO] Final candidates: []
2025-04-11 20:16:03,183 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:03,183 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(12)), (np.int64(3), np.int64(16)))
2025-04-11 20:16:03,184 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:03,410 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:03,410 [DEBUG] MCTS iteration 69: Rollout reward: 0.
2025-04-11 20:16:03,410 [DEBUG] MCTS iteration 69: Backed up Finish.
2025-04-11 20:16:03,410 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:03,417 [INFO] Final candidates: []
2025-04-11 20:16:03,417 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:03,424 [INFO] Final candidates: []
2025-04-11 20:16:03,424 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:03,424 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(11)), (np.int64(14), np.int64(12)))
2025-04-11 20:16:03,425 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:03,574 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:16:03,574 [DEBUG] MCTS iteration 70: Rollout reward: 1.
2025-04-11 20:16:03,574 [DEBUG] MCTS iteration 70: Backed up Finish.
2025-04-11 20:16:03,574 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:03,581 [INFO] Final candidates: []
2025-04-11 20:16:03,582 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:03,589 [INFO] Final candidates: []
2025-04-11 20:16:03,589 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:03,589 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(7)), (np.int64(11), np.int64(12)))
2025-04-11 20:16:03,590 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:03,792 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:03,792 [DEBUG] MCTS iteration 71: Rollout reward: 0.
2025-04-11 20:16:03,792 [DEBUG] MCTS iteration 71: Backed up Finish.
2025-04-11 20:16:03,792 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:03,799 [INFO] Final candidates: []
2025-04-11 20:16:03,799 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:03,807 [INFO] Final candidates: []
2025-04-11 20:16:03,807 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:03,807 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(14)), (np.int64(15), np.int64(3)))
2025-04-11 20:16:03,808 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:03,828 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:16:03,828 [DEBUG] MCTS iteration 72: Rollout reward: 1.
2025-04-11 20:16:03,828 [DEBUG] MCTS iteration 72: Backed up Finish.
2025-04-11 20:16:03,829 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:03,835 [INFO] Final candidates: []
2025-04-11 20:16:03,836 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:03,843 [INFO] Final candidates: []
2025-04-11 20:16:03,843 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:03,843 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(3), np.int64(13)), (np.int64(4), np.int64(13)))
2025-04-11 20:16:03,844 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:04,086 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:04,086 [DEBUG] MCTS iteration 73: Rollout reward: 0.
2025-04-11 20:16:04,086 [DEBUG] MCTS iteration 73: Backed up Finish.
2025-04-11 20:16:04,086 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:04,093 [INFO] Final candidates: []
2025-04-11 20:16:04,093 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:04,101 [INFO] Final candidates: []
2025-04-11 20:16:04,101 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:04,101 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(12)), (np.int64(4), np.int64(17)))
2025-04-11 20:16:04,102 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:04,283 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:16:04,284 [DEBUG] MCTS iteration 74: Rollout reward: 1.
2025-04-11 20:16:04,284 [DEBUG] MCTS iteration 74: Backed up Finish.
2025-04-11 20:16:04,284 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:04,291 [INFO] Final candidates: []
2025-04-11 20:16:04,291 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:04,298 [INFO] Final candidates: []
2025-04-11 20:16:04,298 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:04,298 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(4), np.int64(10)), (np.int64(11), np.int64(8)))
2025-04-11 20:16:04,299 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:04,517 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:16:04,517 [DEBUG] MCTS iteration 75: Rollout reward: 1.
2025-04-11 20:16:04,517 [DEBUG] MCTS iteration 75: Backed up Finish.
2025-04-11 20:16:04,517 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:04,524 [INFO] Final candidates: []
2025-04-11 20:16:04,524 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:04,531 [INFO] Final candidates: []
2025-04-11 20:16:04,531 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:04,531 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(13)), (np.int64(10), np.int64(14)))
2025-04-11 20:16:04,532 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:04,830 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:16:04,830 [DEBUG] MCTS iteration 76: Rollout reward: 1.
2025-04-11 20:16:04,830 [DEBUG] MCTS iteration 76: Backed up Finish.
2025-04-11 20:16:04,830 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:04,837 [INFO] Final candidates: []
2025-04-11 20:16:04,837 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:04,844 [INFO] Final candidates: []
2025-04-11 20:16:04,844 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:04,844 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(5)), (np.int64(16), np.int64(4)))
2025-04-11 20:16:04,851 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:04,957 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:16:04,957 [DEBUG] MCTS iteration 77: Rollout reward: 1.
2025-04-11 20:16:04,957 [DEBUG] MCTS iteration 77: Backed up Finish.
2025-04-11 20:16:04,957 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:04,964 [INFO] Final candidates: []
2025-04-11 20:16:04,964 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:04,971 [INFO] Final candidates: []
2025-04-11 20:16:04,971 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:04,971 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(13)), (np.int64(8), np.int64(13)))
2025-04-11 20:16:04,972 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:05,190 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:05,191 [DEBUG] MCTS iteration 78: Rollout reward: 0.
2025-04-11 20:16:05,191 [DEBUG] MCTS iteration 78: Backed up Finish.
2025-04-11 20:16:05,191 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:05,198 [INFO] Final candidates: []
2025-04-11 20:16:05,198 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:05,205 [INFO] Final candidates: []
2025-04-11 20:16:05,205 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:05,205 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(9)), (np.int64(15), np.int64(13)))
2025-04-11 20:16:05,206 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:05,246 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:05,246 [DEBUG] MCTS iteration 79: Rollout reward: 0.
2025-04-11 20:16:05,246 [DEBUG] MCTS iteration 79: Backed up Finish.
2025-04-11 20:16:05,247 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:05,253 [INFO] Final candidates: []
2025-04-11 20:16:05,253 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:05,261 [INFO] Final candidates: []
2025-04-11 20:16:05,261 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:05,261 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(7)), (np.int64(14), np.int64(4)))
2025-04-11 20:16:05,262 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:05,406 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:16:05,406 [DEBUG] MCTS iteration 80: Rollout reward: 1.
2025-04-11 20:16:05,406 [DEBUG] MCTS iteration 80: Backed up Finish.
2025-04-11 20:16:05,406 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:05,413 [INFO] Final candidates: []
2025-04-11 20:16:05,413 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:05,421 [INFO] Final candidates: []
2025-04-11 20:16:05,421 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:05,421 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(3), np.int64(15)), (np.int64(2), np.int64(16)))
2025-04-11 20:16:05,422 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:05,639 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:05,639 [DEBUG] MCTS iteration 81: Rollout reward: 0.
2025-04-11 20:16:05,639 [DEBUG] MCTS iteration 81: Backed up Finish.
2025-04-11 20:16:05,639 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:05,646 [INFO] Final candidates: []
2025-04-11 20:16:05,646 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:05,653 [INFO] Final candidates: []
2025-04-11 20:16:05,653 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:05,653 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(14)), (np.int64(10), np.int64(14)))
2025-04-11 20:16:05,654 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:05,710 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:05,710 [DEBUG] MCTS iteration 82: Rollout reward: 0.
2025-04-11 20:16:05,710 [DEBUG] MCTS iteration 82: Backed up Finish.
2025-04-11 20:16:05,711 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:05,717 [INFO] Final candidates: []
2025-04-11 20:16:05,718 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:05,725 [INFO] Final candidates: []
2025-04-11 20:16:05,725 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:05,725 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(16)), (np.int64(12), np.int64(9)))
2025-04-11 20:16:05,726 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:05,873 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:05,874 [DEBUG] MCTS iteration 83: Rollout reward: 0.
2025-04-11 20:16:05,874 [DEBUG] MCTS iteration 83: Backed up Finish.
2025-04-11 20:16:05,874 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:05,881 [INFO] Final candidates: []
2025-04-11 20:16:05,881 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:05,888 [INFO] Final candidates: []
2025-04-11 20:16:05,888 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:05,888 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(14)), (np.int64(7), np.int64(13)))
2025-04-11 20:16:05,889 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:06,057 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:16:06,057 [DEBUG] MCTS iteration 84: Rollout reward: 1.
2025-04-11 20:16:06,057 [DEBUG] MCTS iteration 84: Backed up Finish.
2025-04-11 20:16:06,057 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:06,064 [INFO] Final candidates: []
2025-04-11 20:16:06,064 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:06,072 [INFO] Final candidates: []
2025-04-11 20:16:06,072 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:06,072 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(3), np.int64(13)), (np.int64(13), np.int64(11)))
2025-04-11 20:16:06,073 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:06,272 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:06,273 [DEBUG] MCTS iteration 85: Rollout reward: 0.
2025-04-11 20:16:06,273 [DEBUG] MCTS iteration 85: Backed up Finish.
2025-04-11 20:16:06,273 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:06,280 [INFO] Final candidates: []
2025-04-11 20:16:06,280 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:06,287 [INFO] Final candidates: []
2025-04-11 20:16:06,287 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:06,287 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(9)), (np.int64(7), np.int64(13)))
2025-04-11 20:16:06,288 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:06,514 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:16:06,514 [DEBUG] MCTS iteration 86: Rollout reward: 1.
2025-04-11 20:16:06,514 [DEBUG] MCTS iteration 86: Backed up Finish.
2025-04-11 20:16:06,514 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:06,521 [INFO] Final candidates: []
2025-04-11 20:16:06,521 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:06,528 [INFO] Final candidates: []
2025-04-11 20:16:06,528 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:06,528 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(11)), (np.int64(14), np.int64(11)))
2025-04-11 20:16:06,529 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:06,720 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:16:06,720 [DEBUG] MCTS iteration 87: Rollout reward: 1.
2025-04-11 20:16:06,720 [DEBUG] MCTS iteration 87: Backed up Finish.
2025-04-11 20:16:06,720 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:06,727 [INFO] Final candidates: []
2025-04-11 20:16:06,727 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:06,735 [INFO] Final candidates: []
2025-04-11 20:16:06,735 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:06,735 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(7)), (np.int64(16), np.int64(4)))
2025-04-11 20:16:06,736 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:06,987 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:06,987 [DEBUG] MCTS iteration 88: Rollout reward: 0.
2025-04-11 20:16:06,987 [DEBUG] MCTS iteration 88: Backed up Finish.
2025-04-11 20:16:06,988 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:06,995 [INFO] Final candidates: []
2025-04-11 20:16:06,995 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:07,002 [INFO] Final candidates: []
2025-04-11 20:16:07,002 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:07,002 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(15)), (np.int64(14), np.int64(4)))
2025-04-11 20:16:07,003 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:07,205 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:07,205 [DEBUG] MCTS iteration 89: Rollout reward: 0.
2025-04-11 20:16:07,205 [DEBUG] MCTS iteration 89: Backed up Finish.
2025-04-11 20:16:07,205 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:07,212 [INFO] Final candidates: []
2025-04-11 20:16:07,212 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:07,219 [INFO] Final candidates: []
2025-04-11 20:16:07,219 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:07,219 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(12)), (np.int64(5), np.int64(15)))
2025-04-11 20:16:07,220 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:07,365 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:16:07,365 [DEBUG] MCTS iteration 90: Rollout reward: 1.
2025-04-11 20:16:07,365 [DEBUG] MCTS iteration 90: Backed up Finish.
2025-04-11 20:16:07,365 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:07,372 [INFO] Final candidates: []
2025-04-11 20:16:07,372 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:07,379 [INFO] Final candidates: []
2025-04-11 20:16:07,379 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:07,379 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(18), np.int64(2)), (np.int64(17), np.int64(1)))
2025-04-11 20:16:07,380 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:07,568 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:16:07,568 [DEBUG] MCTS iteration 91: Rollout reward: 1.
2025-04-11 20:16:07,568 [DEBUG] MCTS iteration 91: Backed up Finish.
2025-04-11 20:16:07,568 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:07,575 [INFO] Final candidates: []
2025-04-11 20:16:07,575 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:07,583 [INFO] Final candidates: []
2025-04-11 20:16:07,583 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:07,583 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(13)), (np.int64(16), np.int64(1)))
2025-04-11 20:16:07,584 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:07,862 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:07,862 [DEBUG] MCTS iteration 92: Rollout reward: 0.
2025-04-11 20:16:07,862 [DEBUG] MCTS iteration 92: Backed up Finish.
2025-04-11 20:16:07,862 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:07,869 [INFO] Final candidates: []
2025-04-11 20:16:07,869 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:07,876 [INFO] Final candidates: []
2025-04-11 20:16:07,876 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:07,876 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(16)), (np.int64(15), np.int64(4)))
2025-04-11 20:16:07,877 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:08,006 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:16:08,006 [DEBUG] MCTS iteration 93: Rollout reward: 1.
2025-04-11 20:16:08,006 [DEBUG] MCTS iteration 93: Backed up Finish.
2025-04-11 20:16:08,006 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:08,013 [INFO] Final candidates: []
2025-04-11 20:16:08,013 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:08,020 [INFO] Final candidates: []
2025-04-11 20:16:08,020 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:08,020 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(12)), (np.int64(2), np.int64(14)))
2025-04-11 20:16:08,021 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:08,078 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:16:08,078 [DEBUG] MCTS iteration 94: Rollout reward: 1.
2025-04-11 20:16:08,078 [DEBUG] MCTS iteration 94: Backed up Finish.
2025-04-11 20:16:08,078 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:08,086 [INFO] Final candidates: []
2025-04-11 20:16:08,086 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:08,093 [INFO] Final candidates: []
2025-04-11 20:16:08,093 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:08,093 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(9)), (np.int64(2), np.int64(16)))
2025-04-11 20:16:08,094 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:08,196 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:16:08,196 [DEBUG] MCTS iteration 95: Rollout reward: 1.
2025-04-11 20:16:08,196 [DEBUG] MCTS iteration 95: Backed up Finish.
2025-04-11 20:16:08,196 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:08,203 [INFO] Final candidates: []
2025-04-11 20:16:08,203 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:08,210 [INFO] Final candidates: []
2025-04-11 20:16:08,210 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:08,210 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(17), np.int64(9)), (np.int64(15), np.int64(11)))
2025-04-11 20:16:08,211 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:08,367 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:16:08,367 [DEBUG] MCTS iteration 96: Rollout reward: 1.
2025-04-11 20:16:08,367 [DEBUG] MCTS iteration 96: Backed up Finish.
2025-04-11 20:16:08,367 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:08,374 [INFO] Final candidates: []
2025-04-11 20:16:08,374 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:08,381 [INFO] Final candidates: []
2025-04-11 20:16:08,382 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:08,382 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(14)), (np.int64(12), np.int64(8)))
2025-04-11 20:16:08,382 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:08,511 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:16:08,511 [DEBUG] MCTS iteration 97: Rollout reward: 1.
2025-04-11 20:16:08,511 [DEBUG] MCTS iteration 97: Backed up Finish.
2025-04-11 20:16:08,512 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:08,519 [INFO] Final candidates: []
2025-04-11 20:16:08,519 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:08,526 [INFO] Final candidates: []
2025-04-11 20:16:08,526 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:08,526 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(15)), (np.int64(11), np.int64(12)))
2025-04-11 20:16:08,527 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:08,564 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:08,564 [DEBUG] MCTS iteration 98: Rollout reward: 0.
2025-04-11 20:16:08,564 [DEBUG] MCTS iteration 98: Backed up Finish.
2025-04-11 20:16:08,564 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:08,571 [INFO] Final candidates: []
2025-04-11 20:16:08,571 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:08,578 [INFO] Final candidates: []
2025-04-11 20:16:08,578 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:08,578 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(4)), (np.int64(18), np.int64(2)))
2025-04-11 20:16:08,579 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:08,768 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:16:08,768 [DEBUG] MCTS iteration 99: Rollout reward: 1.
2025-04-11 20:16:08,768 [DEBUG] MCTS iteration 99: Backed up Finish.
2025-04-11 20:16:08,768 [INFO] MCTS: Search completed after 100 iterations.
2025-04-11 20:16:08,768 [DEBUG] MCTS: BEST ((12, 11), (11, 10)) with 100 visits.
2025-04-11 20:16:08,768 [INFO] MCTS: Search finished. Best move selected with 100 visits.
2025-04-11 20:16:08,768 [INFO] Phase 2 (defense): MCTS selected move: ((12, 11), (11, 10))
2025-04-11 20:16:08,768 [INFO] Phase 2 (defense): MCTS selected move string : M13,L12
2025-04-11 20:16:08,769 [INFO] MCTS (defense candidates) selected move: M13,L12
2025-04-11 20:16:23,725 [INFO] Starting pre-MCTS candidate collection.
2025-04-11 20:16:23,733 [INFO] Final candidates: []
2025-04-11 20:16:23,733 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:23,739 [DEBUG] board coords: [(12, 13), (13, 12), (14, 11), (15, 10), (16, 9), (17, 8)]
2025-04-11 20:16:23,739 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(0), np.int64(2)]
2025-04-11 20:16:23,739 [DEBUG] check_window_intermediate_custom: empty_cells=[(14, 11), (16, 9)]
2025-04-11 20:16:23,739 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 0 2] with coords [(12, 13), (13, 12), (14, 11), (15, 10), (16, 9), (17, 8)] triggers candidate.
2025-04-11 20:16:23,739 [DEBUG] check_window_intermediate_custom: valid_move=[(14, 11), (16, 9)]
2025-04-11 20:16:23,740 [INFO] Final candidates: [(16, 9), (14, 11)]
2025-04-11 20:16:23,740 [INFO] Phase defense: Collected 1unique candidate(s):[((16, 9), (14, 11))]
2025-04-11 20:16:23,740 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 20:16:23,740 [INFO] MCTS: Starting search for 100 iterations.
2025-04-11 20:16:23,746 [DEBUG] board coords: [(12, 13), (13, 12), (14, 11), (15, 10), (16, 9), (17, 8)]
2025-04-11 20:16:23,746 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(0), np.int64(2)]
2025-04-11 20:16:23,746 [DEBUG] check_window_intermediate_custom: empty_cells=[(14, 11), (16, 9)]
2025-04-11 20:16:23,746 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 0 2] with coords [(12, 13), (13, 12), (14, 11), (15, 10), (16, 9), (17, 8)] triggers candidate.
2025-04-11 20:16:23,747 [INFO] Final candidates: [(16, 9), (14, 11)]
2025-04-11 20:16:23,747 [INFO] Phase win: Collected 1unique candidate(s):[((16, 9), (14, 11))]
2025-04-11 20:16:23,754 [INFO] Final candidates: []
2025-04-11 20:16:23,754 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:23,754 [DEBUG] Tree_policy iteration 1: Expanding move ((16, 9), (14, 11))
2025-04-11 20:16:23,755 [DEBUG] MCTS iteration 0: reached a node with 0 visits.
2025-04-11 20:16:23,755 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,756 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,756 [DEBUG] MCTS iteration 0: Rollout reward: 1.
2025-04-11 20:16:23,756 [DEBUG] MCTS iteration 0: Backed up Finish.
2025-04-11 20:16:23,756 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,756 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,756 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,756 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,756 [DEBUG] MCTS iteration 1: Rollout reward: 1.
2025-04-11 20:16:23,756 [DEBUG] MCTS iteration 1: Backed up Finish.
2025-04-11 20:16:23,756 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,756 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,756 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,756 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,756 [DEBUG] MCTS iteration 2: Rollout reward: 1.
2025-04-11 20:16:23,756 [DEBUG] MCTS iteration 2: Backed up Finish.
2025-04-11 20:16:23,756 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,757 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,757 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,757 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,757 [DEBUG] MCTS iteration 3: Rollout reward: 1.
2025-04-11 20:16:23,757 [DEBUG] MCTS iteration 3: Backed up Finish.
2025-04-11 20:16:23,757 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,757 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,757 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,757 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,757 [DEBUG] MCTS iteration 4: Rollout reward: 1.
2025-04-11 20:16:23,757 [DEBUG] MCTS iteration 4: Backed up Finish.
2025-04-11 20:16:23,757 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,757 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,757 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,757 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,757 [DEBUG] MCTS iteration 5: Rollout reward: 1.
2025-04-11 20:16:23,757 [DEBUG] MCTS iteration 5: Backed up Finish.
2025-04-11 20:16:23,758 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,758 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,758 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,758 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,758 [DEBUG] MCTS iteration 6: Rollout reward: 1.
2025-04-11 20:16:23,758 [DEBUG] MCTS iteration 6: Backed up Finish.
2025-04-11 20:16:23,758 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,758 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,758 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,758 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,758 [DEBUG] MCTS iteration 7: Rollout reward: 1.
2025-04-11 20:16:23,758 [DEBUG] MCTS iteration 7: Backed up Finish.
2025-04-11 20:16:23,758 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,758 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,758 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,759 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,759 [DEBUG] MCTS iteration 8: Rollout reward: 1.
2025-04-11 20:16:23,759 [DEBUG] MCTS iteration 8: Backed up Finish.
2025-04-11 20:16:23,759 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,759 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,759 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,759 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,759 [DEBUG] MCTS iteration 9: Rollout reward: 1.
2025-04-11 20:16:23,759 [DEBUG] MCTS iteration 9: Backed up Finish.
2025-04-11 20:16:23,759 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,759 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,759 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,759 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,759 [DEBUG] MCTS iteration 10: Rollout reward: 1.
2025-04-11 20:16:23,759 [DEBUG] MCTS iteration 10: Backed up Finish.
2025-04-11 20:16:23,759 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,760 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,760 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,760 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,760 [DEBUG] MCTS iteration 11: Rollout reward: 1.
2025-04-11 20:16:23,760 [DEBUG] MCTS iteration 11: Backed up Finish.
2025-04-11 20:16:23,760 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,760 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,760 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,760 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,760 [DEBUG] MCTS iteration 12: Rollout reward: 1.
2025-04-11 20:16:23,760 [DEBUG] MCTS iteration 12: Backed up Finish.
2025-04-11 20:16:23,760 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,760 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,760 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,760 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,760 [DEBUG] MCTS iteration 13: Rollout reward: 1.
2025-04-11 20:16:23,760 [DEBUG] MCTS iteration 13: Backed up Finish.
2025-04-11 20:16:23,761 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,761 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,761 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,761 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,761 [DEBUG] MCTS iteration 14: Rollout reward: 1.
2025-04-11 20:16:23,761 [DEBUG] MCTS iteration 14: Backed up Finish.
2025-04-11 20:16:23,761 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,761 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,761 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,761 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,761 [DEBUG] MCTS iteration 15: Rollout reward: 1.
2025-04-11 20:16:23,761 [DEBUG] MCTS iteration 15: Backed up Finish.
2025-04-11 20:16:23,761 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,761 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,761 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,762 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,762 [DEBUG] MCTS iteration 16: Rollout reward: 1.
2025-04-11 20:16:23,762 [DEBUG] MCTS iteration 16: Backed up Finish.
2025-04-11 20:16:23,762 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,762 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,762 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,762 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,762 [DEBUG] MCTS iteration 17: Rollout reward: 1.
2025-04-11 20:16:23,762 [DEBUG] MCTS iteration 17: Backed up Finish.
2025-04-11 20:16:23,762 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,762 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,762 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,762 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,762 [DEBUG] MCTS iteration 18: Rollout reward: 1.
2025-04-11 20:16:23,762 [DEBUG] MCTS iteration 18: Backed up Finish.
2025-04-11 20:16:23,762 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,762 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,762 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,763 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,763 [DEBUG] MCTS iteration 19: Rollout reward: 1.
2025-04-11 20:16:23,763 [DEBUG] MCTS iteration 19: Backed up Finish.
2025-04-11 20:16:23,763 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,763 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,763 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,763 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,763 [DEBUG] MCTS iteration 20: Rollout reward: 1.
2025-04-11 20:16:23,763 [DEBUG] MCTS iteration 20: Backed up Finish.
2025-04-11 20:16:23,763 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,763 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,763 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,763 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,763 [DEBUG] MCTS iteration 21: Rollout reward: 1.
2025-04-11 20:16:23,763 [DEBUG] MCTS iteration 21: Backed up Finish.
2025-04-11 20:16:23,764 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,764 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,764 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,764 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,764 [DEBUG] MCTS iteration 22: Rollout reward: 1.
2025-04-11 20:16:23,764 [DEBUG] MCTS iteration 22: Backed up Finish.
2025-04-11 20:16:23,764 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,764 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,764 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,764 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,764 [DEBUG] MCTS iteration 23: Rollout reward: 1.
2025-04-11 20:16:23,764 [DEBUG] MCTS iteration 23: Backed up Finish.
2025-04-11 20:16:23,764 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,764 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,764 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,764 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,764 [DEBUG] MCTS iteration 24: Rollout reward: 1.
2025-04-11 20:16:23,765 [DEBUG] MCTS iteration 24: Backed up Finish.
2025-04-11 20:16:23,765 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,765 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,765 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,765 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,765 [DEBUG] MCTS iteration 25: Rollout reward: 1.
2025-04-11 20:16:23,765 [DEBUG] MCTS iteration 25: Backed up Finish.
2025-04-11 20:16:23,765 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,765 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,765 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,765 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,765 [DEBUG] MCTS iteration 26: Rollout reward: 1.
2025-04-11 20:16:23,765 [DEBUG] MCTS iteration 26: Backed up Finish.
2025-04-11 20:16:23,765 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,765 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,765 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,766 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,766 [DEBUG] MCTS iteration 27: Rollout reward: 1.
2025-04-11 20:16:23,766 [DEBUG] MCTS iteration 27: Backed up Finish.
2025-04-11 20:16:23,766 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,766 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,766 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,766 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,766 [DEBUG] MCTS iteration 28: Rollout reward: 1.
2025-04-11 20:16:23,766 [DEBUG] MCTS iteration 28: Backed up Finish.
2025-04-11 20:16:23,766 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,766 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,766 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,766 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,766 [DEBUG] MCTS iteration 29: Rollout reward: 1.
2025-04-11 20:16:23,766 [DEBUG] MCTS iteration 29: Backed up Finish.
2025-04-11 20:16:23,766 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,767 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,767 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,767 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,767 [DEBUG] MCTS iteration 30: Rollout reward: 1.
2025-04-11 20:16:23,767 [DEBUG] MCTS iteration 30: Backed up Finish.
2025-04-11 20:16:23,767 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,767 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,767 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,767 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,767 [DEBUG] MCTS iteration 31: Rollout reward: 1.
2025-04-11 20:16:23,767 [DEBUG] MCTS iteration 31: Backed up Finish.
2025-04-11 20:16:23,767 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,767 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,767 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,767 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,767 [DEBUG] MCTS iteration 32: Rollout reward: 1.
2025-04-11 20:16:23,768 [DEBUG] MCTS iteration 32: Backed up Finish.
2025-04-11 20:16:23,768 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,768 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,768 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,768 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,768 [DEBUG] MCTS iteration 33: Rollout reward: 1.
2025-04-11 20:16:23,768 [DEBUG] MCTS iteration 33: Backed up Finish.
2025-04-11 20:16:23,768 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,768 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,768 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,768 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,768 [DEBUG] MCTS iteration 34: Rollout reward: 1.
2025-04-11 20:16:23,768 [DEBUG] MCTS iteration 34: Backed up Finish.
2025-04-11 20:16:23,768 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,768 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,768 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,769 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,769 [DEBUG] MCTS iteration 35: Rollout reward: 1.
2025-04-11 20:16:23,769 [DEBUG] MCTS iteration 35: Backed up Finish.
2025-04-11 20:16:23,769 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,769 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,769 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,769 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,769 [DEBUG] MCTS iteration 36: Rollout reward: 1.
2025-04-11 20:16:23,769 [DEBUG] MCTS iteration 36: Backed up Finish.
2025-04-11 20:16:23,769 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,769 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,769 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,769 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,769 [DEBUG] MCTS iteration 37: Rollout reward: 1.
2025-04-11 20:16:23,769 [DEBUG] MCTS iteration 37: Backed up Finish.
2025-04-11 20:16:23,769 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,770 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,770 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,770 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,770 [DEBUG] MCTS iteration 38: Rollout reward: 1.
2025-04-11 20:16:23,770 [DEBUG] MCTS iteration 38: Backed up Finish.
2025-04-11 20:16:23,770 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,770 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,770 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,770 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,770 [DEBUG] MCTS iteration 39: Rollout reward: 1.
2025-04-11 20:16:23,770 [DEBUG] MCTS iteration 39: Backed up Finish.
2025-04-11 20:16:23,771 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,771 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,771 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,771 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,771 [DEBUG] MCTS iteration 40: Rollout reward: 1.
2025-04-11 20:16:23,771 [DEBUG] MCTS iteration 40: Backed up Finish.
2025-04-11 20:16:23,771 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,771 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,771 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,771 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,771 [DEBUG] MCTS iteration 41: Rollout reward: 1.
2025-04-11 20:16:23,771 [DEBUG] MCTS iteration 41: Backed up Finish.
2025-04-11 20:16:23,771 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,771 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,771 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,772 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,772 [DEBUG] MCTS iteration 42: Rollout reward: 1.
2025-04-11 20:16:23,772 [DEBUG] MCTS iteration 42: Backed up Finish.
2025-04-11 20:16:23,772 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,772 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,772 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,772 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,772 [DEBUG] MCTS iteration 43: Rollout reward: 1.
2025-04-11 20:16:23,772 [DEBUG] MCTS iteration 43: Backed up Finish.
2025-04-11 20:16:23,772 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,772 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,772 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,772 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,772 [DEBUG] MCTS iteration 44: Rollout reward: 1.
2025-04-11 20:16:23,772 [DEBUG] MCTS iteration 44: Backed up Finish.
2025-04-11 20:16:23,772 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,773 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,773 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,773 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,773 [DEBUG] MCTS iteration 45: Rollout reward: 1.
2025-04-11 20:16:23,773 [DEBUG] MCTS iteration 45: Backed up Finish.
2025-04-11 20:16:23,773 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,773 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,773 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,773 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,773 [DEBUG] MCTS iteration 46: Rollout reward: 1.
2025-04-11 20:16:23,773 [DEBUG] MCTS iteration 46: Backed up Finish.
2025-04-11 20:16:23,773 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,773 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,773 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,774 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,774 [DEBUG] MCTS iteration 47: Rollout reward: 1.
2025-04-11 20:16:23,774 [DEBUG] MCTS iteration 47: Backed up Finish.
2025-04-11 20:16:23,774 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,774 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,774 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,774 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,774 [DEBUG] MCTS iteration 48: Rollout reward: 1.
2025-04-11 20:16:23,774 [DEBUG] MCTS iteration 48: Backed up Finish.
2025-04-11 20:16:23,774 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,774 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,774 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,774 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,774 [DEBUG] MCTS iteration 49: Rollout reward: 1.
2025-04-11 20:16:23,774 [DEBUG] MCTS iteration 49: Backed up Finish.
2025-04-11 20:16:23,774 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,775 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,775 [DEBUG] MCTS iteration 50: reached a node with 50 visits.
2025-04-11 20:16:23,775 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,775 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,775 [DEBUG] MCTS iteration 50: Rollout reward: 1.
2025-04-11 20:16:23,775 [DEBUG] MCTS iteration 50: Backed up Finish.
2025-04-11 20:16:23,775 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,775 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,775 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,775 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,775 [DEBUG] MCTS iteration 51: Rollout reward: 1.
2025-04-11 20:16:23,775 [DEBUG] MCTS iteration 51: Backed up Finish.
2025-04-11 20:16:23,775 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,775 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,775 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,775 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,775 [DEBUG] MCTS iteration 52: Rollout reward: 1.
2025-04-11 20:16:23,775 [DEBUG] MCTS iteration 52: Backed up Finish.
2025-04-11 20:16:23,776 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,776 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,776 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,776 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,776 [DEBUG] MCTS iteration 53: Rollout reward: 1.
2025-04-11 20:16:23,776 [DEBUG] MCTS iteration 53: Backed up Finish.
2025-04-11 20:16:23,776 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,776 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,776 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,776 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,776 [DEBUG] MCTS iteration 54: Rollout reward: 1.
2025-04-11 20:16:23,776 [DEBUG] MCTS iteration 54: Backed up Finish.
2025-04-11 20:16:23,776 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,776 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,776 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,777 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,777 [DEBUG] MCTS iteration 55: Rollout reward: 1.
2025-04-11 20:16:23,777 [DEBUG] MCTS iteration 55: Backed up Finish.
2025-04-11 20:16:23,777 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,777 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,777 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,777 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,777 [DEBUG] MCTS iteration 56: Rollout reward: 1.
2025-04-11 20:16:23,777 [DEBUG] MCTS iteration 56: Backed up Finish.
2025-04-11 20:16:23,777 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,777 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,777 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,777 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,777 [DEBUG] MCTS iteration 57: Rollout reward: 1.
2025-04-11 20:16:23,777 [DEBUG] MCTS iteration 57: Backed up Finish.
2025-04-11 20:16:23,777 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,778 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,778 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,778 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,778 [DEBUG] MCTS iteration 58: Rollout reward: 1.
2025-04-11 20:16:23,778 [DEBUG] MCTS iteration 58: Backed up Finish.
2025-04-11 20:16:23,778 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,778 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,778 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,778 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,778 [DEBUG] MCTS iteration 59: Rollout reward: 1.
2025-04-11 20:16:23,778 [DEBUG] MCTS iteration 59: Backed up Finish.
2025-04-11 20:16:23,778 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,778 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,778 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,778 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,778 [DEBUG] MCTS iteration 60: Rollout reward: 1.
2025-04-11 20:16:23,778 [DEBUG] MCTS iteration 60: Backed up Finish.
2025-04-11 20:16:23,779 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,779 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,779 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,779 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,779 [DEBUG] MCTS iteration 61: Rollout reward: 1.
2025-04-11 20:16:23,779 [DEBUG] MCTS iteration 61: Backed up Finish.
2025-04-11 20:16:23,779 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,779 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,779 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,779 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,779 [DEBUG] MCTS iteration 62: Rollout reward: 1.
2025-04-11 20:16:23,779 [DEBUG] MCTS iteration 62: Backed up Finish.
2025-04-11 20:16:23,779 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,779 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,779 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,780 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,780 [DEBUG] MCTS iteration 63: Rollout reward: 1.
2025-04-11 20:16:23,780 [DEBUG] MCTS iteration 63: Backed up Finish.
2025-04-11 20:16:23,780 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,780 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,780 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,780 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,780 [DEBUG] MCTS iteration 64: Rollout reward: 1.
2025-04-11 20:16:23,780 [DEBUG] MCTS iteration 64: Backed up Finish.
2025-04-11 20:16:23,780 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,780 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,780 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,780 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,780 [DEBUG] MCTS iteration 65: Rollout reward: 1.
2025-04-11 20:16:23,780 [DEBUG] MCTS iteration 65: Backed up Finish.
2025-04-11 20:16:23,780 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,781 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,781 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,781 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,781 [DEBUG] MCTS iteration 66: Rollout reward: 1.
2025-04-11 20:16:23,781 [DEBUG] MCTS iteration 66: Backed up Finish.
2025-04-11 20:16:23,781 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,781 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,781 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,781 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,781 [DEBUG] MCTS iteration 67: Rollout reward: 1.
2025-04-11 20:16:23,781 [DEBUG] MCTS iteration 67: Backed up Finish.
2025-04-11 20:16:23,781 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,781 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,781 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,781 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,781 [DEBUG] MCTS iteration 68: Rollout reward: 1.
2025-04-11 20:16:23,781 [DEBUG] MCTS iteration 68: Backed up Finish.
2025-04-11 20:16:23,782 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,782 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,782 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,782 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,782 [DEBUG] MCTS iteration 69: Rollout reward: 1.
2025-04-11 20:16:23,782 [DEBUG] MCTS iteration 69: Backed up Finish.
2025-04-11 20:16:23,782 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,782 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,782 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,782 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,782 [DEBUG] MCTS iteration 70: Rollout reward: 1.
2025-04-11 20:16:23,782 [DEBUG] MCTS iteration 70: Backed up Finish.
2025-04-11 20:16:23,782 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,782 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,782 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,783 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,783 [DEBUG] MCTS iteration 71: Rollout reward: 1.
2025-04-11 20:16:23,783 [DEBUG] MCTS iteration 71: Backed up Finish.
2025-04-11 20:16:23,783 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,783 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,783 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,783 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,783 [DEBUG] MCTS iteration 72: Rollout reward: 1.
2025-04-11 20:16:23,783 [DEBUG] MCTS iteration 72: Backed up Finish.
2025-04-11 20:16:23,783 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,783 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,783 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,783 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,783 [DEBUG] MCTS iteration 73: Rollout reward: 1.
2025-04-11 20:16:23,783 [DEBUG] MCTS iteration 73: Backed up Finish.
2025-04-11 20:16:23,783 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,783 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,783 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,784 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,784 [DEBUG] MCTS iteration 74: Rollout reward: 1.
2025-04-11 20:16:23,784 [DEBUG] MCTS iteration 74: Backed up Finish.
2025-04-11 20:16:23,784 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,784 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,784 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,784 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,784 [DEBUG] MCTS iteration 75: Rollout reward: 1.
2025-04-11 20:16:23,784 [DEBUG] MCTS iteration 75: Backed up Finish.
2025-04-11 20:16:23,784 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,784 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,784 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,784 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,784 [DEBUG] MCTS iteration 76: Rollout reward: 1.
2025-04-11 20:16:23,784 [DEBUG] MCTS iteration 76: Backed up Finish.
2025-04-11 20:16:23,785 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,785 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,785 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,785 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,785 [DEBUG] MCTS iteration 77: Rollout reward: 1.
2025-04-11 20:16:23,785 [DEBUG] MCTS iteration 77: Backed up Finish.
2025-04-11 20:16:23,785 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,785 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,785 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,785 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,785 [DEBUG] MCTS iteration 78: Rollout reward: 1.
2025-04-11 20:16:23,785 [DEBUG] MCTS iteration 78: Backed up Finish.
2025-04-11 20:16:23,785 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,785 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,785 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,786 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,786 [DEBUG] MCTS iteration 79: Rollout reward: 1.
2025-04-11 20:16:23,786 [DEBUG] MCTS iteration 79: Backed up Finish.
2025-04-11 20:16:23,786 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,786 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,786 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,786 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,786 [DEBUG] MCTS iteration 80: Rollout reward: 1.
2025-04-11 20:16:23,786 [DEBUG] MCTS iteration 80: Backed up Finish.
2025-04-11 20:16:23,786 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,786 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,786 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,786 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,786 [DEBUG] MCTS iteration 81: Rollout reward: 1.
2025-04-11 20:16:23,786 [DEBUG] MCTS iteration 81: Backed up Finish.
2025-04-11 20:16:23,786 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,787 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,787 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,787 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,787 [DEBUG] MCTS iteration 82: Rollout reward: 1.
2025-04-11 20:16:23,787 [DEBUG] MCTS iteration 82: Backed up Finish.
2025-04-11 20:16:23,787 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,787 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,787 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,787 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,787 [DEBUG] MCTS iteration 83: Rollout reward: 1.
2025-04-11 20:16:23,787 [DEBUG] MCTS iteration 83: Backed up Finish.
2025-04-11 20:16:23,787 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,787 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,787 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,787 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,787 [DEBUG] MCTS iteration 84: Rollout reward: 1.
2025-04-11 20:16:23,788 [DEBUG] MCTS iteration 84: Backed up Finish.
2025-04-11 20:16:23,788 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,788 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,788 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,788 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,788 [DEBUG] MCTS iteration 85: Rollout reward: 1.
2025-04-11 20:16:23,788 [DEBUG] MCTS iteration 85: Backed up Finish.
2025-04-11 20:16:23,788 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,788 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,788 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,788 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,788 [DEBUG] MCTS iteration 86: Rollout reward: 1.
2025-04-11 20:16:23,788 [DEBUG] MCTS iteration 86: Backed up Finish.
2025-04-11 20:16:23,788 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,788 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,789 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,789 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,789 [DEBUG] MCTS iteration 87: Rollout reward: 1.
2025-04-11 20:16:23,789 [DEBUG] MCTS iteration 87: Backed up Finish.
2025-04-11 20:16:23,789 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,789 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,789 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,789 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,789 [DEBUG] MCTS iteration 88: Rollout reward: 1.
2025-04-11 20:16:23,789 [DEBUG] MCTS iteration 88: Backed up Finish.
2025-04-11 20:16:23,789 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,789 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,789 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,789 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,789 [DEBUG] MCTS iteration 89: Rollout reward: 1.
2025-04-11 20:16:23,789 [DEBUG] MCTS iteration 89: Backed up Finish.
2025-04-11 20:16:23,790 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,790 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,790 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,790 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,790 [DEBUG] MCTS iteration 90: Rollout reward: 1.
2025-04-11 20:16:23,790 [DEBUG] MCTS iteration 90: Backed up Finish.
2025-04-11 20:16:23,790 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,790 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,790 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,790 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,790 [DEBUG] MCTS iteration 91: Rollout reward: 1.
2025-04-11 20:16:23,790 [DEBUG] MCTS iteration 91: Backed up Finish.
2025-04-11 20:16:23,790 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,790 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,790 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,790 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,791 [DEBUG] MCTS iteration 92: Rollout reward: 1.
2025-04-11 20:16:23,791 [DEBUG] MCTS iteration 92: Backed up Finish.
2025-04-11 20:16:23,791 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,791 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,791 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,791 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,791 [DEBUG] MCTS iteration 93: Rollout reward: 1.
2025-04-11 20:16:23,791 [DEBUG] MCTS iteration 93: Backed up Finish.
2025-04-11 20:16:23,791 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,791 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,791 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,791 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,791 [DEBUG] MCTS iteration 94: Rollout reward: 1.
2025-04-11 20:16:23,791 [DEBUG] MCTS iteration 94: Backed up Finish.
2025-04-11 20:16:23,791 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,791 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,791 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,792 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,792 [DEBUG] MCTS iteration 95: Rollout reward: 1.
2025-04-11 20:16:23,792 [DEBUG] MCTS iteration 95: Backed up Finish.
2025-04-11 20:16:23,792 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,792 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,792 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,792 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,792 [DEBUG] MCTS iteration 96: Rollout reward: 1.
2025-04-11 20:16:23,792 [DEBUG] MCTS iteration 96: Backed up Finish.
2025-04-11 20:16:23,792 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,792 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,792 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,792 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,792 [DEBUG] MCTS iteration 97: Rollout reward: 1.
2025-04-11 20:16:23,792 [DEBUG] MCTS iteration 97: Backed up Finish.
2025-04-11 20:16:23,792 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,793 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,793 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,793 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,793 [DEBUG] MCTS iteration 98: Rollout reward: 1.
2025-04-11 20:16:23,793 [DEBUG] MCTS iteration 98: Backed up Finish.
2025-04-11 20:16:23,793 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:16:23,793 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:16:23,793 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:23,793 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:23,793 [DEBUG] MCTS iteration 99: Rollout reward: 1.
2025-04-11 20:16:23,793 [DEBUG] MCTS iteration 99: Backed up Finish.
2025-04-11 20:16:23,793 [INFO] MCTS: Search completed after 100 iterations.
2025-04-11 20:16:23,793 [DEBUG] MCTS: BEST ((16, 9), (14, 11)) with 100 visits.
2025-04-11 20:16:23,793 [INFO] MCTS: Search finished. Best move selected with 100 visits.
2025-04-11 20:16:23,793 [INFO] Phase 2 (defense): MCTS selected move: ((16, 9), (14, 11))
2025-04-11 20:16:23,793 [INFO] Phase 2 (defense): MCTS selected move string : K17,M15
2025-04-11 20:16:23,793 [INFO] MCTS (defense candidates) selected move: K17,M15
2025-04-11 20:16:37,139 [INFO] Starting pre-MCTS candidate collection.
2025-04-11 20:16:37,146 [INFO] Final candidates: []
2025-04-11 20:16:37,146 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:37,153 [INFO] Final candidates: []
2025-04-11 20:16:37,153 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:37,153 [INFO] No candidate found in Phase 1 or 2; using full legal moves for MCTS.
2025-04-11 20:16:37,154 [INFO] MCTS: Starting search for 100 iterations.
2025-04-11 20:16:37,161 [INFO] Final candidates: []
2025-04-11 20:16:37,161 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:37,168 [INFO] Final candidates: []
2025-04-11 20:16:37,168 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:37,168 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(6)), (np.int64(6), np.int64(8)))
2025-04-11 20:16:37,169 [DEBUG] MCTS iteration 0: reached a node with 0 visits.
2025-04-11 20:16:37,169 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:37,301 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:16:37,301 [DEBUG] MCTS iteration 0: Rollout reward: 1.
2025-04-11 20:16:37,301 [DEBUG] MCTS iteration 0: Backed up Finish.
2025-04-11 20:16:37,308 [INFO] Final candidates: []
2025-04-11 20:16:37,308 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:37,315 [INFO] Final candidates: []
2025-04-11 20:16:37,315 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:37,315 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(8)), (np.int64(17), np.int64(9)))
2025-04-11 20:16:37,316 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:37,540 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:16:37,540 [DEBUG] MCTS iteration 1: Rollout reward: 1.
2025-04-11 20:16:37,540 [DEBUG] MCTS iteration 1: Backed up Finish.
2025-04-11 20:16:37,547 [INFO] Final candidates: []
2025-04-11 20:16:37,548 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:37,554 [INFO] Final candidates: []
2025-04-11 20:16:37,554 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:37,554 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(6)), (np.int64(7), np.int64(8)))
2025-04-11 20:16:37,555 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:37,731 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:16:37,731 [DEBUG] MCTS iteration 2: Rollout reward: 1.
2025-04-11 20:16:37,731 [DEBUG] MCTS iteration 2: Backed up Finish.
2025-04-11 20:16:37,738 [INFO] Final candidates: []
2025-04-11 20:16:37,738 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:37,745 [INFO] Final candidates: []
2025-04-11 20:16:37,745 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:37,745 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(13)), (np.int64(17), np.int64(10)))
2025-04-11 20:16:37,746 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:37,997 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:16:37,997 [DEBUG] MCTS iteration 3: Rollout reward: 1.
2025-04-11 20:16:37,997 [DEBUG] MCTS iteration 3: Backed up Finish.
2025-04-11 20:16:38,004 [INFO] Final candidates: []
2025-04-11 20:16:38,004 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:38,011 [INFO] Final candidates: []
2025-04-11 20:16:38,011 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:38,011 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(5)), (np.int64(10), np.int64(13)))
2025-04-11 20:16:38,012 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:38,125 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:38,125 [DEBUG] MCTS iteration 4: Rollout reward: 0.
2025-04-11 20:16:38,125 [DEBUG] MCTS iteration 4: Backed up Finish.
2025-04-11 20:16:38,132 [INFO] Final candidates: []
2025-04-11 20:16:38,132 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:38,139 [INFO] Final candidates: []
2025-04-11 20:16:38,139 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:38,139 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(14)), (np.int64(8), np.int64(14)))
2025-04-11 20:16:38,140 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:38,253 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:38,254 [DEBUG] MCTS iteration 5: Rollout reward: 0.
2025-04-11 20:16:38,254 [DEBUG] MCTS iteration 5: Backed up Finish.
2025-04-11 20:16:38,261 [INFO] Final candidates: []
2025-04-11 20:16:38,261 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:38,268 [INFO] Final candidates: []
2025-04-11 20:16:38,268 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:38,268 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(4)), (np.int64(7), np.int64(6)))
2025-04-11 20:16:38,269 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:38,435 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:38,436 [DEBUG] MCTS iteration 6: Rollout reward: 0.
2025-04-11 20:16:38,436 [DEBUG] MCTS iteration 6: Backed up Finish.
2025-04-11 20:16:38,445 [INFO] Final candidates: []
2025-04-11 20:16:38,445 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:38,452 [INFO] Final candidates: []
2025-04-11 20:16:38,452 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:38,452 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(6)), (np.int64(17), np.int64(1)))
2025-04-11 20:16:38,453 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:38,710 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:38,710 [DEBUG] MCTS iteration 7: Rollout reward: 0.
2025-04-11 20:16:38,710 [DEBUG] MCTS iteration 7: Backed up Finish.
2025-04-11 20:16:38,717 [INFO] Final candidates: []
2025-04-11 20:16:38,717 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:38,723 [INFO] Final candidates: []
2025-04-11 20:16:38,724 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:38,724 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(6)), (np.int64(17), np.int64(7)))
2025-04-11 20:16:38,725 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:38,795 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:38,796 [DEBUG] MCTS iteration 8: Rollout reward: 0.
2025-04-11 20:16:38,796 [DEBUG] MCTS iteration 8: Backed up Finish.
2025-04-11 20:16:38,803 [INFO] Final candidates: []
2025-04-11 20:16:38,803 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:38,810 [INFO] Final candidates: []
2025-04-11 20:16:38,810 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:38,810 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(15)), (np.int64(17), np.int64(2)))
2025-04-11 20:16:38,811 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:38,980 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:38,980 [DEBUG] MCTS iteration 9: Rollout reward: 0.
2025-04-11 20:16:38,980 [DEBUG] MCTS iteration 9: Backed up Finish.
2025-04-11 20:16:38,987 [INFO] Final candidates: []
2025-04-11 20:16:38,987 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:38,994 [INFO] Final candidates: []
2025-04-11 20:16:38,994 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:38,994 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(15)), (np.int64(5), np.int64(15)))
2025-04-11 20:16:38,995 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:39,070 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:39,070 [DEBUG] MCTS iteration 10: Rollout reward: 0.
2025-04-11 20:16:39,070 [DEBUG] MCTS iteration 10: Backed up Finish.
2025-04-11 20:16:39,077 [INFO] Final candidates: []
2025-04-11 20:16:39,077 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:39,084 [INFO] Final candidates: []
2025-04-11 20:16:39,084 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:39,084 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(12)), (np.int64(15), np.int64(6)))
2025-04-11 20:16:39,088 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:39,233 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:16:39,233 [DEBUG] MCTS iteration 11: Rollout reward: 1.
2025-04-11 20:16:39,233 [DEBUG] MCTS iteration 11: Backed up Finish.
2025-04-11 20:16:39,240 [INFO] Final candidates: []
2025-04-11 20:16:39,240 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:39,247 [INFO] Final candidates: []
2025-04-11 20:16:39,247 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:39,247 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(13)), (np.int64(6), np.int64(8)))
2025-04-11 20:16:39,248 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:39,323 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:39,324 [DEBUG] MCTS iteration 12: Rollout reward: 0.
2025-04-11 20:16:39,324 [DEBUG] MCTS iteration 12: Backed up Finish.
2025-04-11 20:16:39,331 [INFO] Final candidates: []
2025-04-11 20:16:39,331 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:39,339 [INFO] Final candidates: []
2025-04-11 20:16:39,339 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:39,339 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(15)), (np.int64(14), np.int64(4)))
2025-04-11 20:16:39,340 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:39,557 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:39,557 [DEBUG] MCTS iteration 13: Rollout reward: 0.
2025-04-11 20:16:39,557 [DEBUG] MCTS iteration 13: Backed up Finish.
2025-04-11 20:16:39,564 [INFO] Final candidates: []
2025-04-11 20:16:39,564 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:39,571 [INFO] Final candidates: []
2025-04-11 20:16:39,571 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:39,571 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(11)), (np.int64(11), np.int64(8)))
2025-04-11 20:16:39,572 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:39,601 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:39,601 [DEBUG] MCTS iteration 14: Rollout reward: 0.
2025-04-11 20:16:39,601 [DEBUG] MCTS iteration 14: Backed up Finish.
2025-04-11 20:16:39,608 [INFO] Final candidates: []
2025-04-11 20:16:39,608 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:39,615 [INFO] Final candidates: []
2025-04-11 20:16:39,615 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:39,615 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(14)), (np.int64(10), np.int64(14)))
2025-04-11 20:16:39,616 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:39,718 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:16:39,718 [DEBUG] MCTS iteration 15: Rollout reward: 1.
2025-04-11 20:16:39,718 [DEBUG] MCTS iteration 15: Backed up Finish.
2025-04-11 20:16:39,725 [INFO] Final candidates: []
2025-04-11 20:16:39,725 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:39,732 [INFO] Final candidates: []
2025-04-11 20:16:39,732 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:39,732 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(17), np.int64(9)), (np.int64(6), np.int64(8)))
2025-04-11 20:16:39,733 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:39,977 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:39,977 [DEBUG] MCTS iteration 16: Rollout reward: 0.
2025-04-11 20:16:39,977 [DEBUG] MCTS iteration 16: Backed up Finish.
2025-04-11 20:16:39,984 [INFO] Final candidates: []
2025-04-11 20:16:39,984 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:39,991 [INFO] Final candidates: []
2025-04-11 20:16:39,991 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:39,991 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(8)), (np.int64(12), np.int64(7)))
2025-04-11 20:16:39,992 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:40,159 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:16:40,159 [DEBUG] MCTS iteration 17: Rollout reward: 1.
2025-04-11 20:16:40,159 [DEBUG] MCTS iteration 17: Backed up Finish.
2025-04-11 20:16:40,167 [INFO] Final candidates: []
2025-04-11 20:16:40,167 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:40,174 [INFO] Final candidates: []
2025-04-11 20:16:40,174 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:40,174 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(11)), (np.int64(9), np.int64(6)))
2025-04-11 20:16:40,175 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:40,280 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:16:40,280 [DEBUG] MCTS iteration 18: Rollout reward: 1.
2025-04-11 20:16:40,280 [DEBUG] MCTS iteration 18: Backed up Finish.
2025-04-11 20:16:40,287 [INFO] Final candidates: []
2025-04-11 20:16:40,287 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:40,294 [INFO] Final candidates: []
2025-04-11 20:16:40,294 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:40,294 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(3), np.int64(16)), (np.int64(17), np.int64(6)))
2025-04-11 20:16:40,295 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:40,327 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:16:40,328 [DEBUG] MCTS iteration 19: Rollout reward: 1.
2025-04-11 20:16:40,328 [DEBUG] MCTS iteration 19: Backed up Finish.
2025-04-11 20:16:40,335 [INFO] Final candidates: []
2025-04-11 20:16:40,335 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:40,342 [INFO] Final candidates: []
2025-04-11 20:16:40,342 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:40,342 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(0)), (np.int64(15), np.int64(6)))
2025-04-11 20:16:40,346 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:40,651 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:40,651 [DEBUG] MCTS iteration 20: Rollout reward: 0.
2025-04-11 20:16:40,651 [DEBUG] MCTS iteration 20: Backed up Finish.
2025-04-11 20:16:40,658 [INFO] Final candidates: []
2025-04-11 20:16:40,658 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:40,666 [INFO] Final candidates: []
2025-04-11 20:16:40,666 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:40,666 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(17)), (np.int64(16), np.int64(0)))
2025-04-11 20:16:40,667 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:40,844 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:40,844 [DEBUG] MCTS iteration 21: Rollout reward: 0.
2025-04-11 20:16:40,844 [DEBUG] MCTS iteration 21: Backed up Finish.
2025-04-11 20:16:40,851 [INFO] Final candidates: []
2025-04-11 20:16:40,851 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:40,857 [INFO] Final candidates: []
2025-04-11 20:16:40,857 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:40,857 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(14)), (np.int64(8), np.int64(6)))
2025-04-11 20:16:40,859 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:40,999 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:16:40,999 [DEBUG] MCTS iteration 22: Rollout reward: 1.
2025-04-11 20:16:40,999 [DEBUG] MCTS iteration 22: Backed up Finish.
2025-04-11 20:16:41,008 [INFO] Final candidates: []
2025-04-11 20:16:41,008 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:41,014 [INFO] Final candidates: []
2025-04-11 20:16:41,014 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:41,014 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(17), np.int64(5)), (np.int64(9), np.int64(15)))
2025-04-11 20:16:41,015 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:41,145 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:41,145 [DEBUG] MCTS iteration 23: Rollout reward: 0.
2025-04-11 20:16:41,145 [DEBUG] MCTS iteration 23: Backed up Finish.
2025-04-11 20:16:41,152 [INFO] Final candidates: []
2025-04-11 20:16:41,152 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:41,158 [INFO] Final candidates: []
2025-04-11 20:16:41,158 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:41,158 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(6)), (np.int64(14), np.int64(4)))
2025-04-11 20:16:41,159 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:41,311 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:16:41,311 [DEBUG] MCTS iteration 24: Rollout reward: 1.
2025-04-11 20:16:41,311 [DEBUG] MCTS iteration 24: Backed up Finish.
2025-04-11 20:16:41,318 [INFO] Final candidates: []
2025-04-11 20:16:41,318 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:41,325 [INFO] Final candidates: []
2025-04-11 20:16:41,325 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:41,325 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(13)), (np.int64(12), np.int64(10)))
2025-04-11 20:16:41,326 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:41,382 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:41,382 [DEBUG] MCTS iteration 25: Rollout reward: 0.
2025-04-11 20:16:41,382 [DEBUG] MCTS iteration 25: Backed up Finish.
2025-04-11 20:16:41,389 [INFO] Final candidates: []
2025-04-11 20:16:41,389 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:41,396 [INFO] Final candidates: []
2025-04-11 20:16:41,396 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:41,396 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(9)), (np.int64(7), np.int64(13)))
2025-04-11 20:16:41,397 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:41,559 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:16:41,559 [DEBUG] MCTS iteration 26: Rollout reward: 1.
2025-04-11 20:16:41,559 [DEBUG] MCTS iteration 26: Backed up Finish.
2025-04-11 20:16:41,566 [INFO] Final candidates: []
2025-04-11 20:16:41,566 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:41,573 [INFO] Final candidates: []
2025-04-11 20:16:41,573 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:41,573 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(15)), (np.int64(17), np.int64(6)))
2025-04-11 20:16:41,574 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:41,692 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:16:41,692 [DEBUG] MCTS iteration 27: Rollout reward: 1.
2025-04-11 20:16:41,692 [DEBUG] MCTS iteration 27: Backed up Finish.
2025-04-11 20:16:41,699 [INFO] Final candidates: []
2025-04-11 20:16:41,700 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:41,706 [INFO] Final candidates: []
2025-04-11 20:16:41,706 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:41,706 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(3), np.int64(13)), (np.int64(7), np.int64(6)))
2025-04-11 20:16:41,707 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:41,799 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:16:41,799 [DEBUG] MCTS iteration 28: Rollout reward: 1.
2025-04-11 20:16:41,799 [DEBUG] MCTS iteration 28: Backed up Finish.
2025-04-11 20:16:41,806 [INFO] Final candidates: []
2025-04-11 20:16:41,806 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:41,813 [INFO] Final candidates: []
2025-04-11 20:16:41,813 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:41,813 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(10)), (np.int64(11), np.int64(7)))
2025-04-11 20:16:41,814 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:42,042 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:16:42,042 [DEBUG] MCTS iteration 29: Rollout reward: 1.
2025-04-11 20:16:42,042 [DEBUG] MCTS iteration 29: Backed up Finish.
2025-04-11 20:16:42,051 [INFO] Final candidates: []
2025-04-11 20:16:42,051 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:42,058 [INFO] Final candidates: []
2025-04-11 20:16:42,058 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:42,058 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(15)), (np.int64(7), np.int64(13)))
2025-04-11 20:16:42,059 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:42,305 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:16:42,305 [DEBUG] MCTS iteration 30: Rollout reward: 1.
2025-04-11 20:16:42,305 [DEBUG] MCTS iteration 30: Backed up Finish.
2025-04-11 20:16:42,313 [INFO] Final candidates: []
2025-04-11 20:16:42,313 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:42,320 [INFO] Final candidates: []
2025-04-11 20:16:42,320 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:42,320 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(15)), (np.int64(5), np.int64(15)))
2025-04-11 20:16:42,321 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:42,547 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:42,547 [DEBUG] MCTS iteration 31: Rollout reward: 0.
2025-04-11 20:16:42,547 [DEBUG] MCTS iteration 31: Backed up Finish.
2025-04-11 20:16:42,555 [INFO] Final candidates: []
2025-04-11 20:16:42,555 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:42,561 [INFO] Final candidates: []
2025-04-11 20:16:42,561 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:42,561 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(4)), (np.int64(17), np.int64(10)))
2025-04-11 20:16:42,562 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:42,775 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:42,776 [DEBUG] MCTS iteration 32: Rollout reward: 0.
2025-04-11 20:16:42,776 [DEBUG] MCTS iteration 32: Backed up Finish.
2025-04-11 20:16:42,783 [INFO] Final candidates: []
2025-04-11 20:16:42,783 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:42,789 [INFO] Final candidates: []
2025-04-11 20:16:42,789 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:42,789 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(13)), (np.int64(11), np.int64(12)))
2025-04-11 20:16:42,790 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:42,869 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:16:42,869 [DEBUG] MCTS iteration 33: Rollout reward: 1.
2025-04-11 20:16:42,869 [DEBUG] MCTS iteration 33: Backed up Finish.
2025-04-11 20:16:42,876 [INFO] Final candidates: []
2025-04-11 20:16:42,876 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:42,883 [INFO] Final candidates: []
2025-04-11 20:16:42,883 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:42,883 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(6)), (np.int64(6), np.int64(8)))
2025-04-11 20:16:42,884 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:42,906 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:16:42,906 [DEBUG] MCTS iteration 34: Rollout reward: 1.
2025-04-11 20:16:42,906 [DEBUG] MCTS iteration 34: Backed up Finish.
2025-04-11 20:16:42,913 [INFO] Final candidates: []
2025-04-11 20:16:42,913 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:42,920 [INFO] Final candidates: []
2025-04-11 20:16:42,920 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:42,920 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(7)), (np.int64(11), np.int64(12)))
2025-04-11 20:16:42,921 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:43,026 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:43,026 [DEBUG] MCTS iteration 35: Rollout reward: 0.
2025-04-11 20:16:43,027 [DEBUG] MCTS iteration 35: Backed up Finish.
2025-04-11 20:16:43,033 [INFO] Final candidates: []
2025-04-11 20:16:43,034 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:43,040 [INFO] Final candidates: []
2025-04-11 20:16:43,040 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:43,040 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(2), np.int64(14)), (np.int64(10), np.int64(13)))
2025-04-11 20:16:43,045 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:43,147 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:43,148 [DEBUG] MCTS iteration 36: Rollout reward: 0.
2025-04-11 20:16:43,148 [DEBUG] MCTS iteration 36: Backed up Finish.
2025-04-11 20:16:43,155 [INFO] Final candidates: []
2025-04-11 20:16:43,155 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:43,161 [INFO] Final candidates: []
2025-04-11 20:16:43,161 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:43,161 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(3), np.int64(14)), (np.int64(14), np.int64(7)))
2025-04-11 20:16:43,162 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:43,408 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:16:43,408 [DEBUG] MCTS iteration 37: Rollout reward: 1.
2025-04-11 20:16:43,408 [DEBUG] MCTS iteration 37: Backed up Finish.
2025-04-11 20:16:43,415 [INFO] Final candidates: []
2025-04-11 20:16:43,415 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:43,425 [INFO] Final candidates: []
2025-04-11 20:16:43,425 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:43,425 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(9)), (np.int64(17), np.int64(6)))
2025-04-11 20:16:43,426 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:43,559 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:43,559 [DEBUG] MCTS iteration 38: Rollout reward: 0.
2025-04-11 20:16:43,559 [DEBUG] MCTS iteration 38: Backed up Finish.
2025-04-11 20:16:43,566 [INFO] Final candidates: []
2025-04-11 20:16:43,566 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:43,573 [INFO] Final candidates: []
2025-04-11 20:16:43,573 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:43,573 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(18), np.int64(7)), (np.int64(8), np.int64(13)))
2025-04-11 20:16:43,574 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:43,816 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:43,816 [DEBUG] MCTS iteration 39: Rollout reward: 0.
2025-04-11 20:16:43,816 [DEBUG] MCTS iteration 39: Backed up Finish.
2025-04-11 20:16:43,823 [INFO] Final candidates: []
2025-04-11 20:16:43,823 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:43,830 [INFO] Final candidates: []
2025-04-11 20:16:43,830 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:43,830 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(7)), (np.int64(2), np.int64(16)))
2025-04-11 20:16:43,831 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:44,002 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:16:44,002 [DEBUG] MCTS iteration 40: Rollout reward: 1.
2025-04-11 20:16:44,002 [DEBUG] MCTS iteration 40: Backed up Finish.
2025-04-11 20:16:44,011 [INFO] Final candidates: []
2025-04-11 20:16:44,011 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:44,018 [INFO] Final candidates: []
2025-04-11 20:16:44,018 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:44,018 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(15)), (np.int64(15), np.int64(11)))
2025-04-11 20:16:44,019 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:44,202 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:44,202 [DEBUG] MCTS iteration 41: Rollout reward: 0.
2025-04-11 20:16:44,202 [DEBUG] MCTS iteration 41: Backed up Finish.
2025-04-11 20:16:44,209 [INFO] Final candidates: []
2025-04-11 20:16:44,209 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:44,216 [INFO] Final candidates: []
2025-04-11 20:16:44,216 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:44,216 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(17), np.int64(9)), (np.int64(6), np.int64(9)))
2025-04-11 20:16:44,217 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:44,421 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:16:44,421 [DEBUG] MCTS iteration 42: Rollout reward: 1.
2025-04-11 20:16:44,421 [DEBUG] MCTS iteration 42: Backed up Finish.
2025-04-11 20:16:44,428 [INFO] Final candidates: []
2025-04-11 20:16:44,428 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:44,435 [INFO] Final candidates: []
2025-04-11 20:16:44,435 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:44,435 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(18), np.int64(8)), (np.int64(10), np.int64(13)))
2025-04-11 20:16:44,436 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:44,488 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:16:44,488 [DEBUG] MCTS iteration 43: Rollout reward: 1.
2025-04-11 20:16:44,488 [DEBUG] MCTS iteration 43: Backed up Finish.
2025-04-11 20:16:44,495 [INFO] Final candidates: []
2025-04-11 20:16:44,495 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:44,502 [INFO] Final candidates: []
2025-04-11 20:16:44,502 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:44,502 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(10)), (np.int64(17), np.int64(10)))
2025-04-11 20:16:44,503 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:44,691 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:16:44,691 [DEBUG] MCTS iteration 44: Rollout reward: 1.
2025-04-11 20:16:44,691 [DEBUG] MCTS iteration 44: Backed up Finish.
2025-04-11 20:16:44,698 [INFO] Final candidates: []
2025-04-11 20:16:44,698 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:44,705 [INFO] Final candidates: []
2025-04-11 20:16:44,705 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:44,705 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(6)), (np.int64(6), np.int64(7)))
2025-04-11 20:16:44,706 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:45,049 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:16:45,049 [DEBUG] MCTS iteration 45: Rollout reward: 1.
2025-04-11 20:16:45,049 [DEBUG] MCTS iteration 45: Backed up Finish.
2025-04-11 20:16:45,056 [INFO] Final candidates: []
2025-04-11 20:16:45,056 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:45,063 [INFO] Final candidates: []
2025-04-11 20:16:45,063 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:45,063 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(13)), (np.int64(16), np.int64(5)))
2025-04-11 20:16:45,064 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:45,289 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:16:45,289 [DEBUG] MCTS iteration 46: Rollout reward: 1.
2025-04-11 20:16:45,290 [DEBUG] MCTS iteration 46: Backed up Finish.
2025-04-11 20:16:45,296 [INFO] Final candidates: []
2025-04-11 20:16:45,297 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:45,303 [INFO] Final candidates: []
2025-04-11 20:16:45,303 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:45,303 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(0)), (np.int64(18), np.int64(9)))
2025-04-11 20:16:45,304 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:45,488 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:45,488 [DEBUG] MCTS iteration 47: Rollout reward: 0.
2025-04-11 20:16:45,488 [DEBUG] MCTS iteration 47: Backed up Finish.
2025-04-11 20:16:45,495 [INFO] Final candidates: []
2025-04-11 20:16:45,495 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:45,502 [INFO] Final candidates: []
2025-04-11 20:16:45,502 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:45,502 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(13)), (np.int64(15), np.int64(8)))
2025-04-11 20:16:45,503 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:45,569 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:45,570 [DEBUG] MCTS iteration 48: Rollout reward: 0.
2025-04-11 20:16:45,570 [DEBUG] MCTS iteration 48: Backed up Finish.
2025-04-11 20:16:45,577 [INFO] Final candidates: []
2025-04-11 20:16:45,577 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:45,584 [INFO] Final candidates: []
2025-04-11 20:16:45,584 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:45,584 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(12)), (np.int64(15), np.int64(4)))
2025-04-11 20:16:45,585 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:45,777 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:45,777 [DEBUG] MCTS iteration 49: Rollout reward: 0.
2025-04-11 20:16:45,777 [DEBUG] MCTS iteration 49: Backed up Finish.
2025-04-11 20:16:45,784 [INFO] Final candidates: []
2025-04-11 20:16:45,784 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:45,791 [INFO] Final candidates: []
2025-04-11 20:16:45,791 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:45,791 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(11)), (np.int64(6), np.int64(16)))
2025-04-11 20:16:45,792 [DEBUG] MCTS iteration 50: reached a node with 0 visits.
2025-04-11 20:16:45,792 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:45,812 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:45,812 [DEBUG] MCTS iteration 50: Rollout reward: 0.
2025-04-11 20:16:45,812 [DEBUG] MCTS iteration 50: Backed up Finish.
2025-04-11 20:16:45,819 [INFO] Final candidates: []
2025-04-11 20:16:45,819 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:45,826 [INFO] Final candidates: []
2025-04-11 20:16:45,826 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:45,826 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(5)), (np.int64(10), np.int64(11)))
2025-04-11 20:16:45,827 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:46,122 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:46,122 [DEBUG] MCTS iteration 51: Rollout reward: 0.
2025-04-11 20:16:46,122 [DEBUG] MCTS iteration 51: Backed up Finish.
2025-04-11 20:16:46,129 [INFO] Final candidates: []
2025-04-11 20:16:46,129 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:46,135 [INFO] Final candidates: []
2025-04-11 20:16:46,135 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:46,136 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(3), np.int64(17)), (np.int64(7), np.int64(8)))
2025-04-11 20:16:46,142 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:46,193 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:46,194 [DEBUG] MCTS iteration 52: Rollout reward: 0.
2025-04-11 20:16:46,194 [DEBUG] MCTS iteration 52: Backed up Finish.
2025-04-11 20:16:46,201 [INFO] Final candidates: []
2025-04-11 20:16:46,201 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:46,208 [INFO] Final candidates: []
2025-04-11 20:16:46,208 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:46,208 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(3), np.int64(14)), (np.int64(5), np.int64(11)))
2025-04-11 20:16:46,209 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:46,357 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:16:46,357 [DEBUG] MCTS iteration 53: Rollout reward: 1.
2025-04-11 20:16:46,357 [DEBUG] MCTS iteration 53: Backed up Finish.
2025-04-11 20:16:46,364 [INFO] Final candidates: []
2025-04-11 20:16:46,364 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:46,371 [INFO] Final candidates: []
2025-04-11 20:16:46,371 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:46,371 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(18), np.int64(8)), (np.int64(2), np.int64(14)))
2025-04-11 20:16:46,372 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:46,465 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:46,465 [DEBUG] MCTS iteration 54: Rollout reward: 0.
2025-04-11 20:16:46,466 [DEBUG] MCTS iteration 54: Backed up Finish.
2025-04-11 20:16:46,472 [INFO] Final candidates: []
2025-04-11 20:16:46,473 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:46,479 [INFO] Final candidates: []
2025-04-11 20:16:46,479 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:46,479 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(12)), (np.int64(14), np.int64(6)))
2025-04-11 20:16:46,480 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:46,567 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:46,567 [DEBUG] MCTS iteration 55: Rollout reward: 0.
2025-04-11 20:16:46,567 [DEBUG] MCTS iteration 55: Backed up Finish.
2025-04-11 20:16:46,578 [INFO] Final candidates: []
2025-04-11 20:16:46,578 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:46,585 [INFO] Final candidates: []
2025-04-11 20:16:46,585 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:46,585 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(14)), (np.int64(10), np.int64(13)))
2025-04-11 20:16:46,586 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:46,784 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:46,784 [DEBUG] MCTS iteration 56: Rollout reward: 0.
2025-04-11 20:16:46,784 [DEBUG] MCTS iteration 56: Backed up Finish.
2025-04-11 20:16:46,791 [INFO] Final candidates: []
2025-04-11 20:16:46,791 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:46,798 [INFO] Final candidates: []
2025-04-11 20:16:46,798 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:46,798 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(3), np.int64(17)), (np.int64(9), np.int64(15)))
2025-04-11 20:16:46,799 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:46,868 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:16:46,868 [DEBUG] MCTS iteration 57: Rollout reward: 1.
2025-04-11 20:16:46,868 [DEBUG] MCTS iteration 57: Backed up Finish.
2025-04-11 20:16:46,875 [INFO] Final candidates: []
2025-04-11 20:16:46,875 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:46,882 [INFO] Final candidates: []
2025-04-11 20:16:46,882 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:46,882 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(9)), (np.int64(16), np.int64(7)))
2025-04-11 20:16:46,883 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:47,001 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:47,001 [DEBUG] MCTS iteration 58: Rollout reward: 0.
2025-04-11 20:16:47,001 [DEBUG] MCTS iteration 58: Backed up Finish.
2025-04-11 20:16:47,008 [INFO] Final candidates: []
2025-04-11 20:16:47,008 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:47,015 [INFO] Final candidates: []
2025-04-11 20:16:47,015 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:47,015 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(3), np.int64(16)), (np.int64(9), np.int64(6)))
2025-04-11 20:16:47,016 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:47,280 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:47,280 [DEBUG] MCTS iteration 59: Rollout reward: 0.
2025-04-11 20:16:47,280 [DEBUG] MCTS iteration 59: Backed up Finish.
2025-04-11 20:16:47,287 [INFO] Final candidates: []
2025-04-11 20:16:47,287 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:47,294 [INFO] Final candidates: []
2025-04-11 20:16:47,294 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:47,294 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(10)), (np.int64(14), np.int64(10)))
2025-04-11 20:16:47,295 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:47,482 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:16:47,483 [DEBUG] MCTS iteration 60: Rollout reward: 1.
2025-04-11 20:16:47,483 [DEBUG] MCTS iteration 60: Backed up Finish.
2025-04-11 20:16:47,490 [INFO] Final candidates: []
2025-04-11 20:16:47,490 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:47,496 [INFO] Final candidates: []
2025-04-11 20:16:47,496 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:47,496 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(6)), (np.int64(9), np.int64(14)))
2025-04-11 20:16:47,497 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:47,703 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:47,703 [DEBUG] MCTS iteration 61: Rollout reward: 0.
2025-04-11 20:16:47,703 [DEBUG] MCTS iteration 61: Backed up Finish.
2025-04-11 20:16:47,711 [INFO] Final candidates: []
2025-04-11 20:16:47,711 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:47,718 [INFO] Final candidates: []
2025-04-11 20:16:47,718 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:47,718 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(6)), (np.int64(7), np.int64(6)))
2025-04-11 20:16:47,719 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:47,919 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:47,919 [DEBUG] MCTS iteration 62: Rollout reward: 0.
2025-04-11 20:16:47,919 [DEBUG] MCTS iteration 62: Backed up Finish.
2025-04-11 20:16:47,926 [INFO] Final candidates: []
2025-04-11 20:16:47,927 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:47,933 [INFO] Final candidates: []
2025-04-11 20:16:47,933 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:47,933 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(6)), (np.int64(6), np.int64(8)))
2025-04-11 20:16:47,934 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:48,091 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:48,091 [DEBUG] MCTS iteration 63: Rollout reward: 0.
2025-04-11 20:16:48,091 [DEBUG] MCTS iteration 63: Backed up Finish.
2025-04-11 20:16:48,099 [INFO] Final candidates: []
2025-04-11 20:16:48,099 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:48,105 [INFO] Final candidates: []
2025-04-11 20:16:48,105 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:48,105 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(7)), (np.int64(4), np.int64(17)))
2025-04-11 20:16:48,106 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:48,240 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:16:48,240 [DEBUG] MCTS iteration 64: Rollout reward: 1.
2025-04-11 20:16:48,240 [DEBUG] MCTS iteration 64: Backed up Finish.
2025-04-11 20:16:48,247 [INFO] Final candidates: []
2025-04-11 20:16:48,247 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:48,254 [INFO] Final candidates: []
2025-04-11 20:16:48,254 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:48,254 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(0)), (np.int64(18), np.int64(8)))
2025-04-11 20:16:48,255 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:48,339 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:48,339 [DEBUG] MCTS iteration 65: Rollout reward: 0.
2025-04-11 20:16:48,339 [DEBUG] MCTS iteration 65: Backed up Finish.
2025-04-11 20:16:48,346 [INFO] Final candidates: []
2025-04-11 20:16:48,346 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:48,353 [INFO] Final candidates: []
2025-04-11 20:16:48,353 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:48,353 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(6)), (np.int64(11), np.int64(12)))
2025-04-11 20:16:48,354 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:48,526 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:16:48,526 [DEBUG] MCTS iteration 66: Rollout reward: 1.
2025-04-11 20:16:48,526 [DEBUG] MCTS iteration 66: Backed up Finish.
2025-04-11 20:16:48,533 [INFO] Final candidates: []
2025-04-11 20:16:48,533 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:48,540 [INFO] Final candidates: []
2025-04-11 20:16:48,540 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:48,540 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(14)), (np.int64(13), np.int64(6)))
2025-04-11 20:16:48,541 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:48,761 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:48,761 [DEBUG] MCTS iteration 67: Rollout reward: 0.
2025-04-11 20:16:48,761 [DEBUG] MCTS iteration 67: Backed up Finish.
2025-04-11 20:16:48,769 [INFO] Final candidates: []
2025-04-11 20:16:48,769 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:48,776 [INFO] Final candidates: []
2025-04-11 20:16:48,776 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:48,776 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(17), np.int64(9)), (np.int64(15), np.int64(12)))
2025-04-11 20:16:48,777 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:48,931 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:16:48,931 [DEBUG] MCTS iteration 68: Rollout reward: 1.
2025-04-11 20:16:48,931 [DEBUG] MCTS iteration 68: Backed up Finish.
2025-04-11 20:16:48,938 [INFO] Final candidates: []
2025-04-11 20:16:48,938 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:48,945 [INFO] Final candidates: []
2025-04-11 20:16:48,945 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:48,945 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(10)), (np.int64(5), np.int64(15)))
2025-04-11 20:16:48,946 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:49,049 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:49,049 [DEBUG] MCTS iteration 69: Rollout reward: 0.
2025-04-11 20:16:49,049 [DEBUG] MCTS iteration 69: Backed up Finish.
2025-04-11 20:16:49,056 [INFO] Final candidates: []
2025-04-11 20:16:49,056 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:49,063 [INFO] Final candidates: []
2025-04-11 20:16:49,063 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:49,063 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(14)), (np.int64(4), np.int64(10)))
2025-04-11 20:16:49,064 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:49,185 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:16:49,186 [DEBUG] MCTS iteration 70: Rollout reward: 1.
2025-04-11 20:16:49,186 [DEBUG] MCTS iteration 70: Backed up Finish.
2025-04-11 20:16:49,193 [INFO] Final candidates: []
2025-04-11 20:16:49,193 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:49,200 [INFO] Final candidates: []
2025-04-11 20:16:49,200 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:49,200 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(18)), (np.int64(3), np.int64(16)))
2025-04-11 20:16:49,201 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:49,371 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:49,372 [DEBUG] MCTS iteration 71: Rollout reward: 0.
2025-04-11 20:16:49,372 [DEBUG] MCTS iteration 71: Backed up Finish.
2025-04-11 20:16:49,379 [INFO] Final candidates: []
2025-04-11 20:16:49,379 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:49,385 [INFO] Final candidates: []
2025-04-11 20:16:49,385 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:49,385 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(7)), (np.int64(16), np.int64(1)))
2025-04-11 20:16:49,386 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:49,417 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:16:49,417 [DEBUG] MCTS iteration 72: Rollout reward: 1.
2025-04-11 20:16:49,417 [DEBUG] MCTS iteration 72: Backed up Finish.
2025-04-11 20:16:49,424 [INFO] Final candidates: []
2025-04-11 20:16:49,424 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:49,430 [INFO] Final candidates: []
2025-04-11 20:16:49,430 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:49,430 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(7)), (np.int64(14), np.int64(4)))
2025-04-11 20:16:49,431 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:49,549 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:16:49,549 [DEBUG] MCTS iteration 73: Rollout reward: 1.
2025-04-11 20:16:49,549 [DEBUG] MCTS iteration 73: Backed up Finish.
2025-04-11 20:16:49,556 [INFO] Final candidates: []
2025-04-11 20:16:49,556 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:49,563 [INFO] Final candidates: []
2025-04-11 20:16:49,563 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:49,563 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(14)), (np.int64(16), np.int64(4)))
2025-04-11 20:16:49,564 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:49,707 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:16:49,707 [DEBUG] MCTS iteration 74: Rollout reward: 1.
2025-04-11 20:16:49,707 [DEBUG] MCTS iteration 74: Backed up Finish.
2025-04-11 20:16:49,714 [INFO] Final candidates: []
2025-04-11 20:16:49,714 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:49,721 [INFO] Final candidates: []
2025-04-11 20:16:49,721 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:49,721 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(15)), (np.int64(13), np.int64(11)))
2025-04-11 20:16:49,722 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:49,963 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:49,963 [DEBUG] MCTS iteration 75: Rollout reward: 0.
2025-04-11 20:16:49,963 [DEBUG] MCTS iteration 75: Backed up Finish.
2025-04-11 20:16:49,970 [INFO] Final candidates: []
2025-04-11 20:16:49,970 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:49,977 [INFO] Final candidates: []
2025-04-11 20:16:49,977 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:49,977 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(14)), (np.int64(9), np.int64(15)))
2025-04-11 20:16:49,978 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:50,286 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:16:50,286 [DEBUG] MCTS iteration 76: Rollout reward: 1.
2025-04-11 20:16:50,286 [DEBUG] MCTS iteration 76: Backed up Finish.
2025-04-11 20:16:50,293 [INFO] Final candidates: []
2025-04-11 20:16:50,293 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:50,300 [INFO] Final candidates: []
2025-04-11 20:16:50,300 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:50,300 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(18), np.int64(1)), (np.int64(6), np.int64(6)))
2025-04-11 20:16:50,301 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:50,445 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:50,445 [DEBUG] MCTS iteration 77: Rollout reward: 0.
2025-04-11 20:16:50,445 [DEBUG] MCTS iteration 77: Backed up Finish.
2025-04-11 20:16:50,452 [INFO] Final candidates: []
2025-04-11 20:16:50,452 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:50,459 [INFO] Final candidates: []
2025-04-11 20:16:50,459 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:50,459 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(13)), (np.int64(4), np.int64(13)))
2025-04-11 20:16:50,460 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:50,543 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:16:50,543 [DEBUG] MCTS iteration 78: Rollout reward: 1.
2025-04-11 20:16:50,543 [DEBUG] MCTS iteration 78: Backed up Finish.
2025-04-11 20:16:50,550 [INFO] Final candidates: []
2025-04-11 20:16:50,550 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:50,557 [INFO] Final candidates: []
2025-04-11 20:16:50,557 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:50,557 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(9)), (np.int64(10), np.int64(13)))
2025-04-11 20:16:50,558 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:50,780 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:50,780 [DEBUG] MCTS iteration 79: Rollout reward: 0.
2025-04-11 20:16:50,780 [DEBUG] MCTS iteration 79: Backed up Finish.
2025-04-11 20:16:50,787 [INFO] Final candidates: []
2025-04-11 20:16:50,787 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:50,794 [INFO] Final candidates: []
2025-04-11 20:16:50,794 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:50,794 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(17), np.int64(2)), (np.int64(15), np.int64(8)))
2025-04-11 20:16:50,795 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:50,832 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:16:50,832 [DEBUG] MCTS iteration 80: Rollout reward: 1.
2025-04-11 20:16:50,832 [DEBUG] MCTS iteration 80: Backed up Finish.
2025-04-11 20:16:50,839 [INFO] Final candidates: []
2025-04-11 20:16:50,839 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:50,848 [INFO] Final candidates: []
2025-04-11 20:16:50,848 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:50,848 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(7)), (np.int64(17), np.int64(2)))
2025-04-11 20:16:50,849 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:50,968 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:16:50,968 [DEBUG] MCTS iteration 81: Rollout reward: 1.
2025-04-11 20:16:50,968 [DEBUG] MCTS iteration 81: Backed up Finish.
2025-04-11 20:16:50,975 [INFO] Final candidates: []
2025-04-11 20:16:50,975 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:50,982 [INFO] Final candidates: []
2025-04-11 20:16:50,982 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:50,982 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(15)), (np.int64(6), np.int64(7)))
2025-04-11 20:16:50,983 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:51,076 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:16:51,076 [DEBUG] MCTS iteration 82: Rollout reward: 1.
2025-04-11 20:16:51,076 [DEBUG] MCTS iteration 82: Backed up Finish.
2025-04-11 20:16:51,083 [INFO] Final candidates: []
2025-04-11 20:16:51,083 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:51,090 [INFO] Final candidates: []
2025-04-11 20:16:51,090 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:51,090 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(17), np.int64(9)), (np.int64(18), np.int64(7)))
2025-04-11 20:16:51,091 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:51,301 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:51,301 [DEBUG] MCTS iteration 83: Rollout reward: 0.
2025-04-11 20:16:51,301 [DEBUG] MCTS iteration 83: Backed up Finish.
2025-04-11 20:16:51,308 [INFO] Final candidates: []
2025-04-11 20:16:51,308 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:51,315 [INFO] Final candidates: []
2025-04-11 20:16:51,315 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:51,315 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(17), np.int64(5)), (np.int64(16), np.int64(5)))
2025-04-11 20:16:51,316 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:51,522 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:51,522 [DEBUG] MCTS iteration 84: Rollout reward: 0.
2025-04-11 20:16:51,522 [DEBUG] MCTS iteration 84: Backed up Finish.
2025-04-11 20:16:51,529 [INFO] Final candidates: []
2025-04-11 20:16:51,529 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:51,535 [INFO] Final candidates: []
2025-04-11 20:16:51,535 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:51,536 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(18), np.int64(2)), (np.int64(4), np.int64(10)))
2025-04-11 20:16:51,536 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:51,781 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:16:51,781 [DEBUG] MCTS iteration 85: Rollout reward: 1.
2025-04-11 20:16:51,781 [DEBUG] MCTS iteration 85: Backed up Finish.
2025-04-11 20:16:51,788 [INFO] Final candidates: []
2025-04-11 20:16:51,788 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:51,795 [INFO] Final candidates: []
2025-04-11 20:16:51,795 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:51,795 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(8)), (np.int64(3), np.int64(16)))
2025-04-11 20:16:51,796 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:51,965 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:51,965 [DEBUG] MCTS iteration 86: Rollout reward: 0.
2025-04-11 20:16:51,965 [DEBUG] MCTS iteration 86: Backed up Finish.
2025-04-11 20:16:51,972 [INFO] Final candidates: []
2025-04-11 20:16:51,972 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:51,979 [INFO] Final candidates: []
2025-04-11 20:16:51,979 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:51,979 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(17), np.int64(7)), (np.int64(16), np.int64(8)))
2025-04-11 20:16:51,980 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:52,002 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:52,002 [DEBUG] MCTS iteration 87: Rollout reward: 0.
2025-04-11 20:16:52,002 [DEBUG] MCTS iteration 87: Backed up Finish.
2025-04-11 20:16:52,009 [INFO] Final candidates: []
2025-04-11 20:16:52,009 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:52,016 [INFO] Final candidates: []
2025-04-11 20:16:52,016 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:52,016 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(18), np.int64(8)), (np.int64(16), np.int64(4)))
2025-04-11 20:16:52,017 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:52,105 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:52,105 [DEBUG] MCTS iteration 88: Rollout reward: 0.
2025-04-11 20:16:52,105 [DEBUG] MCTS iteration 88: Backed up Finish.
2025-04-11 20:16:52,114 [INFO] Final candidates: []
2025-04-11 20:16:52,114 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:52,124 [INFO] Final candidates: []
2025-04-11 20:16:52,124 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:52,124 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(3)), (np.int64(16), np.int64(11)))
2025-04-11 20:16:52,126 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:52,328 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:52,328 [DEBUG] MCTS iteration 89: Rollout reward: 0.
2025-04-11 20:16:52,328 [DEBUG] MCTS iteration 89: Backed up Finish.
2025-04-11 20:16:52,335 [INFO] Final candidates: []
2025-04-11 20:16:52,335 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:52,341 [INFO] Final candidates: []
2025-04-11 20:16:52,341 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:52,342 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(13)), (np.int64(10), np.int64(13)))
2025-04-11 20:16:52,342 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:52,590 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:52,590 [DEBUG] MCTS iteration 90: Rollout reward: 0.
2025-04-11 20:16:52,590 [DEBUG] MCTS iteration 90: Backed up Finish.
2025-04-11 20:16:52,597 [INFO] Final candidates: []
2025-04-11 20:16:52,597 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:52,604 [INFO] Final candidates: []
2025-04-11 20:16:52,604 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:52,604 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(14)), (np.int64(9), np.int64(6)))
2025-04-11 20:16:52,605 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:52,844 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:52,844 [DEBUG] MCTS iteration 91: Rollout reward: 0.
2025-04-11 20:16:52,844 [DEBUG] MCTS iteration 91: Backed up Finish.
2025-04-11 20:16:52,851 [INFO] Final candidates: []
2025-04-11 20:16:52,851 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:52,858 [INFO] Final candidates: []
2025-04-11 20:16:52,858 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:52,858 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(12)), (np.int64(16), np.int64(6)))
2025-04-11 20:16:52,859 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:52,979 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:16:52,979 [DEBUG] MCTS iteration 92: Rollout reward: 1.
2025-04-11 20:16:52,979 [DEBUG] MCTS iteration 92: Backed up Finish.
2025-04-11 20:16:52,986 [INFO] Final candidates: []
2025-04-11 20:16:52,986 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:52,993 [INFO] Final candidates: []
2025-04-11 20:16:52,993 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:52,993 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(5)), (np.int64(18), np.int64(2)))
2025-04-11 20:16:52,994 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:53,275 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:16:53,275 [DEBUG] MCTS iteration 93: Rollout reward: 1.
2025-04-11 20:16:53,275 [DEBUG] MCTS iteration 93: Backed up Finish.
2025-04-11 20:16:53,282 [INFO] Final candidates: []
2025-04-11 20:16:53,282 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:53,289 [INFO] Final candidates: []
2025-04-11 20:16:53,289 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:53,289 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(3), np.int64(13)), (np.int64(13), np.int64(10)))
2025-04-11 20:16:53,290 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:53,560 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:53,560 [DEBUG] MCTS iteration 94: Rollout reward: 0.
2025-04-11 20:16:53,560 [DEBUG] MCTS iteration 94: Backed up Finish.
2025-04-11 20:16:53,567 [INFO] Final candidates: []
2025-04-11 20:16:53,567 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:53,574 [INFO] Final candidates: []
2025-04-11 20:16:53,574 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:53,574 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(14)), (np.int64(16), np.int64(7)))
2025-04-11 20:16:53,575 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:53,704 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:16:53,704 [DEBUG] MCTS iteration 95: Rollout reward: 1.
2025-04-11 20:16:53,704 [DEBUG] MCTS iteration 95: Backed up Finish.
2025-04-11 20:16:53,711 [INFO] Final candidates: []
2025-04-11 20:16:53,711 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:53,718 [INFO] Final candidates: []
2025-04-11 20:16:53,718 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:53,718 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(14)), (np.int64(4), np.int64(10)))
2025-04-11 20:16:53,719 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:53,986 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:53,986 [DEBUG] MCTS iteration 96: Rollout reward: 0.
2025-04-11 20:16:53,986 [DEBUG] MCTS iteration 96: Backed up Finish.
2025-04-11 20:16:53,994 [INFO] Final candidates: []
2025-04-11 20:16:53,994 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:54,000 [INFO] Final candidates: []
2025-04-11 20:16:54,000 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:54,000 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(14)), (np.int64(5), np.int64(17)))
2025-04-11 20:16:54,001 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:54,272 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:54,272 [DEBUG] MCTS iteration 97: Rollout reward: 0.
2025-04-11 20:16:54,272 [DEBUG] MCTS iteration 97: Backed up Finish.
2025-04-11 20:16:54,279 [INFO] Final candidates: []
2025-04-11 20:16:54,279 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:54,286 [INFO] Final candidates: []
2025-04-11 20:16:54,286 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:54,286 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(10)), (np.int64(8), np.int64(6)))
2025-04-11 20:16:54,287 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:54,468 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:16:54,468 [DEBUG] MCTS iteration 98: Rollout reward: 1.
2025-04-11 20:16:54,468 [DEBUG] MCTS iteration 98: Backed up Finish.
2025-04-11 20:16:54,475 [INFO] Final candidates: []
2025-04-11 20:16:54,475 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:16:54,482 [INFO] Final candidates: []
2025-04-11 20:16:54,482 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:16:54,482 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(18), np.int64(1)), (np.int64(13), np.int64(14)))
2025-04-11 20:16:54,483 [INFO] Default policy: Starting random playout.
2025-04-11 20:16:54,630 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:16:54,630 [DEBUG] MCTS iteration 99: Rollout reward: 0.
2025-04-11 20:16:54,630 [DEBUG] MCTS iteration 99: Backed up Finish.
2025-04-11 20:16:54,630 [INFO] MCTS: Search completed after 100 iterations.
2025-04-11 20:16:54,630 [DEBUG] MCTS: BEST ((np.int64(10), np.int64(6)), (np.int64(6), np.int64(8))) with 1 visits.
2025-04-11 20:16:54,630 [INFO] MCTS: Search finished. Best move selected with 1 visits.
2025-04-11 20:16:54,630 [INFO] MCTS selected move: G11,J7
2025-04-11 20:16:54,630 [INFO] ===============NEW MOVE================
2025-04-11 20:17:22,849 [INFO] Starting pre-MCTS candidate collection.
2025-04-11 20:17:22,856 [INFO] Final candidates: []
2025-04-11 20:17:22,856 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:22,859 [DEBUG] board coords: [(12, 8), (13, 8), (14, 8), (15, 8), (16, 8), (17, 8)]
2025-04-11 20:17:22,859 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0), np.int64(2)]
2025-04-11 20:17:22,859 [DEBUG] check_window_intermediate_custom: empty_cells=[(15, 8), (16, 8)]
2025-04-11 20:17:22,859 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 0 0 2] with coords [(12, 8), (13, 8), (14, 8), (15, 8), (16, 8), (17, 8)] triggers candidate.
2025-04-11 20:17:22,859 [DEBUG] check_window_intermediate_custom: valid_move=[(15, 8), (16, 8)]
2025-04-11 20:17:22,863 [INFO] Final candidates: [(16, 8), (15, 8)]
2025-04-11 20:17:22,863 [INFO] Phase defense: Collected 1unique candidate(s):[((16, 8), (15, 8))]
2025-04-11 20:17:22,863 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 20:17:22,863 [INFO] MCTS: Starting search for 100 iterations.
2025-04-11 20:17:22,866 [DEBUG] board coords: [(12, 8), (13, 8), (14, 8), (15, 8), (16, 8), (17, 8)]
2025-04-11 20:17:22,866 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0), np.int64(2)]
2025-04-11 20:17:22,866 [DEBUG] check_window_intermediate_custom: empty_cells=[(15, 8), (16, 8)]
2025-04-11 20:17:22,866 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 0 0 2] with coords [(12, 8), (13, 8), (14, 8), (15, 8), (16, 8), (17, 8)] triggers candidate.
2025-04-11 20:17:22,870 [INFO] Final candidates: [(16, 8), (15, 8)]
2025-04-11 20:17:22,871 [INFO] Phase win: Collected 1unique candidate(s):[((16, 8), (15, 8))]
2025-04-11 20:17:22,881 [INFO] Final candidates: []
2025-04-11 20:17:22,881 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:22,881 [DEBUG] Tree_policy iteration 1: Expanding move ((16, 8), (15, 8))
2025-04-11 20:17:22,882 [DEBUG] MCTS iteration 0: reached a node with 0 visits.
2025-04-11 20:17:22,882 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,882 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,882 [DEBUG] MCTS iteration 0: Rollout reward: 1.
2025-04-11 20:17:22,882 [DEBUG] MCTS iteration 0: Backed up Finish.
2025-04-11 20:17:22,883 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,883 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,883 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,883 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,883 [DEBUG] MCTS iteration 1: Rollout reward: 1.
2025-04-11 20:17:22,883 [DEBUG] MCTS iteration 1: Backed up Finish.
2025-04-11 20:17:22,883 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,883 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,883 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,883 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,883 [DEBUG] MCTS iteration 2: Rollout reward: 1.
2025-04-11 20:17:22,883 [DEBUG] MCTS iteration 2: Backed up Finish.
2025-04-11 20:17:22,883 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,883 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,883 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,884 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,884 [DEBUG] MCTS iteration 3: Rollout reward: 1.
2025-04-11 20:17:22,884 [DEBUG] MCTS iteration 3: Backed up Finish.
2025-04-11 20:17:22,884 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,884 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,884 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,884 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,884 [DEBUG] MCTS iteration 4: Rollout reward: 1.
2025-04-11 20:17:22,884 [DEBUG] MCTS iteration 4: Backed up Finish.
2025-04-11 20:17:22,884 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,884 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,884 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,884 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,884 [DEBUG] MCTS iteration 5: Rollout reward: 1.
2025-04-11 20:17:22,884 [DEBUG] MCTS iteration 5: Backed up Finish.
2025-04-11 20:17:22,885 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,885 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,885 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,885 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,885 [DEBUG] MCTS iteration 6: Rollout reward: 1.
2025-04-11 20:17:22,885 [DEBUG] MCTS iteration 6: Backed up Finish.
2025-04-11 20:17:22,885 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,885 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,885 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,885 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,885 [DEBUG] MCTS iteration 7: Rollout reward: 1.
2025-04-11 20:17:22,885 [DEBUG] MCTS iteration 7: Backed up Finish.
2025-04-11 20:17:22,885 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,885 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,885 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,886 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,886 [DEBUG] MCTS iteration 8: Rollout reward: 1.
2025-04-11 20:17:22,886 [DEBUG] MCTS iteration 8: Backed up Finish.
2025-04-11 20:17:22,886 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,886 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,886 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,886 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,886 [DEBUG] MCTS iteration 9: Rollout reward: 1.
2025-04-11 20:17:22,886 [DEBUG] MCTS iteration 9: Backed up Finish.
2025-04-11 20:17:22,886 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,886 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,886 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,886 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,886 [DEBUG] MCTS iteration 10: Rollout reward: 1.
2025-04-11 20:17:22,886 [DEBUG] MCTS iteration 10: Backed up Finish.
2025-04-11 20:17:22,886 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,887 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,887 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,887 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,887 [DEBUG] MCTS iteration 11: Rollout reward: 1.
2025-04-11 20:17:22,887 [DEBUG] MCTS iteration 11: Backed up Finish.
2025-04-11 20:17:22,887 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,887 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,887 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,887 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,887 [DEBUG] MCTS iteration 12: Rollout reward: 1.
2025-04-11 20:17:22,887 [DEBUG] MCTS iteration 12: Backed up Finish.
2025-04-11 20:17:22,887 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,887 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,887 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,887 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,887 [DEBUG] MCTS iteration 13: Rollout reward: 1.
2025-04-11 20:17:22,888 [DEBUG] MCTS iteration 13: Backed up Finish.
2025-04-11 20:17:22,888 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,888 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,888 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,888 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,888 [DEBUG] MCTS iteration 14: Rollout reward: 1.
2025-04-11 20:17:22,888 [DEBUG] MCTS iteration 14: Backed up Finish.
2025-04-11 20:17:22,888 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,888 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,888 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,888 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,888 [DEBUG] MCTS iteration 15: Rollout reward: 1.
2025-04-11 20:17:22,888 [DEBUG] MCTS iteration 15: Backed up Finish.
2025-04-11 20:17:22,888 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,888 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,888 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,889 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,889 [DEBUG] MCTS iteration 16: Rollout reward: 1.
2025-04-11 20:17:22,889 [DEBUG] MCTS iteration 16: Backed up Finish.
2025-04-11 20:17:22,889 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,889 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,889 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,889 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,889 [DEBUG] MCTS iteration 17: Rollout reward: 1.
2025-04-11 20:17:22,889 [DEBUG] MCTS iteration 17: Backed up Finish.
2025-04-11 20:17:22,889 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,889 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,889 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,889 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,889 [DEBUG] MCTS iteration 18: Rollout reward: 1.
2025-04-11 20:17:22,889 [DEBUG] MCTS iteration 18: Backed up Finish.
2025-04-11 20:17:22,890 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,890 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,890 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,890 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,890 [DEBUG] MCTS iteration 19: Rollout reward: 1.
2025-04-11 20:17:22,890 [DEBUG] MCTS iteration 19: Backed up Finish.
2025-04-11 20:17:22,893 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,893 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,893 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,893 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,893 [DEBUG] MCTS iteration 20: Rollout reward: 1.
2025-04-11 20:17:22,893 [DEBUG] MCTS iteration 20: Backed up Finish.
2025-04-11 20:17:22,893 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,893 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,893 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,893 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,893 [DEBUG] MCTS iteration 21: Rollout reward: 1.
2025-04-11 20:17:22,893 [DEBUG] MCTS iteration 21: Backed up Finish.
2025-04-11 20:17:22,893 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,893 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,893 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,894 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,894 [DEBUG] MCTS iteration 22: Rollout reward: 1.
2025-04-11 20:17:22,894 [DEBUG] MCTS iteration 22: Backed up Finish.
2025-04-11 20:17:22,894 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,894 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,894 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,894 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,894 [DEBUG] MCTS iteration 23: Rollout reward: 1.
2025-04-11 20:17:22,894 [DEBUG] MCTS iteration 23: Backed up Finish.
2025-04-11 20:17:22,894 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,894 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,894 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,894 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,894 [DEBUG] MCTS iteration 24: Rollout reward: 1.
2025-04-11 20:17:22,894 [DEBUG] MCTS iteration 24: Backed up Finish.
2025-04-11 20:17:22,894 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,895 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,895 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,895 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,895 [DEBUG] MCTS iteration 25: Rollout reward: 1.
2025-04-11 20:17:22,895 [DEBUG] MCTS iteration 25: Backed up Finish.
2025-04-11 20:17:22,895 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,895 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,895 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,895 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,895 [DEBUG] MCTS iteration 26: Rollout reward: 1.
2025-04-11 20:17:22,895 [DEBUG] MCTS iteration 26: Backed up Finish.
2025-04-11 20:17:22,895 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,895 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,895 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,896 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,896 [DEBUG] MCTS iteration 27: Rollout reward: 1.
2025-04-11 20:17:22,896 [DEBUG] MCTS iteration 27: Backed up Finish.
2025-04-11 20:17:22,896 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,896 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,896 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,896 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,896 [DEBUG] MCTS iteration 28: Rollout reward: 1.
2025-04-11 20:17:22,896 [DEBUG] MCTS iteration 28: Backed up Finish.
2025-04-11 20:17:22,896 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,896 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,896 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,896 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,896 [DEBUG] MCTS iteration 29: Rollout reward: 1.
2025-04-11 20:17:22,896 [DEBUG] MCTS iteration 29: Backed up Finish.
2025-04-11 20:17:22,896 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,896 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,897 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,897 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,897 [DEBUG] MCTS iteration 30: Rollout reward: 1.
2025-04-11 20:17:22,897 [DEBUG] MCTS iteration 30: Backed up Finish.
2025-04-11 20:17:22,897 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,897 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,897 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,897 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,897 [DEBUG] MCTS iteration 31: Rollout reward: 1.
2025-04-11 20:17:22,897 [DEBUG] MCTS iteration 31: Backed up Finish.
2025-04-11 20:17:22,897 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,897 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,897 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,897 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,897 [DEBUG] MCTS iteration 32: Rollout reward: 1.
2025-04-11 20:17:22,897 [DEBUG] MCTS iteration 32: Backed up Finish.
2025-04-11 20:17:22,898 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,898 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,898 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,898 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,898 [DEBUG] MCTS iteration 33: Rollout reward: 1.
2025-04-11 20:17:22,898 [DEBUG] MCTS iteration 33: Backed up Finish.
2025-04-11 20:17:22,898 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,898 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,898 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,898 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,898 [DEBUG] MCTS iteration 34: Rollout reward: 1.
2025-04-11 20:17:22,898 [DEBUG] MCTS iteration 34: Backed up Finish.
2025-04-11 20:17:22,898 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,898 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,898 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,899 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,899 [DEBUG] MCTS iteration 35: Rollout reward: 1.
2025-04-11 20:17:22,899 [DEBUG] MCTS iteration 35: Backed up Finish.
2025-04-11 20:17:22,899 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,899 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,899 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,899 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,899 [DEBUG] MCTS iteration 36: Rollout reward: 1.
2025-04-11 20:17:22,899 [DEBUG] MCTS iteration 36: Backed up Finish.
2025-04-11 20:17:22,899 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,899 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,899 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,899 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,899 [DEBUG] MCTS iteration 37: Rollout reward: 1.
2025-04-11 20:17:22,899 [DEBUG] MCTS iteration 37: Backed up Finish.
2025-04-11 20:17:22,899 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,900 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,900 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,900 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,900 [DEBUG] MCTS iteration 38: Rollout reward: 1.
2025-04-11 20:17:22,900 [DEBUG] MCTS iteration 38: Backed up Finish.
2025-04-11 20:17:22,900 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,900 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,900 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,901 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,901 [DEBUG] MCTS iteration 39: Rollout reward: 1.
2025-04-11 20:17:22,901 [DEBUG] MCTS iteration 39: Backed up Finish.
2025-04-11 20:17:22,901 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,901 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,901 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,901 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,901 [DEBUG] MCTS iteration 40: Rollout reward: 1.
2025-04-11 20:17:22,901 [DEBUG] MCTS iteration 40: Backed up Finish.
2025-04-11 20:17:22,901 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,901 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,901 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,901 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,901 [DEBUG] MCTS iteration 41: Rollout reward: 1.
2025-04-11 20:17:22,901 [DEBUG] MCTS iteration 41: Backed up Finish.
2025-04-11 20:17:22,901 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,901 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,902 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,902 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,902 [DEBUG] MCTS iteration 42: Rollout reward: 1.
2025-04-11 20:17:22,902 [DEBUG] MCTS iteration 42: Backed up Finish.
2025-04-11 20:17:22,902 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,902 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,902 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,902 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,902 [DEBUG] MCTS iteration 43: Rollout reward: 1.
2025-04-11 20:17:22,902 [DEBUG] MCTS iteration 43: Backed up Finish.
2025-04-11 20:17:22,902 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,902 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,902 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,902 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,902 [DEBUG] MCTS iteration 44: Rollout reward: 1.
2025-04-11 20:17:22,902 [DEBUG] MCTS iteration 44: Backed up Finish.
2025-04-11 20:17:22,903 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,903 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,903 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,903 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,903 [DEBUG] MCTS iteration 45: Rollout reward: 1.
2025-04-11 20:17:22,903 [DEBUG] MCTS iteration 45: Backed up Finish.
2025-04-11 20:17:22,903 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,903 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,903 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,903 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,903 [DEBUG] MCTS iteration 46: Rollout reward: 1.
2025-04-11 20:17:22,903 [DEBUG] MCTS iteration 46: Backed up Finish.
2025-04-11 20:17:22,903 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,903 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,903 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,904 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,904 [DEBUG] MCTS iteration 47: Rollout reward: 1.
2025-04-11 20:17:22,904 [DEBUG] MCTS iteration 47: Backed up Finish.
2025-04-11 20:17:22,904 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,904 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,904 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,904 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,904 [DEBUG] MCTS iteration 48: Rollout reward: 1.
2025-04-11 20:17:22,904 [DEBUG] MCTS iteration 48: Backed up Finish.
2025-04-11 20:17:22,904 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,904 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,904 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,904 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,904 [DEBUG] MCTS iteration 49: Rollout reward: 1.
2025-04-11 20:17:22,904 [DEBUG] MCTS iteration 49: Backed up Finish.
2025-04-11 20:17:22,904 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,905 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,905 [DEBUG] MCTS iteration 50: reached a node with 50 visits.
2025-04-11 20:17:22,905 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,905 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,905 [DEBUG] MCTS iteration 50: Rollout reward: 1.
2025-04-11 20:17:22,905 [DEBUG] MCTS iteration 50: Backed up Finish.
2025-04-11 20:17:22,905 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,905 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,905 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,905 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,905 [DEBUG] MCTS iteration 51: Rollout reward: 1.
2025-04-11 20:17:22,905 [DEBUG] MCTS iteration 51: Backed up Finish.
2025-04-11 20:17:22,905 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,905 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,905 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,905 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,906 [DEBUG] MCTS iteration 52: Rollout reward: 1.
2025-04-11 20:17:22,906 [DEBUG] MCTS iteration 52: Backed up Finish.
2025-04-11 20:17:22,906 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,906 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,906 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,906 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,906 [DEBUG] MCTS iteration 53: Rollout reward: 1.
2025-04-11 20:17:22,906 [DEBUG] MCTS iteration 53: Backed up Finish.
2025-04-11 20:17:22,906 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,906 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,906 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,906 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,906 [DEBUG] MCTS iteration 54: Rollout reward: 1.
2025-04-11 20:17:22,906 [DEBUG] MCTS iteration 54: Backed up Finish.
2025-04-11 20:17:22,906 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,906 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,907 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,907 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,907 [DEBUG] MCTS iteration 55: Rollout reward: 1.
2025-04-11 20:17:22,907 [DEBUG] MCTS iteration 55: Backed up Finish.
2025-04-11 20:17:22,907 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,907 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,907 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,907 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,907 [DEBUG] MCTS iteration 56: Rollout reward: 1.
2025-04-11 20:17:22,907 [DEBUG] MCTS iteration 56: Backed up Finish.
2025-04-11 20:17:22,907 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,907 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,907 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,907 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,907 [DEBUG] MCTS iteration 57: Rollout reward: 1.
2025-04-11 20:17:22,907 [DEBUG] MCTS iteration 57: Backed up Finish.
2025-04-11 20:17:22,908 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,908 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,908 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,908 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,908 [DEBUG] MCTS iteration 58: Rollout reward: 1.
2025-04-11 20:17:22,908 [DEBUG] MCTS iteration 58: Backed up Finish.
2025-04-11 20:17:22,908 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,908 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,908 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,908 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,908 [DEBUG] MCTS iteration 59: Rollout reward: 1.
2025-04-11 20:17:22,908 [DEBUG] MCTS iteration 59: Backed up Finish.
2025-04-11 20:17:22,908 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,908 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,908 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,909 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,909 [DEBUG] MCTS iteration 60: Rollout reward: 1.
2025-04-11 20:17:22,909 [DEBUG] MCTS iteration 60: Backed up Finish.
2025-04-11 20:17:22,909 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,909 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,909 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,909 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,909 [DEBUG] MCTS iteration 61: Rollout reward: 1.
2025-04-11 20:17:22,909 [DEBUG] MCTS iteration 61: Backed up Finish.
2025-04-11 20:17:22,909 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,909 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,909 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,909 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,909 [DEBUG] MCTS iteration 62: Rollout reward: 1.
2025-04-11 20:17:22,909 [DEBUG] MCTS iteration 62: Backed up Finish.
2025-04-11 20:17:22,909 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,910 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,910 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,910 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,910 [DEBUG] MCTS iteration 63: Rollout reward: 1.
2025-04-11 20:17:22,910 [DEBUG] MCTS iteration 63: Backed up Finish.
2025-04-11 20:17:22,910 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,910 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,910 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,910 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,910 [DEBUG] MCTS iteration 64: Rollout reward: 1.
2025-04-11 20:17:22,910 [DEBUG] MCTS iteration 64: Backed up Finish.
2025-04-11 20:17:22,910 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,910 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,910 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,911 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,911 [DEBUG] MCTS iteration 65: Rollout reward: 1.
2025-04-11 20:17:22,911 [DEBUG] MCTS iteration 65: Backed up Finish.
2025-04-11 20:17:22,911 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,911 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,911 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,911 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,911 [DEBUG] MCTS iteration 66: Rollout reward: 1.
2025-04-11 20:17:22,911 [DEBUG] MCTS iteration 66: Backed up Finish.
2025-04-11 20:17:22,911 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,911 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,911 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,911 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,911 [DEBUG] MCTS iteration 67: Rollout reward: 1.
2025-04-11 20:17:22,911 [DEBUG] MCTS iteration 67: Backed up Finish.
2025-04-11 20:17:22,912 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,912 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,912 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,912 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,912 [DEBUG] MCTS iteration 68: Rollout reward: 1.
2025-04-11 20:17:22,912 [DEBUG] MCTS iteration 68: Backed up Finish.
2025-04-11 20:17:22,912 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,912 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,912 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,912 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,912 [DEBUG] MCTS iteration 69: Rollout reward: 1.
2025-04-11 20:17:22,912 [DEBUG] MCTS iteration 69: Backed up Finish.
2025-04-11 20:17:22,912 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,912 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,912 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,913 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,913 [DEBUG] MCTS iteration 70: Rollout reward: 1.
2025-04-11 20:17:22,913 [DEBUG] MCTS iteration 70: Backed up Finish.
2025-04-11 20:17:22,913 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,913 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,913 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,913 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,913 [DEBUG] MCTS iteration 71: Rollout reward: 1.
2025-04-11 20:17:22,913 [DEBUG] MCTS iteration 71: Backed up Finish.
2025-04-11 20:17:22,913 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,913 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,913 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,913 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,913 [DEBUG] MCTS iteration 72: Rollout reward: 1.
2025-04-11 20:17:22,913 [DEBUG] MCTS iteration 72: Backed up Finish.
2025-04-11 20:17:22,913 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,914 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,914 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,914 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,914 [DEBUG] MCTS iteration 73: Rollout reward: 1.
2025-04-11 20:17:22,914 [DEBUG] MCTS iteration 73: Backed up Finish.
2025-04-11 20:17:22,914 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,914 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,914 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,914 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,914 [DEBUG] MCTS iteration 74: Rollout reward: 1.
2025-04-11 20:17:22,914 [DEBUG] MCTS iteration 74: Backed up Finish.
2025-04-11 20:17:22,914 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,914 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,914 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,915 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,915 [DEBUG] MCTS iteration 75: Rollout reward: 1.
2025-04-11 20:17:22,915 [DEBUG] MCTS iteration 75: Backed up Finish.
2025-04-11 20:17:22,915 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,915 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,915 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,915 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,915 [DEBUG] MCTS iteration 76: Rollout reward: 1.
2025-04-11 20:17:22,915 [DEBUG] MCTS iteration 76: Backed up Finish.
2025-04-11 20:17:22,915 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,915 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,915 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,915 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,915 [DEBUG] MCTS iteration 77: Rollout reward: 1.
2025-04-11 20:17:22,915 [DEBUG] MCTS iteration 77: Backed up Finish.
2025-04-11 20:17:22,915 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,916 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,916 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,916 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,916 [DEBUG] MCTS iteration 78: Rollout reward: 1.
2025-04-11 20:17:22,916 [DEBUG] MCTS iteration 78: Backed up Finish.
2025-04-11 20:17:22,916 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,916 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,916 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,916 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,916 [DEBUG] MCTS iteration 79: Rollout reward: 1.
2025-04-11 20:17:22,916 [DEBUG] MCTS iteration 79: Backed up Finish.
2025-04-11 20:17:22,916 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,916 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,916 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,916 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,916 [DEBUG] MCTS iteration 80: Rollout reward: 1.
2025-04-11 20:17:22,916 [DEBUG] MCTS iteration 80: Backed up Finish.
2025-04-11 20:17:22,917 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,917 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,917 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,917 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,917 [DEBUG] MCTS iteration 81: Rollout reward: 1.
2025-04-11 20:17:22,917 [DEBUG] MCTS iteration 81: Backed up Finish.
2025-04-11 20:17:22,917 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,917 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,917 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,917 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,917 [DEBUG] MCTS iteration 82: Rollout reward: 1.
2025-04-11 20:17:22,917 [DEBUG] MCTS iteration 82: Backed up Finish.
2025-04-11 20:17:22,917 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,917 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,917 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,918 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,918 [DEBUG] MCTS iteration 83: Rollout reward: 1.
2025-04-11 20:17:22,918 [DEBUG] MCTS iteration 83: Backed up Finish.
2025-04-11 20:17:22,918 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,918 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,918 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,918 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,918 [DEBUG] MCTS iteration 84: Rollout reward: 1.
2025-04-11 20:17:22,918 [DEBUG] MCTS iteration 84: Backed up Finish.
2025-04-11 20:17:22,918 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,918 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,918 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,918 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,918 [DEBUG] MCTS iteration 85: Rollout reward: 1.
2025-04-11 20:17:22,918 [DEBUG] MCTS iteration 85: Backed up Finish.
2025-04-11 20:17:22,918 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,919 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,919 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,919 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,919 [DEBUG] MCTS iteration 86: Rollout reward: 1.
2025-04-11 20:17:22,919 [DEBUG] MCTS iteration 86: Backed up Finish.
2025-04-11 20:17:22,919 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,919 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,919 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,919 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,919 [DEBUG] MCTS iteration 87: Rollout reward: 1.
2025-04-11 20:17:22,919 [DEBUG] MCTS iteration 87: Backed up Finish.
2025-04-11 20:17:22,919 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,919 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,919 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,919 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,920 [DEBUG] MCTS iteration 88: Rollout reward: 1.
2025-04-11 20:17:22,920 [DEBUG] MCTS iteration 88: Backed up Finish.
2025-04-11 20:17:22,920 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,920 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,920 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,920 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,920 [DEBUG] MCTS iteration 89: Rollout reward: 1.
2025-04-11 20:17:22,920 [DEBUG] MCTS iteration 89: Backed up Finish.
2025-04-11 20:17:22,920 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,920 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,920 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,920 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,920 [DEBUG] MCTS iteration 90: Rollout reward: 1.
2025-04-11 20:17:22,920 [DEBUG] MCTS iteration 90: Backed up Finish.
2025-04-11 20:17:22,920 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,920 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,920 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,921 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,921 [DEBUG] MCTS iteration 91: Rollout reward: 1.
2025-04-11 20:17:22,921 [DEBUG] MCTS iteration 91: Backed up Finish.
2025-04-11 20:17:22,921 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,921 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,921 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,921 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,921 [DEBUG] MCTS iteration 92: Rollout reward: 1.
2025-04-11 20:17:22,921 [DEBUG] MCTS iteration 92: Backed up Finish.
2025-04-11 20:17:22,921 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,921 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,921 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,921 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,921 [DEBUG] MCTS iteration 93: Rollout reward: 1.
2025-04-11 20:17:22,921 [DEBUG] MCTS iteration 93: Backed up Finish.
2025-04-11 20:17:22,922 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,922 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,922 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,922 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,922 [DEBUG] MCTS iteration 94: Rollout reward: 1.
2025-04-11 20:17:22,922 [DEBUG] MCTS iteration 94: Backed up Finish.
2025-04-11 20:17:22,922 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,922 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,922 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,922 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,922 [DEBUG] MCTS iteration 95: Rollout reward: 1.
2025-04-11 20:17:22,922 [DEBUG] MCTS iteration 95: Backed up Finish.
2025-04-11 20:17:22,922 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,922 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,922 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,923 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,923 [DEBUG] MCTS iteration 96: Rollout reward: 1.
2025-04-11 20:17:22,923 [DEBUG] MCTS iteration 96: Backed up Finish.
2025-04-11 20:17:22,923 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,923 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,923 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,923 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,923 [DEBUG] MCTS iteration 97: Rollout reward: 1.
2025-04-11 20:17:22,923 [DEBUG] MCTS iteration 97: Backed up Finish.
2025-04-11 20:17:22,923 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,923 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,923 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,923 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,923 [DEBUG] MCTS iteration 98: Rollout reward: 1.
2025-04-11 20:17:22,923 [DEBUG] MCTS iteration 98: Backed up Finish.
2025-04-11 20:17:22,923 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:22,924 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 20:17:22,924 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:22,924 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:22,924 [DEBUG] MCTS iteration 99: Rollout reward: 1.
2025-04-11 20:17:22,924 [DEBUG] MCTS iteration 99: Backed up Finish.
2025-04-11 20:17:22,924 [INFO] MCTS: Search completed after 100 iterations.
2025-04-11 20:17:22,924 [DEBUG] MCTS: BEST ((16, 8), (15, 8)) with 100 visits.
2025-04-11 20:17:22,924 [INFO] MCTS: Search finished. Best move selected with 100 visits.
2025-04-11 20:17:22,924 [INFO] Phase 2 (defense): MCTS selected move: ((16, 8), (15, 8))
2025-04-11 20:17:22,924 [INFO] Phase 2 (defense): MCTS selected move string : J17,J16
2025-04-11 20:17:22,924 [INFO] MCTS (defense candidates) selected move: J17,J16
2025-04-11 20:17:29,458 [INFO] Starting pre-MCTS candidate collection.
2025-04-11 20:17:29,465 [INFO] Final candidates: []
2025-04-11 20:17:29,465 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:29,469 [DEBUG] board coords: [(11, 5), (12, 6), (13, 7), (14, 8), (15, 9), (16, 10)]
2025-04-11 20:17:29,469 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:17:29,469 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 5), (12, 6)]
2025-04-11 20:17:29,469 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(11, 5), (12, 6), (13, 7), (14, 8), (15, 9), (16, 10)] triggers candidate.
2025-04-11 20:17:29,469 [DEBUG] check_window_intermediate_custom: valid_move=[(12, 6)]
2025-04-11 20:17:29,469 [DEBUG] check_window_margin_custom: For L=6, window [0 2 2 2 2 0] with coords [(12, 6), (13, 7), (14, 8), (15, 9), (16, 10), (17, 11)] triggers candidate.
2025-04-11 20:17:29,469 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:17:29,470 [DEBUG] board coords: [(12, 6), (13, 7), (14, 8), (15, 9), (16, 10), (17, 11), (18, 12)]
2025-04-11 20:17:29,470 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(2)]
2025-04-11 20:17:29,470 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 6), (17, 11)]
2025-04-11 20:17:29,470 [DEBUG] check_window_intermediate_custom: For L=7, window [0 2 2 2 2 0 2] with coords [(12, 6), (13, 7), (14, 8), (15, 9), (16, 10), (17, 11), (18, 12)] triggers candidate.
2025-04-11 20:17:29,470 [DEBUG] check_window_intermediate_custom: valid_move=[(17, 11)]
2025-04-11 20:17:29,472 [INFO] Final candidates: [(17, 11), (12, 6)]
2025-04-11 20:17:29,472 [INFO] Phase defense: Collected 1unique candidate(s):[((17, 11), (12, 6))]
2025-04-11 20:17:29,472 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 20:17:29,472 [INFO] MCTS: Starting search for 100 iterations.
2025-04-11 20:17:29,478 [INFO] Final candidates: []
2025-04-11 20:17:29,479 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:29,483 [DEBUG] board coords: [(11, 5), (12, 6), (13, 7), (14, 8), (15, 9), (16, 10)]
2025-04-11 20:17:29,483 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 20:17:29,483 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 5), (12, 6)]
2025-04-11 20:17:29,483 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 2 2 2 2] with coords [(11, 5), (12, 6), (13, 7), (14, 8), (15, 9), (16, 10)] triggers candidate.
2025-04-11 20:17:29,483 [DEBUG] check_window_intermediate_custom: valid_move=[(12, 6)]
2025-04-11 20:17:29,483 [DEBUG] check_window_margin_custom: For L=6, window [0 2 2 2 2 0] with coords [(12, 6), (13, 7), (14, 8), (15, 9), (16, 10), (17, 11)] triggers candidate.
2025-04-11 20:17:29,483 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 20:17:29,484 [DEBUG] board coords: [(12, 6), (13, 7), (14, 8), (15, 9), (16, 10), (17, 11), (18, 12)]
2025-04-11 20:17:29,484 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(2)]
2025-04-11 20:17:29,484 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 6), (17, 11)]
2025-04-11 20:17:29,484 [DEBUG] check_window_intermediate_custom: For L=7, window [0 2 2 2 2 0 2] with coords [(12, 6), (13, 7), (14, 8), (15, 9), (16, 10), (17, 11), (18, 12)] triggers candidate.
2025-04-11 20:17:29,484 [DEBUG] check_window_intermediate_custom: valid_move=[(17, 11)]
2025-04-11 20:17:29,485 [INFO] Final candidates: [(17, 11), (12, 6)]
2025-04-11 20:17:29,485 [INFO] Phase defense: Collected 1unique candidate(s):[((17, 11), (12, 6))]
2025-04-11 20:17:29,485 [DEBUG] Tree_policy iteration 1: Expanding move ((17, 11), (12, 6))
2025-04-11 20:17:29,487 [DEBUG] MCTS iteration 0: reached a node with 0 visits.
2025-04-11 20:17:29,487 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:29,618 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:17:29,618 [DEBUG] MCTS iteration 0: Rollout reward: 1.
2025-04-11 20:17:29,618 [DEBUG] MCTS iteration 0: Backed up Finish.
2025-04-11 20:17:29,618 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:29,626 [INFO] Final candidates: []
2025-04-11 20:17:29,626 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:29,635 [INFO] Final candidates: []
2025-04-11 20:17:29,635 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:29,635 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(6)), (np.int64(13), np.int64(11)))
2025-04-11 20:17:29,637 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:29,693 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:17:29,693 [DEBUG] MCTS iteration 1: Rollout reward: 1.
2025-04-11 20:17:29,693 [DEBUG] MCTS iteration 1: Backed up Finish.
2025-04-11 20:17:29,693 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:29,699 [INFO] Final candidates: []
2025-04-11 20:17:29,699 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:29,706 [INFO] Final candidates: []
2025-04-11 20:17:29,706 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:29,706 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(4)), (np.int64(7), np.int64(13)))
2025-04-11 20:17:29,708 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:29,972 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:29,972 [DEBUG] MCTS iteration 2: Rollout reward: 0.
2025-04-11 20:17:29,972 [DEBUG] MCTS iteration 2: Backed up Finish.
2025-04-11 20:17:29,972 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:29,979 [INFO] Final candidates: []
2025-04-11 20:17:29,979 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:29,986 [INFO] Final candidates: []
2025-04-11 20:17:29,986 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:29,986 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(5)), (np.int64(14), np.int64(4)))
2025-04-11 20:17:29,988 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:30,132 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:30,133 [DEBUG] MCTS iteration 3: Rollout reward: 0.
2025-04-11 20:17:30,133 [DEBUG] MCTS iteration 3: Backed up Finish.
2025-04-11 20:17:30,133 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:30,139 [INFO] Final candidates: []
2025-04-11 20:17:30,139 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:30,146 [INFO] Final candidates: []
2025-04-11 20:17:30,146 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:30,146 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(14)), (np.int64(5), np.int64(11)))
2025-04-11 20:17:30,147 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:30,268 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:30,269 [DEBUG] MCTS iteration 4: Rollout reward: 0.
2025-04-11 20:17:30,269 [DEBUG] MCTS iteration 4: Backed up Finish.
2025-04-11 20:17:30,269 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:30,275 [INFO] Final candidates: []
2025-04-11 20:17:30,275 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:30,282 [INFO] Final candidates: []
2025-04-11 20:17:30,282 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:30,282 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(0)), (np.int64(6), np.int64(7)))
2025-04-11 20:17:30,283 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:30,403 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:17:30,403 [DEBUG] MCTS iteration 5: Rollout reward: 1.
2025-04-11 20:17:30,403 [DEBUG] MCTS iteration 5: Backed up Finish.
2025-04-11 20:17:30,403 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:30,410 [INFO] Final candidates: []
2025-04-11 20:17:30,410 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:30,416 [INFO] Final candidates: []
2025-04-11 20:17:30,416 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:30,416 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(18), np.int64(11)), (np.int64(13), np.int64(15)))
2025-04-11 20:17:30,417 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:30,651 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:17:30,651 [DEBUG] MCTS iteration 6: Rollout reward: 1.
2025-04-11 20:17:30,651 [DEBUG] MCTS iteration 6: Backed up Finish.
2025-04-11 20:17:30,651 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:30,658 [INFO] Final candidates: []
2025-04-11 20:17:30,658 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:30,665 [INFO] Final candidates: []
2025-04-11 20:17:30,665 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:30,665 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(12)), (np.int64(7), np.int64(8)))
2025-04-11 20:17:30,666 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:30,737 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:30,737 [DEBUG] MCTS iteration 7: Rollout reward: 0.
2025-04-11 20:17:30,737 [DEBUG] MCTS iteration 7: Backed up Finish.
2025-04-11 20:17:30,737 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:30,743 [INFO] Final candidates: []
2025-04-11 20:17:30,743 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:30,750 [INFO] Final candidates: []
2025-04-11 20:17:30,750 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:30,750 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(6)), (np.int64(8), np.int64(14)))
2025-04-11 20:17:30,751 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:30,857 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:30,857 [DEBUG] MCTS iteration 8: Rollout reward: 0.
2025-04-11 20:17:30,857 [DEBUG] MCTS iteration 8: Backed up Finish.
2025-04-11 20:17:30,857 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:30,863 [INFO] Final candidates: []
2025-04-11 20:17:30,863 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:30,870 [INFO] Final candidates: []
2025-04-11 20:17:30,870 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:30,870 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(13)), (np.int64(2), np.int64(16)))
2025-04-11 20:17:30,871 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:31,135 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:31,135 [DEBUG] MCTS iteration 9: Rollout reward: 0.
2025-04-11 20:17:31,135 [DEBUG] MCTS iteration 9: Backed up Finish.
2025-04-11 20:17:31,135 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:31,141 [INFO] Final candidates: []
2025-04-11 20:17:31,141 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:31,148 [INFO] Final candidates: []
2025-04-11 20:17:31,148 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:31,148 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(4), np.int64(13)), (np.int64(14), np.int64(7)))
2025-04-11 20:17:31,151 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:31,217 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:17:31,217 [DEBUG] MCTS iteration 10: Rollout reward: 1.
2025-04-11 20:17:31,217 [DEBUG] MCTS iteration 10: Backed up Finish.
2025-04-11 20:17:31,217 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:31,223 [INFO] Final candidates: []
2025-04-11 20:17:31,223 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:31,230 [INFO] Final candidates: []
2025-04-11 20:17:31,230 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:31,230 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(10)), (np.int64(9), np.int64(15)))
2025-04-11 20:17:31,231 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:31,404 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:17:31,405 [DEBUG] MCTS iteration 11: Rollout reward: 1.
2025-04-11 20:17:31,405 [DEBUG] MCTS iteration 11: Backed up Finish.
2025-04-11 20:17:31,405 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:31,411 [INFO] Final candidates: []
2025-04-11 20:17:31,411 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:31,418 [INFO] Final candidates: []
2025-04-11 20:17:31,418 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:31,418 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(9)), (np.int64(13), np.int64(15)))
2025-04-11 20:17:31,419 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:31,497 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:17:31,497 [DEBUG] MCTS iteration 12: Rollout reward: 1.
2025-04-11 20:17:31,497 [DEBUG] MCTS iteration 12: Backed up Finish.
2025-04-11 20:17:31,497 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:31,504 [INFO] Final candidates: []
2025-04-11 20:17:31,504 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:31,511 [INFO] Final candidates: []
2025-04-11 20:17:31,511 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:31,511 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(13)), (np.int64(5), np.int64(8)))
2025-04-11 20:17:31,512 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:31,659 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:17:31,659 [DEBUG] MCTS iteration 13: Rollout reward: 1.
2025-04-11 20:17:31,659 [DEBUG] MCTS iteration 13: Backed up Finish.
2025-04-11 20:17:31,659 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:31,665 [INFO] Final candidates: []
2025-04-11 20:17:31,665 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:31,672 [INFO] Final candidates: []
2025-04-11 20:17:31,672 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:31,672 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(12)), (np.int64(10), np.int64(5)))
2025-04-11 20:17:31,673 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:31,841 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:31,841 [DEBUG] MCTS iteration 14: Rollout reward: 0.
2025-04-11 20:17:31,841 [DEBUG] MCTS iteration 14: Backed up Finish.
2025-04-11 20:17:31,841 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:31,847 [INFO] Final candidates: []
2025-04-11 20:17:31,847 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:31,854 [INFO] Final candidates: []
2025-04-11 20:17:31,854 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:31,854 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(1)), (np.int64(13), np.int64(9)))
2025-04-11 20:17:31,856 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:31,896 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:17:31,896 [DEBUG] MCTS iteration 15: Rollout reward: 1.
2025-04-11 20:17:31,896 [DEBUG] MCTS iteration 15: Backed up Finish.
2025-04-11 20:17:31,896 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:31,904 [INFO] Final candidates: []
2025-04-11 20:17:31,904 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:31,912 [INFO] Final candidates: []
2025-04-11 20:17:31,912 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:31,912 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(1)), (np.int64(14), np.int64(12)))
2025-04-11 20:17:31,913 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:32,014 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:17:32,014 [DEBUG] MCTS iteration 16: Rollout reward: 1.
2025-04-11 20:17:32,014 [DEBUG] MCTS iteration 16: Backed up Finish.
2025-04-11 20:17:32,014 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:32,021 [INFO] Final candidates: []
2025-04-11 20:17:32,021 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:32,027 [INFO] Final candidates: []
2025-04-11 20:17:32,027 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:32,027 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(17), np.int64(6)), (np.int64(10), np.int64(4)))
2025-04-11 20:17:32,029 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:32,206 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:17:32,206 [DEBUG] MCTS iteration 17: Rollout reward: 1.
2025-04-11 20:17:32,206 [DEBUG] MCTS iteration 17: Backed up Finish.
2025-04-11 20:17:32,207 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:32,213 [INFO] Final candidates: []
2025-04-11 20:17:32,213 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:32,220 [INFO] Final candidates: []
2025-04-11 20:17:32,220 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:32,220 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(0)), (np.int64(14), np.int64(10)))
2025-04-11 20:17:32,221 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:32,354 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:32,354 [DEBUG] MCTS iteration 18: Rollout reward: 0.
2025-04-11 20:17:32,354 [DEBUG] MCTS iteration 18: Backed up Finish.
2025-04-11 20:17:32,354 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:32,360 [INFO] Final candidates: []
2025-04-11 20:17:32,361 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:32,368 [INFO] Final candidates: []
2025-04-11 20:17:32,368 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:32,368 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(1)), (np.int64(8), np.int64(5)))
2025-04-11 20:17:32,369 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:32,737 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:17:32,737 [DEBUG] MCTS iteration 19: Rollout reward: 1.
2025-04-11 20:17:32,737 [DEBUG] MCTS iteration 19: Backed up Finish.
2025-04-11 20:17:32,737 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:32,745 [INFO] Final candidates: []
2025-04-11 20:17:32,745 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:32,754 [INFO] Final candidates: []
2025-04-11 20:17:32,754 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:32,754 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(17), np.int64(12)), (np.int64(15), np.int64(0)))
2025-04-11 20:17:32,755 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:33,052 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:17:33,052 [DEBUG] MCTS iteration 20: Rollout reward: 1.
2025-04-11 20:17:33,052 [DEBUG] MCTS iteration 20: Backed up Finish.
2025-04-11 20:17:33,052 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:33,059 [INFO] Final candidates: []
2025-04-11 20:17:33,059 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:33,066 [INFO] Final candidates: []
2025-04-11 20:17:33,066 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:33,066 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(12)), (np.int64(13), np.int64(15)))
2025-04-11 20:17:33,067 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:33,154 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:17:33,154 [DEBUG] MCTS iteration 21: Rollout reward: 1.
2025-04-11 20:17:33,154 [DEBUG] MCTS iteration 21: Backed up Finish.
2025-04-11 20:17:33,154 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:33,164 [INFO] Final candidates: []
2025-04-11 20:17:33,164 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:33,172 [INFO] Final candidates: []
2025-04-11 20:17:33,172 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:33,172 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(6)), (np.int64(12), np.int64(16)))
2025-04-11 20:17:33,173 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:33,249 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:17:33,249 [DEBUG] MCTS iteration 22: Rollout reward: 1.
2025-04-11 20:17:33,249 [DEBUG] MCTS iteration 22: Backed up Finish.
2025-04-11 20:17:33,249 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:33,256 [INFO] Final candidates: []
2025-04-11 20:17:33,256 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:33,262 [INFO] Final candidates: []
2025-04-11 20:17:33,262 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:33,262 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(18), np.int64(1)), (np.int64(4), np.int64(12)))
2025-04-11 20:17:33,264 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:33,354 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:33,354 [DEBUG] MCTS iteration 23: Rollout reward: 0.
2025-04-11 20:17:33,354 [DEBUG] MCTS iteration 23: Backed up Finish.
2025-04-11 20:17:33,354 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:33,361 [INFO] Final candidates: []
2025-04-11 20:17:33,361 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:33,368 [INFO] Final candidates: []
2025-04-11 20:17:33,368 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:33,368 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(6)), (np.int64(5), np.int64(15)))
2025-04-11 20:17:33,369 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:33,401 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:17:33,401 [DEBUG] MCTS iteration 24: Rollout reward: 1.
2025-04-11 20:17:33,401 [DEBUG] MCTS iteration 24: Backed up Finish.
2025-04-11 20:17:33,401 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:33,412 [INFO] Final candidates: []
2025-04-11 20:17:33,412 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:33,418 [INFO] Final candidates: []
2025-04-11 20:17:33,418 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:33,418 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(11)), (np.int64(10), np.int64(14)))
2025-04-11 20:17:33,419 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:33,499 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:17:33,500 [DEBUG] MCTS iteration 25: Rollout reward: 1.
2025-04-11 20:17:33,500 [DEBUG] MCTS iteration 25: Backed up Finish.
2025-04-11 20:17:33,500 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:33,506 [INFO] Final candidates: []
2025-04-11 20:17:33,506 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:33,513 [INFO] Final candidates: []
2025-04-11 20:17:33,513 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:33,513 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(15)), (np.int64(4), np.int64(10)))
2025-04-11 20:17:33,514 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:33,584 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:17:33,584 [DEBUG] MCTS iteration 26: Rollout reward: 1.
2025-04-11 20:17:33,584 [DEBUG] MCTS iteration 26: Backed up Finish.
2025-04-11 20:17:33,584 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:33,590 [INFO] Final candidates: []
2025-04-11 20:17:33,590 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:33,597 [INFO] Final candidates: []
2025-04-11 20:17:33,597 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:33,597 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(17), np.int64(13)), (np.int64(8), np.int64(12)))
2025-04-11 20:17:33,598 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:33,693 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:17:33,693 [DEBUG] MCTS iteration 27: Rollout reward: 1.
2025-04-11 20:17:33,693 [DEBUG] MCTS iteration 27: Backed up Finish.
2025-04-11 20:17:33,694 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:33,700 [INFO] Final candidates: []
2025-04-11 20:17:33,700 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:33,707 [INFO] Final candidates: []
2025-04-11 20:17:33,707 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:33,707 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(7)), (np.int64(10), np.int64(11)))
2025-04-11 20:17:33,708 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:33,843 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:33,843 [DEBUG] MCTS iteration 28: Rollout reward: 0.
2025-04-11 20:17:33,843 [DEBUG] MCTS iteration 28: Backed up Finish.
2025-04-11 20:17:33,844 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:33,850 [INFO] Final candidates: []
2025-04-11 20:17:33,850 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:33,857 [INFO] Final candidates: []
2025-04-11 20:17:33,857 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:33,857 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(13)), (np.int64(18), np.int64(8)))
2025-04-11 20:17:33,858 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:33,913 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:33,913 [DEBUG] MCTS iteration 29: Rollout reward: 0.
2025-04-11 20:17:33,913 [DEBUG] MCTS iteration 29: Backed up Finish.
2025-04-11 20:17:33,913 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:33,920 [INFO] Final candidates: []
2025-04-11 20:17:33,920 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:33,926 [INFO] Final candidates: []
2025-04-11 20:17:33,926 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:33,926 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(14)), (np.int64(11), np.int64(15)))
2025-04-11 20:17:33,927 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:34,038 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:34,038 [DEBUG] MCTS iteration 30: Rollout reward: 0.
2025-04-11 20:17:34,038 [DEBUG] MCTS iteration 30: Backed up Finish.
2025-04-11 20:17:34,038 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:34,045 [INFO] Final candidates: []
2025-04-11 20:17:34,045 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:34,051 [INFO] Final candidates: []
2025-04-11 20:17:34,051 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:34,051 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(15)), (np.int64(16), np.int64(4)))
2025-04-11 20:17:34,053 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:34,224 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:34,224 [DEBUG] MCTS iteration 31: Rollout reward: 0.
2025-04-11 20:17:34,224 [DEBUG] MCTS iteration 31: Backed up Finish.
2025-04-11 20:17:34,224 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:34,233 [INFO] Final candidates: []
2025-04-11 20:17:34,233 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:34,240 [INFO] Final candidates: []
2025-04-11 20:17:34,240 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:34,240 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(17), np.int64(12)), (np.int64(17), np.int64(2)))
2025-04-11 20:17:34,241 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:34,492 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:17:34,492 [DEBUG] MCTS iteration 32: Rollout reward: 1.
2025-04-11 20:17:34,492 [DEBUG] MCTS iteration 32: Backed up Finish.
2025-04-11 20:17:34,492 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:34,499 [INFO] Final candidates: []
2025-04-11 20:17:34,499 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:34,506 [INFO] Final candidates: []
2025-04-11 20:17:34,506 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:34,506 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(3), np.int64(17)), (np.int64(18), np.int64(7)))
2025-04-11 20:17:34,507 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:34,788 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:34,788 [DEBUG] MCTS iteration 33: Rollout reward: 0.
2025-04-11 20:17:34,788 [DEBUG] MCTS iteration 33: Backed up Finish.
2025-04-11 20:17:34,788 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:34,795 [INFO] Final candidates: []
2025-04-11 20:17:34,795 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:34,801 [INFO] Final candidates: []
2025-04-11 20:17:34,801 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:34,802 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(14)), (np.int64(4), np.int64(13)))
2025-04-11 20:17:34,807 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:35,064 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:17:35,064 [DEBUG] MCTS iteration 34: Rollout reward: 1.
2025-04-11 20:17:35,064 [DEBUG] MCTS iteration 34: Backed up Finish.
2025-04-11 20:17:35,064 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:35,072 [INFO] Final candidates: []
2025-04-11 20:17:35,072 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:35,082 [INFO] Final candidates: []
2025-04-11 20:17:35,083 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:35,083 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(4), np.int64(18)), (np.int64(10), np.int64(5)))
2025-04-11 20:17:35,084 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:35,235 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:17:35,235 [DEBUG] MCTS iteration 35: Rollout reward: 1.
2025-04-11 20:17:35,235 [DEBUG] MCTS iteration 35: Backed up Finish.
2025-04-11 20:17:35,235 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:35,242 [INFO] Final candidates: []
2025-04-11 20:17:35,242 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:35,248 [INFO] Final candidates: []
2025-04-11 20:17:35,248 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:35,248 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(5)), (np.int64(5), np.int64(17)))
2025-04-11 20:17:35,250 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:35,394 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:17:35,394 [DEBUG] MCTS iteration 36: Rollout reward: 1.
2025-04-11 20:17:35,394 [DEBUG] MCTS iteration 36: Backed up Finish.
2025-04-11 20:17:35,394 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:35,401 [INFO] Final candidates: []
2025-04-11 20:17:35,401 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:35,407 [INFO] Final candidates: []
2025-04-11 20:17:35,407 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:35,407 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(6)), (np.int64(17), np.int64(10)))
2025-04-11 20:17:35,408 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:35,606 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:17:35,606 [DEBUG] MCTS iteration 37: Rollout reward: 1.
2025-04-11 20:17:35,606 [DEBUG] MCTS iteration 37: Backed up Finish.
2025-04-11 20:17:35,606 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:35,613 [INFO] Final candidates: []
2025-04-11 20:17:35,613 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:35,619 [INFO] Final candidates: []
2025-04-11 20:17:35,619 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:35,620 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(9)), (np.int64(12), np.int64(9)))
2025-04-11 20:17:35,621 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:35,711 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:35,711 [DEBUG] MCTS iteration 38: Rollout reward: 0.
2025-04-11 20:17:35,712 [DEBUG] MCTS iteration 38: Backed up Finish.
2025-04-11 20:17:35,712 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:35,718 [INFO] Final candidates: []
2025-04-11 20:17:35,718 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:35,725 [INFO] Final candidates: []
2025-04-11 20:17:35,725 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:35,725 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(6)), (np.int64(17), np.int64(9)))
2025-04-11 20:17:35,726 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:35,954 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:17:35,954 [DEBUG] MCTS iteration 39: Rollout reward: 1.
2025-04-11 20:17:35,954 [DEBUG] MCTS iteration 39: Backed up Finish.
2025-04-11 20:17:35,954 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:35,961 [INFO] Final candidates: []
2025-04-11 20:17:35,961 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:35,967 [INFO] Final candidates: []
2025-04-11 20:17:35,967 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:35,967 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(4), np.int64(13)), (np.int64(8), np.int64(6)))
2025-04-11 20:17:35,968 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:35,986 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:35,986 [DEBUG] MCTS iteration 40: Rollout reward: 0.
2025-04-11 20:17:35,986 [DEBUG] MCTS iteration 40: Backed up Finish.
2025-04-11 20:17:35,987 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:35,993 [INFO] Final candidates: []
2025-04-11 20:17:35,993 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:36,000 [INFO] Final candidates: []
2025-04-11 20:17:36,000 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:36,000 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(14)), (np.int64(11), np.int64(15)))
2025-04-11 20:17:36,001 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:36,121 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:17:36,122 [DEBUG] MCTS iteration 41: Rollout reward: 1.
2025-04-11 20:17:36,122 [DEBUG] MCTS iteration 41: Backed up Finish.
2025-04-11 20:17:36,122 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:36,128 [INFO] Final candidates: []
2025-04-11 20:17:36,128 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:36,135 [INFO] Final candidates: []
2025-04-11 20:17:36,135 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:36,135 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(6)), (np.int64(15), np.int64(0)))
2025-04-11 20:17:36,136 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:36,484 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:17:36,484 [DEBUG] MCTS iteration 42: Rollout reward: 1.
2025-04-11 20:17:36,484 [DEBUG] MCTS iteration 42: Backed up Finish.
2025-04-11 20:17:36,484 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:36,493 [INFO] Final candidates: []
2025-04-11 20:17:36,493 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:36,500 [INFO] Final candidates: []
2025-04-11 20:17:36,500 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:36,500 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(18), np.int64(11)), (np.int64(8), np.int64(12)))
2025-04-11 20:17:36,501 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:36,596 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:17:36,596 [DEBUG] MCTS iteration 43: Rollout reward: 1.
2025-04-11 20:17:36,596 [DEBUG] MCTS iteration 43: Backed up Finish.
2025-04-11 20:17:36,596 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:36,602 [INFO] Final candidates: []
2025-04-11 20:17:36,602 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:36,609 [INFO] Final candidates: []
2025-04-11 20:17:36,609 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:36,609 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(10)), (np.int64(12), np.int64(5)))
2025-04-11 20:17:36,610 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:36,711 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:36,711 [DEBUG] MCTS iteration 44: Rollout reward: 0.
2025-04-11 20:17:36,711 [DEBUG] MCTS iteration 44: Backed up Finish.
2025-04-11 20:17:36,711 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:36,719 [INFO] Final candidates: []
2025-04-11 20:17:36,719 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:36,727 [INFO] Final candidates: []
2025-04-11 20:17:36,727 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:36,727 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(15)), (np.int64(11), np.int64(8)))
2025-04-11 20:17:36,728 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:36,893 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:17:36,893 [DEBUG] MCTS iteration 45: Rollout reward: 1.
2025-04-11 20:17:36,893 [DEBUG] MCTS iteration 45: Backed up Finish.
2025-04-11 20:17:36,893 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:36,899 [INFO] Final candidates: []
2025-04-11 20:17:36,899 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:36,906 [INFO] Final candidates: []
2025-04-11 20:17:36,906 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:36,906 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(18), np.int64(7)), (np.int64(6), np.int64(16)))
2025-04-11 20:17:36,907 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:37,148 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:37,148 [DEBUG] MCTS iteration 46: Rollout reward: 0.
2025-04-11 20:17:37,148 [DEBUG] MCTS iteration 46: Backed up Finish.
2025-04-11 20:17:37,149 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:37,155 [INFO] Final candidates: []
2025-04-11 20:17:37,155 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:37,162 [INFO] Final candidates: []
2025-04-11 20:17:37,162 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:37,162 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(6)), (np.int64(10), np.int64(13)))
2025-04-11 20:17:37,163 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:37,443 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:37,443 [DEBUG] MCTS iteration 47: Rollout reward: 0.
2025-04-11 20:17:37,443 [DEBUG] MCTS iteration 47: Backed up Finish.
2025-04-11 20:17:37,444 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:37,450 [INFO] Final candidates: []
2025-04-11 20:17:37,450 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:37,457 [INFO] Final candidates: []
2025-04-11 20:17:37,457 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:37,457 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(18), np.int64(7)), (np.int64(17), np.int64(13)))
2025-04-11 20:17:37,458 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:37,520 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:17:37,521 [DEBUG] MCTS iteration 48: Rollout reward: 1.
2025-04-11 20:17:37,521 [DEBUG] MCTS iteration 48: Backed up Finish.
2025-04-11 20:17:37,521 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:37,527 [INFO] Final candidates: []
2025-04-11 20:17:37,527 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:37,534 [INFO] Final candidates: []
2025-04-11 20:17:37,534 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:37,534 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(4), np.int64(8)), (np.int64(15), np.int64(3)))
2025-04-11 20:17:37,535 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:37,700 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:17:37,700 [DEBUG] MCTS iteration 49: Rollout reward: 1.
2025-04-11 20:17:37,700 [DEBUG] MCTS iteration 49: Backed up Finish.
2025-04-11 20:17:37,700 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:37,707 [INFO] Final candidates: []
2025-04-11 20:17:37,707 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:37,714 [INFO] Final candidates: []
2025-04-11 20:17:37,714 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:37,714 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(9)), (np.int64(5), np.int64(8)))
2025-04-11 20:17:37,715 [DEBUG] MCTS iteration 50: reached a node with 0 visits.
2025-04-11 20:17:37,715 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:37,859 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:17:37,859 [DEBUG] MCTS iteration 50: Rollout reward: 1.
2025-04-11 20:17:37,859 [DEBUG] MCTS iteration 50: Backed up Finish.
2025-04-11 20:17:37,859 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:37,866 [INFO] Final candidates: []
2025-04-11 20:17:37,866 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:37,872 [INFO] Final candidates: []
2025-04-11 20:17:37,872 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:37,872 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(17), np.int64(2)), (np.int64(12), np.int64(7)))
2025-04-11 20:17:37,874 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:37,938 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:37,939 [DEBUG] MCTS iteration 51: Rollout reward: 0.
2025-04-11 20:17:37,939 [DEBUG] MCTS iteration 51: Backed up Finish.
2025-04-11 20:17:37,939 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:37,945 [INFO] Final candidates: []
2025-04-11 20:17:37,945 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:37,952 [INFO] Final candidates: []
2025-04-11 20:17:37,952 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:37,952 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(18), np.int64(2)), (np.int64(15), np.int64(3)))
2025-04-11 20:17:37,953 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:38,191 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:38,191 [DEBUG] MCTS iteration 52: Rollout reward: 0.
2025-04-11 20:17:38,191 [DEBUG] MCTS iteration 52: Backed up Finish.
2025-04-11 20:17:38,191 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:38,197 [INFO] Final candidates: []
2025-04-11 20:17:38,197 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:38,204 [INFO] Final candidates: []
2025-04-11 20:17:38,204 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:38,204 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(3), np.int64(17)), (np.int64(5), np.int64(16)))
2025-04-11 20:17:38,205 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:38,461 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:17:38,461 [DEBUG] MCTS iteration 53: Rollout reward: 1.
2025-04-11 20:17:38,461 [DEBUG] MCTS iteration 53: Backed up Finish.
2025-04-11 20:17:38,461 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:38,467 [INFO] Final candidates: []
2025-04-11 20:17:38,467 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:38,476 [INFO] Final candidates: []
2025-04-11 20:17:38,477 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:38,477 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(18), np.int64(14)), (np.int64(7), np.int64(13)))
2025-04-11 20:17:38,478 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:38,608 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:38,608 [DEBUG] MCTS iteration 54: Rollout reward: 0.
2025-04-11 20:17:38,608 [DEBUG] MCTS iteration 54: Backed up Finish.
2025-04-11 20:17:38,608 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:38,614 [INFO] Final candidates: []
2025-04-11 20:17:38,614 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:38,621 [INFO] Final candidates: []
2025-04-11 20:17:38,621 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:38,621 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(5)), (np.int64(13), np.int64(15)))
2025-04-11 20:17:38,622 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:38,881 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:38,881 [DEBUG] MCTS iteration 55: Rollout reward: 0.
2025-04-11 20:17:38,881 [DEBUG] MCTS iteration 55: Backed up Finish.
2025-04-11 20:17:38,881 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:38,888 [INFO] Final candidates: []
2025-04-11 20:17:38,888 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:38,894 [INFO] Final candidates: []
2025-04-11 20:17:38,894 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:38,894 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(11)), (np.int64(16), np.int64(12)))
2025-04-11 20:17:38,896 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:38,978 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:17:38,978 [DEBUG] MCTS iteration 56: Rollout reward: 1.
2025-04-11 20:17:38,978 [DEBUG] MCTS iteration 56: Backed up Finish.
2025-04-11 20:17:38,978 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:38,985 [INFO] Final candidates: []
2025-04-11 20:17:38,985 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:38,991 [INFO] Final candidates: []
2025-04-11 20:17:38,991 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:38,992 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(13)), (np.int64(14), np.int64(10)))
2025-04-11 20:17:38,993 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:39,030 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:17:39,030 [DEBUG] MCTS iteration 57: Rollout reward: 1.
2025-04-11 20:17:39,030 [DEBUG] MCTS iteration 57: Backed up Finish.
2025-04-11 20:17:39,030 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:39,037 [INFO] Final candidates: []
2025-04-11 20:17:39,037 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:39,044 [INFO] Final candidates: []
2025-04-11 20:17:39,044 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:39,044 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(11)), (np.int64(6), np.int64(7)))
2025-04-11 20:17:39,045 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:39,190 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:39,191 [DEBUG] MCTS iteration 58: Rollout reward: 0.
2025-04-11 20:17:39,191 [DEBUG] MCTS iteration 58: Backed up Finish.
2025-04-11 20:17:39,191 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:39,197 [INFO] Final candidates: []
2025-04-11 20:17:39,197 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:39,204 [INFO] Final candidates: []
2025-04-11 20:17:39,204 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:39,204 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(15)), (np.int64(5), np.int64(8)))
2025-04-11 20:17:39,205 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:39,437 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:17:39,437 [DEBUG] MCTS iteration 59: Rollout reward: 1.
2025-04-11 20:17:39,437 [DEBUG] MCTS iteration 59: Backed up Finish.
2025-04-11 20:17:39,437 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:39,444 [INFO] Final candidates: []
2025-04-11 20:17:39,444 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:39,451 [INFO] Final candidates: []
2025-04-11 20:17:39,451 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:39,451 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(7)), (np.int64(12), np.int64(9)))
2025-04-11 20:17:39,452 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:39,645 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:17:39,645 [DEBUG] MCTS iteration 60: Rollout reward: 1.
2025-04-11 20:17:39,645 [DEBUG] MCTS iteration 60: Backed up Finish.
2025-04-11 20:17:39,645 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:39,652 [INFO] Final candidates: []
2025-04-11 20:17:39,652 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:39,658 [INFO] Final candidates: []
2025-04-11 20:17:39,658 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:39,659 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(13)), (np.int64(16), np.int64(11)))
2025-04-11 20:17:39,660 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:39,868 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:39,868 [DEBUG] MCTS iteration 61: Rollout reward: 0.
2025-04-11 20:17:39,868 [DEBUG] MCTS iteration 61: Backed up Finish.
2025-04-11 20:17:39,868 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:39,874 [INFO] Final candidates: []
2025-04-11 20:17:39,874 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:39,881 [INFO] Final candidates: []
2025-04-11 20:17:39,881 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:39,881 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(15)), (np.int64(3), np.int64(16)))
2025-04-11 20:17:39,882 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:39,980 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:39,980 [DEBUG] MCTS iteration 62: Rollout reward: 0.
2025-04-11 20:17:39,980 [DEBUG] MCTS iteration 62: Backed up Finish.
2025-04-11 20:17:39,980 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:39,987 [INFO] Final candidates: []
2025-04-11 20:17:39,987 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:39,993 [INFO] Final candidates: []
2025-04-11 20:17:39,993 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:39,993 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(5)), (np.int64(14), np.int64(7)))
2025-04-11 20:17:39,994 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:40,260 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:40,260 [DEBUG] MCTS iteration 63: Rollout reward: 0.
2025-04-11 20:17:40,260 [DEBUG] MCTS iteration 63: Backed up Finish.
2025-04-11 20:17:40,260 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:40,266 [INFO] Final candidates: []
2025-04-11 20:17:40,266 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:40,273 [INFO] Final candidates: []
2025-04-11 20:17:40,273 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:40,273 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(17), np.int64(6)), (np.int64(6), np.int64(9)))
2025-04-11 20:17:40,274 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:40,404 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:40,404 [DEBUG] MCTS iteration 64: Rollout reward: 0.
2025-04-11 20:17:40,404 [DEBUG] MCTS iteration 64: Backed up Finish.
2025-04-11 20:17:40,404 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:40,410 [INFO] Final candidates: []
2025-04-11 20:17:40,410 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:40,417 [INFO] Final candidates: []
2025-04-11 20:17:40,417 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:40,417 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(5)), (np.int64(15), np.int64(11)))
2025-04-11 20:17:40,418 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:40,710 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:17:40,711 [DEBUG] MCTS iteration 65: Rollout reward: 1.
2025-04-11 20:17:40,711 [DEBUG] MCTS iteration 65: Backed up Finish.
2025-04-11 20:17:40,711 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:40,717 [INFO] Final candidates: []
2025-04-11 20:17:40,717 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:40,724 [INFO] Final candidates: []
2025-04-11 20:17:40,724 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:40,724 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(3), np.int64(16)), (np.int64(10), np.int64(11)))
2025-04-11 20:17:40,725 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:40,758 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:17:40,758 [DEBUG] MCTS iteration 66: Rollout reward: 1.
2025-04-11 20:17:40,759 [DEBUG] MCTS iteration 66: Backed up Finish.
2025-04-11 20:17:40,759 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:40,767 [INFO] Final candidates: []
2025-04-11 20:17:40,767 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:40,777 [INFO] Final candidates: []
2025-04-11 20:17:40,777 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:40,777 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(6)), (np.int64(16), np.int64(5)))
2025-04-11 20:17:40,778 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:40,817 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:17:40,817 [DEBUG] MCTS iteration 67: Rollout reward: 1.
2025-04-11 20:17:40,817 [DEBUG] MCTS iteration 67: Backed up Finish.
2025-04-11 20:17:40,817 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:40,824 [INFO] Final candidates: []
2025-04-11 20:17:40,824 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:40,830 [INFO] Final candidates: []
2025-04-11 20:17:40,831 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:40,831 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(17), np.int64(2)), (np.int64(14), np.int64(7)))
2025-04-11 20:17:40,832 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:41,020 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:17:41,020 [DEBUG] MCTS iteration 68: Rollout reward: 1.
2025-04-11 20:17:41,020 [DEBUG] MCTS iteration 68: Backed up Finish.
2025-04-11 20:17:41,020 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:41,029 [INFO] Final candidates: []
2025-04-11 20:17:41,029 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:41,036 [INFO] Final candidates: []
2025-04-11 20:17:41,036 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:41,036 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(0)), (np.int64(15), np.int64(11)))
2025-04-11 20:17:41,038 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:41,329 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:17:41,329 [DEBUG] MCTS iteration 69: Rollout reward: 1.
2025-04-11 20:17:41,329 [DEBUG] MCTS iteration 69: Backed up Finish.
2025-04-11 20:17:41,330 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:41,336 [INFO] Final candidates: []
2025-04-11 20:17:41,336 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:41,343 [INFO] Final candidates: []
2025-04-11 20:17:41,343 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:41,343 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(18), np.int64(14)), (np.int64(11), np.int64(12)))
2025-04-11 20:17:41,344 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:41,485 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:41,486 [DEBUG] MCTS iteration 70: Rollout reward: 0.
2025-04-11 20:17:41,486 [DEBUG] MCTS iteration 70: Backed up Finish.
2025-04-11 20:17:41,486 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:41,492 [INFO] Final candidates: []
2025-04-11 20:17:41,492 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:41,499 [INFO] Final candidates: []
2025-04-11 20:17:41,499 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:41,499 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(11)), (np.int64(8), np.int64(6)))
2025-04-11 20:17:41,500 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:41,599 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:41,599 [DEBUG] MCTS iteration 71: Rollout reward: 0.
2025-04-11 20:17:41,599 [DEBUG] MCTS iteration 71: Backed up Finish.
2025-04-11 20:17:41,600 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:41,606 [INFO] Final candidates: []
2025-04-11 20:17:41,606 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:41,613 [INFO] Final candidates: []
2025-04-11 20:17:41,613 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:41,613 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(12)), (np.int64(15), np.int64(11)))
2025-04-11 20:17:41,614 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:41,802 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:17:41,802 [DEBUG] MCTS iteration 72: Rollout reward: 1.
2025-04-11 20:17:41,802 [DEBUG] MCTS iteration 72: Backed up Finish.
2025-04-11 20:17:41,802 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:41,809 [INFO] Final candidates: []
2025-04-11 20:17:41,809 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:41,815 [INFO] Final candidates: []
2025-04-11 20:17:41,815 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:41,815 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(2), np.int64(14)), (np.int64(9), np.int64(15)))
2025-04-11 20:17:41,816 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:41,976 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:17:41,976 [DEBUG] MCTS iteration 73: Rollout reward: 1.
2025-04-11 20:17:41,976 [DEBUG] MCTS iteration 73: Backed up Finish.
2025-04-11 20:17:41,976 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:41,982 [INFO] Final candidates: []
2025-04-11 20:17:41,982 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:41,989 [INFO] Final candidates: []
2025-04-11 20:17:41,989 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:41,989 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(16)), (np.int64(11), np.int64(12)))
2025-04-11 20:17:41,990 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:42,057 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:17:42,057 [DEBUG] MCTS iteration 74: Rollout reward: 1.
2025-04-11 20:17:42,057 [DEBUG] MCTS iteration 74: Backed up Finish.
2025-04-11 20:17:42,057 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:42,065 [INFO] Final candidates: []
2025-04-11 20:17:42,065 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:42,075 [INFO] Final candidates: []
2025-04-11 20:17:42,075 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:42,075 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(10)), (np.int64(9), np.int64(5)))
2025-04-11 20:17:42,076 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:42,330 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:42,330 [DEBUG] MCTS iteration 75: Rollout reward: 0.
2025-04-11 20:17:42,330 [DEBUG] MCTS iteration 75: Backed up Finish.
2025-04-11 20:17:42,331 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:42,337 [INFO] Final candidates: []
2025-04-11 20:17:42,337 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:42,346 [INFO] Final candidates: []
2025-04-11 20:17:42,346 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:42,346 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(14)), (np.int64(10), np.int64(4)))
2025-04-11 20:17:42,347 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:42,585 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:42,585 [DEBUG] MCTS iteration 76: Rollout reward: 0.
2025-04-11 20:17:42,585 [DEBUG] MCTS iteration 76: Backed up Finish.
2025-04-11 20:17:42,585 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:42,594 [INFO] Final candidates: []
2025-04-11 20:17:42,594 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:42,602 [INFO] Final candidates: []
2025-04-11 20:17:42,602 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:42,602 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(17), np.int64(5)), (np.int64(5), np.int64(7)))
2025-04-11 20:17:42,603 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:42,640 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:42,640 [DEBUG] MCTS iteration 77: Rollout reward: 0.
2025-04-11 20:17:42,640 [DEBUG] MCTS iteration 77: Backed up Finish.
2025-04-11 20:17:42,640 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:42,647 [INFO] Final candidates: []
2025-04-11 20:17:42,647 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:42,653 [INFO] Final candidates: []
2025-04-11 20:17:42,653 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:42,653 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(17), np.int64(2)), (np.int64(16), np.int64(0)))
2025-04-11 20:17:42,654 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:42,901 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:42,901 [DEBUG] MCTS iteration 78: Rollout reward: 0.
2025-04-11 20:17:42,901 [DEBUG] MCTS iteration 78: Backed up Finish.
2025-04-11 20:17:42,902 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:42,911 [INFO] Final candidates: []
2025-04-11 20:17:42,911 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:42,919 [INFO] Final candidates: []
2025-04-11 20:17:42,919 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:42,919 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(3), np.int64(15)), (np.int64(17), np.int64(6)))
2025-04-11 20:17:42,921 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:43,152 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:43,152 [DEBUG] MCTS iteration 79: Rollout reward: 0.
2025-04-11 20:17:43,152 [DEBUG] MCTS iteration 79: Backed up Finish.
2025-04-11 20:17:43,153 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:43,165 [INFO] Final candidates: []
2025-04-11 20:17:43,165 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:43,175 [INFO] Final candidates: []
2025-04-11 20:17:43,175 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:43,175 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(10)), (np.int64(13), np.int64(9)))
2025-04-11 20:17:43,176 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:43,274 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:43,275 [DEBUG] MCTS iteration 80: Rollout reward: 0.
2025-04-11 20:17:43,275 [DEBUG] MCTS iteration 80: Backed up Finish.
2025-04-11 20:17:43,275 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:43,282 [INFO] Final candidates: []
2025-04-11 20:17:43,282 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:43,289 [INFO] Final candidates: []
2025-04-11 20:17:43,289 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:43,289 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(7)), (np.int64(10), np.int64(5)))
2025-04-11 20:17:43,291 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:43,508 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:43,508 [DEBUG] MCTS iteration 81: Rollout reward: 0.
2025-04-11 20:17:43,508 [DEBUG] MCTS iteration 81: Backed up Finish.
2025-04-11 20:17:43,508 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:43,515 [INFO] Final candidates: []
2025-04-11 20:17:43,515 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:43,521 [INFO] Final candidates: []
2025-04-11 20:17:43,521 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:43,521 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(11)), (np.int64(12), np.int64(5)))
2025-04-11 20:17:43,523 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:43,737 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:17:43,737 [DEBUG] MCTS iteration 82: Rollout reward: 1.
2025-04-11 20:17:43,737 [DEBUG] MCTS iteration 82: Backed up Finish.
2025-04-11 20:17:43,737 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:43,743 [INFO] Final candidates: []
2025-04-11 20:17:43,743 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:43,750 [INFO] Final candidates: []
2025-04-11 20:17:43,750 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:43,750 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(14)), (np.int64(18), np.int64(11)))
2025-04-11 20:17:43,751 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:44,002 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:17:44,002 [DEBUG] MCTS iteration 83: Rollout reward: 1.
2025-04-11 20:17:44,002 [DEBUG] MCTS iteration 83: Backed up Finish.
2025-04-11 20:17:44,002 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:44,009 [INFO] Final candidates: []
2025-04-11 20:17:44,009 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:44,016 [INFO] Final candidates: []
2025-04-11 20:17:44,016 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:44,016 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(14)), (np.int64(10), np.int64(13)))
2025-04-11 20:17:44,017 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:44,165 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:17:44,165 [DEBUG] MCTS iteration 84: Rollout reward: 1.
2025-04-11 20:17:44,165 [DEBUG] MCTS iteration 84: Backed up Finish.
2025-04-11 20:17:44,165 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:44,171 [INFO] Final candidates: []
2025-04-11 20:17:44,171 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:44,178 [INFO] Final candidates: []
2025-04-11 20:17:44,178 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:44,178 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(18), np.int64(7)), (np.int64(13), np.int64(15)))
2025-04-11 20:17:44,179 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:44,441 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:44,441 [DEBUG] MCTS iteration 85: Rollout reward: 0.
2025-04-11 20:17:44,441 [DEBUG] MCTS iteration 85: Backed up Finish.
2025-04-11 20:17:44,441 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:44,448 [INFO] Final candidates: []
2025-04-11 20:17:44,448 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:44,454 [INFO] Final candidates: []
2025-04-11 20:17:44,454 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:44,455 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(12)), (np.int64(2), np.int64(16)))
2025-04-11 20:17:44,456 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:44,570 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:17:44,571 [DEBUG] MCTS iteration 86: Rollout reward: 1.
2025-04-11 20:17:44,571 [DEBUG] MCTS iteration 86: Backed up Finish.
2025-04-11 20:17:44,571 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:44,579 [INFO] Final candidates: []
2025-04-11 20:17:44,579 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:44,586 [INFO] Final candidates: []
2025-04-11 20:17:44,586 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:44,586 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(12)), (np.int64(17), np.int64(9)))
2025-04-11 20:17:44,587 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:44,798 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:17:44,799 [DEBUG] MCTS iteration 87: Rollout reward: 1.
2025-04-11 20:17:44,799 [DEBUG] MCTS iteration 87: Backed up Finish.
2025-04-11 20:17:44,799 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:44,805 [INFO] Final candidates: []
2025-04-11 20:17:44,805 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:44,812 [INFO] Final candidates: []
2025-04-11 20:17:44,812 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:44,812 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(17), np.int64(7)), (np.int64(14), np.int64(5)))
2025-04-11 20:17:44,813 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:44,985 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:44,986 [DEBUG] MCTS iteration 88: Rollout reward: 0.
2025-04-11 20:17:44,986 [DEBUG] MCTS iteration 88: Backed up Finish.
2025-04-11 20:17:44,986 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:44,992 [INFO] Final candidates: []
2025-04-11 20:17:44,992 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:44,999 [INFO] Final candidates: []
2025-04-11 20:17:44,999 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:44,999 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(17), np.int64(9)), (np.int64(18), np.int64(9)))
2025-04-11 20:17:45,000 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:45,285 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:17:45,285 [DEBUG] MCTS iteration 89: Rollout reward: 1.
2025-04-11 20:17:45,285 [DEBUG] MCTS iteration 89: Backed up Finish.
2025-04-11 20:17:45,285 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:45,291 [INFO] Final candidates: []
2025-04-11 20:17:45,291 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:45,299 [INFO] Final candidates: []
2025-04-11 20:17:45,299 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:45,299 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(9)), (np.int64(16), np.int64(12)))
2025-04-11 20:17:45,300 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:45,336 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:17:45,336 [DEBUG] MCTS iteration 90: Rollout reward: 1.
2025-04-11 20:17:45,336 [DEBUG] MCTS iteration 90: Backed up Finish.
2025-04-11 20:17:45,336 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:45,343 [INFO] Final candidates: []
2025-04-11 20:17:45,343 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:45,349 [INFO] Final candidates: []
2025-04-11 20:17:45,349 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:45,349 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(3), np.int64(17)), (np.int64(2), np.int64(16)))
2025-04-11 20:17:45,350 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:45,469 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:17:45,469 [DEBUG] MCTS iteration 91: Rollout reward: 1.
2025-04-11 20:17:45,469 [DEBUG] MCTS iteration 91: Backed up Finish.
2025-04-11 20:17:45,469 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:45,479 [INFO] Final candidates: []
2025-04-11 20:17:45,479 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:45,486 [INFO] Final candidates: []
2025-04-11 20:17:45,486 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:45,486 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(14)), (np.int64(10), np.int64(11)))
2025-04-11 20:17:45,487 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:45,623 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:17:45,623 [DEBUG] MCTS iteration 92: Rollout reward: 1.
2025-04-11 20:17:45,623 [DEBUG] MCTS iteration 92: Backed up Finish.
2025-04-11 20:17:45,623 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:45,629 [INFO] Final candidates: []
2025-04-11 20:17:45,630 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:45,636 [INFO] Final candidates: []
2025-04-11 20:17:45,636 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:45,636 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(16)), (np.int64(15), np.int64(3)))
2025-04-11 20:17:45,637 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:45,731 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:17:45,731 [DEBUG] MCTS iteration 93: Rollout reward: 1.
2025-04-11 20:17:45,731 [DEBUG] MCTS iteration 93: Backed up Finish.
2025-04-11 20:17:45,731 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:45,738 [INFO] Final candidates: []
2025-04-11 20:17:45,738 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:45,744 [INFO] Final candidates: []
2025-04-11 20:17:45,744 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:45,744 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(6)), (np.int64(14), np.int64(6)))
2025-04-11 20:17:45,745 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:45,968 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:17:45,968 [DEBUG] MCTS iteration 94: Rollout reward: 1.
2025-04-11 20:17:45,968 [DEBUG] MCTS iteration 94: Backed up Finish.
2025-04-11 20:17:45,968 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:45,974 [INFO] Final candidates: []
2025-04-11 20:17:45,975 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:45,983 [INFO] Final candidates: []
2025-04-11 20:17:45,983 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:45,983 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(14)), (np.int64(11), np.int64(6)))
2025-04-11 20:17:45,984 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:46,237 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:17:46,238 [DEBUG] MCTS iteration 95: Rollout reward: 1.
2025-04-11 20:17:46,238 [DEBUG] MCTS iteration 95: Backed up Finish.
2025-04-11 20:17:46,238 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:46,244 [INFO] Final candidates: []
2025-04-11 20:17:46,244 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:46,251 [INFO] Final candidates: []
2025-04-11 20:17:46,251 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:46,251 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(11)), (np.int64(18), np.int64(9)))
2025-04-11 20:17:46,252 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:46,357 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:46,357 [DEBUG] MCTS iteration 96: Rollout reward: 0.
2025-04-11 20:17:46,357 [DEBUG] MCTS iteration 96: Backed up Finish.
2025-04-11 20:17:46,357 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:46,363 [INFO] Final candidates: []
2025-04-11 20:17:46,363 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:46,370 [INFO] Final candidates: []
2025-04-11 20:17:46,370 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:46,370 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(11)), (np.int64(6), np.int64(16)))
2025-04-11 20:17:46,371 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:46,606 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 20:17:46,606 [DEBUG] MCTS iteration 97: Rollout reward: 1.
2025-04-11 20:17:46,606 [DEBUG] MCTS iteration 97: Backed up Finish.
2025-04-11 20:17:46,607 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:46,613 [INFO] Final candidates: []
2025-04-11 20:17:46,613 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:46,621 [INFO] Final candidates: []
2025-04-11 20:17:46,621 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:46,621 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(12)), (np.int64(11), np.int64(8)))
2025-04-11 20:17:46,622 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:46,664 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:46,664 [DEBUG] MCTS iteration 98: Rollout reward: 0.
2025-04-11 20:17:46,664 [DEBUG] MCTS iteration 98: Backed up Finish.
2025-04-11 20:17:46,664 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 20:17:46,671 [INFO] Final candidates: []
2025-04-11 20:17:46,671 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 20:17:46,677 [INFO] Final candidates: []
2025-04-11 20:17:46,677 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 20:17:46,677 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(14)), (np.int64(7), np.int64(8)))
2025-04-11 20:17:46,679 [INFO] Default policy: Starting random playout.
2025-04-11 20:17:46,865 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 20:17:46,866 [DEBUG] MCTS iteration 99: Rollout reward: 0.
2025-04-11 20:17:46,866 [DEBUG] MCTS iteration 99: Backed up Finish.
2025-04-11 20:17:46,866 [INFO] MCTS: Search completed after 100 iterations.
2025-04-11 20:17:46,866 [DEBUG] MCTS: BEST ((17, 11), (12, 6)) with 100 visits.
2025-04-11 20:17:46,866 [INFO] MCTS: Search finished. Best move selected with 100 visits.
2025-04-11 20:17:46,866 [INFO] Phase 2 (defense): MCTS selected move: ((17, 11), (12, 6))
2025-04-11 20:17:46,866 [INFO] Phase 2 (defense): MCTS selected move string : M18,G13
2025-04-11 20:17:46,866 [INFO] MCTS (defense candidates) selected move: M18,G13
2025-04-11 20:17:58,863 [INFO] Game terminated.
