2025-04-11 18:56:46,074 [INFO] Starting pre-MCTS candidate collection.
2025-04-11 18:56:46,083 [INFO] Final candidates: []
2025-04-11 18:56:46,083 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:46,091 [INFO] Final candidates: []
2025-04-11 18:56:46,091 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:46,091 [INFO] No candidate found in Phase 1 or 2; using full legal moves for MCTS.
2025-04-11 18:56:46,091 [INFO] MCTS: Starting search for 100 iterations.
2025-04-11 18:56:46,091 [DEBUG] Tree_policy iteration 1: Expanding move (14, 18)
2025-04-11 18:56:46,100 [INFO] Final candidates: []
2025-04-11 18:56:46,100 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:46,109 [INFO] Final candidates: []
2025-04-11 18:56:46,110 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:46,110 [DEBUG] MCTS iteration 0: reached a node with 0 visits.
2025-04-11 18:56:46,110 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:46,134 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:56:46,134 [DEBUG] Tree_policy iteration 1: Expanding move (9, 14)
2025-04-11 18:56:46,142 [INFO] Final candidates: []
2025-04-11 18:56:46,142 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:46,150 [INFO] Final candidates: []
2025-04-11 18:56:46,150 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:46,150 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:46,261 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:56:46,261 [DEBUG] Tree_policy iteration 1: Expanding move (16, 7)
2025-04-11 18:56:46,270 [INFO] Final candidates: []
2025-04-11 18:56:46,270 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:46,278 [INFO] Final candidates: []
2025-04-11 18:56:46,278 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:46,278 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:46,481 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:56:46,481 [DEBUG] Tree_policy iteration 1: Expanding move (14, 3)
2025-04-11 18:56:46,489 [INFO] Final candidates: []
2025-04-11 18:56:46,489 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:46,499 [INFO] Final candidates: []
2025-04-11 18:56:46,499 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:46,499 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:46,584 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:56:46,584 [DEBUG] Tree_policy iteration 1: Expanding move (8, 10)
2025-04-11 18:56:46,606 [INFO] Final candidates: []
2025-04-11 18:56:46,606 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:46,619 [INFO] Final candidates: []
2025-04-11 18:56:46,619 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:46,619 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:46,691 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:56:46,691 [DEBUG] Tree_policy iteration 1: Expanding move (10, 18)
2025-04-11 18:56:46,699 [INFO] Final candidates: []
2025-04-11 18:56:46,699 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:46,707 [INFO] Final candidates: []
2025-04-11 18:56:46,707 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:46,707 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:46,885 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:56:46,885 [DEBUG] Tree_policy iteration 1: Expanding move (13, 2)
2025-04-11 18:56:46,893 [INFO] Final candidates: []
2025-04-11 18:56:46,893 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:46,901 [INFO] Final candidates: []
2025-04-11 18:56:46,901 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:46,901 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:47,159 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:56:47,159 [DEBUG] Tree_policy iteration 1: Expanding move (11, 12)
2025-04-11 18:56:47,168 [INFO] Final candidates: []
2025-04-11 18:56:47,168 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:47,176 [INFO] Final candidates: []
2025-04-11 18:56:47,176 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:47,176 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:47,253 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:56:47,253 [DEBUG] Tree_policy iteration 1: Expanding move (5, 4)
2025-04-11 18:56:47,262 [INFO] Final candidates: []
2025-04-11 18:56:47,262 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:47,274 [INFO] Final candidates: []
2025-04-11 18:56:47,274 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:47,274 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:47,364 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:56:47,364 [DEBUG] Tree_policy iteration 1: Expanding move (12, 5)
2025-04-11 18:56:47,372 [INFO] Final candidates: []
2025-04-11 18:56:47,372 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:47,381 [INFO] Final candidates: []
2025-04-11 18:56:47,381 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:47,381 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:47,652 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:56:47,652 [DEBUG] Tree_policy iteration 1: Expanding move (16, 0)
2025-04-11 18:56:47,661 [INFO] Final candidates: []
2025-04-11 18:56:47,661 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:47,669 [INFO] Final candidates: []
2025-04-11 18:56:47,669 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:47,669 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:47,679 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:56:47,679 [DEBUG] Tree_policy iteration 1: Expanding move (5, 3)
2025-04-11 18:56:47,687 [INFO] Final candidates: []
2025-04-11 18:56:47,688 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:47,695 [INFO] Final candidates: []
2025-04-11 18:56:47,695 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:47,696 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:47,776 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:56:47,776 [DEBUG] Tree_policy iteration 1: Expanding move (18, 12)
2025-04-11 18:56:47,785 [INFO] Final candidates: []
2025-04-11 18:56:47,785 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:47,793 [INFO] Final candidates: []
2025-04-11 18:56:47,793 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:47,793 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:48,025 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:56:48,025 [DEBUG] Tree_policy iteration 1: Expanding move (2, 3)
2025-04-11 18:56:48,037 [INFO] Final candidates: []
2025-04-11 18:56:48,037 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:48,052 [INFO] Final candidates: []
2025-04-11 18:56:48,053 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:48,053 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:48,067 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:56:48,067 [DEBUG] Tree_policy iteration 1: Expanding move (0, 18)
2025-04-11 18:56:48,075 [INFO] Final candidates: []
2025-04-11 18:56:48,075 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:48,084 [INFO] Final candidates: []
2025-04-11 18:56:48,084 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:48,084 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:48,164 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:56:48,164 [DEBUG] Tree_policy iteration 1: Expanding move (2, 7)
2025-04-11 18:56:48,172 [INFO] Final candidates: []
2025-04-11 18:56:48,172 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:48,180 [INFO] Final candidates: []
2025-04-11 18:56:48,180 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:48,180 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:48,369 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:56:48,369 [DEBUG] Tree_policy iteration 1: Expanding move (10, 14)
2025-04-11 18:56:48,377 [INFO] Final candidates: []
2025-04-11 18:56:48,377 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:48,385 [INFO] Final candidates: []
2025-04-11 18:56:48,385 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:48,385 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:48,427 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:56:48,428 [DEBUG] Tree_policy iteration 1: Expanding move (4, 16)
2025-04-11 18:56:48,436 [INFO] Final candidates: []
2025-04-11 18:56:48,436 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:48,444 [INFO] Final candidates: []
2025-04-11 18:56:48,444 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:48,444 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:48,452 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:56:48,452 [DEBUG] Tree_policy iteration 1: Expanding move (14, 11)
2025-04-11 18:56:48,462 [INFO] Final candidates: []
2025-04-11 18:56:48,462 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:48,471 [INFO] Final candidates: []
2025-04-11 18:56:48,471 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:48,471 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:48,479 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:56:48,479 [DEBUG] Tree_policy iteration 1: Expanding move (11, 10)
2025-04-11 18:56:48,487 [INFO] Final candidates: []
2025-04-11 18:56:48,488 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:48,496 [INFO] Final candidates: []
2025-04-11 18:56:48,496 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:48,496 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:48,666 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:56:48,666 [DEBUG] Tree_policy iteration 1: Expanding move (18, 17)
2025-04-11 18:56:48,674 [INFO] Final candidates: []
2025-04-11 18:56:48,674 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:48,682 [INFO] Final candidates: []
2025-04-11 18:56:48,682 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:48,682 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:48,807 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:56:48,807 [DEBUG] Tree_policy iteration 1: Expanding move (10, 5)
2025-04-11 18:56:48,815 [INFO] Final candidates: []
2025-04-11 18:56:48,815 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:48,823 [INFO] Final candidates: []
2025-04-11 18:56:48,823 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:48,823 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:48,849 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:56:48,849 [DEBUG] Tree_policy iteration 1: Expanding move (3, 1)
2025-04-11 18:56:48,857 [INFO] Final candidates: []
2025-04-11 18:56:48,857 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:48,865 [INFO] Final candidates: []
2025-04-11 18:56:48,865 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:48,866 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:48,874 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:56:48,874 [DEBUG] Tree_policy iteration 1: Expanding move (6, 6)
2025-04-11 18:56:48,883 [INFO] Final candidates: []
2025-04-11 18:56:48,883 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:48,893 [INFO] Final candidates: []
2025-04-11 18:56:48,893 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:48,893 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:48,995 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:56:48,996 [DEBUG] Tree_policy iteration 1: Expanding move (13, 9)
2025-04-11 18:56:49,004 [INFO] Final candidates: []
2025-04-11 18:56:49,004 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:49,012 [INFO] Final candidates: []
2025-04-11 18:56:49,012 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:49,012 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:49,153 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:56:49,153 [DEBUG] Tree_policy iteration 1: Expanding move (13, 17)
2025-04-11 18:56:49,161 [INFO] Final candidates: []
2025-04-11 18:56:49,162 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:49,170 [INFO] Final candidates: []
2025-04-11 18:56:49,170 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:49,170 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:49,187 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:56:49,187 [DEBUG] Tree_policy iteration 1: Expanding move (13, 5)
2025-04-11 18:56:49,195 [INFO] Final candidates: []
2025-04-11 18:56:49,195 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:49,203 [INFO] Final candidates: []
2025-04-11 18:56:49,203 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:49,203 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:49,327 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:56:49,327 [DEBUG] Tree_policy iteration 1: Expanding move (4, 1)
2025-04-11 18:56:49,336 [INFO] Final candidates: []
2025-04-11 18:56:49,336 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:49,344 [INFO] Final candidates: []
2025-04-11 18:56:49,344 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:49,344 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:49,387 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:56:49,387 [DEBUG] Tree_policy iteration 1: Expanding move (0, 1)
2025-04-11 18:56:49,395 [INFO] Final candidates: []
2025-04-11 18:56:49,395 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:49,403 [INFO] Final candidates: []
2025-04-11 18:56:49,403 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:49,403 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:49,411 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:56:49,411 [DEBUG] Tree_policy iteration 1: Expanding move (3, 13)
2025-04-11 18:56:49,419 [INFO] Final candidates: []
2025-04-11 18:56:49,419 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:49,427 [INFO] Final candidates: []
2025-04-11 18:56:49,427 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:49,427 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:49,439 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:56:49,439 [DEBUG] Tree_policy iteration 1: Expanding move (2, 17)
2025-04-11 18:56:49,448 [INFO] Final candidates: []
2025-04-11 18:56:49,448 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:49,460 [INFO] Final candidates: []
2025-04-11 18:56:49,460 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:49,460 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:49,522 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:56:49,522 [DEBUG] Tree_policy iteration 1: Expanding move (2, 11)
2025-04-11 18:56:49,530 [INFO] Final candidates: []
2025-04-11 18:56:49,530 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:49,538 [INFO] Final candidates: []
2025-04-11 18:56:49,538 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:49,538 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:49,631 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:56:49,631 [DEBUG] Tree_policy iteration 1: Expanding move (14, 12)
2025-04-11 18:56:49,639 [INFO] Final candidates: []
2025-04-11 18:56:49,639 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:49,647 [INFO] Final candidates: []
2025-04-11 18:56:49,647 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:49,647 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:49,751 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:56:49,752 [DEBUG] Tree_policy iteration 1: Expanding move (9, 17)
2025-04-11 18:56:49,761 [INFO] Final candidates: []
2025-04-11 18:56:49,761 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:49,769 [INFO] Final candidates: []
2025-04-11 18:56:49,769 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:49,769 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:49,823 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:56:49,823 [DEBUG] Tree_policy iteration 1: Expanding move (14, 13)
2025-04-11 18:56:49,832 [INFO] Final candidates: []
2025-04-11 18:56:49,832 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:49,840 [INFO] Final candidates: []
2025-04-11 18:56:49,840 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:49,840 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:49,986 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:56:49,986 [DEBUG] Tree_policy iteration 1: Expanding move (0, 10)
2025-04-11 18:56:49,994 [INFO] Final candidates: []
2025-04-11 18:56:49,994 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:50,012 [INFO] Final candidates: []
2025-04-11 18:56:50,012 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:50,013 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:50,280 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:56:50,280 [DEBUG] Tree_policy iteration 1: Expanding move (8, 0)
2025-04-11 18:56:50,288 [INFO] Final candidates: []
2025-04-11 18:56:50,288 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:50,296 [INFO] Final candidates: []
2025-04-11 18:56:50,296 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:50,296 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:50,375 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:56:50,375 [DEBUG] Tree_policy iteration 1: Expanding move (11, 8)
2025-04-11 18:56:50,386 [INFO] Final candidates: []
2025-04-11 18:56:50,387 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:50,394 [INFO] Final candidates: []
2025-04-11 18:56:50,394 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:50,395 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:50,576 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:56:50,577 [DEBUG] Tree_policy iteration 1: Expanding move (14, 9)
2025-04-11 18:56:50,585 [INFO] Final candidates: []
2025-04-11 18:56:50,585 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:50,593 [INFO] Final candidates: []
2025-04-11 18:56:50,593 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:50,593 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:50,721 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:56:50,722 [DEBUG] Tree_policy iteration 1: Expanding move (3, 17)
2025-04-11 18:56:50,730 [INFO] Final candidates: []
2025-04-11 18:56:50,730 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:50,738 [INFO] Final candidates: []
2025-04-11 18:56:50,738 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:50,738 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:51,018 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:56:51,018 [DEBUG] Tree_policy iteration 1: Expanding move (7, 10)
2025-04-11 18:56:51,026 [INFO] Final candidates: []
2025-04-11 18:56:51,026 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:51,034 [INFO] Final candidates: []
2025-04-11 18:56:51,034 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:51,034 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:51,105 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:56:51,105 [DEBUG] Tree_policy iteration 1: Expanding move (8, 15)
2025-04-11 18:56:51,113 [INFO] Final candidates: []
2025-04-11 18:56:51,113 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:51,121 [INFO] Final candidates: []
2025-04-11 18:56:51,121 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:51,121 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:51,174 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:56:51,174 [DEBUG] Tree_policy iteration 1: Expanding move (1, 9)
2025-04-11 18:56:51,183 [INFO] Final candidates: []
2025-04-11 18:56:51,183 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:51,191 [INFO] Final candidates: []
2025-04-11 18:56:51,192 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:51,192 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:51,229 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:56:51,229 [DEBUG] Tree_policy iteration 1: Expanding move (7, 15)
2025-04-11 18:56:51,237 [INFO] Final candidates: []
2025-04-11 18:56:51,237 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:51,245 [INFO] Final candidates: []
2025-04-11 18:56:51,245 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:51,245 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:51,335 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:56:51,336 [DEBUG] Tree_policy iteration 1: Expanding move (6, 7)
2025-04-11 18:56:51,344 [INFO] Final candidates: []
2025-04-11 18:56:51,344 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:51,352 [INFO] Final candidates: []
2025-04-11 18:56:51,352 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:51,352 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:51,392 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:56:51,392 [DEBUG] Tree_policy iteration 1: Expanding move (11, 5)
2025-04-11 18:56:51,400 [INFO] Final candidates: []
2025-04-11 18:56:51,400 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:51,408 [INFO] Final candidates: []
2025-04-11 18:56:51,408 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:51,408 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:51,504 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:56:51,504 [DEBUG] Tree_policy iteration 1: Expanding move (3, 3)
2025-04-11 18:56:51,512 [INFO] Final candidates: []
2025-04-11 18:56:51,512 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:51,520 [INFO] Final candidates: []
2025-04-11 18:56:51,520 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:51,521 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:51,534 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:56:51,534 [DEBUG] Tree_policy iteration 1: Expanding move (6, 14)
2025-04-11 18:56:51,543 [INFO] Final candidates: []
2025-04-11 18:56:51,543 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:51,551 [INFO] Final candidates: []
2025-04-11 18:56:51,551 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:51,551 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:51,640 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:56:51,640 [DEBUG] Tree_policy iteration 1: Expanding move (8, 12)
2025-04-11 18:56:51,649 [INFO] Final candidates: []
2025-04-11 18:56:51,649 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:51,657 [INFO] Final candidates: []
2025-04-11 18:56:51,657 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:51,657 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:51,822 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:56:51,822 [DEBUG] Tree_policy iteration 1: Expanding move (6, 0)
2025-04-11 18:56:51,830 [INFO] Final candidates: []
2025-04-11 18:56:51,830 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:51,839 [INFO] Final candidates: []
2025-04-11 18:56:51,839 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:51,839 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:51,929 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:56:51,929 [DEBUG] Tree_policy iteration 1: Expanding move (14, 6)
2025-04-11 18:56:51,938 [INFO] Final candidates: []
2025-04-11 18:56:51,938 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:51,946 [INFO] Final candidates: []
2025-04-11 18:56:51,946 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:51,946 [DEBUG] MCTS iteration 50: reached a node with 0 visits.
2025-04-11 18:56:51,946 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:52,025 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:56:52,026 [DEBUG] Tree_policy iteration 1: Expanding move (16, 5)
2025-04-11 18:56:52,034 [INFO] Final candidates: []
2025-04-11 18:56:52,034 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:52,042 [INFO] Final candidates: []
2025-04-11 18:56:52,042 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:52,042 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:52,102 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:56:52,102 [DEBUG] Tree_policy iteration 1: Expanding move (6, 10)
2025-04-11 18:56:52,110 [INFO] Final candidates: []
2025-04-11 18:56:52,110 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:52,118 [INFO] Final candidates: []
2025-04-11 18:56:52,118 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:52,118 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:52,265 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:56:52,265 [DEBUG] Tree_policy iteration 1: Expanding move (2, 9)
2025-04-11 18:56:52,273 [INFO] Final candidates: []
2025-04-11 18:56:52,273 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:52,281 [INFO] Final candidates: []
2025-04-11 18:56:52,281 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:52,281 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:52,377 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:56:52,377 [DEBUG] Tree_policy iteration 1: Expanding move (8, 6)
2025-04-11 18:56:52,385 [INFO] Final candidates: []
2025-04-11 18:56:52,385 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:52,394 [INFO] Final candidates: []
2025-04-11 18:56:52,394 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:52,394 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:52,439 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:56:52,439 [DEBUG] Tree_policy iteration 1: Expanding move (5, 8)
2025-04-11 18:56:52,449 [INFO] Final candidates: []
2025-04-11 18:56:52,449 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:52,457 [INFO] Final candidates: []
2025-04-11 18:56:52,457 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:52,457 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:52,719 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:56:52,719 [DEBUG] Tree_policy iteration 1: Expanding move (4, 17)
2025-04-11 18:56:52,727 [INFO] Final candidates: []
2025-04-11 18:56:52,727 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:52,735 [INFO] Final candidates: []
2025-04-11 18:56:52,735 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:52,735 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:52,810 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:56:52,811 [DEBUG] Tree_policy iteration 1: Expanding move (15, 3)
2025-04-11 18:56:52,819 [INFO] Final candidates: []
2025-04-11 18:56:52,819 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:52,827 [INFO] Final candidates: []
2025-04-11 18:56:52,827 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:52,827 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:52,875 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:56:52,875 [DEBUG] Tree_policy iteration 1: Expanding move (4, 5)
2025-04-11 18:56:52,884 [INFO] Final candidates: []
2025-04-11 18:56:52,884 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:52,892 [INFO] Final candidates: []
2025-04-11 18:56:52,892 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:52,892 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:52,957 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:56:52,957 [DEBUG] Tree_policy iteration 1: Expanding move (8, 2)
2025-04-11 18:56:52,966 [INFO] Final candidates: []
2025-04-11 18:56:52,966 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:52,974 [INFO] Final candidates: []
2025-04-11 18:56:52,974 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:52,974 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:53,009 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:56:53,009 [DEBUG] Tree_policy iteration 1: Expanding move (17, 7)
2025-04-11 18:56:53,017 [INFO] Final candidates: []
2025-04-11 18:56:53,017 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:53,025 [INFO] Final candidates: []
2025-04-11 18:56:53,025 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:53,026 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:53,060 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:56:53,060 [DEBUG] Tree_policy iteration 1: Expanding move (11, 9)
2025-04-11 18:56:53,069 [INFO] Final candidates: []
2025-04-11 18:56:53,069 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:53,077 [INFO] Final candidates: []
2025-04-11 18:56:53,077 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:53,077 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:53,160 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:56:53,160 [DEBUG] Tree_policy iteration 1: Expanding move (1, 17)
2025-04-11 18:56:53,168 [INFO] Final candidates: []
2025-04-11 18:56:53,168 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:53,177 [INFO] Final candidates: []
2025-04-11 18:56:53,177 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:53,177 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:53,269 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:56:53,269 [DEBUG] Tree_policy iteration 1: Expanding move (8, 3)
2025-04-11 18:56:53,277 [INFO] Final candidates: []
2025-04-11 18:56:53,277 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:53,285 [INFO] Final candidates: []
2025-04-11 18:56:53,285 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:53,285 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:53,488 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:56:53,489 [DEBUG] Tree_policy iteration 1: Expanding move (2, 10)
2025-04-11 18:56:53,497 [INFO] Final candidates: []
2025-04-11 18:56:53,497 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:53,505 [INFO] Final candidates: []
2025-04-11 18:56:53,505 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:53,505 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:53,552 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:56:53,552 [DEBUG] Tree_policy iteration 1: Expanding move (15, 7)
2025-04-11 18:56:53,560 [INFO] Final candidates: []
2025-04-11 18:56:53,560 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:53,568 [INFO] Final candidates: []
2025-04-11 18:56:53,568 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:53,569 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:53,669 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:56:53,670 [DEBUG] Tree_policy iteration 1: Expanding move (17, 18)
2025-04-11 18:56:53,678 [INFO] Final candidates: []
2025-04-11 18:56:53,678 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:53,686 [INFO] Final candidates: []
2025-04-11 18:56:53,686 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:53,686 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:53,814 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:56:53,814 [DEBUG] Tree_policy iteration 1: Expanding move (14, 4)
2025-04-11 18:56:53,823 [INFO] Final candidates: []
2025-04-11 18:56:53,823 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:53,831 [INFO] Final candidates: []
2025-04-11 18:56:53,831 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:53,831 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:53,864 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:56:53,864 [DEBUG] Tree_policy iteration 1: Expanding move (4, 4)
2025-04-11 18:56:53,872 [INFO] Final candidates: []
2025-04-11 18:56:53,872 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:53,880 [INFO] Final candidates: []
2025-04-11 18:56:53,880 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:53,881 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:53,910 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:56:53,910 [DEBUG] Tree_policy iteration 1: Expanding move (14, 8)
2025-04-11 18:56:53,919 [INFO] Final candidates: []
2025-04-11 18:56:53,919 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:53,928 [INFO] Final candidates: []
2025-04-11 18:56:53,928 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:53,928 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:53,956 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:56:53,956 [DEBUG] Tree_policy iteration 1: Expanding move (13, 4)
2025-04-11 18:56:53,964 [INFO] Final candidates: []
2025-04-11 18:56:53,964 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:53,972 [INFO] Final candidates: []
2025-04-11 18:56:53,972 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:53,972 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:53,992 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:56:53,992 [DEBUG] Tree_policy iteration 1: Expanding move (2, 16)
2025-04-11 18:56:54,000 [INFO] Final candidates: []
2025-04-11 18:56:54,000 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:54,008 [INFO] Final candidates: []
2025-04-11 18:56:54,008 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:54,008 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:54,113 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:56:54,113 [DEBUG] Tree_policy iteration 1: Expanding move (4, 2)
2025-04-11 18:56:54,121 [INFO] Final candidates: []
2025-04-11 18:56:54,121 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:54,129 [INFO] Final candidates: []
2025-04-11 18:56:54,129 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:54,129 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:54,164 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:56:54,165 [DEBUG] Tree_policy iteration 1: Expanding move (5, 1)
2025-04-11 18:56:54,173 [INFO] Final candidates: []
2025-04-11 18:56:54,173 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:54,181 [INFO] Final candidates: []
2025-04-11 18:56:54,181 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:54,181 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:54,243 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:56:54,243 [DEBUG] Tree_policy iteration 1: Expanding move (12, 2)
2025-04-11 18:56:54,253 [INFO] Final candidates: []
2025-04-11 18:56:54,253 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:54,261 [INFO] Final candidates: []
2025-04-11 18:56:54,261 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:54,261 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:54,448 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:56:54,448 [DEBUG] Tree_policy iteration 1: Expanding move (17, 2)
2025-04-11 18:56:54,456 [INFO] Final candidates: []
2025-04-11 18:56:54,456 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:54,464 [INFO] Final candidates: []
2025-04-11 18:56:54,464 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:54,464 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:54,604 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:56:54,605 [DEBUG] Tree_policy iteration 1: Expanding move (2, 8)
2025-04-11 18:56:54,613 [INFO] Final candidates: []
2025-04-11 18:56:54,613 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:54,621 [INFO] Final candidates: []
2025-04-11 18:56:54,621 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:54,621 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:54,635 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:56:54,636 [DEBUG] Tree_policy iteration 1: Expanding move (17, 12)
2025-04-11 18:56:54,644 [INFO] Final candidates: []
2025-04-11 18:56:54,644 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:54,652 [INFO] Final candidates: []
2025-04-11 18:56:54,652 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:54,652 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:54,715 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:56:54,715 [DEBUG] Tree_policy iteration 1: Expanding move (12, 15)
2025-04-11 18:56:54,723 [INFO] Final candidates: []
2025-04-11 18:56:54,723 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:54,731 [INFO] Final candidates: []
2025-04-11 18:56:54,731 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:54,731 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:54,839 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:56:54,840 [DEBUG] Tree_policy iteration 1: Expanding move (9, 7)
2025-04-11 18:56:54,848 [INFO] Final candidates: []
2025-04-11 18:56:54,848 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:54,855 [INFO] Final candidates: []
2025-04-11 18:56:54,855 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:54,856 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:54,959 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:56:54,959 [DEBUG] Tree_policy iteration 1: Expanding move (9, 1)
2025-04-11 18:56:54,967 [INFO] Final candidates: []
2025-04-11 18:56:54,967 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:54,975 [INFO] Final candidates: []
2025-04-11 18:56:54,975 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:54,976 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:55,053 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:56:55,053 [DEBUG] Tree_policy iteration 1: Expanding move (14, 14)
2025-04-11 18:56:55,065 [INFO] Final candidates: []
2025-04-11 18:56:55,065 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:55,085 [INFO] Final candidates: []
2025-04-11 18:56:55,085 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:55,086 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:55,185 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:56:55,185 [DEBUG] Tree_policy iteration 1: Expanding move (3, 2)
2025-04-11 18:56:55,193 [INFO] Final candidates: []
2025-04-11 18:56:55,193 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:55,201 [INFO] Final candidates: []
2025-04-11 18:56:55,201 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:55,201 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:55,407 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:56:55,407 [DEBUG] Tree_policy iteration 1: Expanding move (18, 10)
2025-04-11 18:56:55,415 [INFO] Final candidates: []
2025-04-11 18:56:55,415 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:55,423 [INFO] Final candidates: []
2025-04-11 18:56:55,423 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:55,423 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:55,566 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:56:55,566 [DEBUG] Tree_policy iteration 1: Expanding move (8, 1)
2025-04-11 18:56:55,574 [INFO] Final candidates: []
2025-04-11 18:56:55,574 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:55,582 [INFO] Final candidates: []
2025-04-11 18:56:55,582 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:55,582 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:55,727 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:56:55,728 [DEBUG] Tree_policy iteration 1: Expanding move (12, 18)
2025-04-11 18:56:55,736 [INFO] Final candidates: []
2025-04-11 18:56:55,736 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:55,744 [INFO] Final candidates: []
2025-04-11 18:56:55,744 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:55,744 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:55,936 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:56:55,936 [DEBUG] Tree_policy iteration 1: Expanding move (12, 4)
2025-04-11 18:56:55,944 [INFO] Final candidates: []
2025-04-11 18:56:55,944 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:55,952 [INFO] Final candidates: []
2025-04-11 18:56:55,952 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:55,952 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:56,006 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:56:56,006 [DEBUG] Tree_policy iteration 1: Expanding move (9, 18)
2025-04-11 18:56:56,014 [INFO] Final candidates: []
2025-04-11 18:56:56,014 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:56,022 [INFO] Final candidates: []
2025-04-11 18:56:56,022 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:56,023 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:56,170 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:56:56,170 [DEBUG] Tree_policy iteration 1: Expanding move (5, 6)
2025-04-11 18:56:56,179 [INFO] Final candidates: []
2025-04-11 18:56:56,179 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:56,187 [INFO] Final candidates: []
2025-04-11 18:56:56,187 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:56,187 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:56,290 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:56:56,291 [DEBUG] Tree_policy iteration 1: Expanding move (11, 7)
2025-04-11 18:56:56,299 [INFO] Final candidates: []
2025-04-11 18:56:56,299 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:56,307 [INFO] Final candidates: []
2025-04-11 18:56:56,307 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:56,307 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:56,383 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:56:56,384 [DEBUG] Tree_policy iteration 1: Expanding move (17, 3)
2025-04-11 18:56:56,392 [INFO] Final candidates: []
2025-04-11 18:56:56,392 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:56,402 [INFO] Final candidates: []
2025-04-11 18:56:56,402 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:56,402 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:56,527 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:56:56,527 [DEBUG] Tree_policy iteration 1: Expanding move (16, 10)
2025-04-11 18:56:56,536 [INFO] Final candidates: []
2025-04-11 18:56:56,536 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:56,543 [INFO] Final candidates: []
2025-04-11 18:56:56,543 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:56,544 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:56,552 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:56:56,552 [DEBUG] Tree_policy iteration 1: Expanding move (3, 11)
2025-04-11 18:56:56,561 [INFO] Final candidates: []
2025-04-11 18:56:56,561 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:56,569 [INFO] Final candidates: []
2025-04-11 18:56:56,569 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:56,569 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:56,585 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:56:56,585 [DEBUG] Tree_policy iteration 1: Expanding move (13, 3)
2025-04-11 18:56:56,593 [INFO] Final candidates: []
2025-04-11 18:56:56,593 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:56,601 [INFO] Final candidates: []
2025-04-11 18:56:56,601 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:56,601 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:56,686 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:56:56,686 [DEBUG] Tree_policy iteration 1: Expanding move (8, 13)
2025-04-11 18:56:56,695 [INFO] Final candidates: []
2025-04-11 18:56:56,695 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:56,703 [INFO] Final candidates: []
2025-04-11 18:56:56,703 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:56,703 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:56,756 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:56:56,756 [DEBUG] Tree_policy iteration 1: Expanding move (10, 11)
2025-04-11 18:56:56,764 [INFO] Final candidates: []
2025-04-11 18:56:56,764 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:56,775 [INFO] Final candidates: []
2025-04-11 18:56:56,775 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:56,776 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:56,980 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:56:56,980 [DEBUG] Tree_policy iteration 1: Expanding move (11, 2)
2025-04-11 18:56:56,988 [INFO] Final candidates: []
2025-04-11 18:56:56,988 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:56,996 [INFO] Final candidates: []
2025-04-11 18:56:56,996 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:56,996 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:57,042 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:56:57,043 [DEBUG] Tree_policy iteration 1: Expanding move (15, 6)
2025-04-11 18:56:57,051 [INFO] Final candidates: []
2025-04-11 18:56:57,051 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:57,059 [INFO] Final candidates: []
2025-04-11 18:56:57,059 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:57,059 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:57,086 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:56:57,086 [DEBUG] Tree_policy iteration 1: Expanding move (18, 3)
2025-04-11 18:56:57,095 [INFO] Final candidates: []
2025-04-11 18:56:57,095 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:57,104 [INFO] Final candidates: []
2025-04-11 18:56:57,104 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:57,104 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:57,138 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:56:57,138 [DEBUG] Tree_policy iteration 1: Expanding move (15, 16)
2025-04-11 18:56:57,146 [INFO] Final candidates: []
2025-04-11 18:56:57,146 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:56:57,154 [INFO] Final candidates: []
2025-04-11 18:56:57,154 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:56:57,154 [INFO] Default policy: Starting random playout.
2025-04-11 18:56:57,269 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:56:57,270 [INFO] MCTS: Search finished. Best move selected with 1 visits.
2025-04-11 18:56:57,270 [INFO] MCTS selected move: T15
2025-04-11 18:56:57,270 [INFO] ===============NEW MOVE================
2025-04-11 18:57:04,777 [INFO] Starting pre-MCTS candidate collection.
2025-04-11 18:57:04,785 [INFO] Final candidates: []
2025-04-11 18:57:04,785 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:04,793 [INFO] Final candidates: []
2025-04-11 18:57:04,793 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:04,793 [INFO] No candidate found in Phase 1 or 2; using full legal moves for MCTS.
2025-04-11 18:57:04,793 [INFO] MCTS: Starting search for 100 iterations.
2025-04-11 18:57:04,793 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(17)), (np.int64(6), np.int64(9)))
2025-04-11 18:57:04,801 [INFO] Final candidates: []
2025-04-11 18:57:04,801 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:04,808 [INFO] Final candidates: []
2025-04-11 18:57:04,808 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:04,809 [DEBUG] MCTS iteration 0: reached a node with 0 visits.
2025-04-11 18:57:04,809 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:04,970 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:04,970 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(17)), (np.int64(11), np.int64(9)))
2025-04-11 18:57:04,978 [INFO] Final candidates: []
2025-04-11 18:57:04,978 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:04,986 [INFO] Final candidates: []
2025-04-11 18:57:04,986 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:04,986 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:05,081 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:05,082 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(11)), (np.int64(8), np.int64(10)))
2025-04-11 18:57:05,090 [INFO] Final candidates: []
2025-04-11 18:57:05,090 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:05,098 [INFO] Final candidates: []
2025-04-11 18:57:05,098 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:05,098 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:05,355 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:05,355 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(10)), (np.int64(14), np.int64(17)))
2025-04-11 18:57:05,363 [INFO] Final candidates: []
2025-04-11 18:57:05,363 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:05,371 [INFO] Final candidates: []
2025-04-11 18:57:05,371 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:05,371 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:05,391 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:05,391 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(9)), (np.int64(16), np.int64(18)))
2025-04-11 18:57:05,400 [INFO] Final candidates: []
2025-04-11 18:57:05,400 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:05,409 [INFO] Final candidates: []
2025-04-11 18:57:05,409 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:05,410 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:05,557 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:05,557 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(8)), (np.int64(8), np.int64(10)))
2025-04-11 18:57:05,565 [INFO] Final candidates: []
2025-04-11 18:57:05,565 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:05,573 [INFO] Final candidates: []
2025-04-11 18:57:05,573 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:05,573 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:05,700 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:05,700 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(17)), (np.int64(8), np.int64(10)))
2025-04-11 18:57:05,708 [INFO] Final candidates: []
2025-04-11 18:57:05,708 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:05,716 [INFO] Final candidates: []
2025-04-11 18:57:05,716 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:05,716 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:05,988 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:05,989 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(8)), (np.int64(15), np.int64(18)))
2025-04-11 18:57:05,997 [INFO] Final candidates: []
2025-04-11 18:57:05,997 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:06,005 [INFO] Final candidates: []
2025-04-11 18:57:06,005 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:06,005 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:06,104 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:06,104 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(17)), (np.int64(7), np.int64(8)))
2025-04-11 18:57:06,112 [INFO] Final candidates: []
2025-04-11 18:57:06,112 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:06,120 [INFO] Final candidates: []
2025-04-11 18:57:06,120 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:06,120 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:06,366 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:06,366 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(17)), (np.int64(9), np.int64(7)))
2025-04-11 18:57:06,375 [INFO] Final candidates: []
2025-04-11 18:57:06,375 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:06,388 [INFO] Final candidates: []
2025-04-11 18:57:06,388 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:06,388 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:06,442 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:06,442 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(7)), (np.int64(7), np.int64(8)))
2025-04-11 18:57:06,450 [INFO] Final candidates: []
2025-04-11 18:57:06,450 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:06,458 [INFO] Final candidates: []
2025-04-11 18:57:06,458 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:06,458 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:06,558 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:06,558 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(9)), (np.int64(7), np.int64(10)))
2025-04-11 18:57:06,566 [INFO] Final candidates: []
2025-04-11 18:57:06,566 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:06,574 [INFO] Final candidates: []
2025-04-11 18:57:06,574 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:06,574 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:06,881 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:06,881 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(10)), (np.int64(15), np.int64(18)))
2025-04-11 18:57:06,889 [INFO] Final candidates: []
2025-04-11 18:57:06,889 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:06,896 [INFO] Final candidates: []
2025-04-11 18:57:06,897 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:06,897 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:07,025 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:07,025 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(10)), (np.int64(14), np.int64(17)))
2025-04-11 18:57:07,033 [INFO] Final candidates: []
2025-04-11 18:57:07,034 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:07,041 [INFO] Final candidates: []
2025-04-11 18:57:07,041 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:07,041 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:07,143 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:07,143 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(18)), (np.int64(14), np.int64(17)))
2025-04-11 18:57:07,151 [INFO] Final candidates: []
2025-04-11 18:57:07,151 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:07,159 [INFO] Final candidates: []
2025-04-11 18:57:07,159 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:07,159 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:07,409 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:07,409 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(18)), (np.int64(16), np.int64(18)))
2025-04-11 18:57:07,417 [INFO] Final candidates: []
2025-04-11 18:57:07,417 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:07,425 [INFO] Final candidates: []
2025-04-11 18:57:07,425 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:07,425 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:07,560 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:07,560 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(17)), (np.int64(14), np.int64(17)))
2025-04-11 18:57:07,568 [INFO] Final candidates: []
2025-04-11 18:57:07,568 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:07,576 [INFO] Final candidates: []
2025-04-11 18:57:07,576 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:07,576 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:07,601 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:07,602 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(17)), (np.int64(8), np.int64(8)))
2025-04-11 18:57:07,610 [INFO] Final candidates: []
2025-04-11 18:57:07,610 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:07,617 [INFO] Final candidates: []
2025-04-11 18:57:07,617 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:07,618 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:07,662 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:07,662 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(16)), (np.int64(16), np.int64(18)))
2025-04-11 18:57:07,675 [INFO] Final candidates: []
2025-04-11 18:57:07,675 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:07,683 [INFO] Final candidates: []
2025-04-11 18:57:07,683 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:07,683 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:07,944 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:07,944 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(11)), (np.int64(6), np.int64(9)))
2025-04-11 18:57:07,955 [INFO] Final candidates: []
2025-04-11 18:57:07,955 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:07,963 [INFO] Final candidates: []
2025-04-11 18:57:07,963 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:07,963 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:07,996 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:07,996 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(9)), (np.int64(8), np.int64(10)))
2025-04-11 18:57:08,008 [INFO] Final candidates: []
2025-04-11 18:57:08,008 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:08,016 [INFO] Final candidates: []
2025-04-11 18:57:08,016 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:08,016 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:08,316 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:08,316 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(16)), (np.int64(8), np.int64(7)))
2025-04-11 18:57:08,330 [INFO] Final candidates: []
2025-04-11 18:57:08,330 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:08,338 [INFO] Final candidates: []
2025-04-11 18:57:08,338 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:08,338 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:08,438 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:08,438 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(11)), (np.int64(10), np.int64(8)))
2025-04-11 18:57:08,446 [INFO] Final candidates: []
2025-04-11 18:57:08,446 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:08,454 [INFO] Final candidates: []
2025-04-11 18:57:08,454 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:08,454 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:08,567 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:08,567 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(9)), (np.int64(9), np.int64(10)))
2025-04-11 18:57:08,575 [INFO] Final candidates: []
2025-04-11 18:57:08,575 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:08,583 [INFO] Final candidates: []
2025-04-11 18:57:08,583 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:08,583 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:08,587 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:08,588 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(8)), (np.int64(7), np.int64(8)))
2025-04-11 18:57:08,596 [INFO] Final candidates: []
2025-04-11 18:57:08,596 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:08,603 [INFO] Final candidates: []
2025-04-11 18:57:08,603 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:08,603 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:08,624 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:08,624 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(17)), (np.int64(8), np.int64(7)))
2025-04-11 18:57:08,632 [INFO] Final candidates: []
2025-04-11 18:57:08,632 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:08,640 [INFO] Final candidates: []
2025-04-11 18:57:08,640 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:08,640 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:08,803 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:08,803 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(18)), (np.int64(14), np.int64(17)))
2025-04-11 18:57:08,812 [INFO] Final candidates: []
2025-04-11 18:57:08,812 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:08,820 [INFO] Final candidates: []
2025-04-11 18:57:08,820 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:08,820 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:09,157 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:09,157 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(16)), (np.int64(9), np.int64(11)))
2025-04-11 18:57:09,165 [INFO] Final candidates: []
2025-04-11 18:57:09,165 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:09,173 [INFO] Final candidates: []
2025-04-11 18:57:09,173 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:09,173 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:09,302 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:09,302 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(17)), (np.int64(9), np.int64(10)))
2025-04-11 18:57:09,310 [INFO] Final candidates: []
2025-04-11 18:57:09,310 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:09,318 [INFO] Final candidates: []
2025-04-11 18:57:09,318 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:09,319 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:09,433 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:09,433 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(7)), (np.int64(7), np.int64(9)))
2025-04-11 18:57:09,443 [INFO] Final candidates: []
2025-04-11 18:57:09,443 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:09,453 [INFO] Final candidates: []
2025-04-11 18:57:09,453 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:09,453 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:09,588 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:09,589 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(17)), (np.int64(16), np.int64(18)))
2025-04-11 18:57:09,597 [INFO] Final candidates: []
2025-04-11 18:57:09,597 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:09,605 [INFO] Final candidates: []
2025-04-11 18:57:09,605 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:09,605 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:09,749 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:09,749 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(17)), (np.int64(9), np.int64(7)))
2025-04-11 18:57:09,757 [INFO] Final candidates: []
2025-04-11 18:57:09,757 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:09,765 [INFO] Final candidates: []
2025-04-11 18:57:09,765 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:09,765 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:09,892 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:09,893 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(10)), (np.int64(15), np.int64(18)))
2025-04-11 18:57:09,901 [INFO] Final candidates: []
2025-04-11 18:57:09,901 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:09,908 [INFO] Final candidates: []
2025-04-11 18:57:09,908 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:09,909 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:10,161 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:10,162 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(11)), (np.int64(13), np.int64(17)))
2025-04-11 18:57:10,170 [INFO] Final candidates: []
2025-04-11 18:57:10,170 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:10,177 [INFO] Final candidates: []
2025-04-11 18:57:10,177 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:10,177 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:10,342 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:10,342 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(17)), (np.int64(16), np.int64(18)))
2025-04-11 18:57:10,351 [INFO] Final candidates: []
2025-04-11 18:57:10,351 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:10,358 [INFO] Final candidates: []
2025-04-11 18:57:10,358 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:10,359 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:10,463 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:10,463 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(9)), (np.int64(11), np.int64(9)))
2025-04-11 18:57:10,466 [DEBUG] board coords: [(6, 9), (7, 9), (8, 9), (9, 9), (10, 9), (11, 9)]
2025-04-11 18:57:10,466 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(2)]
2025-04-11 18:57:10,466 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 9), (10, 9)]
2025-04-11 18:57:10,466 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 2 0 2] with coords [(6, 9), (7, 9), (8, 9), (9, 9), (10, 9), (11, 9)] triggers candidate.
2025-04-11 18:57:10,466 [DEBUG] board coords: [(7, 9), (8, 9), (9, 9), (10, 9), (11, 9), (12, 9)]
2025-04-11 18:57:10,466 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(0)]
2025-04-11 18:57:10,466 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 9), (12, 9)]
2025-04-11 18:57:10,467 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 0 2 0] with coords [(7, 9), (8, 9), (9, 9), (10, 9), (11, 9), (12, 9)] triggers candidate.
2025-04-11 18:57:10,472 [INFO] Final candidates: [(10, 9), (6, 9), (12, 9)]
2025-04-11 18:57:10,472 [INFO] Phase win: Collected 3unique candidate(s):[((10, 9), (12, 9)), ((10, 9), (6, 9)), ((6, 9), (12, 9))]
2025-04-11 18:57:10,472 [INFO] Phase 1 (immediate win): 3 candidate(s) found.
2025-04-11 18:57:10,479 [INFO] Final candidates: []
2025-04-11 18:57:10,479 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:10,479 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:10,497 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:10,497 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(8)), (np.int64(8), np.int64(7)))
2025-04-11 18:57:10,505 [INFO] Final candidates: []
2025-04-11 18:57:10,505 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:10,513 [INFO] Final candidates: []
2025-04-11 18:57:10,513 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:10,513 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:10,543 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:10,543 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(18)), (np.int64(10), np.int64(10)))
2025-04-11 18:57:10,551 [INFO] Final candidates: []
2025-04-11 18:57:10,551 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:10,561 [INFO] Final candidates: []
2025-04-11 18:57:10,561 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:10,561 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:10,848 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:10,848 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(10)), (np.int64(10), np.int64(10)))
2025-04-11 18:57:10,856 [INFO] Final candidates: []
2025-04-11 18:57:10,857 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:10,864 [INFO] Final candidates: []
2025-04-11 18:57:10,864 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:10,864 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:10,949 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:10,950 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(16)), (np.int64(9), np.int64(10)))
2025-04-11 18:57:10,958 [INFO] Final candidates: []
2025-04-11 18:57:10,958 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:10,965 [INFO] Final candidates: []
2025-04-11 18:57:10,965 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:10,966 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:11,119 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:11,119 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(7)), (np.int64(6), np.int64(9)))
2025-04-11 18:57:11,127 [INFO] Final candidates: []
2025-04-11 18:57:11,127 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:11,135 [INFO] Final candidates: []
2025-04-11 18:57:11,135 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:11,135 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:11,226 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:11,227 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(9)), (np.int64(6), np.int64(9)))
2025-04-11 18:57:11,230 [DEBUG] board coords: [(6, 9), (7, 9), (8, 9), (9, 9), (10, 9), (11, 9)]
2025-04-11 18:57:11,231 [DEBUG] board values[np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0), np.int64(2)]
2025-04-11 18:57:11,231 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 9), (10, 9)]
2025-04-11 18:57:11,231 [DEBUG] check_window_intermediate_custom: For L=6, window [2 0 2 2 0 2] with coords [(6, 9), (7, 9), (8, 9), (9, 9), (10, 9), (11, 9)] triggers candidate.
2025-04-11 18:57:11,239 [INFO] Final candidates: [(7, 9), (10, 9)]
2025-04-11 18:57:11,239 [INFO] Phase win: Collected 1unique candidate(s):[((7, 9), (10, 9))]
2025-04-11 18:57:11,240 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 18:57:11,247 [INFO] Final candidates: []
2025-04-11 18:57:11,247 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:11,247 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:11,429 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:11,429 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(8)), (np.int64(16), np.int64(18)))
2025-04-11 18:57:11,437 [INFO] Final candidates: []
2025-04-11 18:57:11,437 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:11,445 [INFO] Final candidates: []
2025-04-11 18:57:11,445 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:11,445 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:11,617 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:11,617 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(17)), (np.int64(12), np.int64(18)))
2025-04-11 18:57:11,625 [INFO] Final candidates: []
2025-04-11 18:57:11,625 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:11,633 [INFO] Final candidates: []
2025-04-11 18:57:11,633 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:11,633 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:11,723 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:11,724 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(16)), (np.int64(9), np.int64(8)))
2025-04-11 18:57:11,732 [INFO] Final candidates: []
2025-04-11 18:57:11,732 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:11,739 [INFO] Final candidates: []
2025-04-11 18:57:11,739 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:11,740 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:11,908 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:11,909 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(11)), (np.int64(6), np.int64(9)))
2025-04-11 18:57:11,917 [INFO] Final candidates: []
2025-04-11 18:57:11,917 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:11,924 [INFO] Final candidates: []
2025-04-11 18:57:11,924 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:11,924 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:11,941 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:11,941 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(18)), (np.int64(11), np.int64(9)))
2025-04-11 18:57:11,949 [INFO] Final candidates: []
2025-04-11 18:57:11,949 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:11,957 [INFO] Final candidates: []
2025-04-11 18:57:11,957 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:11,957 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:12,135 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:12,136 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(11)), (np.int64(8), np.int64(7)))
2025-04-11 18:57:12,144 [INFO] Final candidates: []
2025-04-11 18:57:12,144 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:12,151 [INFO] Final candidates: []
2025-04-11 18:57:12,151 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:12,152 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:12,270 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:12,271 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(11)), (np.int64(8), np.int64(8)))
2025-04-11 18:57:12,279 [INFO] Final candidates: []
2025-04-11 18:57:12,279 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:12,287 [INFO] Final candidates: []
2025-04-11 18:57:12,287 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:12,288 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:12,499 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:12,499 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(11)), (np.int64(14), np.int64(17)))
2025-04-11 18:57:12,509 [INFO] Final candidates: []
2025-04-11 18:57:12,509 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:12,517 [INFO] Final candidates: []
2025-04-11 18:57:12,517 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:12,517 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:12,590 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:12,590 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(8)), (np.int64(14), np.int64(17)))
2025-04-11 18:57:12,599 [INFO] Final candidates: []
2025-04-11 18:57:12,599 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:12,610 [INFO] Final candidates: []
2025-04-11 18:57:12,610 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:12,610 [DEBUG] MCTS iteration 50: reached a node with 0 visits.
2025-04-11 18:57:12,610 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:12,769 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:12,770 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(8)), (np.int64(12), np.int64(18)))
2025-04-11 18:57:12,778 [INFO] Final candidates: []
2025-04-11 18:57:12,778 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:12,785 [INFO] Final candidates: []
2025-04-11 18:57:12,785 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:12,786 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:12,920 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:12,921 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(7)), (np.int64(11), np.int64(9)))
2025-04-11 18:57:12,929 [INFO] Final candidates: []
2025-04-11 18:57:12,929 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:12,936 [INFO] Final candidates: []
2025-04-11 18:57:12,936 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:12,937 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:13,252 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:13,253 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(16)), (np.int64(8), np.int64(11)))
2025-04-11 18:57:13,261 [INFO] Final candidates: []
2025-04-11 18:57:13,261 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:13,271 [INFO] Final candidates: []
2025-04-11 18:57:13,271 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:13,271 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:13,387 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:13,387 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(10)), (np.int64(15), np.int64(17)))
2025-04-11 18:57:13,396 [INFO] Final candidates: []
2025-04-11 18:57:13,396 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:13,403 [INFO] Final candidates: []
2025-04-11 18:57:13,403 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:13,403 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:13,557 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:13,557 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(10)), (np.int64(8), np.int64(8)))
2025-04-11 18:57:13,565 [INFO] Final candidates: []
2025-04-11 18:57:13,565 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:13,573 [INFO] Final candidates: []
2025-04-11 18:57:13,573 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:13,573 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:13,784 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:13,784 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(17)), (np.int64(8), np.int64(8)))
2025-04-11 18:57:13,792 [INFO] Final candidates: []
2025-04-11 18:57:13,792 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:13,800 [INFO] Final candidates: []
2025-04-11 18:57:13,800 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:13,800 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:13,875 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:13,876 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(8)), (np.int64(13), np.int64(18)))
2025-04-11 18:57:13,884 [INFO] Final candidates: []
2025-04-11 18:57:13,884 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:13,891 [INFO] Final candidates: []
2025-04-11 18:57:13,891 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:13,892 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:13,977 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:13,977 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(11)), (np.int64(8), np.int64(11)))
2025-04-11 18:57:13,986 [INFO] Final candidates: []
2025-04-11 18:57:13,986 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:13,994 [INFO] Final candidates: []
2025-04-11 18:57:13,994 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:13,995 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:14,126 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:14,127 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(10)), (np.int64(13), np.int64(18)))
2025-04-11 18:57:14,135 [INFO] Final candidates: []
2025-04-11 18:57:14,135 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:14,142 [INFO] Final candidates: []
2025-04-11 18:57:14,143 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:14,143 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:14,335 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:14,335 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(17)), (np.int64(7), np.int64(8)))
2025-04-11 18:57:14,344 [INFO] Final candidates: []
2025-04-11 18:57:14,344 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:14,351 [INFO] Final candidates: []
2025-04-11 18:57:14,352 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:14,352 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:14,425 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:14,425 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(8)), (np.int64(6), np.int64(9)))
2025-04-11 18:57:14,433 [INFO] Final candidates: []
2025-04-11 18:57:14,433 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:14,441 [INFO] Final candidates: []
2025-04-11 18:57:14,441 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:14,441 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:14,584 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:14,584 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(9)), (np.int64(10), np.int64(8)))
2025-04-11 18:57:14,593 [INFO] Final candidates: []
2025-04-11 18:57:14,593 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:14,600 [INFO] Final candidates: []
2025-04-11 18:57:14,600 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:14,601 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:14,603 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:14,603 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(8)), (np.int64(8), np.int64(8)))
2025-04-11 18:57:14,611 [INFO] Final candidates: []
2025-04-11 18:57:14,611 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:14,619 [INFO] Final candidates: []
2025-04-11 18:57:14,619 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:14,619 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:14,747 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:14,747 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(11)), (np.int64(13), np.int64(18)))
2025-04-11 18:57:14,755 [INFO] Final candidates: []
2025-04-11 18:57:14,755 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:14,763 [INFO] Final candidates: []
2025-04-11 18:57:14,763 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:14,763 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:14,845 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:14,845 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(8)), (np.int64(9), np.int64(10)))
2025-04-11 18:57:14,853 [INFO] Final candidates: []
2025-04-11 18:57:14,853 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:14,861 [INFO] Final candidates: []
2025-04-11 18:57:14,861 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:14,861 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:15,052 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:15,052 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(17)), (np.int64(13), np.int64(18)))
2025-04-11 18:57:15,066 [INFO] Final candidates: []
2025-04-11 18:57:15,066 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:15,080 [INFO] Final candidates: []
2025-04-11 18:57:15,080 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:15,081 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:15,279 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:15,279 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(10)), (np.int64(9), np.int64(7)))
2025-04-11 18:57:15,290 [INFO] Final candidates: []
2025-04-11 18:57:15,290 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:15,299 [INFO] Final candidates: []
2025-04-11 18:57:15,299 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:15,299 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:15,368 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:15,368 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(16)), (np.int64(7), np.int64(9)))
2025-04-11 18:57:15,376 [INFO] Final candidates: []
2025-04-11 18:57:15,376 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:15,383 [INFO] Final candidates: []
2025-04-11 18:57:15,383 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:15,384 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:15,577 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:15,577 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(8)), (np.int64(8), np.int64(7)))
2025-04-11 18:57:15,585 [INFO] Final candidates: []
2025-04-11 18:57:15,585 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:15,593 [INFO] Final candidates: []
2025-04-11 18:57:15,593 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:15,593 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:15,747 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:15,747 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(9)), (np.int64(9), np.int64(11)))
2025-04-11 18:57:15,756 [INFO] Final candidates: []
2025-04-11 18:57:15,756 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:15,763 [INFO] Final candidates: []
2025-04-11 18:57:15,763 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:15,764 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:15,954 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:15,955 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(16)), (np.int64(6), np.int64(9)))
2025-04-11 18:57:15,963 [INFO] Final candidates: []
2025-04-11 18:57:15,963 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:15,970 [INFO] Final candidates: []
2025-04-11 18:57:15,971 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:15,971 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:16,041 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:16,041 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(18)), (np.int64(8), np.int64(7)))
2025-04-11 18:57:16,049 [INFO] Final candidates: []
2025-04-11 18:57:16,049 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:16,057 [INFO] Final candidates: []
2025-04-11 18:57:16,057 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:16,057 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:16,124 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:16,125 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(8)), (np.int64(7), np.int64(9)))
2025-04-11 18:57:16,133 [INFO] Final candidates: []
2025-04-11 18:57:16,134 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:16,142 [INFO] Final candidates: []
2025-04-11 18:57:16,142 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:16,143 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:16,240 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:16,241 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(16)), (np.int64(15), np.int64(18)))
2025-04-11 18:57:16,249 [INFO] Final candidates: []
2025-04-11 18:57:16,249 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:16,259 [INFO] Final candidates: []
2025-04-11 18:57:16,259 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:16,259 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:16,340 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:16,340 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(16)), (np.int64(12), np.int64(18)))
2025-04-11 18:57:16,348 [INFO] Final candidates: []
2025-04-11 18:57:16,348 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:16,356 [INFO] Final candidates: []
2025-04-11 18:57:16,356 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:16,356 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:16,521 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:16,521 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(9)), (np.int64(9), np.int64(7)))
2025-04-11 18:57:16,529 [INFO] Final candidates: []
2025-04-11 18:57:16,529 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:16,537 [INFO] Final candidates: []
2025-04-11 18:57:16,537 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:16,537 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:16,674 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:16,675 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(17)), (np.int64(12), np.int64(18)))
2025-04-11 18:57:16,683 [INFO] Final candidates: []
2025-04-11 18:57:16,683 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:16,691 [INFO] Final candidates: []
2025-04-11 18:57:16,691 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:16,691 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:16,877 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:16,877 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(8)), (np.int64(9), np.int64(7)))
2025-04-11 18:57:16,885 [INFO] Final candidates: []
2025-04-11 18:57:16,885 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:16,893 [INFO] Final candidates: []
2025-04-11 18:57:16,893 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:16,893 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:17,043 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:17,043 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(17)), (np.int64(8), np.int64(7)))
2025-04-11 18:57:17,051 [INFO] Final candidates: []
2025-04-11 18:57:17,051 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:17,058 [INFO] Final candidates: []
2025-04-11 18:57:17,058 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:17,059 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:17,254 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:17,254 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(7)), (np.int64(8), np.int64(7)))
2025-04-11 18:57:17,262 [INFO] Final candidates: []
2025-04-11 18:57:17,262 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:17,270 [INFO] Final candidates: []
2025-04-11 18:57:17,270 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:17,270 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:17,475 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:17,476 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(17)), (np.int64(13), np.int64(18)))
2025-04-11 18:57:17,484 [INFO] Final candidates: []
2025-04-11 18:57:17,484 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:17,491 [INFO] Final candidates: []
2025-04-11 18:57:17,492 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:17,492 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:17,639 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:17,639 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(16)), (np.int64(13), np.int64(17)))
2025-04-11 18:57:17,647 [INFO] Final candidates: []
2025-04-11 18:57:17,647 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:17,655 [INFO] Final candidates: []
2025-04-11 18:57:17,655 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:17,655 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:17,867 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:17,868 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(9)), (np.int64(15), np.int64(18)))
2025-04-11 18:57:17,877 [INFO] Final candidates: []
2025-04-11 18:57:17,877 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:17,885 [INFO] Final candidates: []
2025-04-11 18:57:17,885 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:17,885 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:18,015 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:18,015 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(16)), (np.int64(7), np.int64(10)))
2025-04-11 18:57:18,023 [INFO] Final candidates: []
2025-04-11 18:57:18,023 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:18,032 [INFO] Final candidates: []
2025-04-11 18:57:18,032 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:18,032 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:18,111 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:18,111 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(11)), (np.int64(7), np.int64(9)))
2025-04-11 18:57:18,119 [INFO] Final candidates: []
2025-04-11 18:57:18,119 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:18,127 [INFO] Final candidates: []
2025-04-11 18:57:18,127 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:18,127 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:18,354 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:18,354 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(18)), (np.int64(13), np.int64(18)))
2025-04-11 18:57:18,362 [INFO] Final candidates: []
2025-04-11 18:57:18,362 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:18,370 [INFO] Final candidates: []
2025-04-11 18:57:18,370 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:18,370 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:18,549 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:18,550 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(17)), (np.int64(10), np.int64(10)))
2025-04-11 18:57:18,558 [INFO] Final candidates: []
2025-04-11 18:57:18,558 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:18,565 [INFO] Final candidates: []
2025-04-11 18:57:18,565 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:18,565 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:18,844 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:18,844 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(17)), (np.int64(11), np.int64(9)))
2025-04-11 18:57:18,852 [INFO] Final candidates: []
2025-04-11 18:57:18,852 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:18,860 [INFO] Final candidates: []
2025-04-11 18:57:18,860 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:18,860 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:18,952 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:18,952 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(18)), (np.int64(8), np.int64(7)))
2025-04-11 18:57:18,960 [INFO] Final candidates: []
2025-04-11 18:57:18,960 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:18,968 [INFO] Final candidates: []
2025-04-11 18:57:18,968 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:18,968 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:19,066 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:19,066 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(11)), (np.int64(7), np.int64(9)))
2025-04-11 18:57:19,074 [INFO] Final candidates: []
2025-04-11 18:57:19,074 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:19,081 [INFO] Final candidates: []
2025-04-11 18:57:19,081 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:19,082 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:19,387 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:19,387 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(9)), (np.int64(10), np.int64(10)))
2025-04-11 18:57:19,395 [INFO] Final candidates: []
2025-04-11 18:57:19,395 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:19,403 [INFO] Final candidates: []
2025-04-11 18:57:19,403 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:19,403 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:19,448 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:19,448 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(9)), (np.int64(6), np.int64(9)))
2025-04-11 18:57:19,451 [DEBUG] board coords: [(4, 9), (5, 9), (6, 9), (7, 9), (8, 9), (9, 9)]
2025-04-11 18:57:19,451 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:57:19,451 [DEBUG] check_window_intermediate_custom: empty_cells=[(4, 9), (5, 9)]
2025-04-11 18:57:19,451 [DEBUG] check_window_intermediate_custom (only one inserted(5, 9)): For L=6, window [0 0 2 2 2 2] with coords [(4, 9), (5, 9), (6, 9), (7, 9), (8, 9), (9, 9)] triggers candidate.
2025-04-11 18:57:19,451 [DEBUG] check_window_margin_custom: For L=6, window [0 2 2 2 2 0] with coords [(5, 9), (6, 9), (7, 9), (8, 9), (9, 9), (10, 9)] triggers candidate.
2025-04-11 18:57:19,451 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 18:57:19,451 [DEBUG] board coords: [(6, 9), (7, 9), (8, 9), (9, 9), (10, 9), (11, 9)]
2025-04-11 18:57:19,451 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 18:57:19,451 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 9), (11, 9)]
2025-04-11 18:57:19,451 [DEBUG] check_window_intermediate_custom (only one inserted(10, 9)): For L=6, window [2 2 2 2 0 0] with coords [(6, 9), (7, 9), (8, 9), (9, 9), (10, 9), (11, 9)] triggers candidate.
2025-04-11 18:57:19,457 [INFO] Final candidates: [(10, 9), (5, 9)]
2025-04-11 18:57:19,457 [INFO] Phase win: Collected 1unique candidate(s):[((10, 9), (5, 9))]
2025-04-11 18:57:19,457 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 18:57:19,465 [INFO] Final candidates: []
2025-04-11 18:57:19,465 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:19,465 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:19,540 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:19,541 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(18)), (np.int64(7), np.int64(8)))
2025-04-11 18:57:19,549 [INFO] Final candidates: []
2025-04-11 18:57:19,549 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:19,556 [INFO] Final candidates: []
2025-04-11 18:57:19,557 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:19,557 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:19,743 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:19,744 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(18)), (np.int64(10), np.int64(8)))
2025-04-11 18:57:19,752 [INFO] Final candidates: []
2025-04-11 18:57:19,752 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:19,759 [INFO] Final candidates: []
2025-04-11 18:57:19,759 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:19,760 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:19,837 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:19,837 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(11)), (np.int64(16), np.int64(18)))
2025-04-11 18:57:19,845 [INFO] Final candidates: []
2025-04-11 18:57:19,845 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:19,853 [INFO] Final candidates: []
2025-04-11 18:57:19,853 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:19,853 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:19,985 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:19,985 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(9)), (np.int64(8), np.int64(7)))
2025-04-11 18:57:19,994 [INFO] Final candidates: []
2025-04-11 18:57:19,994 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:20,001 [INFO] Final candidates: []
2025-04-11 18:57:20,001 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:20,001 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:20,197 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:20,197 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(17)), (np.int64(7), np.int64(9)))
2025-04-11 18:57:20,205 [INFO] Final candidates: []
2025-04-11 18:57:20,205 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:20,213 [INFO] Final candidates: []
2025-04-11 18:57:20,213 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:20,213 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:20,226 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:20,226 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(10)), (np.int64(10), np.int64(10)))
2025-04-11 18:57:20,234 [INFO] Final candidates: []
2025-04-11 18:57:20,234 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:20,241 [INFO] Final candidates: []
2025-04-11 18:57:20,241 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:20,242 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:20,406 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:20,406 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(8)), (np.int64(6), np.int64(9)))
2025-04-11 18:57:20,414 [INFO] Final candidates: []
2025-04-11 18:57:20,414 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:20,421 [INFO] Final candidates: []
2025-04-11 18:57:20,421 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:20,422 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:20,474 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:20,474 [INFO] MCTS: Search finished. Best move selected with 1 visits.
2025-04-11 18:57:20,474 [INFO] MCTS selected move: S14,K7
2025-04-11 18:57:20,474 [INFO] ===============NEW MOVE================
2025-04-11 18:57:27,271 [INFO] Starting pre-MCTS candidate collection.
2025-04-11 18:57:27,280 [INFO] Final candidates: []
2025-04-11 18:57:27,280 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:27,291 [INFO] Final candidates: []
2025-04-11 18:57:27,291 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:27,291 [INFO] No candidate found in Phase 1 or 2; using full legal moves for MCTS.
2025-04-11 18:57:27,291 [INFO] MCTS: Starting search for 100 iterations.
2025-04-11 18:57:27,291 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(14)), (np.int64(14), np.int64(17)))
2025-04-11 18:57:27,302 [INFO] Final candidates: []
2025-04-11 18:57:27,302 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:27,311 [INFO] Final candidates: []
2025-04-11 18:57:27,311 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:27,312 [DEBUG] MCTS iteration 0: reached a node with 0 visits.
2025-04-11 18:57:27,312 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:27,359 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:27,359 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(17)), (np.int64(13), np.int64(18)))
2025-04-11 18:57:27,367 [INFO] Final candidates: []
2025-04-11 18:57:27,367 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:27,375 [INFO] Final candidates: []
2025-04-11 18:57:27,375 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:27,376 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:27,592 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:27,592 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(10)), (np.int64(11), np.int64(15)))
2025-04-11 18:57:27,600 [INFO] Final candidates: []
2025-04-11 18:57:27,600 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:27,607 [INFO] Final candidates: []
2025-04-11 18:57:27,607 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:27,608 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:27,715 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:27,715 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(10)), (np.int64(13), np.int64(18)))
2025-04-11 18:57:27,723 [INFO] Final candidates: []
2025-04-11 18:57:27,723 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:27,731 [INFO] Final candidates: []
2025-04-11 18:57:27,731 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:27,731 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:27,887 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:27,887 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(8)), (np.int64(8), np.int64(16)))
2025-04-11 18:57:27,897 [INFO] Final candidates: []
2025-04-11 18:57:27,897 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:27,907 [INFO] Final candidates: []
2025-04-11 18:57:27,907 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:27,907 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:27,957 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:27,957 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(10)), (np.int64(15), np.int64(9)))
2025-04-11 18:57:27,965 [INFO] Final candidates: []
2025-04-11 18:57:27,965 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:27,972 [INFO] Final candidates: []
2025-04-11 18:57:27,972 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:27,973 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:28,036 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:28,036 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(14)), (np.int64(8), np.int64(16)))
2025-04-11 18:57:28,043 [INFO] Final candidates: []
2025-04-11 18:57:28,043 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:28,051 [INFO] Final candidates: []
2025-04-11 18:57:28,051 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:28,051 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:28,111 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:28,111 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(14)), (np.int64(13), np.int64(10)))
2025-04-11 18:57:28,118 [INFO] Final candidates: []
2025-04-11 18:57:28,118 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:28,126 [INFO] Final candidates: []
2025-04-11 18:57:28,126 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:28,127 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:28,250 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:28,250 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(11)), (np.int64(13), np.int64(15)))
2025-04-11 18:57:28,257 [INFO] Final candidates: []
2025-04-11 18:57:28,257 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:28,265 [INFO] Final candidates: []
2025-04-11 18:57:28,265 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:28,266 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:28,443 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:28,443 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(9)), (np.int64(10), np.int64(10)))
2025-04-11 18:57:28,451 [INFO] Final candidates: []
2025-04-11 18:57:28,451 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:28,459 [INFO] Final candidates: []
2025-04-11 18:57:28,459 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:28,460 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:28,696 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:28,696 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(16)), (np.int64(11), np.int64(15)))
2025-04-11 18:57:28,704 [INFO] Final candidates: []
2025-04-11 18:57:28,704 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:28,711 [INFO] Final candidates: []
2025-04-11 18:57:28,711 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:28,711 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:28,718 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:28,718 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(16)), (np.int64(16), np.int64(18)))
2025-04-11 18:57:28,725 [INFO] Final candidates: []
2025-04-11 18:57:28,725 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:28,734 [INFO] Final candidates: []
2025-04-11 18:57:28,734 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:28,734 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:28,831 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:28,832 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(9)), (np.int64(8), np.int64(16)))
2025-04-11 18:57:28,841 [INFO] Final candidates: []
2025-04-11 18:57:28,841 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:28,849 [INFO] Final candidates: []
2025-04-11 18:57:28,849 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:28,849 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:28,960 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:28,960 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(9)), (np.int64(10), np.int64(16)))
2025-04-11 18:57:28,979 [INFO] Final candidates: []
2025-04-11 18:57:28,980 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:28,994 [INFO] Final candidates: []
2025-04-11 18:57:28,994 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:28,995 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:29,278 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:29,278 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(10)), (np.int64(8), np.int64(16)))
2025-04-11 18:57:29,286 [INFO] Final candidates: []
2025-04-11 18:57:29,286 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:29,293 [INFO] Final candidates: []
2025-04-11 18:57:29,293 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:29,294 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:29,357 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:29,357 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(17)), (np.int64(10), np.int64(14)))
2025-04-11 18:57:29,365 [INFO] Final candidates: []
2025-04-11 18:57:29,365 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:29,374 [INFO] Final candidates: []
2025-04-11 18:57:29,374 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:29,375 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:29,476 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:29,476 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(7)), (np.int64(11), np.int64(9)))
2025-04-11 18:57:29,484 [INFO] Final candidates: []
2025-04-11 18:57:29,484 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:29,492 [INFO] Final candidates: []
2025-04-11 18:57:29,492 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:29,493 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:29,509 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:29,510 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(9)), (np.int64(13), np.int64(16)))
2025-04-11 18:57:29,517 [INFO] Final candidates: []
2025-04-11 18:57:29,517 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:29,525 [INFO] Final candidates: []
2025-04-11 18:57:29,525 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:29,525 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:29,574 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:29,574 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(9)), (np.int64(9), np.int64(16)))
2025-04-11 18:57:29,582 [INFO] Final candidates: []
2025-04-11 18:57:29,582 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:29,589 [INFO] Final candidates: []
2025-04-11 18:57:29,589 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:29,589 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:29,695 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:29,695 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(10)), (np.int64(9), np.int64(8)))
2025-04-11 18:57:29,703 [INFO] Final candidates: []
2025-04-11 18:57:29,703 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:29,710 [INFO] Final candidates: []
2025-04-11 18:57:29,710 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:29,711 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:29,872 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:29,873 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(8)), (np.int64(7), np.int64(10)))
2025-04-11 18:57:29,881 [INFO] Final candidates: []
2025-04-11 18:57:29,881 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:29,888 [INFO] Final candidates: []
2025-04-11 18:57:29,888 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:29,889 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:30,033 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:30,033 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(11)), (np.int64(10), np.int64(14)))
2025-04-11 18:57:30,041 [INFO] Final candidates: []
2025-04-11 18:57:30,041 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:30,048 [INFO] Final candidates: []
2025-04-11 18:57:30,048 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:30,049 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:30,195 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:30,195 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(10)), (np.int64(14), np.int64(8)))
2025-04-11 18:57:30,202 [INFO] Final candidates: []
2025-04-11 18:57:30,203 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:30,210 [INFO] Final candidates: []
2025-04-11 18:57:30,210 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:30,210 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:30,313 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:30,313 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(11)), (np.int64(9), np.int64(16)))
2025-04-11 18:57:30,324 [INFO] Final candidates: []
2025-04-11 18:57:30,324 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:30,331 [INFO] Final candidates: []
2025-04-11 18:57:30,331 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:30,332 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:30,426 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:30,426 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(16)), (np.int64(6), np.int64(11)))
2025-04-11 18:57:30,434 [INFO] Final candidates: []
2025-04-11 18:57:30,434 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:30,442 [INFO] Final candidates: []
2025-04-11 18:57:30,442 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:30,442 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:30,566 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:30,566 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(16)), (np.int64(13), np.int64(7)))
2025-04-11 18:57:30,573 [INFO] Final candidates: []
2025-04-11 18:57:30,574 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:30,581 [INFO] Final candidates: []
2025-04-11 18:57:30,581 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:30,582 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:30,711 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:30,711 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(7)), (np.int64(5), np.int64(8)))
2025-04-11 18:57:30,719 [INFO] Final candidates: []
2025-04-11 18:57:30,719 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:30,727 [INFO] Final candidates: []
2025-04-11 18:57:30,727 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:30,727 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:30,819 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:30,820 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(9)), (np.int64(13), np.int64(10)))
2025-04-11 18:57:30,827 [INFO] Final candidates: []
2025-04-11 18:57:30,827 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:30,835 [INFO] Final candidates: []
2025-04-11 18:57:30,835 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:30,835 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:30,967 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:30,967 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(18)), (np.int64(10), np.int64(16)))
2025-04-11 18:57:30,974 [INFO] Final candidates: []
2025-04-11 18:57:30,975 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:30,983 [INFO] Final candidates: []
2025-04-11 18:57:30,983 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:30,983 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:31,097 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:31,097 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(9)), (np.int64(10), np.int64(16)))
2025-04-11 18:57:31,105 [INFO] Final candidates: []
2025-04-11 18:57:31,105 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:31,112 [INFO] Final candidates: []
2025-04-11 18:57:31,112 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:31,113 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:31,234 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:31,234 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(7)), (np.int64(13), np.int64(15)))
2025-04-11 18:57:31,242 [INFO] Final candidates: []
2025-04-11 18:57:31,242 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:31,249 [INFO] Final candidates: []
2025-04-11 18:57:31,249 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:31,250 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:31,414 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:31,415 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(8)), (np.int64(10), np.int64(10)))
2025-04-11 18:57:31,422 [INFO] Final candidates: []
2025-04-11 18:57:31,422 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:31,430 [INFO] Final candidates: []
2025-04-11 18:57:31,430 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:31,430 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:31,493 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:31,493 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(11)), (np.int64(9), np.int64(16)))
2025-04-11 18:57:31,502 [INFO] Final candidates: []
2025-04-11 18:57:31,502 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:31,510 [INFO] Final candidates: []
2025-04-11 18:57:31,510 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:31,511 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:31,782 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:31,782 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(17)), (np.int64(15), np.int64(9)))
2025-04-11 18:57:31,794 [INFO] Final candidates: []
2025-04-11 18:57:31,795 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:31,803 [INFO] Final candidates: []
2025-04-11 18:57:31,803 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:31,804 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:31,863 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:31,864 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(9)), (np.int64(12), np.int64(18)))
2025-04-11 18:57:31,873 [INFO] Final candidates: []
2025-04-11 18:57:31,873 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:31,881 [INFO] Final candidates: []
2025-04-11 18:57:31,881 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:31,881 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:31,999 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:31,999 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(14)), (np.int64(15), np.int64(18)))
2025-04-11 18:57:32,007 [INFO] Final candidates: []
2025-04-11 18:57:32,007 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:32,015 [INFO] Final candidates: []
2025-04-11 18:57:32,015 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:32,015 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:32,133 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:32,133 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(16)), (np.int64(13), np.int64(11)))
2025-04-11 18:57:32,141 [INFO] Final candidates: []
2025-04-11 18:57:32,141 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:32,149 [INFO] Final candidates: []
2025-04-11 18:57:32,149 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:32,149 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:32,291 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:32,292 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(7)), (np.int64(10), np.int64(10)))
2025-04-11 18:57:32,299 [INFO] Final candidates: []
2025-04-11 18:57:32,299 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:32,307 [INFO] Final candidates: []
2025-04-11 18:57:32,307 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:32,307 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:32,351 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:32,352 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(16)), (np.int64(7), np.int64(8)))
2025-04-11 18:57:32,359 [INFO] Final candidates: []
2025-04-11 18:57:32,359 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:32,367 [INFO] Final candidates: []
2025-04-11 18:57:32,367 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:32,367 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:32,665 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:32,665 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(8)), (np.int64(8), np.int64(7)))
2025-04-11 18:57:32,672 [INFO] Final candidates: []
2025-04-11 18:57:32,672 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:32,680 [INFO] Final candidates: []
2025-04-11 18:57:32,680 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:32,680 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:32,877 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:32,877 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(9)), (np.int64(12), np.int64(18)))
2025-04-11 18:57:32,885 [INFO] Final candidates: []
2025-04-11 18:57:32,885 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:32,893 [INFO] Final candidates: []
2025-04-11 18:57:32,893 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:32,893 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:33,221 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:33,221 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(7)), (np.int64(12), np.int64(8)))
2025-04-11 18:57:33,230 [INFO] Final candidates: []
2025-04-11 18:57:33,230 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:33,240 [INFO] Final candidates: []
2025-04-11 18:57:33,240 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:33,240 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:33,410 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:33,410 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(9)), (np.int64(8), np.int64(7)))
2025-04-11 18:57:33,418 [INFO] Final candidates: []
2025-04-11 18:57:33,418 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:33,426 [INFO] Final candidates: []
2025-04-11 18:57:33,426 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:33,426 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:33,544 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:33,544 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(18)), (np.int64(11), np.int64(15)))
2025-04-11 18:57:33,559 [INFO] Final candidates: []
2025-04-11 18:57:33,560 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:33,575 [INFO] Final candidates: []
2025-04-11 18:57:33,575 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:33,576 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:33,684 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:33,684 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(10)), (np.int64(14), np.int64(10)))
2025-04-11 18:57:33,692 [INFO] Final candidates: []
2025-04-11 18:57:33,692 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:33,699 [INFO] Final candidates: []
2025-04-11 18:57:33,699 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:33,700 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:33,842 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:33,843 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(14)), (np.int64(10), np.int64(10)))
2025-04-11 18:57:33,851 [INFO] Final candidates: []
2025-04-11 18:57:33,851 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:33,859 [INFO] Final candidates: []
2025-04-11 18:57:33,859 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:33,859 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:33,987 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:33,987 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(10)), (np.int64(7), np.int64(9)))
2025-04-11 18:57:33,995 [INFO] Final candidates: []
2025-04-11 18:57:33,995 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:34,002 [INFO] Final candidates: []
2025-04-11 18:57:34,002 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:34,003 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:34,156 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:34,156 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(8)), (np.int64(12), np.int64(17)))
2025-04-11 18:57:34,165 [INFO] Final candidates: []
2025-04-11 18:57:34,165 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:34,173 [INFO] Final candidates: []
2025-04-11 18:57:34,173 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:34,173 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:34,370 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:34,370 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(10)), (np.int64(8), np.int64(16)))
2025-04-11 18:57:34,377 [INFO] Final candidates: []
2025-04-11 18:57:34,378 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:34,385 [INFO] Final candidates: []
2025-04-11 18:57:34,385 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:34,385 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:34,558 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:34,558 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(10)), (np.int64(10), np.int64(8)))
2025-04-11 18:57:34,565 [INFO] Final candidates: []
2025-04-11 18:57:34,565 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:34,573 [INFO] Final candidates: []
2025-04-11 18:57:34,573 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:34,573 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:34,766 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:34,766 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(15)), (np.int64(13), np.int64(16)))
2025-04-11 18:57:34,774 [INFO] Final candidates: []
2025-04-11 18:57:34,774 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:34,782 [INFO] Final candidates: []
2025-04-11 18:57:34,782 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:34,782 [DEBUG] MCTS iteration 50: reached a node with 0 visits.
2025-04-11 18:57:34,782 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:34,837 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:34,837 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(8)), (np.int64(5), np.int64(9)))
2025-04-11 18:57:34,845 [INFO] Final candidates: []
2025-04-11 18:57:34,845 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:34,852 [INFO] Final candidates: []
2025-04-11 18:57:34,852 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:34,852 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:34,957 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:34,957 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(16)), (np.int64(7), np.int64(9)))
2025-04-11 18:57:34,965 [INFO] Final candidates: []
2025-04-11 18:57:34,965 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:34,973 [INFO] Final candidates: []
2025-04-11 18:57:34,973 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:34,973 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:35,188 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:35,188 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(9)), (np.int64(8), np.int64(14)))
2025-04-11 18:57:35,196 [INFO] Final candidates: []
2025-04-11 18:57:35,196 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:35,204 [INFO] Final candidates: []
2025-04-11 18:57:35,204 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:35,204 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:35,355 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:35,355 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(17)), (np.int64(6), np.int64(11)))
2025-04-11 18:57:35,370 [INFO] Final candidates: []
2025-04-11 18:57:35,370 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:35,385 [INFO] Final candidates: []
2025-04-11 18:57:35,386 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:35,386 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:35,475 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:35,475 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(16)), (np.int64(10), np.int64(9)))
2025-04-11 18:57:35,483 [INFO] Final candidates: []
2025-04-11 18:57:35,483 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:35,490 [INFO] Final candidates: []
2025-04-11 18:57:35,491 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:35,491 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:35,702 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:35,702 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(8)), (np.int64(6), np.int64(10)))
2025-04-11 18:57:35,709 [INFO] Final candidates: []
2025-04-11 18:57:35,709 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:35,717 [INFO] Final candidates: []
2025-04-11 18:57:35,717 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:35,717 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:35,846 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:35,847 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(7)), (np.int64(8), np.int64(16)))
2025-04-11 18:57:35,866 [INFO] Final candidates: []
2025-04-11 18:57:35,866 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:35,886 [INFO] Final candidates: []
2025-04-11 18:57:35,886 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:35,887 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:35,982 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:35,983 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(11)), (np.int64(13), np.int64(18)))
2025-04-11 18:57:35,990 [INFO] Final candidates: []
2025-04-11 18:57:35,990 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:35,998 [INFO] Final candidates: []
2025-04-11 18:57:35,998 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:35,998 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:36,160 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:36,160 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(14)), (np.int64(8), np.int64(10)))
2025-04-11 18:57:36,168 [INFO] Final candidates: []
2025-04-11 18:57:36,168 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:36,176 [INFO] Final candidates: []
2025-04-11 18:57:36,176 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:36,176 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:36,487 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:36,487 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(8)), (np.int64(13), np.int64(18)))
2025-04-11 18:57:36,495 [INFO] Final candidates: []
2025-04-11 18:57:36,495 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:36,503 [INFO] Final candidates: []
2025-04-11 18:57:36,503 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:36,503 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:36,582 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:36,582 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(9)), (np.int64(12), np.int64(8)))
2025-04-11 18:57:36,590 [INFO] Final candidates: []
2025-04-11 18:57:36,590 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:36,597 [INFO] Final candidates: []
2025-04-11 18:57:36,597 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:36,597 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:36,845 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:36,845 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(17)), (np.int64(11), np.int64(17)))
2025-04-11 18:57:36,853 [INFO] Final candidates: []
2025-04-11 18:57:36,853 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:36,860 [INFO] Final candidates: []
2025-04-11 18:57:36,861 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:36,861 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:36,997 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:36,997 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(10)), (np.int64(13), np.int64(15)))
2025-04-11 18:57:37,005 [INFO] Final candidates: []
2025-04-11 18:57:37,005 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:37,012 [INFO] Final candidates: []
2025-04-11 18:57:37,012 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:37,013 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:37,153 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:37,153 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(8)), (np.int64(14), np.int64(8)))
2025-04-11 18:57:37,160 [INFO] Final candidates: []
2025-04-11 18:57:37,161 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:37,171 [INFO] Final candidates: []
2025-04-11 18:57:37,171 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:37,171 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:37,398 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:37,398 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(16)), (np.int64(12), np.int64(17)))
2025-04-11 18:57:37,405 [INFO] Final candidates: []
2025-04-11 18:57:37,406 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:37,413 [INFO] Final candidates: []
2025-04-11 18:57:37,413 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:37,414 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:37,628 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:37,628 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(11)), (np.int64(13), np.int64(10)))
2025-04-11 18:57:37,636 [INFO] Final candidates: []
2025-04-11 18:57:37,636 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:37,643 [INFO] Final candidates: []
2025-04-11 18:57:37,643 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:37,644 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:37,878 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:37,878 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(17)), (np.int64(13), np.int64(15)))
2025-04-11 18:57:37,885 [INFO] Final candidates: []
2025-04-11 18:57:37,885 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:37,893 [INFO] Final candidates: []
2025-04-11 18:57:37,893 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:37,893 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:38,134 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:38,134 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(13)), (np.int64(5), np.int64(8)))
2025-04-11 18:57:38,144 [INFO] Final candidates: []
2025-04-11 18:57:38,144 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:38,152 [INFO] Final candidates: []
2025-04-11 18:57:38,152 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:38,152 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:38,312 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:38,313 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(16)), (np.int64(9), np.int64(8)))
2025-04-11 18:57:38,320 [INFO] Final candidates: []
2025-04-11 18:57:38,321 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:38,329 [INFO] Final candidates: []
2025-04-11 18:57:38,329 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:38,329 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:38,381 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:38,381 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(9)), (np.int64(12), np.int64(10)))
2025-04-11 18:57:38,388 [INFO] Final candidates: []
2025-04-11 18:57:38,389 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:38,397 [INFO] Final candidates: []
2025-04-11 18:57:38,397 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:38,397 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:38,510 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:38,511 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(10)), (np.int64(8), np.int64(16)))
2025-04-11 18:57:38,518 [INFO] Final candidates: []
2025-04-11 18:57:38,518 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:38,526 [INFO] Final candidates: []
2025-04-11 18:57:38,526 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:38,526 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:38,842 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:38,843 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(16)), (np.int64(8), np.int64(15)))
2025-04-11 18:57:38,862 [INFO] Final candidates: []
2025-04-11 18:57:38,863 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:38,879 [INFO] Final candidates: []
2025-04-11 18:57:38,879 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:38,879 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:38,906 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:38,906 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(15)), (np.int64(14), np.int64(17)))
2025-04-11 18:57:38,914 [INFO] Final candidates: []
2025-04-11 18:57:38,914 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:38,921 [INFO] Final candidates: []
2025-04-11 18:57:38,922 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:38,922 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:39,051 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:39,051 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(18)), (np.int64(14), np.int64(17)))
2025-04-11 18:57:39,059 [INFO] Final candidates: []
2025-04-11 18:57:39,059 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:39,066 [INFO] Final candidates: []
2025-04-11 18:57:39,066 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:39,067 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:39,168 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:39,168 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(9)), (np.int64(14), np.int64(9)))
2025-04-11 18:57:39,175 [INFO] Final candidates: []
2025-04-11 18:57:39,176 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:39,183 [INFO] Final candidates: []
2025-04-11 18:57:39,183 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:39,183 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:39,383 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:39,383 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(9)), (np.int64(8), np.int64(10)))
2025-04-11 18:57:39,390 [INFO] Final candidates: []
2025-04-11 18:57:39,390 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:39,398 [INFO] Final candidates: []
2025-04-11 18:57:39,398 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:39,398 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:39,645 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:39,645 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(11)), (np.int64(8), np.int64(8)))
2025-04-11 18:57:39,653 [INFO] Final candidates: []
2025-04-11 18:57:39,653 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:39,660 [INFO] Final candidates: []
2025-04-11 18:57:39,660 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:39,661 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:39,924 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:39,924 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(9)), (np.int64(7), np.int64(8)))
2025-04-11 18:57:39,932 [INFO] Final candidates: []
2025-04-11 18:57:39,932 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:39,940 [INFO] Final candidates: []
2025-04-11 18:57:39,940 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:39,940 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:40,108 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:40,109 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(9)), (np.int64(11), np.int64(9)))
2025-04-11 18:57:40,116 [INFO] Final candidates: []
2025-04-11 18:57:40,116 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:40,124 [INFO] Final candidates: []
2025-04-11 18:57:40,124 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:40,124 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:40,223 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:40,224 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(16)), (np.int64(12), np.int64(8)))
2025-04-11 18:57:40,231 [INFO] Final candidates: []
2025-04-11 18:57:40,231 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:40,239 [INFO] Final candidates: []
2025-04-11 18:57:40,239 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:40,239 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:40,302 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:40,302 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(10)), (np.int64(5), np.int64(9)))
2025-04-11 18:57:40,310 [INFO] Final candidates: []
2025-04-11 18:57:40,310 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:40,317 [INFO] Final candidates: []
2025-04-11 18:57:40,317 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:40,318 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:40,418 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:40,418 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(9)), (np.int64(15), np.int64(9)))
2025-04-11 18:57:40,428 [INFO] Final candidates: []
2025-04-11 18:57:40,428 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:40,442 [INFO] Final candidates: []
2025-04-11 18:57:40,442 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:40,442 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:40,595 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:40,595 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(10)), (np.int64(10), np.int64(8)))
2025-04-11 18:57:40,604 [INFO] Final candidates: []
2025-04-11 18:57:40,604 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:40,611 [INFO] Final candidates: []
2025-04-11 18:57:40,611 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:40,612 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:40,814 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:40,814 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(8)), (np.int64(8), np.int64(7)))
2025-04-11 18:57:40,822 [INFO] Final candidates: []
2025-04-11 18:57:40,822 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:40,829 [INFO] Final candidates: []
2025-04-11 18:57:40,829 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:40,830 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:40,949 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:40,949 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(15)), (np.int64(6), np.int64(11)))
2025-04-11 18:57:40,957 [INFO] Final candidates: []
2025-04-11 18:57:40,957 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:40,965 [INFO] Final candidates: []
2025-04-11 18:57:40,965 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:40,965 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:41,136 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:41,137 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(11)), (np.int64(7), np.int64(15)))
2025-04-11 18:57:41,146 [INFO] Final candidates: []
2025-04-11 18:57:41,146 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:41,154 [INFO] Final candidates: []
2025-04-11 18:57:41,154 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:41,154 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:41,340 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:41,340 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(11)), (np.int64(6), np.int64(8)))
2025-04-11 18:57:41,348 [INFO] Final candidates: []
2025-04-11 18:57:41,348 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:41,355 [INFO] Final candidates: []
2025-04-11 18:57:41,355 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:41,355 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:41,503 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:41,503 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(8)), (np.int64(13), np.int64(18)))
2025-04-11 18:57:41,511 [INFO] Final candidates: []
2025-04-11 18:57:41,511 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:41,519 [INFO] Final candidates: []
2025-04-11 18:57:41,519 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:41,519 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:41,639 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:41,639 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(14)), (np.int64(12), np.int64(17)))
2025-04-11 18:57:41,646 [INFO] Final candidates: []
2025-04-11 18:57:41,646 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:41,654 [INFO] Final candidates: []
2025-04-11 18:57:41,654 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:41,654 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:41,800 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:41,800 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(11)), (np.int64(16), np.int64(18)))
2025-04-11 18:57:41,817 [INFO] Final candidates: []
2025-04-11 18:57:41,817 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:41,833 [INFO] Final candidates: []
2025-04-11 18:57:41,833 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:41,833 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:41,977 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:41,977 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(11)), (np.int64(11), np.int64(17)))
2025-04-11 18:57:41,985 [INFO] Final candidates: []
2025-04-11 18:57:41,985 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:41,993 [INFO] Final candidates: []
2025-04-11 18:57:41,993 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:41,993 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:42,101 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:42,101 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(9)), (np.int64(13), np.int64(10)))
2025-04-11 18:57:42,121 [INFO] Final candidates: []
2025-04-11 18:57:42,121 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:42,141 [INFO] Final candidates: []
2025-04-11 18:57:42,141 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:42,142 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:42,420 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:42,420 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(14)), (np.int64(11), np.int64(9)))
2025-04-11 18:57:42,428 [INFO] Final candidates: []
2025-04-11 18:57:42,428 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:42,435 [INFO] Final candidates: []
2025-04-11 18:57:42,435 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:42,436 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:42,725 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:42,725 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(13)), (np.int64(10), np.int64(14)))
2025-04-11 18:57:42,730 [DEBUG] board coords: [(9, 13), (10, 14), (11, 15), (12, 16), (13, 17), (14, 18)]
2025-04-11 18:57:42,730 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(0), np.int64(0), np.int64(1), np.int64(1)]
2025-04-11 18:57:42,730 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 15), (12, 16)]
2025-04-11 18:57:42,731 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 0 0 1 1] with coords [(9, 13), (10, 14), (11, 15), (12, 16), (13, 17), (14, 18)] triggers candidate.
2025-04-11 18:57:42,733 [INFO] Final candidates: [(12, 16), (11, 15)]
2025-04-11 18:57:42,733 [INFO] Phase win: Collected 1unique candidate(s):[((12, 16), (11, 15))]
2025-04-11 18:57:42,733 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 18:57:42,741 [INFO] Final candidates: []
2025-04-11 18:57:42,741 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:42,741 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:42,945 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:42,945 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(7)), (np.int64(10), np.int64(10)))
2025-04-11 18:57:42,952 [INFO] Final candidates: []
2025-04-11 18:57:42,953 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:42,960 [INFO] Final candidates: []
2025-04-11 18:57:42,960 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:42,960 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:43,016 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:43,016 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(14)), (np.int64(13), np.int64(7)))
2025-04-11 18:57:43,024 [INFO] Final candidates: []
2025-04-11 18:57:43,024 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:43,031 [INFO] Final candidates: []
2025-04-11 18:57:43,031 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:43,032 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:43,141 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:43,141 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(16)), (np.int64(10), np.int64(10)))
2025-04-11 18:57:43,149 [INFO] Final candidates: []
2025-04-11 18:57:43,149 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:43,157 [INFO] Final candidates: []
2025-04-11 18:57:43,157 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:43,157 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:43,401 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:43,402 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(17)), (np.int64(13), np.int64(15)))
2025-04-11 18:57:43,409 [INFO] Final candidates: []
2025-04-11 18:57:43,409 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:43,417 [INFO] Final candidates: []
2025-04-11 18:57:43,417 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:43,417 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:43,578 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:43,578 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(8)), (np.int64(7), np.int64(15)))
2025-04-11 18:57:43,586 [INFO] Final candidates: []
2025-04-11 18:57:43,586 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:43,593 [INFO] Final candidates: []
2025-04-11 18:57:43,593 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:43,594 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:43,851 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:43,851 [INFO] MCTS: Search finished. Best move selected with 1 visits.
2025-04-11 18:57:43,851 [INFO] MCTS selected move: P11,S15
2025-04-11 18:57:43,851 [INFO] ===============NEW MOVE================
2025-04-11 18:57:49,545 [INFO] Starting pre-MCTS candidate collection.
2025-04-11 18:57:49,554 [INFO] Final candidates: []
2025-04-11 18:57:49,554 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:49,557 [DEBUG] check_window_margin_custom: For L=6, window [0 2 2 2 2 0] with coords [(7, 9), (8, 9), (9, 9), (10, 9), (11, 9), (12, 9)] triggers candidate.
2025-04-11 18:57:49,557 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 18:57:49,557 [DEBUG] board coords: [(9, 9), (10, 9), (11, 9), (12, 9), (13, 9), (14, 9)]
2025-04-11 18:57:49,557 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(0)]
2025-04-11 18:57:49,557 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (14, 9)]
2025-04-11 18:57:49,557 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 0 2 0] with coords [(9, 9), (10, 9), (11, 9), (12, 9), (13, 9), (14, 9)] triggers candidate.
2025-04-11 18:57:49,562 [INFO] Final candidates: [(7, 9), (14, 9), (12, 9)]
2025-04-11 18:57:49,562 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 9), (12, 9)), ((14, 9), (12, 9)), ((7, 9), (14, 9))]
2025-04-11 18:57:49,562 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:57:49,562 [INFO] MCTS: Starting search for 100 iterations.
2025-04-11 18:57:49,563 [DEBUG] Tree_policy iteration 1: Expanding move ((7, 9), (14, 9))
2025-04-11 18:57:49,565 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:49,565 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:49,565 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:49,565 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:49,572 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:49,573 [INFO] Phase win: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:49,573 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 18:57:49,580 [INFO] Final candidates: []
2025-04-11 18:57:49,580 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:49,580 [DEBUG] MCTS iteration 0: reached a node with 0 visits.
2025-04-11 18:57:49,580 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:49,768 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:49,768 [DEBUG] Tree_policy iteration 1: Expanding move ((14, 9), (12, 9))
2025-04-11 18:57:49,771 [DEBUG] board coords: [(11, 9), (12, 9), (13, 9), (14, 9), (15, 9), (16, 9)]
2025-04-11 18:57:49,771 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 18:57:49,771 [DEBUG] check_window_intermediate_custom: empty_cells=[(15, 9), (16, 9)]
2025-04-11 18:57:49,771 [DEBUG] check_window_intermediate_custom (only one inserted(15, 9)): For L=6, window [2 2 2 2 0 0] with coords [(11, 9), (12, 9), (13, 9), (14, 9), (15, 9), (16, 9)] triggers candidate.
2025-04-11 18:57:49,776 [INFO] Final candidates: [(7, 9), (15, 9)]
2025-04-11 18:57:49,776 [INFO] Phase win: Collected 1unique candidate(s):[((7, 9), (15, 9))]
2025-04-11 18:57:49,776 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 18:57:49,783 [INFO] Final candidates: []
2025-04-11 18:57:49,783 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:49,784 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:49,784 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:49,784 [DEBUG] Tree_policy iteration 1: Expanding move ((7, 9), (12, 9))
2025-04-11 18:57:49,787 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:49,787 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 18:57:49,787 [DEBUG] check_window_intermediate_custom: empty_cells=[(14, 9), (15, 9)]
2025-04-11 18:57:49,787 [DEBUG] check_window_intermediate_custom (only one inserted(14, 9)): For L=6, window [2 2 2 2 0 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:49,792 [INFO] Final candidates: [(14, 9)]
2025-04-11 18:57:49,792 [INFO] Phase win: Found only one candidate: (14, 9)
2025-04-11 18:57:49,792 [INFO] Phase win: Collected 10unique candidate(s):[((14, 9), (np.int64(15), np.int64(9))), ((14, 9), (np.int64(14), np.int64(7))), ((14, 9), (np.int64(15), np.int64(8))), ((14, 9), (np.int64(16), np.int64(9))), ((14, 9), (np.int64(15), np.int64(10))), ((14, 9), (np.int64(14), np.int64(8))), ((14, 9), (np.int64(14), np.int64(10))), ((14, 9), (np.int64(13), np.int64(8))), ((14, 9), (np.int64(14), np.int64(11))), ((14, 9), (np.int64(13), np.int64(10)))]
2025-04-11 18:57:49,792 [INFO] Phase 1 (immediate win): 10 candidate(s) found.
2025-04-11 18:57:49,799 [INFO] Final candidates: []
2025-04-11 18:57:49,799 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:49,799 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:49,799 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:49,800 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:49,800 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(16)), (np.int64(6), np.int64(10)))
2025-04-11 18:57:49,807 [INFO] Final candidates: []
2025-04-11 18:57:49,807 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:49,810 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:49,810 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:49,810 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:49,810 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:49,815 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:49,815 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:49,815 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:49,815 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:49,973 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:49,973 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:49,973 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(10)), (np.int64(11), np.int64(15)))
2025-04-11 18:57:49,979 [DEBUG] board coords: [(9, 13), (10, 14), (11, 15), (12, 16), (13, 17), (14, 18)]
2025-04-11 18:57:49,979 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1)]
2025-04-11 18:57:49,979 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (12, 16)]
2025-04-11 18:57:49,979 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 1 0 1 1] with coords [(9, 13), (10, 14), (11, 15), (12, 16), (13, 17), (14, 18)] triggers candidate.
2025-04-11 18:57:49,982 [INFO] Final candidates: [(12, 16), (9, 13)]
2025-04-11 18:57:49,982 [INFO] Phase win: Collected 1unique candidate(s):[((12, 16), (9, 13))]
2025-04-11 18:57:49,982 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 18:57:49,984 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:49,984 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:49,984 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:49,985 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:49,989 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:49,990 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:49,990 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:49,990 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:50,265 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:50,265 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:50,266 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(9)), (np.int64(8), np.int64(7)))
2025-04-11 18:57:50,274 [INFO] Final candidates: []
2025-04-11 18:57:50,274 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:50,293 [INFO] Final candidates: []
2025-04-11 18:57:50,293 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:50,294 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:50,466 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:50,466 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:50,466 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 18:57:50,466 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:50,466 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:50,467 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:50,467 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 18:57:50,467 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:50,467 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:50,467 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:50,467 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(10)), (np.int64(13), np.int64(8)))
2025-04-11 18:57:50,474 [INFO] Final candidates: []
2025-04-11 18:57:50,474 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:50,477 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:50,477 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:50,477 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:50,477 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:50,482 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:50,482 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:50,482 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:50,482 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:50,664 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:50,664 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:50,664 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(15)), (np.int64(14), np.int64(15)))
2025-04-11 18:57:50,674 [INFO] Final candidates: []
2025-04-11 18:57:50,674 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:50,678 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:50,679 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:50,679 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:50,679 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:50,683 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:50,684 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:50,684 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:50,684 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:50,739 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:50,742 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:50,742 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(8)), (np.int64(7), np.int64(10)))
2025-04-11 18:57:50,749 [INFO] Final candidates: []
2025-04-11 18:57:50,749 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:50,751 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:50,751 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:50,751 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:50,751 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:50,756 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:50,756 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:50,756 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:50,756 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:50,862 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:50,862 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:50,862 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(16)), (np.int64(15), np.int64(10)))
2025-04-11 18:57:50,873 [INFO] Final candidates: []
2025-04-11 18:57:50,873 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:50,876 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:50,876 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:50,876 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:50,876 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:50,881 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:50,881 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:50,881 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:50,881 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:50,910 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:50,910 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:50,910 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(7)), (np.int64(14), np.int64(11)))
2025-04-11 18:57:50,917 [INFO] Final candidates: []
2025-04-11 18:57:50,917 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:50,920 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:50,920 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:50,920 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:50,920 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:50,925 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:50,925 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:50,925 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:50,925 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:51,046 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:51,047 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:51,047 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(8)), (np.int64(11), np.int64(17)))
2025-04-11 18:57:51,054 [INFO] Final candidates: []
2025-04-11 18:57:51,054 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:51,057 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:51,057 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:51,057 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:51,057 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:51,062 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:51,062 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:51,062 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:51,062 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:51,183 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:51,183 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:51,184 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(9)), (np.int64(6), np.int64(10)))
2025-04-11 18:57:51,191 [INFO] Final candidates: []
2025-04-11 18:57:51,191 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:51,193 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:51,193 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:51,193 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:51,193 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:51,198 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:51,199 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:51,199 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:51,199 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:51,232 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:51,232 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:51,232 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(7)), (np.int64(15), np.int64(9)))
2025-04-11 18:57:51,239 [INFO] Final candidates: []
2025-04-11 18:57:51,239 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:51,247 [INFO] Final candidates: [(12, 9)]
2025-04-11 18:57:51,247 [INFO] Phase defense: Found only one candidate: (12, 9)
2025-04-11 18:57:51,247 [INFO] Phase defense: Collected 8unique candidate(s):[((12, 9), (np.int64(12), np.int64(11))), ((12, 9), (np.int64(13), np.int64(8))), ((12, 9), (np.int64(12), np.int64(10))), ((12, 9), (np.int64(13), np.int64(10))), ((12, 9), (np.int64(11), np.int64(8))), ((12, 9), (np.int64(12), np.int64(8))), ((12, 9), (np.int64(11), np.int64(10))), ((12, 9), (np.int64(12), np.int64(7)))]
2025-04-11 18:57:51,247 [INFO] Phase 2 (defense): 8 candidate(s) found.
2025-04-11 18:57:51,247 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:51,272 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:51,272 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:51,272 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(8)), (np.int64(8), np.int64(16)))
2025-04-11 18:57:51,279 [INFO] Final candidates: []
2025-04-11 18:57:51,279 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:51,282 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:51,282 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:51,282 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:51,282 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:51,287 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:51,287 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:51,287 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:51,287 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:51,305 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:51,305 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:51,306 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(18)), (np.int64(6), np.int64(7)))
2025-04-11 18:57:51,313 [INFO] Final candidates: []
2025-04-11 18:57:51,314 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:51,316 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:51,316 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:51,316 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:51,316 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:51,323 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:51,323 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:51,323 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:51,323 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:51,415 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:51,416 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:51,416 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(7)), (np.int64(7), np.int64(15)))
2025-04-11 18:57:51,424 [INFO] Final candidates: []
2025-04-11 18:57:51,424 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:51,429 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:51,429 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:51,429 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:51,429 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:51,436 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:51,436 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:51,436 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:51,436 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:51,554 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:51,554 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:51,554 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(8)), (np.int64(11), np.int64(7)))
2025-04-11 18:57:51,561 [INFO] Final candidates: []
2025-04-11 18:57:51,561 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:51,564 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:51,564 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:51,564 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:51,564 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:51,569 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:51,569 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:51,569 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:51,569 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:51,732 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:51,733 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:51,733 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(14)), (np.int64(11), np.int64(17)))
2025-04-11 18:57:51,740 [INFO] Final candidates: []
2025-04-11 18:57:51,740 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:51,743 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:51,743 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:51,743 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:51,743 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:51,751 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:51,751 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:51,751 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:51,751 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:51,781 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:51,781 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:51,781 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(17)), (np.int64(9), np.int64(7)))
2025-04-11 18:57:51,788 [INFO] Final candidates: []
2025-04-11 18:57:51,788 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:51,791 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:51,791 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:51,791 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:51,791 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:51,796 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:51,796 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:51,796 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:51,796 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:52,003 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:52,003 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:52,003 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(17)), (np.int64(9), np.int64(10)))
2025-04-11 18:57:52,010 [INFO] Final candidates: []
2025-04-11 18:57:52,011 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:52,013 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:52,013 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:52,013 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:52,013 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:52,018 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:52,018 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:52,018 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:52,018 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:52,020 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:52,020 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:52,020 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(12)), (np.int64(10), np.int64(8)))
2025-04-11 18:57:52,027 [INFO] Final candidates: []
2025-04-11 18:57:52,027 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:52,030 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:52,030 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:52,030 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:52,030 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:52,035 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:52,035 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:52,035 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:52,035 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:52,160 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:52,161 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:52,161 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(11)), (np.int64(8), np.int64(7)))
2025-04-11 18:57:52,170 [INFO] Final candidates: []
2025-04-11 18:57:52,170 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:52,174 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:52,174 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:52,174 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:52,174 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:52,179 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:52,179 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:52,179 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:52,179 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:52,407 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:52,407 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:52,407 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(14)), (np.int64(10), np.int64(10)))
2025-04-11 18:57:52,415 [INFO] Final candidates: []
2025-04-11 18:57:52,415 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:52,417 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:52,417 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:52,417 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:52,418 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:52,426 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:52,426 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:52,426 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:52,426 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:52,721 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:52,721 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:52,721 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(7)), (np.int64(13), np.int64(18)))
2025-04-11 18:57:52,737 [INFO] Final candidates: []
2025-04-11 18:57:52,737 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:52,741 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:52,741 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:52,741 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:52,741 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:52,746 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:52,746 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:52,746 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:52,746 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:52,851 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:52,853 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:52,853 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(11)), (np.int64(11), np.int64(15)))
2025-04-11 18:57:52,859 [DEBUG] board coords: [(9, 13), (10, 14), (11, 15), (12, 16), (13, 17), (14, 18)]
2025-04-11 18:57:52,859 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1)]
2025-04-11 18:57:52,859 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (12, 16)]
2025-04-11 18:57:52,859 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 1 0 1 1] with coords [(9, 13), (10, 14), (11, 15), (12, 16), (13, 17), (14, 18)] triggers candidate.
2025-04-11 18:57:52,862 [INFO] Final candidates: [(12, 16), (9, 13)]
2025-04-11 18:57:52,862 [INFO] Phase win: Collected 1unique candidate(s):[((12, 16), (9, 13))]
2025-04-11 18:57:52,862 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 18:57:52,864 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:52,864 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:52,865 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:52,865 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:52,871 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:52,871 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:52,871 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:52,871 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:52,949 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:52,949 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:52,949 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(11)), (np.int64(6), np.int64(7)))
2025-04-11 18:57:52,956 [INFO] Final candidates: []
2025-04-11 18:57:52,956 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:52,959 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:52,959 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:52,959 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:52,959 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:52,964 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:52,964 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:52,964 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:52,964 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:53,157 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:53,158 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:53,158 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(10)), (np.int64(7), np.int64(11)))
2025-04-11 18:57:53,167 [INFO] Final candidates: []
2025-04-11 18:57:53,167 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:53,170 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:53,170 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:53,170 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:53,170 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:53,175 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:53,175 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:53,175 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:53,176 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:53,278 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:53,278 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:53,278 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(14)), (np.int64(9), np.int64(7)))
2025-04-11 18:57:53,285 [INFO] Final candidates: []
2025-04-11 18:57:53,286 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:53,288 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:53,288 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:53,288 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:53,288 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:53,293 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:53,293 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:53,293 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:53,293 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:53,319 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:53,319 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:53,319 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(7)), (np.int64(5), np.int64(9)))
2025-04-11 18:57:53,326 [INFO] Final candidates: []
2025-04-11 18:57:53,327 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:53,329 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:53,329 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:53,329 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:53,329 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:53,334 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:53,334 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:53,334 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:53,334 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:53,621 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:53,621 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:53,621 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(8)), (np.int64(15), np.int64(10)))
2025-04-11 18:57:53,629 [INFO] Final candidates: []
2025-04-11 18:57:53,629 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:53,632 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:53,632 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:53,632 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:53,632 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:53,637 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:53,637 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:53,637 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:53,637 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:53,743 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:53,744 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:53,744 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(7)), (np.int64(16), np.int64(18)))
2025-04-11 18:57:53,751 [INFO] Final candidates: []
2025-04-11 18:57:53,751 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:53,754 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:53,754 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:53,754 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:53,754 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:53,759 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:53,759 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:53,759 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:53,759 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:53,759 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:53,759 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:53,759 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(7)), (np.int64(15), np.int64(16)))
2025-04-11 18:57:53,767 [INFO] Final candidates: []
2025-04-11 18:57:53,767 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:53,770 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:53,770 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:53,770 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:53,770 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:53,775 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:53,775 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:53,775 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:53,775 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:53,780 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:53,780 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:53,780 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(11)), (np.int64(15), np.int64(10)))
2025-04-11 18:57:53,787 [INFO] Final candidates: []
2025-04-11 18:57:53,787 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:53,790 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:53,790 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:53,790 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:53,790 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:53,795 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:53,795 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:53,795 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:53,795 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:53,844 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:53,844 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:53,844 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(11)), (np.int64(8), np.int64(10)))
2025-04-11 18:57:53,852 [INFO] Final candidates: []
2025-04-11 18:57:53,852 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:53,854 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:53,854 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:53,854 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:53,854 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:53,859 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:53,859 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:53,859 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:53,859 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:53,969 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:53,970 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:53,970 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(11)), (np.int64(11), np.int64(15)))
2025-04-11 18:57:53,976 [DEBUG] board coords: [(9, 13), (10, 14), (11, 15), (12, 16), (13, 17), (14, 18)]
2025-04-11 18:57:53,976 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1)]
2025-04-11 18:57:53,976 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (12, 16)]
2025-04-11 18:57:53,976 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 1 0 1 1] with coords [(9, 13), (10, 14), (11, 15), (12, 16), (13, 17), (14, 18)] triggers candidate.
2025-04-11 18:57:53,979 [INFO] Final candidates: [(12, 16), (9, 13)]
2025-04-11 18:57:53,979 [INFO] Phase win: Collected 1unique candidate(s):[((12, 16), (9, 13))]
2025-04-11 18:57:53,979 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 18:57:53,982 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:53,982 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:53,982 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:53,982 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:53,987 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:53,987 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:53,987 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:53,987 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:54,037 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:54,037 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:54,037 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(7)), (np.int64(11), np.int64(13)))
2025-04-11 18:57:54,044 [INFO] Final candidates: []
2025-04-11 18:57:54,044 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:54,047 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:54,047 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:54,047 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:54,047 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:54,054 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:54,054 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:54,054 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:54,054 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:54,121 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:54,121 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:54,121 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(4), np.int64(9)), (np.int64(11), np.int64(8)))
2025-04-11 18:57:54,128 [INFO] Final candidates: []
2025-04-11 18:57:54,129 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:54,131 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:54,131 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:54,131 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:54,131 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:54,136 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:54,136 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:54,136 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:54,136 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:54,302 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:54,302 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:54,302 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(17)), (np.int64(8), np.int64(10)))
2025-04-11 18:57:54,309 [INFO] Final candidates: []
2025-04-11 18:57:54,309 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:54,312 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:54,312 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:54,312 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:54,312 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:54,317 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:54,317 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:54,317 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:54,317 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:54,405 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:54,405 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:54,405 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(17)), (np.int64(5), np.int64(9)))
2025-04-11 18:57:54,412 [INFO] Final candidates: []
2025-04-11 18:57:54,412 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:54,415 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:54,415 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:54,415 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:54,415 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:54,420 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:54,420 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:54,420 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:54,420 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:54,508 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:54,508 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:54,508 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(10)), (np.int64(12), np.int64(18)))
2025-04-11 18:57:54,515 [INFO] Final candidates: []
2025-04-11 18:57:54,516 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:54,518 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:54,518 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:54,518 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:54,518 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:54,523 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:54,523 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:54,523 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:54,523 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:54,585 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:54,585 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:54,585 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(16)), (np.int64(14), np.int64(16)))
2025-04-11 18:57:54,590 [DEBUG] board coords: [(9, 13), (10, 14), (11, 15), (12, 16), (13, 17), (14, 18)]
2025-04-11 18:57:54,590 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 18:57:54,590 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (11, 15)]
2025-04-11 18:57:54,590 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 0 1 1 1] with coords [(9, 13), (10, 14), (11, 15), (12, 16), (13, 17), (14, 18)] triggers candidate.
2025-04-11 18:57:54,593 [INFO] Final candidates: [(11, 15), (9, 13)]
2025-04-11 18:57:54,593 [INFO] Phase win: Collected 1unique candidate(s):[((11, 15), (9, 13))]
2025-04-11 18:57:54,593 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 18:57:54,595 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:54,595 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:54,595 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:54,596 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:54,600 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:54,600 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:54,600 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:54,601 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:54,630 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:54,631 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:54,631 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(15)), (np.int64(13), np.int64(15)))
2025-04-11 18:57:54,638 [INFO] Final candidates: []
2025-04-11 18:57:54,638 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:54,640 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:54,640 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:54,641 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:54,641 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:54,645 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:54,645 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:54,645 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:54,646 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:54,789 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:54,789 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:54,790 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(8)), (np.int64(15), np.int64(16)))
2025-04-11 18:57:54,797 [INFO] Final candidates: []
2025-04-11 18:57:54,797 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:54,800 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:54,800 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:54,800 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:54,800 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:54,806 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:54,807 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:54,807 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:54,807 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:54,949 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:54,949 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:54,949 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(7)), (np.int64(13), np.int64(7)))
2025-04-11 18:57:54,957 [INFO] Final candidates: []
2025-04-11 18:57:54,958 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:54,960 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:54,960 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:54,960 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:54,960 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:54,966 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:54,966 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:54,966 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:54,966 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:54,967 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:54,967 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:54,967 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(14)), (np.int64(12), np.int64(18)))
2025-04-11 18:57:54,974 [INFO] Final candidates: []
2025-04-11 18:57:54,974 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:54,977 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:54,977 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:54,977 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:54,977 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:54,982 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:54,982 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:54,982 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:54,982 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:55,051 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:55,052 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:55,052 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(4), np.int64(9)), (np.int64(12), np.int64(9)))
2025-04-11 18:57:55,059 [INFO] Final candidates: []
2025-04-11 18:57:55,059 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:55,066 [INFO] Final candidates: []
2025-04-11 18:57:55,066 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:57:55,067 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:55,323 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:55,323 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:55,323 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(15)), (np.int64(10), np.int64(13)))
2025-04-11 18:57:55,330 [INFO] Final candidates: []
2025-04-11 18:57:55,330 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:55,333 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:55,333 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:55,333 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:55,333 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:55,338 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:55,338 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:55,338 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:55,338 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:55,599 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:55,599 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:55,600 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(10)), (np.int64(11), np.int64(7)))
2025-04-11 18:57:55,613 [INFO] Final candidates: []
2025-04-11 18:57:55,613 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:55,616 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:55,616 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:55,616 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:55,616 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:55,623 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:55,623 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:55,623 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:55,623 [DEBUG] MCTS iteration 50: reached a node with 0 visits.
2025-04-11 18:57:55,623 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:55,641 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:55,642 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:55,642 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(11)), (np.int64(11), np.int64(17)))
2025-04-11 18:57:55,650 [INFO] Final candidates: []
2025-04-11 18:57:55,650 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:55,653 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:55,653 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:55,653 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:55,653 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:55,659 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:55,659 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:55,659 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:55,659 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:55,887 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:55,887 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:55,887 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(13)), (np.int64(13), np.int64(15)))
2025-04-11 18:57:55,894 [INFO] Final candidates: []
2025-04-11 18:57:55,894 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:55,897 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:55,897 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:55,897 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:55,897 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:55,902 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:55,902 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:55,902 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:55,902 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:55,909 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:55,909 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:55,909 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(16)), (np.int64(10), np.int64(16)))
2025-04-11 18:57:55,917 [INFO] Final candidates: []
2025-04-11 18:57:55,917 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:55,921 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:55,921 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:55,921 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:55,921 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:55,928 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:55,928 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:55,928 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:55,928 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:56,066 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:56,067 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:56,067 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(18)), (np.int64(11), np.int64(15)))
2025-04-11 18:57:56,071 [DEBUG] board coords: [(9, 13), (10, 14), (11, 15), (12, 16), (13, 17), (14, 18)]
2025-04-11 18:57:56,071 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1)]
2025-04-11 18:57:56,071 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (12, 16)]
2025-04-11 18:57:56,071 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 1 0 1 1] with coords [(9, 13), (10, 14), (11, 15), (12, 16), (13, 17), (14, 18)] triggers candidate.
2025-04-11 18:57:56,074 [INFO] Final candidates: [(12, 16), (9, 13)]
2025-04-11 18:57:56,074 [INFO] Phase win: Collected 1unique candidate(s):[((12, 16), (9, 13))]
2025-04-11 18:57:56,074 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 18:57:56,077 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:56,077 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:56,077 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:56,077 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:56,082 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:56,082 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:56,082 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:56,082 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:56,328 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:56,329 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:56,329 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(15)), (np.int64(15), np.int64(18)))
2025-04-11 18:57:56,340 [INFO] Final candidates: []
2025-04-11 18:57:56,340 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:56,344 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:56,345 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:56,345 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:56,345 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:56,350 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:56,350 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:56,350 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:56,350 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:56,464 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:56,464 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:56,465 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(12)), (np.int64(8), np.int64(8)))
2025-04-11 18:57:56,473 [INFO] Final candidates: []
2025-04-11 18:57:56,473 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:56,475 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:56,475 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:56,475 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:56,476 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:56,480 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:56,480 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:56,480 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:56,480 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:56,812 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:56,812 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:56,813 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(15)), (np.int64(13), np.int64(10)))
2025-04-11 18:57:56,823 [INFO] Final candidates: []
2025-04-11 18:57:56,823 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:56,825 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:56,825 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:56,825 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:56,825 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:56,830 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:56,830 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:56,831 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:56,831 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:56,956 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:56,957 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:56,957 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(10)), (np.int64(6), np.int64(8)))
2025-04-11 18:57:56,964 [INFO] Final candidates: []
2025-04-11 18:57:56,964 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:56,967 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:56,967 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:56,967 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:56,967 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:56,971 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:56,972 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:56,972 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:56,972 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:57,100 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:57,100 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:57,100 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(18)), (np.int64(11), np.int64(7)))
2025-04-11 18:57:57,107 [INFO] Final candidates: []
2025-04-11 18:57:57,107 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:57,110 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:57,110 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:57,110 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:57,110 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:57,115 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:57,115 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:57,115 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:57,115 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:57,119 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:57,119 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:57,119 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(10)), (np.int64(13), np.int64(18)))
2025-04-11 18:57:57,127 [INFO] Final candidates: []
2025-04-11 18:57:57,127 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:57,129 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:57,129 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:57,129 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:57,129 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:57,134 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:57,134 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:57,134 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:57,134 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:57,171 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:57,172 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:57,172 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(16)), (np.int64(8), np.int64(10)))
2025-04-11 18:57:57,179 [INFO] Final candidates: []
2025-04-11 18:57:57,179 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:57,182 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:57,182 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:57,182 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:57,182 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:57,186 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:57,187 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:57,187 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:57,187 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:57,270 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:57,270 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:57,270 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(17)), (np.int64(14), np.int64(8)))
2025-04-11 18:57:57,277 [INFO] Final candidates: []
2025-04-11 18:57:57,277 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:57,280 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:57,280 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:57,280 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:57,280 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:57,285 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:57,285 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:57,285 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:57,285 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:57,422 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:57,422 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:57,422 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(7)), (np.int64(15), np.int64(9)))
2025-04-11 18:57:57,429 [INFO] Final candidates: []
2025-04-11 18:57:57,429 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:57,437 [INFO] Final candidates: [(12, 9)]
2025-04-11 18:57:57,437 [INFO] Phase defense: Found only one candidate: (12, 9)
2025-04-11 18:57:57,437 [INFO] Phase defense: Collected 8unique candidate(s):[((12, 9), (np.int64(12), np.int64(11))), ((12, 9), (np.int64(13), np.int64(8))), ((12, 9), (np.int64(12), np.int64(10))), ((12, 9), (np.int64(13), np.int64(10))), ((12, 9), (np.int64(11), np.int64(8))), ((12, 9), (np.int64(12), np.int64(8))), ((12, 9), (np.int64(11), np.int64(10))), ((12, 9), (np.int64(12), np.int64(7)))]
2025-04-11 18:57:57,437 [INFO] Phase 2 (defense): 8 candidate(s) found.
2025-04-11 18:57:57,437 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:57,543 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:57,543 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:57,543 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(7)), (np.int64(8), np.int64(7)))
2025-04-11 18:57:57,552 [INFO] Final candidates: []
2025-04-11 18:57:57,552 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:57,555 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:57,555 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:57,555 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:57,555 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:57,560 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:57,560 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:57,560 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:57,560 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:57,586 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:57,587 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:57,587 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(9)), (np.int64(15), np.int64(10)))
2025-04-11 18:57:57,594 [INFO] Final candidates: []
2025-04-11 18:57:57,594 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:57,597 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:57,597 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:57,597 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:57,597 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:57,602 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:57,602 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:57,602 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:57,602 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:57,723 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:57,724 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:57,724 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(10)), (np.int64(8), np.int64(7)))
2025-04-11 18:57:57,731 [INFO] Final candidates: []
2025-04-11 18:57:57,731 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:57,733 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:57,733 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:57,733 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:57,733 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:57,738 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:57,738 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:57,739 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:57,739 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:57,843 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:57,843 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:57,843 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(7)), (np.int64(14), np.int64(11)))
2025-04-11 18:57:57,850 [INFO] Final candidates: []
2025-04-11 18:57:57,850 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:57,853 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:57,853 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:57,853 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:57,853 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:57,858 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:57,858 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:57,858 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:57,858 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:57,860 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:57,860 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:57,860 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(14)), (np.int64(13), np.int64(15)))
2025-04-11 18:57:57,867 [INFO] Final candidates: []
2025-04-11 18:57:57,867 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:57,870 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:57,870 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:57,870 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:57,870 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:57,875 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:57,875 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:57,875 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:57,875 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:57,929 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:57,930 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:57,930 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(12)), (np.int64(16), np.int64(18)))
2025-04-11 18:57:57,937 [INFO] Final candidates: []
2025-04-11 18:57:57,937 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:57,939 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:57,940 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:57,940 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:57,940 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:57,944 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:57,944 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:57,945 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:57,945 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:58,137 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:58,137 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:58,137 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(7)), (np.int64(5), np.int64(9)))
2025-04-11 18:57:58,144 [INFO] Final candidates: []
2025-04-11 18:57:58,144 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:58,147 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:58,147 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:58,147 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:58,147 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:58,152 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:58,152 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:58,152 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:58,152 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:58,171 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:58,171 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:58,171 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(15)), (np.int64(11), np.int64(7)))
2025-04-11 18:57:58,178 [INFO] Final candidates: []
2025-04-11 18:57:58,178 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:58,181 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:58,181 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:58,181 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:58,181 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:58,186 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:58,186 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:58,186 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:58,186 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:58,379 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:58,379 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:58,379 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(8)), (np.int64(11), np.int64(13)))
2025-04-11 18:57:58,389 [INFO] Final candidates: []
2025-04-11 18:57:58,389 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:58,392 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:58,392 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:58,392 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:58,392 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:58,397 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:58,397 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:58,397 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:58,397 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:58,508 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:58,508 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:58,508 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(16)), (np.int64(13), np.int64(7)))
2025-04-11 18:57:58,515 [INFO] Final candidates: []
2025-04-11 18:57:58,515 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:58,518 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:58,518 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:58,518 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:58,518 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:58,523 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:58,523 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:58,523 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:58,523 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:58,676 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:58,676 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:58,676 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(10)), (np.int64(10), np.int64(7)))
2025-04-11 18:57:58,684 [INFO] Final candidates: []
2025-04-11 18:57:58,684 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:58,688 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:58,688 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:58,688 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:58,688 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:58,693 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:58,693 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:58,693 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:58,693 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:58,694 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:58,694 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:58,694 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(15)), (np.int64(15), np.int64(17)))
2025-04-11 18:57:58,701 [INFO] Final candidates: []
2025-04-11 18:57:58,701 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:58,704 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:58,704 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:58,704 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:58,704 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:58,711 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:58,711 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:58,711 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:58,711 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:58,927 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:58,927 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:58,927 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(8)), (np.int64(5), np.int64(8)))
2025-04-11 18:57:58,934 [INFO] Final candidates: []
2025-04-11 18:57:58,934 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:58,937 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:58,937 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:58,937 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:58,937 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:58,942 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:58,942 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:58,942 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:58,942 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:59,067 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:59,067 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:59,067 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(10)), (np.int64(6), np.int64(10)))
2025-04-11 18:57:59,075 [INFO] Final candidates: []
2025-04-11 18:57:59,075 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:59,077 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:59,077 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:59,077 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:59,077 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:59,083 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:59,083 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:59,083 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:59,084 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:59,263 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:59,264 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:59,264 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(10)), (np.int64(7), np.int64(15)))
2025-04-11 18:57:59,271 [INFO] Final candidates: []
2025-04-11 18:57:59,271 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:59,274 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:59,274 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:59,274 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:59,274 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:59,279 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:59,279 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:59,279 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:59,279 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:59,285 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:59,285 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:59,285 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(15)), (np.int64(15), np.int64(9)))
2025-04-11 18:57:59,292 [INFO] Final candidates: []
2025-04-11 18:57:59,292 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:59,300 [INFO] Final candidates: [(12, 9)]
2025-04-11 18:57:59,300 [INFO] Phase defense: Found only one candidate: (12, 9)
2025-04-11 18:57:59,300 [INFO] Phase defense: Collected 8unique candidate(s):[((12, 9), (np.int64(12), np.int64(11))), ((12, 9), (np.int64(13), np.int64(8))), ((12, 9), (np.int64(12), np.int64(10))), ((12, 9), (np.int64(13), np.int64(10))), ((12, 9), (np.int64(11), np.int64(8))), ((12, 9), (np.int64(12), np.int64(8))), ((12, 9), (np.int64(11), np.int64(10))), ((12, 9), (np.int64(12), np.int64(7)))]
2025-04-11 18:57:59,300 [INFO] Phase 2 (defense): 8 candidate(s) found.
2025-04-11 18:57:59,300 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:59,350 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:59,350 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:59,350 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(15)), (np.int64(14), np.int64(11)))
2025-04-11 18:57:59,357 [INFO] Final candidates: []
2025-04-11 18:57:59,357 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:59,360 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:59,360 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:59,360 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:59,360 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:59,367 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:59,367 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:59,367 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:59,367 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:59,455 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:59,455 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:59,455 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(16)), (np.int64(11), np.int64(15)))
2025-04-11 18:57:59,460 [DEBUG] board coords: [(9, 13), (10, 14), (11, 15), (12, 16), (13, 17), (14, 18)]
2025-04-11 18:57:59,460 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1)]
2025-04-11 18:57:59,460 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (12, 16)]
2025-04-11 18:57:59,460 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 1 0 1 1] with coords [(9, 13), (10, 14), (11, 15), (12, 16), (13, 17), (14, 18)] triggers candidate.
2025-04-11 18:57:59,463 [INFO] Final candidates: [(12, 16), (9, 13)]
2025-04-11 18:57:59,463 [INFO] Phase win: Collected 1unique candidate(s):[((12, 16), (9, 13))]
2025-04-11 18:57:59,463 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 18:57:59,466 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:59,466 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:59,466 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:59,466 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:59,471 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:59,471 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:59,471 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:59,471 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:59,594 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:59,594 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:59,594 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(8)), (np.int64(13), np.int64(16)))
2025-04-11 18:57:59,602 [INFO] Final candidates: []
2025-04-11 18:57:59,602 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:59,604 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:59,604 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:59,604 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:59,604 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:59,609 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:59,609 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:59,609 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:59,609 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:59,682 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:59,682 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:59,682 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(7)), (np.int64(10), np.int64(10)))
2025-04-11 18:57:59,689 [INFO] Final candidates: []
2025-04-11 18:57:59,690 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:59,692 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:59,692 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:59,692 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:59,692 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:59,697 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:59,697 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:59,697 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:59,697 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:59,725 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:59,726 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:59,726 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(8)), (np.int64(7), np.int64(8)))
2025-04-11 18:57:59,733 [INFO] Final candidates: []
2025-04-11 18:57:59,733 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:59,736 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:59,736 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:59,736 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:59,736 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:59,741 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:59,741 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:59,741 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:59,741 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:59,853 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:57:59,853 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:59,854 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(11)), (np.int64(6), np.int64(10)))
2025-04-11 18:57:59,861 [INFO] Final candidates: []
2025-04-11 18:57:59,861 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:59,863 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:59,863 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:59,863 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:59,863 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:59,868 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:59,868 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:59,868 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:59,868 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:59,910 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:59,910 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:59,911 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(14)), (np.int64(8), np.int64(8)))
2025-04-11 18:57:59,920 [INFO] Final candidates: []
2025-04-11 18:57:59,921 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:59,924 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:59,924 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:59,924 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:59,924 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:59,930 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:59,930 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:59,930 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:59,931 [INFO] Default policy: Starting random playout.
2025-04-11 18:57:59,932 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:57:59,933 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:57:59,933 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(7)), (np.int64(6), np.int64(7)))
2025-04-11 18:57:59,940 [INFO] Final candidates: []
2025-04-11 18:57:59,940 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:57:59,943 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:57:59,943 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:57:59,943 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:57:59,943 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:57:59,948 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:57:59,948 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:57:59,948 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:57:59,948 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:00,184 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:00,184 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:00,184 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(17)), (np.int64(6), np.int64(10)))
2025-04-11 18:58:00,191 [INFO] Final candidates: []
2025-04-11 18:58:00,191 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:00,194 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:58:00,194 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:00,194 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:58:00,194 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:58:00,199 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:58:00,199 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:58:00,199 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:58:00,199 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:00,356 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:00,356 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:00,356 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(7)), (np.int64(10), np.int64(10)))
2025-04-11 18:58:00,364 [INFO] Final candidates: []
2025-04-11 18:58:00,364 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:00,366 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:58:00,366 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:00,366 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:58:00,366 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:58:00,371 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:58:00,371 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:58:00,371 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:58:00,371 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:00,509 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:00,509 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:00,509 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(16)), (np.int64(9), np.int64(7)))
2025-04-11 18:58:00,514 [DEBUG] board coords: [(9, 13), (10, 14), (11, 15), (12, 16), (13, 17), (14, 18)]
2025-04-11 18:58:00,514 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 18:58:00,514 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (11, 15)]
2025-04-11 18:58:00,514 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 0 1 1 1] with coords [(9, 13), (10, 14), (11, 15), (12, 16), (13, 17), (14, 18)] triggers candidate.
2025-04-11 18:58:00,516 [INFO] Final candidates: [(11, 15), (9, 13)]
2025-04-11 18:58:00,516 [INFO] Phase win: Collected 1unique candidate(s):[((11, 15), (9, 13))]
2025-04-11 18:58:00,516 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 18:58:00,522 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:58:00,523 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:00,523 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:58:00,523 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:58:00,528 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:58:00,528 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:58:00,528 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:58:00,528 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:00,737 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:58:00,738 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:00,738 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(11)), (np.int64(12), np.int64(8)))
2025-04-11 18:58:00,746 [INFO] Final candidates: []
2025-04-11 18:58:00,746 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:00,749 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:58:00,749 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:00,749 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:58:00,749 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:58:00,754 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:58:00,754 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:58:00,754 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:58:00,754 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:00,921 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:00,921 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:00,921 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(9)), (np.int64(15), np.int64(10)))
2025-04-11 18:58:00,929 [INFO] Final candidates: []
2025-04-11 18:58:00,929 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:00,936 [INFO] Final candidates: []
2025-04-11 18:58:00,936 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:00,937 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:01,005 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:01,006 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:01,006 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 18:58:01,006 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:01,006 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:01,006 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:01,006 [DEBUG] Tree_policy: Terminal node reached.
2025-04-11 18:58:01,006 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:01,006 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:01,006 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:01,006 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(17)), (np.int64(13), np.int64(16)))
2025-04-11 18:58:01,013 [INFO] Final candidates: []
2025-04-11 18:58:01,013 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:01,016 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:58:01,016 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:01,016 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:58:01,016 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:58:01,021 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:58:01,021 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:58:01,021 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:58:01,021 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:01,133 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:58:01,134 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:01,134 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(11)), (np.int64(6), np.int64(8)))
2025-04-11 18:58:01,141 [INFO] Final candidates: []
2025-04-11 18:58:01,141 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:01,144 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:58:01,144 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:01,144 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:58:01,144 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:58:01,149 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:58:01,149 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:58:01,149 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:58:01,149 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:01,196 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:58:01,196 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:01,196 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(13)), (np.int64(10), np.int64(10)))
2025-04-11 18:58:01,201 [DEBUG] board coords: [(9, 13), (10, 14), (11, 15), (12, 16), (13, 17), (14, 18)]
2025-04-11 18:58:01,201 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(0), np.int64(0), np.int64(1), np.int64(1)]
2025-04-11 18:58:01,201 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 15), (12, 16)]
2025-04-11 18:58:01,201 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 0 0 1 1] with coords [(9, 13), (10, 14), (11, 15), (12, 16), (13, 17), (14, 18)] triggers candidate.
2025-04-11 18:58:01,204 [INFO] Final candidates: [(12, 16), (11, 15)]
2025-04-11 18:58:01,204 [INFO] Phase win: Collected 1unique candidate(s):[((12, 16), (11, 15))]
2025-04-11 18:58:01,204 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 18:58:01,206 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:58:01,206 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:01,207 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:58:01,207 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:58:01,211 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:58:01,211 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:58:01,211 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:58:01,212 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:01,300 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:58:01,300 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:01,300 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(10)), (np.int64(15), np.int64(18)))
2025-04-11 18:58:01,315 [INFO] Final candidates: []
2025-04-11 18:58:01,315 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:01,318 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:58:01,318 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:01,318 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:58:01,318 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:58:01,323 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:58:01,323 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:58:01,323 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:58:01,323 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:01,539 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:58:01,539 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:01,539 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(16)), (np.int64(6), np.int64(7)))
2025-04-11 18:58:01,546 [INFO] Final candidates: []
2025-04-11 18:58:01,547 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:01,553 [DEBUG] board coords: [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)]
2025-04-11 18:58:01,553 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:01,554 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 9), (15, 9)]
2025-04-11 18:58:01,554 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(10, 9), (11, 9), (12, 9), (13, 9), (14, 9), (15, 9)] triggers candidate.
2025-04-11 18:58:01,560 [INFO] Final candidates: [(15, 9), (12, 9)]
2025-04-11 18:58:01,560 [INFO] Phase defense: Collected 1unique candidate(s):[((15, 9), (12, 9))]
2025-04-11 18:58:01,560 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:58:01,560 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:01,697 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:01,697 [INFO] MCTS: Search finished. Best move selected with 4 visits.
2025-04-11 18:58:01,697 [INFO] Phase 2 (defense): MCTS selected move: ((7, 9), (14, 9))
2025-04-11 18:58:01,697 [INFO] Phase 2 (defense): MCTS selected move string : K8,K15
2025-04-11 18:58:01,697 [INFO] MCTS (defense candidates) selected move: K8,K15
2025-04-11 18:58:11,959 [INFO] Starting pre-MCTS candidate collection.
2025-04-11 18:58:11,966 [INFO] Final candidates: []
2025-04-11 18:58:11,966 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:11,974 [INFO] Final candidates: [(12, 9)]
2025-04-11 18:58:11,974 [INFO] Phase defense: Found only one candidate: (12, 9)
2025-04-11 18:58:11,974 [INFO] Phase defense: Collected 7unique candidate(s):[((12, 9), (np.int64(12), np.int64(11))), ((12, 9), (np.int64(13), np.int64(8))), ((12, 9), (np.int64(12), np.int64(10))), ((12, 9), (np.int64(13), np.int64(10))), ((12, 9), (np.int64(11), np.int64(8))), ((12, 9), (np.int64(12), np.int64(8))), ((12, 9), (np.int64(12), np.int64(7)))]
2025-04-11 18:58:11,974 [INFO] Phase 2 (defense): 7 candidate(s) found.
2025-04-11 18:58:11,974 [INFO] MCTS: Starting search for 100 iterations.
2025-04-11 18:58:11,974 [DEBUG] Tree_policy iteration 1: Expanding move ((12, 9), (np.int64(13), np.int64(8)))
2025-04-11 18:58:11,981 [INFO] Final candidates: []
2025-04-11 18:58:11,981 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:11,991 [INFO] Final candidates: []
2025-04-11 18:58:11,991 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:11,992 [DEBUG] MCTS iteration 0: reached a node with 0 visits.
2025-04-11 18:58:11,992 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:12,068 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:12,069 [DEBUG] Tree_policy iteration 1: Expanding move ((12, 9), (np.int64(12), np.int64(8)))
2025-04-11 18:58:12,076 [INFO] Final candidates: []
2025-04-11 18:58:12,076 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:12,083 [INFO] Final candidates: []
2025-04-11 18:58:12,083 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:12,084 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:12,244 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:12,244 [DEBUG] Tree_policy iteration 1: Expanding move ((12, 9), (np.int64(12), np.int64(7)))
2025-04-11 18:58:12,251 [INFO] Final candidates: []
2025-04-11 18:58:12,251 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:12,259 [INFO] Final candidates: []
2025-04-11 18:58:12,259 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:12,259 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:12,292 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:58:12,292 [DEBUG] Tree_policy iteration 1: Expanding move ((12, 9), (np.int64(12), np.int64(11)))
2025-04-11 18:58:12,299 [INFO] Final candidates: []
2025-04-11 18:58:12,299 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:12,307 [INFO] Final candidates: []
2025-04-11 18:58:12,307 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:12,307 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:12,453 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:12,454 [DEBUG] Tree_policy iteration 1: Expanding move ((12, 9), (np.int64(11), np.int64(8)))
2025-04-11 18:58:12,461 [INFO] Final candidates: []
2025-04-11 18:58:12,461 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:12,468 [INFO] Final candidates: []
2025-04-11 18:58:12,468 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:12,470 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:12,609 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:58:12,609 [DEBUG] Tree_policy iteration 1: Expanding move ((12, 9), (np.int64(13), np.int64(10)))
2025-04-11 18:58:12,620 [INFO] Final candidates: []
2025-04-11 18:58:12,620 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:12,629 [INFO] Final candidates: []
2025-04-11 18:58:12,629 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:12,630 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:12,752 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:12,752 [DEBUG] Tree_policy iteration 1: Expanding move ((12, 9), (np.int64(12), np.int64(10)))
2025-04-11 18:58:12,759 [INFO] Final candidates: []
2025-04-11 18:58:12,759 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:12,768 [INFO] Final candidates: []
2025-04-11 18:58:12,768 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:12,768 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:12,809 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:58:12,809 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:12,809 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(7)), (np.int64(11), np.int64(12)))
2025-04-11 18:58:12,818 [INFO] Final candidates: []
2025-04-11 18:58:12,818 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:12,825 [INFO] Final candidates: []
2025-04-11 18:58:12,825 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:12,825 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:12,858 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:12,858 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:12,858 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(14)), (np.int64(6), np.int64(11)))
2025-04-11 18:58:12,866 [INFO] Final candidates: []
2025-04-11 18:58:12,866 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:12,873 [INFO] Final candidates: []
2025-04-11 18:58:12,873 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:12,873 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:12,973 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:58:12,973 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:12,973 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(10)), (np.int64(12), np.int64(12)))
2025-04-11 18:58:12,981 [INFO] Final candidates: []
2025-04-11 18:58:12,981 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:12,988 [INFO] Final candidates: []
2025-04-11 18:58:12,988 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:12,988 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:13,085 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:13,085 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:13,085 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(11)), (np.int64(13), np.int64(18)))
2025-04-11 18:58:13,092 [INFO] Final candidates: []
2025-04-11 18:58:13,092 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:13,099 [INFO] Final candidates: []
2025-04-11 18:58:13,100 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:13,100 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:13,258 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:58:13,258 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:13,258 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(18)), (np.int64(8), np.int64(16)))
2025-04-11 18:58:13,265 [INFO] Final candidates: []
2025-04-11 18:58:13,265 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:13,273 [INFO] Final candidates: []
2025-04-11 18:58:13,273 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:13,273 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:13,446 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:13,446 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:13,446 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(11)), (np.int64(5), np.int64(8)))
2025-04-11 18:58:13,455 [INFO] Final candidates: []
2025-04-11 18:58:13,455 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:13,463 [INFO] Final candidates: []
2025-04-11 18:58:13,463 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:13,463 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:13,527 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:58:13,527 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:13,527 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(8)), (np.int64(15), np.int64(9)))
2025-04-11 18:58:13,535 [INFO] Final candidates: []
2025-04-11 18:58:13,535 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:13,542 [INFO] Final candidates: []
2025-04-11 18:58:13,542 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:13,542 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:13,651 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:58:13,651 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:13,651 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(15)), (np.int64(11), np.int64(17)))
2025-04-11 18:58:13,659 [INFO] Final candidates: []
2025-04-11 18:58:13,659 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:13,667 [INFO] Final candidates: []
2025-04-11 18:58:13,667 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:13,667 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:13,736 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:58:13,736 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:13,736 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(10)), (np.int64(6), np.int64(8)))
2025-04-11 18:58:13,744 [INFO] Final candidates: []
2025-04-11 18:58:13,744 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:13,752 [INFO] Final candidates: []
2025-04-11 18:58:13,752 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:13,752 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:14,012 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:14,013 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:14,013 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(13)), (np.int64(13), np.int64(6)))
2025-04-11 18:58:14,023 [INFO] Final candidates: []
2025-04-11 18:58:14,023 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:14,032 [INFO] Final candidates: []
2025-04-11 18:58:14,032 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:14,032 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:14,269 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:58:14,269 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:14,269 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(8)), (np.int64(10), np.int64(10)))
2025-04-11 18:58:14,276 [INFO] Final candidates: []
2025-04-11 18:58:14,276 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:14,283 [INFO] Final candidates: []
2025-04-11 18:58:14,283 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:14,284 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:14,576 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:14,576 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:14,576 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(16)), (np.int64(15), np.int64(9)))
2025-04-11 18:58:14,583 [INFO] Final candidates: []
2025-04-11 18:58:14,583 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:14,590 [INFO] Final candidates: []
2025-04-11 18:58:14,590 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:14,591 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:14,722 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:14,722 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:14,722 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(15)), (np.int64(5), np.int64(8)))
2025-04-11 18:58:14,729 [INFO] Final candidates: []
2025-04-11 18:58:14,729 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:14,736 [INFO] Final candidates: []
2025-04-11 18:58:14,736 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:14,737 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:15,101 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:58:15,101 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:15,101 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(17)), (np.int64(13), np.int64(11)))
2025-04-11 18:58:15,108 [INFO] Final candidates: []
2025-04-11 18:58:15,108 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:15,115 [INFO] Final candidates: []
2025-04-11 18:58:15,116 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:15,116 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:15,330 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:15,330 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:15,330 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(18)), (np.int64(8), np.int64(16)))
2025-04-11 18:58:15,340 [INFO] Final candidates: []
2025-04-11 18:58:15,340 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:15,347 [INFO] Final candidates: []
2025-04-11 18:58:15,347 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:15,348 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:15,476 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:58:15,476 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:15,476 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(16)), (np.int64(7), np.int64(15)))
2025-04-11 18:58:15,483 [INFO] Final candidates: []
2025-04-11 18:58:15,483 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:15,490 [INFO] Final candidates: []
2025-04-11 18:58:15,491 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:15,491 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:15,584 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:58:15,585 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:15,585 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(11)), (np.int64(15), np.int64(16)))
2025-04-11 18:58:15,592 [INFO] Final candidates: []
2025-04-11 18:58:15,592 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:15,599 [INFO] Final candidates: []
2025-04-11 18:58:15,599 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:15,600 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:15,682 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:58:15,683 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:15,683 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(8)), (np.int64(16), np.int64(9)))
2025-04-11 18:58:15,690 [INFO] Final candidates: []
2025-04-11 18:58:15,690 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:15,697 [INFO] Final candidates: []
2025-04-11 18:58:15,697 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:15,698 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:15,842 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:15,842 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:15,842 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(10)), (np.int64(14), np.int64(16)))
2025-04-11 18:58:15,850 [INFO] Final candidates: []
2025-04-11 18:58:15,850 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:15,857 [INFO] Final candidates: []
2025-04-11 18:58:15,857 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:15,857 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:15,975 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:15,976 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:15,976 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(11)), (np.int64(16), np.int64(9)))
2025-04-11 18:58:15,983 [INFO] Final candidates: []
2025-04-11 18:58:15,983 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:15,990 [INFO] Final candidates: []
2025-04-11 18:58:15,990 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:15,991 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:16,072 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:16,072 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:16,072 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(7)), (np.int64(12), np.int64(16)))
2025-04-11 18:58:16,080 [INFO] Final candidates: []
2025-04-11 18:58:16,080 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:16,087 [INFO] Final candidates: []
2025-04-11 18:58:16,087 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:16,087 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:16,168 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:16,168 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:16,168 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(16)), (np.int64(7), np.int64(11)))
2025-04-11 18:58:16,176 [INFO] Final candidates: []
2025-04-11 18:58:16,176 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:16,183 [INFO] Final candidates: []
2025-04-11 18:58:16,183 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:16,183 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:16,299 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:16,299 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:16,299 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(16)), (np.int64(8), np.int64(7)))
2025-04-11 18:58:16,304 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:16,304 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:16,304 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:16,304 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:16,304 [DEBUG] check_window_margin_custom: For L=6, window [0 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11)] triggers candidate.
2025-04-11 18:58:16,304 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 18:58:16,304 [DEBUG] board coords: [(8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)]
2025-04-11 18:58:16,304 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 18:58:16,304 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 11), (13, 12)]
2025-04-11 18:58:16,304 [DEBUG] check_window_intermediate_custom (only one inserted(12, 11)): For L=6, window [2 2 2 2 0 0] with coords [(8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:16,307 [INFO] Final candidates: [(12, 11), (7, 6)]
2025-04-11 18:58:16,307 [INFO] Phase win: Collected 1unique candidate(s):[((12, 11), (7, 6))]
2025-04-11 18:58:16,307 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 18:58:16,314 [INFO] Final candidates: []
2025-04-11 18:58:16,315 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:16,315 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:16,595 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:16,595 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:16,595 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(8)), (np.int64(11), np.int64(17)))
2025-04-11 18:58:16,603 [INFO] Final candidates: []
2025-04-11 18:58:16,603 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:16,610 [INFO] Final candidates: []
2025-04-11 18:58:16,610 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:16,611 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:16,719 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:16,719 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:16,719 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(9)), (np.int64(15), np.int64(8)))
2025-04-11 18:58:16,727 [INFO] Final candidates: []
2025-04-11 18:58:16,727 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:16,734 [INFO] Final candidates: []
2025-04-11 18:58:16,734 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:16,735 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:16,940 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:16,941 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:16,941 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(10)), (np.int64(7), np.int64(7)))
2025-04-11 18:58:16,948 [INFO] Final candidates: []
2025-04-11 18:58:16,948 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:16,955 [INFO] Final candidates: []
2025-04-11 18:58:16,955 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:16,956 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:17,146 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:58:17,146 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:17,146 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(14)), (np.int64(9), np.int64(6)))
2025-04-11 18:58:17,156 [INFO] Final candidates: []
2025-04-11 18:58:17,156 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:17,165 [INFO] Final candidates: []
2025-04-11 18:58:17,166 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:17,166 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:17,322 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:17,323 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:17,323 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(11)), (np.int64(13), np.int64(18)))
2025-04-11 18:58:17,330 [INFO] Final candidates: []
2025-04-11 18:58:17,330 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:17,337 [INFO] Final candidates: []
2025-04-11 18:58:17,337 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:17,338 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:17,344 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:58:17,344 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:17,344 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(17)), (np.int64(11), np.int64(7)))
2025-04-11 18:58:17,351 [INFO] Final candidates: []
2025-04-11 18:58:17,351 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:17,359 [INFO] Final candidates: []
2025-04-11 18:58:17,359 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:17,360 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:17,523 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:17,523 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:17,524 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(14)), (np.int64(5), np.int64(8)))
2025-04-11 18:58:17,531 [INFO] Final candidates: []
2025-04-11 18:58:17,531 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:17,538 [INFO] Final candidates: []
2025-04-11 18:58:17,538 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:17,539 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:17,662 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:17,663 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:17,663 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(16)), (np.int64(10), np.int64(10)))
2025-04-11 18:58:17,670 [INFO] Final candidates: []
2025-04-11 18:58:17,670 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:17,677 [INFO] Final candidates: []
2025-04-11 18:58:17,677 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:17,677 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:17,767 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:17,768 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:17,768 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(16)), (np.int64(7), np.int64(15)))
2025-04-11 18:58:17,775 [INFO] Final candidates: []
2025-04-11 18:58:17,775 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:17,782 [INFO] Final candidates: []
2025-04-11 18:58:17,782 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:17,783 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:17,923 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:58:17,923 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:17,923 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(8)), (np.int64(8), np.int64(16)))
2025-04-11 18:58:17,931 [INFO] Final candidates: []
2025-04-11 18:58:17,931 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:17,938 [INFO] Final candidates: []
2025-04-11 18:58:17,938 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:17,939 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:18,058 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:58:18,058 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:18,058 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(6)), (np.int64(10), np.int64(13)))
2025-04-11 18:58:18,066 [INFO] Final candidates: []
2025-04-11 18:58:18,066 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:18,072 [INFO] Final candidates: []
2025-04-11 18:58:18,072 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:18,073 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:18,182 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:18,183 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:18,183 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(17)), (np.int64(11), np.int64(12)))
2025-04-11 18:58:18,190 [INFO] Final candidates: []
2025-04-11 18:58:18,190 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:18,197 [INFO] Final candidates: []
2025-04-11 18:58:18,197 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:18,198 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:18,401 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:18,402 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:18,402 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(9)), (np.int64(14), np.int64(11)))
2025-04-11 18:58:18,410 [INFO] Final candidates: []
2025-04-11 18:58:18,410 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:18,417 [INFO] Final candidates: []
2025-04-11 18:58:18,417 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:18,421 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:18,559 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:58:18,559 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:18,559 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(10)), (np.int64(8), np.int64(7)))
2025-04-11 18:58:18,564 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:18,564 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:18,564 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:18,564 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:18,564 [DEBUG] check_window_margin_custom: For L=6, window [0 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11)] triggers candidate.
2025-04-11 18:58:18,564 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 18:58:18,564 [DEBUG] board coords: [(8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)]
2025-04-11 18:58:18,564 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 18:58:18,564 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 11), (13, 12)]
2025-04-11 18:58:18,564 [DEBUG] check_window_intermediate_custom (only one inserted(12, 11)): For L=6, window [2 2 2 2 0 0] with coords [(8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:18,568 [INFO] Final candidates: [(12, 11), (7, 6)]
2025-04-11 18:58:18,568 [INFO] Phase win: Collected 1unique candidate(s):[((12, 11), (7, 6))]
2025-04-11 18:58:18,568 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 18:58:18,577 [INFO] Final candidates: []
2025-04-11 18:58:18,577 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:18,578 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:18,774 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:58:18,775 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:18,775 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(14)), (np.int64(14), np.int64(11)))
2025-04-11 18:58:18,782 [INFO] Final candidates: []
2025-04-11 18:58:18,782 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:18,791 [INFO] Final candidates: []
2025-04-11 18:58:18,791 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:18,792 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:18,949 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:18,949 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:18,949 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(10)), (np.int64(9), np.int64(16)))
2025-04-11 18:58:18,956 [INFO] Final candidates: []
2025-04-11 18:58:18,956 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:18,964 [INFO] Final candidates: []
2025-04-11 18:58:18,964 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:18,964 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:19,190 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:19,190 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:19,190 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(8)), (np.int64(6), np.int64(11)))
2025-04-11 18:58:19,205 [INFO] Final candidates: []
2025-04-11 18:58:19,205 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:19,212 [INFO] Final candidates: []
2025-04-11 18:58:19,212 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:19,213 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:19,234 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:58:19,234 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:19,234 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(12)), (np.int64(15), np.int64(18)))
2025-04-11 18:58:19,243 [DEBUG] board coords: [(8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)]
2025-04-11 18:58:19,243 [DEBUG] board values[np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(2)]
2025-04-11 18:58:19,243 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 7), (12, 11)]
2025-04-11 18:58:19,244 [DEBUG] check_window_intermediate_custom: For L=6, window [0 2 2 2 0 2] with coords [(8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:19,244 [DEBUG] board coords: [(9, 8), (10, 9), (11, 10), (12, 11), (13, 12), (14, 13)]
2025-04-11 18:58:19,244 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(0)]
2025-04-11 18:58:19,244 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 11), (14, 13)]
2025-04-11 18:58:19,244 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 0 2 0] with coords [(9, 8), (10, 9), (11, 10), (12, 11), (13, 12), (14, 13)] triggers candidate.
2025-04-11 18:58:19,247 [INFO] Final candidates: [(8, 7), (14, 13), (12, 11)]
2025-04-11 18:58:19,247 [INFO] Phase win: Collected 3unique candidate(s):[((8, 7), (14, 13)), ((14, 13), (12, 11)), ((8, 7), (12, 11))]
2025-04-11 18:58:19,247 [INFO] Phase 1 (immediate win): 3 candidate(s) found.
2025-04-11 18:58:19,257 [INFO] Final candidates: []
2025-04-11 18:58:19,257 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:19,258 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:19,448 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:19,448 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:19,448 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(11)), (np.int64(8), np.int64(16)))
2025-04-11 18:58:19,456 [INFO] Final candidates: []
2025-04-11 18:58:19,456 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:19,463 [INFO] Final candidates: []
2025-04-11 18:58:19,463 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:19,463 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:19,761 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:19,761 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:19,762 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(17)), (np.int64(7), np.int64(15)))
2025-04-11 18:58:19,769 [INFO] Final candidates: []
2025-04-11 18:58:19,769 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:19,776 [INFO] Final candidates: []
2025-04-11 18:58:19,776 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:19,777 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:19,853 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:19,854 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:19,854 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(8)), (np.int64(15), np.int64(18)))
2025-04-11 18:58:19,861 [INFO] Final candidates: []
2025-04-11 18:58:19,861 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:19,868 [INFO] Final candidates: []
2025-04-11 18:58:19,868 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:19,869 [DEBUG] MCTS iteration 50: reached a node with 0 visits.
2025-04-11 18:58:19,869 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:19,977 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:58:19,977 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:19,977 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(10)), (np.int64(9), np.int64(16)))
2025-04-11 18:58:19,986 [INFO] Final candidates: []
2025-04-11 18:58:19,986 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:19,996 [INFO] Final candidates: []
2025-04-11 18:58:19,996 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:19,996 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:20,132 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:58:20,132 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:20,132 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(7)), (np.int64(8), np.int64(16)))
2025-04-11 18:58:20,142 [INFO] Final candidates: []
2025-04-11 18:58:20,142 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:20,149 [INFO] Final candidates: []
2025-04-11 18:58:20,149 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:20,149 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:20,167 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:58:20,167 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:20,167 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(17)), (np.int64(8), np.int64(8)))
2025-04-11 18:58:20,177 [INFO] Final candidates: []
2025-04-11 18:58:20,177 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:20,187 [INFO] Final candidates: []
2025-04-11 18:58:20,187 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:20,187 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:20,204 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:58:20,204 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:20,204 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(7)), (np.int64(12), np.int64(14)))
2025-04-11 18:58:20,211 [INFO] Final candidates: []
2025-04-11 18:58:20,211 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:20,218 [INFO] Final candidates: []
2025-04-11 18:58:20,218 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:20,219 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:20,353 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:20,353 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:20,354 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(17)), (np.int64(12), np.int64(8)))
2025-04-11 18:58:20,361 [INFO] Final candidates: []
2025-04-11 18:58:20,361 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:20,368 [INFO] Final candidates: []
2025-04-11 18:58:20,368 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:20,369 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:20,415 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:20,416 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:20,416 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(11)), (np.int64(8), np.int64(16)))
2025-04-11 18:58:20,423 [INFO] Final candidates: []
2025-04-11 18:58:20,423 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:20,430 [INFO] Final candidates: []
2025-04-11 18:58:20,430 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:20,430 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:20,504 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:20,505 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:20,505 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(11)), (np.int64(6), np.int64(7)))
2025-04-11 18:58:20,512 [INFO] Final candidates: []
2025-04-11 18:58:20,512 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:20,519 [INFO] Final candidates: []
2025-04-11 18:58:20,519 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:20,520 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:20,602 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:20,603 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:20,603 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(8)), (np.int64(10), np.int64(11)))
2025-04-11 18:58:20,610 [INFO] Final candidates: []
2025-04-11 18:58:20,610 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:20,617 [INFO] Final candidates: []
2025-04-11 18:58:20,617 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:20,617 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:20,744 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:20,744 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:20,744 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(6)), (np.int64(13), np.int64(15)))
2025-04-11 18:58:20,751 [INFO] Final candidates: []
2025-04-11 18:58:20,751 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:20,758 [INFO] Final candidates: []
2025-04-11 18:58:20,758 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:20,759 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:20,828 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:58:20,829 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:20,829 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(14)), (np.int64(14), np.int64(11)))
2025-04-11 18:58:20,836 [INFO] Final candidates: []
2025-04-11 18:58:20,836 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:20,843 [INFO] Final candidates: []
2025-04-11 18:58:20,843 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:20,844 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:20,903 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:58:20,903 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:20,903 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(17)), (np.int64(10), np.int64(10)))
2025-04-11 18:58:20,910 [INFO] Final candidates: []
2025-04-11 18:58:20,910 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:20,918 [INFO] Final candidates: []
2025-04-11 18:58:20,918 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:20,918 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:21,131 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:21,131 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:21,131 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(10)), (np.int64(6), np.int64(7)))
2025-04-11 18:58:21,138 [INFO] Final candidates: []
2025-04-11 18:58:21,138 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:21,145 [INFO] Final candidates: []
2025-04-11 18:58:21,145 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:21,146 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:21,305 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:21,305 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:21,305 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(8)), (np.int64(6), np.int64(7)))
2025-04-11 18:58:21,312 [INFO] Final candidates: []
2025-04-11 18:58:21,313 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:21,320 [INFO] Final candidates: []
2025-04-11 18:58:21,320 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:21,320 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:21,384 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:58:21,385 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:21,385 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(15)), (np.int64(7), np.int64(11)))
2025-04-11 18:58:21,393 [INFO] Final candidates: []
2025-04-11 18:58:21,393 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:21,400 [INFO] Final candidates: []
2025-04-11 18:58:21,400 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:21,401 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:21,476 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:21,476 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:21,476 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(10)), (np.int64(12), np.int64(17)))
2025-04-11 18:58:21,486 [INFO] Final candidates: []
2025-04-11 18:58:21,486 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:21,495 [INFO] Final candidates: []
2025-04-11 18:58:21,495 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:21,495 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:21,655 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:21,655 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:21,656 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(10)), (np.int64(8), np.int64(16)))
2025-04-11 18:58:21,663 [INFO] Final candidates: []
2025-04-11 18:58:21,663 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:21,670 [INFO] Final candidates: []
2025-04-11 18:58:21,670 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:21,671 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:21,928 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:58:21,928 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:21,928 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(11)), (np.int64(8), np.int64(10)))
2025-04-11 18:58:21,935 [INFO] Final candidates: []
2025-04-11 18:58:21,935 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:21,942 [INFO] Final candidates: []
2025-04-11 18:58:21,942 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:21,943 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:21,984 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:21,984 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:21,984 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(13)), (np.int64(7), np.int64(15)))
2025-04-11 18:58:21,992 [INFO] Final candidates: []
2025-04-11 18:58:21,992 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:21,999 [INFO] Final candidates: []
2025-04-11 18:58:21,999 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:21,999 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:22,243 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:58:22,243 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:22,244 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(11)), (np.int64(9), np.int64(6)))
2025-04-11 18:58:22,251 [INFO] Final candidates: []
2025-04-11 18:58:22,251 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:22,258 [INFO] Final candidates: []
2025-04-11 18:58:22,258 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:22,258 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:22,533 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:22,533 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:22,534 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(9)), (np.int64(9), np.int64(16)))
2025-04-11 18:58:22,541 [INFO] Final candidates: []
2025-04-11 18:58:22,541 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:22,548 [INFO] Final candidates: []
2025-04-11 18:58:22,548 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:22,549 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:22,661 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:58:22,661 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:22,662 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(8)), (np.int64(11), np.int64(15)))
2025-04-11 18:58:22,669 [INFO] Final candidates: []
2025-04-11 18:58:22,669 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:22,676 [INFO] Final candidates: []
2025-04-11 18:58:22,676 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:22,676 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:22,826 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:58:22,826 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:22,826 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(6)), (np.int64(8), np.int64(7)))
2025-04-11 18:58:22,831 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:22,831 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:22,831 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:22,831 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:22,831 [DEBUG] check_window_margin_custom: For L=6, window [0 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11)] triggers candidate.
2025-04-11 18:58:22,831 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 18:58:22,831 [DEBUG] board coords: [(8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)]
2025-04-11 18:58:22,831 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 18:58:22,832 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 11), (13, 12)]
2025-04-11 18:58:22,832 [DEBUG] check_window_intermediate_custom (only one inserted(12, 11)): For L=6, window [2 2 2 2 0 0] with coords [(8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:22,834 [INFO] Final candidates: [(12, 11), (7, 6)]
2025-04-11 18:58:22,834 [INFO] Phase win: Collected 1unique candidate(s):[((12, 11), (7, 6))]
2025-04-11 18:58:22,834 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 18:58:22,841 [INFO] Final candidates: []
2025-04-11 18:58:22,841 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:22,842 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:22,935 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:58:22,935 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:22,935 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(12)), (np.int64(7), np.int64(15)))
2025-04-11 18:58:22,943 [INFO] Final candidates: []
2025-04-11 18:58:22,943 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:22,950 [INFO] Final candidates: []
2025-04-11 18:58:22,950 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:22,950 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:23,181 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:23,181 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:23,182 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(18)), (np.int64(7), np.int64(11)))
2025-04-11 18:58:23,190 [INFO] Final candidates: []
2025-04-11 18:58:23,190 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:23,197 [INFO] Final candidates: []
2025-04-11 18:58:23,197 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:23,199 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:23,333 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:58:23,333 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:23,334 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(10)), (np.int64(10), np.int64(7)))
2025-04-11 18:58:23,341 [INFO] Final candidates: []
2025-04-11 18:58:23,341 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:23,348 [INFO] Final candidates: []
2025-04-11 18:58:23,348 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:23,348 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:23,597 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:23,597 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:23,598 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(14)), (np.int64(15), np.int64(18)))
2025-04-11 18:58:23,606 [INFO] Final candidates: []
2025-04-11 18:58:23,606 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:23,614 [INFO] Final candidates: []
2025-04-11 18:58:23,614 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:23,614 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:23,753 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:58:23,753 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:23,753 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(14)), (np.int64(8), np.int64(11)))
2025-04-11 18:58:23,761 [INFO] Final candidates: []
2025-04-11 18:58:23,761 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:23,773 [INFO] Final candidates: []
2025-04-11 18:58:23,773 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:23,774 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:23,912 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:58:23,913 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:23,913 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(7)), (np.int64(8), np.int64(16)))
2025-04-11 18:58:23,920 [INFO] Final candidates: []
2025-04-11 18:58:23,920 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:23,927 [INFO] Final candidates: []
2025-04-11 18:58:23,927 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:23,928 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:24,014 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:24,014 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:24,014 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(7)), (np.int64(9), np.int64(6)))
2025-04-11 18:58:24,022 [INFO] Final candidates: []
2025-04-11 18:58:24,022 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:24,028 [INFO] Final candidates: []
2025-04-11 18:58:24,028 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:24,029 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:24,132 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:58:24,132 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:24,132 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(8)), (np.int64(11), np.int64(12)))
2025-04-11 18:58:24,140 [INFO] Final candidates: []
2025-04-11 18:58:24,140 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:24,147 [INFO] Final candidates: []
2025-04-11 18:58:24,147 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:24,147 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:24,236 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:24,236 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:24,236 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(10)), (np.int64(11), np.int64(15)))
2025-04-11 18:58:24,252 [INFO] Final candidates: []
2025-04-11 18:58:24,253 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:24,261 [INFO] Final candidates: []
2025-04-11 18:58:24,261 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:24,261 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:24,356 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:24,356 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:24,356 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(8)), (np.int64(8), np.int64(10)))
2025-04-11 18:58:24,364 [INFO] Final candidates: []
2025-04-11 18:58:24,364 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:24,373 [INFO] Final candidates: []
2025-04-11 18:58:24,373 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:24,374 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:24,461 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:24,461 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:24,461 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(11)), (np.int64(15), np.int64(9)))
2025-04-11 18:58:24,472 [INFO] Final candidates: []
2025-04-11 18:58:24,472 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:24,488 [INFO] Final candidates: []
2025-04-11 18:58:24,488 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:24,489 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:24,565 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:58:24,565 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:24,565 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(17)), (np.int64(13), np.int64(15)))
2025-04-11 18:58:24,572 [INFO] Final candidates: []
2025-04-11 18:58:24,572 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:24,580 [INFO] Final candidates: []
2025-04-11 18:58:24,580 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:24,580 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:24,681 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:24,681 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:24,681 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(8)), (np.int64(13), np.int64(8)))
2025-04-11 18:58:24,688 [INFO] Final candidates: []
2025-04-11 18:58:24,688 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:24,702 [INFO] Final candidates: []
2025-04-11 18:58:24,703 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:24,703 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:24,808 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:58:24,809 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:24,809 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(11)), (np.int64(14), np.int64(8)))
2025-04-11 18:58:24,817 [INFO] Final candidates: []
2025-04-11 18:58:24,817 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:24,825 [INFO] Final candidates: []
2025-04-11 18:58:24,825 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:24,826 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:24,855 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:58:24,855 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:24,855 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(10)), (np.int64(8), np.int64(16)))
2025-04-11 18:58:24,862 [INFO] Final candidates: []
2025-04-11 18:58:24,862 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:24,869 [INFO] Final candidates: []
2025-04-11 18:58:24,870 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:24,870 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:24,971 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:24,971 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:24,971 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(7)), (np.int64(15), np.int64(18)))
2025-04-11 18:58:24,979 [INFO] Final candidates: []
2025-04-11 18:58:24,979 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:24,987 [INFO] Final candidates: []
2025-04-11 18:58:24,987 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:24,987 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:25,212 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:58:25,212 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:25,212 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(15)), (np.int64(11), np.int64(17)))
2025-04-11 18:58:25,219 [INFO] Final candidates: []
2025-04-11 18:58:25,219 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:25,226 [INFO] Final candidates: []
2025-04-11 18:58:25,226 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:25,227 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:25,394 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:25,395 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:25,395 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(11)), (np.int64(8), np.int64(14)))
2025-04-11 18:58:25,403 [INFO] Final candidates: []
2025-04-11 18:58:25,403 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:25,410 [INFO] Final candidates: []
2025-04-11 18:58:25,410 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:25,411 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:25,674 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:25,674 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:25,674 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(5)), (np.int64(10), np.int64(13)))
2025-04-11 18:58:25,681 [INFO] Final candidates: []
2025-04-11 18:58:25,681 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:25,688 [INFO] Final candidates: []
2025-04-11 18:58:25,688 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:25,689 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:25,841 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:25,842 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:25,842 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(15)), (np.int64(16), np.int64(9)))
2025-04-11 18:58:25,849 [INFO] Final candidates: []
2025-04-11 18:58:25,849 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:25,857 [INFO] Final candidates: []
2025-04-11 18:58:25,857 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:25,858 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:26,015 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:58:26,015 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:26,015 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(8)), (np.int64(6), np.int64(10)))
2025-04-11 18:58:26,022 [INFO] Final candidates: []
2025-04-11 18:58:26,022 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:26,030 [INFO] Final candidates: []
2025-04-11 18:58:26,030 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:26,030 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:26,188 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:58:26,188 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:26,188 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(12)), (np.int64(14), np.int64(15)))
2025-04-11 18:58:26,195 [INFO] Final candidates: []
2025-04-11 18:58:26,195 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:26,202 [INFO] Final candidates: []
2025-04-11 18:58:26,202 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:26,203 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:26,325 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:26,325 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:26,325 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(18)), (np.int64(8), np.int64(14)))
2025-04-11 18:58:26,333 [INFO] Final candidates: []
2025-04-11 18:58:26,333 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:26,342 [INFO] Final candidates: []
2025-04-11 18:58:26,342 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:26,342 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:26,446 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:58:26,447 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:26,447 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(11)), (np.int64(10), np.int64(8)))
2025-04-11 18:58:26,454 [INFO] Final candidates: []
2025-04-11 18:58:26,454 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:26,461 [INFO] Final candidates: []
2025-04-11 18:58:26,461 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:26,462 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:26,518 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:58:26,519 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:26,519 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(9)), (np.int64(15), np.int64(10)))
2025-04-11 18:58:26,526 [INFO] Final candidates: []
2025-04-11 18:58:26,526 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:26,533 [INFO] Final candidates: []
2025-04-11 18:58:26,533 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:26,534 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:26,650 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:58:26,651 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:26,651 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(11)), (np.int64(11), np.int64(13)))
2025-04-11 18:58:26,658 [INFO] Final candidates: []
2025-04-11 18:58:26,658 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:26,665 [INFO] Final candidates: []
2025-04-11 18:58:26,665 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:26,665 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:26,888 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:26,888 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:26,888 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(13)), (np.int64(10), np.int64(7)))
2025-04-11 18:58:26,897 [INFO] Final candidates: []
2025-04-11 18:58:26,897 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:26,905 [INFO] Final candidates: []
2025-04-11 18:58:26,905 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:26,906 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:27,033 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:58:27,033 [INFO] MCTS: Search finished. Best move selected with 17 visits.
2025-04-11 18:58:27,033 [INFO] Phase 2 (defense): MCTS selected move: ((12, 9), (np.int64(12), np.int64(8)))
2025-04-11 18:58:27,033 [INFO] Phase 2 (defense): MCTS selected move string : K13,J13
2025-04-11 18:58:27,033 [INFO] MCTS (defense candidates) selected move: K13,J13
2025-04-11 18:58:33,294 [INFO] Starting pre-MCTS candidate collection.
2025-04-11 18:58:33,301 [INFO] Final candidates: []
2025-04-11 18:58:33,301 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:33,305 [DEBUG] board coords: [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11)]
2025-04-11 18:58:33,305 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:33,305 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 6), (8, 7)]
2025-04-11 18:58:33,306 [DEBUG] check_window_intermediate_custom (only one inserted(8, 7)): For L=6, window [0 0 2 2 2 2] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11)] triggers candidate.
2025-04-11 18:58:33,306 [DEBUG] check_window_margin_custom: For L=6, window [0 2 2 2 2 0] with coords [(8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:33,306 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 18:58:33,306 [DEBUG] board coords: [(10, 9), (11, 10), (12, 11), (13, 12), (14, 13), (15, 14)]
2025-04-11 18:58:33,306 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(0)]
2025-04-11 18:58:33,306 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (15, 14)]
2025-04-11 18:58:33,306 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 0 2 0] with coords [(10, 9), (11, 10), (12, 11), (13, 12), (14, 13), (15, 14)] triggers candidate.
2025-04-11 18:58:33,309 [INFO] Final candidates: [(8, 7), (15, 14), (13, 12)]
2025-04-11 18:58:33,309 [INFO] Phase defense: Collected 3unique candidate(s):[((8, 7), (13, 12)), ((15, 14), (13, 12)), ((8, 7), (15, 14))]
2025-04-11 18:58:33,309 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:33,309 [INFO] MCTS: Starting search for 100 iterations.
2025-04-11 18:58:33,309 [DEBUG] Tree_policy iteration 1: Expanding move ((8, 7), (13, 12))
2025-04-11 18:58:33,313 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:33,313 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:33,313 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:33,313 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:33,314 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:33,314 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 18:58:33,314 [DEBUG] check_window_intermediate_custom: empty_cells=[(15, 14), (16, 15)]
2025-04-11 18:58:33,314 [DEBUG] check_window_intermediate_custom (only one inserted(15, 14)): For L=6, window [2 2 2 2 0 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:33,316 [INFO] Final candidates: [(7, 6), (15, 14)]
2025-04-11 18:58:33,316 [INFO] Phase win: Collected 1unique candidate(s):[((7, 6), (15, 14))]
2025-04-11 18:58:33,316 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 18:58:33,325 [INFO] Final candidates: []
2025-04-11 18:58:33,325 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:33,325 [DEBUG] MCTS iteration 0: reached a node with 0 visits.
2025-04-11 18:58:33,326 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:33,326 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:33,326 [DEBUG] Tree_policy iteration 1: Expanding move ((8, 7), (15, 14))
2025-04-11 18:58:33,330 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:33,330 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:33,330 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:33,330 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:33,331 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:33,331 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:33,331 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:33,331 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:33,331 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:33,333 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:33,333 [INFO] Phase win: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:33,333 [INFO] Phase 1 (immediate win): 3 candidate(s) found.
2025-04-11 18:58:33,342 [INFO] Final candidates: []
2025-04-11 18:58:33,342 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:33,342 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:33,408 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:58:33,408 [DEBUG] Tree_policy iteration 1: Expanding move ((15, 14), (13, 12))
2025-04-11 18:58:33,412 [DEBUG] board coords: [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11)]
2025-04-11 18:58:33,412 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:33,412 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 6), (8, 7)]
2025-04-11 18:58:33,413 [DEBUG] check_window_intermediate_custom (only one inserted(8, 7)): For L=6, window [0 0 2 2 2 2] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11)] triggers candidate.
2025-04-11 18:58:33,413 [DEBUG] board coords: [(12, 11), (13, 12), (14, 13), (15, 14), (16, 15), (17, 16)]
2025-04-11 18:58:33,413 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 18:58:33,413 [DEBUG] check_window_intermediate_custom: empty_cells=[(16, 15), (17, 16)]
2025-04-11 18:58:33,413 [DEBUG] check_window_intermediate_custom (only one inserted(16, 15)): For L=6, window [2 2 2 2 0 0] with coords [(12, 11), (13, 12), (14, 13), (15, 14), (16, 15), (17, 16)] triggers candidate.
2025-04-11 18:58:33,416 [INFO] Final candidates: [(8, 7), (16, 15)]
2025-04-11 18:58:33,416 [INFO] Phase win: Collected 1unique candidate(s):[((8, 7), (16, 15))]
2025-04-11 18:58:33,416 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 18:58:33,422 [INFO] Final candidates: []
2025-04-11 18:58:33,422 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:58:33,423 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:33,423 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:33,423 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:33,423 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(8)), (np.int64(12), np.int64(13)))
2025-04-11 18:58:33,430 [INFO] Final candidates: []
2025-04-11 18:58:33,430 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:33,434 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:33,434 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:33,434 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:33,434 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:33,435 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:33,435 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:33,435 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:33,435 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:33,435 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:33,437 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:33,437 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:33,437 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:33,437 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:33,442 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:33,443 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:33,443 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(9)), (np.int64(12), np.int64(10)))
2025-04-11 18:58:33,450 [INFO] Final candidates: []
2025-04-11 18:58:33,450 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:33,454 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:33,454 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:33,454 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:33,454 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:33,455 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:33,455 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:33,455 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:33,455 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:33,455 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:33,457 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:33,457 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:33,457 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:33,458 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:33,460 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:33,460 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:33,460 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(11)), (np.int64(16), np.int64(18)))
2025-04-11 18:58:33,467 [INFO] Final candidates: []
2025-04-11 18:58:33,467 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:33,471 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:33,471 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:33,471 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:33,471 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:33,471 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:33,471 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:33,472 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:33,472 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:33,472 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:33,474 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:33,474 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:33,474 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:33,474 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:33,560 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:33,561 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:33,561 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(16)), (np.int64(12), np.int64(7)))
2025-04-11 18:58:33,568 [INFO] Final candidates: []
2025-04-11 18:58:33,568 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:33,572 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:33,572 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:33,572 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:33,572 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:33,572 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:33,572 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:33,572 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:33,572 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:33,573 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:33,575 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:33,575 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:33,575 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:33,575 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:33,590 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:33,590 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:33,590 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(14)), (np.int64(13), np.int64(15)))
2025-04-11 18:58:33,597 [INFO] Final candidates: []
2025-04-11 18:58:33,597 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:33,601 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:33,601 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:33,601 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:33,601 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:33,601 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:33,601 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:33,602 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:33,602 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:33,602 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:33,604 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:33,604 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:33,604 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:33,604 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:33,718 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:33,718 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:33,718 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(14)), (np.int64(15), np.int64(17)))
2025-04-11 18:58:33,725 [INFO] Final candidates: []
2025-04-11 18:58:33,725 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:33,730 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:33,730 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:33,730 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:33,730 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:33,730 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:33,730 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:33,730 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:33,730 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:33,731 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:33,733 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:33,733 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:33,733 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:33,733 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:33,825 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:33,825 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:33,825 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(14)), (np.int64(13), np.int64(13)))
2025-04-11 18:58:33,832 [INFO] Final candidates: []
2025-04-11 18:58:33,832 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:33,836 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:33,836 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:33,836 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:33,836 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:33,836 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:33,837 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:33,837 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:33,837 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:33,837 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:33,839 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:33,839 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:33,839 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:33,839 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:33,880 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:33,880 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:33,880 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(12)), (np.int64(8), np.int64(15)))
2025-04-11 18:58:33,887 [INFO] Final candidates: []
2025-04-11 18:58:33,887 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:33,891 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:33,891 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:33,891 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:33,892 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:33,892 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:33,892 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:33,892 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:33,892 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:33,893 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:33,894 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:33,894 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:33,895 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:33,895 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:34,026 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:58:34,027 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:34,027 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(8)), (np.int64(15), np.int64(15)))
2025-04-11 18:58:34,034 [INFO] Final candidates: []
2025-04-11 18:58:34,034 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:34,038 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:34,038 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:34,038 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:34,038 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:34,038 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:34,038 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:34,038 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:34,038 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:34,039 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:34,041 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:34,041 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:34,041 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:34,041 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:34,144 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:34,144 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:34,144 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(18)), (np.int64(5), np.int64(8)))
2025-04-11 18:58:34,156 [INFO] Final candidates: []
2025-04-11 18:58:34,156 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:34,160 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:34,160 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:34,160 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:34,160 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:34,161 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:34,161 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:34,161 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:34,161 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:34,161 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:34,163 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:34,163 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:34,163 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:34,163 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:34,205 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:34,206 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:34,206 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(14)), (np.int64(15), np.int64(13)))
2025-04-11 18:58:34,213 [INFO] Final candidates: []
2025-04-11 18:58:34,213 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:34,217 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:34,217 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:34,217 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:34,217 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:34,217 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:34,217 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:34,218 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:34,218 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:34,218 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:34,220 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:34,220 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:34,220 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:34,220 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:34,318 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:34,318 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:34,318 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(15)), (np.int64(15), np.int64(17)))
2025-04-11 18:58:34,325 [INFO] Final candidates: []
2025-04-11 18:58:34,325 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:34,329 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:34,329 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:34,329 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:34,329 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:34,330 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:34,332 [INFO] Final candidates: [(7, 6), (13, 12)]
2025-04-11 18:58:34,332 [INFO] Phase defense: Collected 1unique candidate(s):[((7, 6), (13, 12))]
2025-04-11 18:58:34,332 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:58:34,332 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:34,373 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:34,373 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:34,373 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(14)), (np.int64(11), np.int64(8)))
2025-04-11 18:58:34,380 [INFO] Final candidates: []
2025-04-11 18:58:34,380 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:34,385 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:34,385 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:34,385 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:34,385 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:34,385 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:34,385 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:34,385 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:34,385 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:34,386 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:34,388 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:34,388 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:34,388 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:34,388 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:34,562 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:34,562 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:34,562 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(9)), (np.int64(9), np.int64(7)))
2025-04-11 18:58:34,569 [INFO] Final candidates: []
2025-04-11 18:58:34,569 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:34,573 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:34,573 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:34,574 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:34,574 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:34,574 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:34,574 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:34,574 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:34,574 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:34,575 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:34,577 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:34,577 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:34,577 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:34,577 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:34,688 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:34,688 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:34,689 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(16)), (np.int64(12), np.int64(14)))
2025-04-11 18:58:34,695 [INFO] Final candidates: []
2025-04-11 18:58:34,695 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:34,700 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:34,700 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:34,700 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:34,700 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:34,700 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:34,700 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:34,700 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:34,700 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:34,701 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:34,703 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:34,703 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:34,703 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:34,704 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:34,798 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:58:34,798 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:34,798 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(8)), (np.int64(7), np.int64(8)))
2025-04-11 18:58:34,805 [INFO] Final candidates: []
2025-04-11 18:58:34,805 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:34,809 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:34,809 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:34,809 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:34,809 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:34,810 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:34,810 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:34,810 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:34,810 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:34,810 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:34,812 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:34,812 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:34,812 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:34,812 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:34,813 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:34,813 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:34,813 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(7)), (np.int64(8), np.int64(15)))
2025-04-11 18:58:34,820 [INFO] Final candidates: []
2025-04-11 18:58:34,820 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:34,825 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:34,825 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:34,825 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:34,825 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:34,825 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:34,825 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:34,825 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:34,825 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:34,826 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:34,828 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:34,828 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:34,828 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:34,828 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:35,082 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:58:35,082 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:35,082 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(11)), (np.int64(9), np.int64(11)))
2025-04-11 18:58:35,089 [INFO] Final candidates: []
2025-04-11 18:58:35,089 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:35,093 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:35,093 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:35,093 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:35,093 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:35,094 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:35,094 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:35,094 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:35,094 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:35,095 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:35,096 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:35,096 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:35,096 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:35,097 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:35,258 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:35,258 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:35,258 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(8)), (np.int64(13), np.int64(16)))
2025-04-11 18:58:35,265 [INFO] Final candidates: []
2025-04-11 18:58:35,265 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:35,270 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:35,270 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:35,270 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:35,270 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:35,270 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:35,270 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:35,270 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:35,270 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:35,271 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:35,273 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:35,273 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:35,273 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:35,273 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:35,296 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:35,297 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:35,297 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(13)), (np.int64(12), np.int64(7)))
2025-04-11 18:58:35,304 [INFO] Final candidates: []
2025-04-11 18:58:35,304 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:35,308 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:35,308 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:35,308 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:35,308 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:35,309 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:35,309 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:35,309 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:35,309 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:35,309 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:35,311 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:35,311 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:35,311 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:35,311 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:35,434 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:58:35,434 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:35,434 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(8)), (np.int64(12), np.int64(7)))
2025-04-11 18:58:35,441 [INFO] Final candidates: []
2025-04-11 18:58:35,441 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:35,446 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:35,446 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:35,446 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:35,446 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:35,446 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:35,446 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:35,446 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:35,446 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:35,447 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:35,449 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:35,449 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:35,449 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:35,449 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:35,451 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:35,451 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:35,451 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(6)), (np.int64(11), np.int64(12)))
2025-04-11 18:58:35,458 [INFO] Final candidates: []
2025-04-11 18:58:35,458 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:35,462 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:35,462 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:35,462 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:35,463 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:35,463 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:35,463 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:35,463 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:35,463 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:35,464 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:35,466 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:35,466 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:35,466 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:35,466 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:35,568 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:35,568 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:35,568 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(12)), (np.int64(9), np.int64(11)))
2025-04-11 18:58:35,575 [INFO] Final candidates: []
2025-04-11 18:58:35,575 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:35,580 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:35,580 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:35,580 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:35,580 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:35,583 [INFO] Final candidates: [(7, 6)]
2025-04-11 18:58:35,583 [INFO] Phase defense: Found only one candidate: (7, 6)
2025-04-11 18:58:35,583 [INFO] Phase defense: Collected 11unique candidate(s):[((7, 6), (np.int64(6), np.int64(5))), ((7, 6), (np.int64(9), np.int64(6))), ((7, 6), (np.int64(7), np.int64(8))), ((7, 6), (np.int64(8), np.int64(5))), ((7, 6), (np.int64(6), np.int64(6))), ((7, 6), (np.int64(7), np.int64(5))), ((7, 6), (np.int64(7), np.int64(7))), ((7, 6), (np.int64(7), np.int64(4))), ((7, 6), (np.int64(5), np.int64(6))), ((7, 6), (np.int64(6), np.int64(7))), ((7, 6), (np.int64(8), np.int64(6)))]
2025-04-11 18:58:35,583 [INFO] Phase 2 (defense): 11 candidate(s) found.
2025-04-11 18:58:35,583 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:35,598 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:35,598 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:35,598 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(13)), (np.int64(13), np.int64(11)))
2025-04-11 18:58:35,605 [INFO] Final candidates: []
2025-04-11 18:58:35,605 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:35,610 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:35,610 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:35,610 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:35,610 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:35,610 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:35,610 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:35,610 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:35,610 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:35,611 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:35,613 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:35,613 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:35,613 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:35,613 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:35,675 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:35,676 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:35,676 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(16)), (np.int64(9), np.int64(16)))
2025-04-11 18:58:35,686 [INFO] Final candidates: []
2025-04-11 18:58:35,686 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:35,691 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:35,691 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:35,691 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:35,691 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:35,692 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:35,692 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:35,692 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:35,692 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:35,692 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:35,694 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:35,694 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:35,695 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:35,697 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:35,698 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:35,698 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:35,698 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(18)), (np.int64(6), np.int64(7)))
2025-04-11 18:58:35,705 [INFO] Final candidates: []
2025-04-11 18:58:35,705 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:35,709 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:35,709 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:35,709 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:35,709 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:35,709 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:35,709 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:35,709 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:35,710 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:35,710 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:35,712 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:35,712 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:35,712 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:35,712 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:35,817 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:58:35,818 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:35,818 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(13)), (np.int64(7), np.int64(11)))
2025-04-11 18:58:35,825 [INFO] Final candidates: []
2025-04-11 18:58:35,825 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:35,829 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:35,829 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:35,829 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:35,829 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:35,830 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:35,830 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:35,830 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:35,830 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:35,830 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:35,832 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:35,832 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:35,832 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:35,832 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:35,890 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:35,890 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:35,891 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(15)), (np.int64(10), np.int64(11)))
2025-04-11 18:58:35,898 [INFO] Final candidates: []
2025-04-11 18:58:35,898 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:35,902 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:35,902 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:35,902 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:35,902 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:35,902 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:35,902 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:35,902 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:35,902 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:35,903 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:35,905 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:35,905 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:35,905 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:35,905 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:36,008 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:58:36,008 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:36,008 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(12)), (np.int64(10), np.int64(7)))
2025-04-11 18:58:36,015 [INFO] Final candidates: []
2025-04-11 18:58:36,015 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:36,020 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:36,020 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:36,020 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:36,020 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:36,020 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:36,020 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:36,020 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:36,020 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:36,021 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:36,023 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:36,023 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:36,023 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:36,023 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:36,034 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:36,034 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:36,034 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(17)), (np.int64(5), np.int64(8)))
2025-04-11 18:58:36,041 [INFO] Final candidates: []
2025-04-11 18:58:36,041 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:36,045 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:36,045 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:36,045 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:36,045 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:36,046 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:36,046 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:36,046 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:36,046 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:36,046 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:36,048 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:36,048 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:36,048 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:36,048 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:36,121 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:58:36,121 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:36,121 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(17)), (np.int64(5), np.int64(8)))
2025-04-11 18:58:36,128 [INFO] Final candidates: []
2025-04-11 18:58:36,128 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:36,132 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:36,132 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:36,132 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:36,132 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:36,133 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:36,133 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:36,133 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:36,133 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:36,134 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:36,135 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:36,136 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:36,136 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:36,136 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:36,145 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:36,145 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:36,145 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(16)), (np.int64(6), np.int64(8)))
2025-04-11 18:58:36,152 [INFO] Final candidates: []
2025-04-11 18:58:36,152 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:36,156 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:36,156 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:36,156 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:36,156 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:36,157 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:36,157 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:36,157 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:36,157 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:36,157 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:36,159 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:36,159 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:36,159 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:36,159 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:36,320 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:36,320 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:36,321 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(17)), (np.int64(13), np.int64(12)))
2025-04-11 18:58:36,338 [INFO] Final candidates: []
2025-04-11 18:58:36,338 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:36,349 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:36,349 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:36,349 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:36,349 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:36,353 [INFO] Final candidates: [(7, 6)]
2025-04-11 18:58:36,353 [INFO] Phase defense: Found only one candidate: (7, 6)
2025-04-11 18:58:36,353 [INFO] Phase defense: Collected 11unique candidate(s):[((7, 6), (np.int64(6), np.int64(5))), ((7, 6), (np.int64(9), np.int64(6))), ((7, 6), (np.int64(7), np.int64(8))), ((7, 6), (np.int64(8), np.int64(5))), ((7, 6), (np.int64(6), np.int64(6))), ((7, 6), (np.int64(7), np.int64(5))), ((7, 6), (np.int64(7), np.int64(7))), ((7, 6), (np.int64(7), np.int64(4))), ((7, 6), (np.int64(5), np.int64(6))), ((7, 6), (np.int64(6), np.int64(7))), ((7, 6), (np.int64(8), np.int64(6)))]
2025-04-11 18:58:36,353 [INFO] Phase 2 (defense): 11 candidate(s) found.
2025-04-11 18:58:36,354 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:36,596 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:36,597 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:36,597 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(12)), (np.int64(16), np.int64(18)))
2025-04-11 18:58:36,607 [INFO] Final candidates: []
2025-04-11 18:58:36,607 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:36,611 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:36,611 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:36,611 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:36,611 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:36,612 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:36,612 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:36,612 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:36,612 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:36,612 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:36,614 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:36,614 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:36,614 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:36,614 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:36,642 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:58:36,642 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:36,642 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(14)), (np.int64(7), np.int64(10)))
2025-04-11 18:58:36,649 [INFO] Final candidates: []
2025-04-11 18:58:36,650 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:36,654 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:36,654 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:36,654 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:36,654 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:36,654 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:36,654 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:36,654 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:36,654 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:36,655 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:36,657 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:36,657 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:36,657 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:36,657 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:36,725 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:58:36,725 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:36,725 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(15)), (np.int64(16), np.int64(9)))
2025-04-11 18:58:36,732 [INFO] Final candidates: []
2025-04-11 18:58:36,732 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:36,736 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:36,737 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:36,737 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:36,737 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:36,737 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:36,737 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:36,737 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:36,737 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:36,738 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:36,740 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:36,740 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:36,740 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:36,740 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:36,829 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:36,830 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:36,830 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(10)), (np.int64(15), np.int64(13)))
2025-04-11 18:58:36,837 [INFO] Final candidates: []
2025-04-11 18:58:36,837 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:36,841 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:36,841 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:36,841 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:36,841 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:36,842 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:36,842 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:36,842 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:36,842 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:36,842 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:36,844 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:36,844 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:36,844 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:36,844 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:36,953 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:58:36,953 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:36,953 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(11)), (np.int64(11), np.int64(17)))
2025-04-11 18:58:36,964 [INFO] Final candidates: []
2025-04-11 18:58:36,964 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:36,968 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:36,968 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:36,968 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:36,968 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:36,969 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:36,969 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:36,969 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:36,969 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:36,969 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:36,971 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:36,971 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:36,971 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:36,971 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:37,100 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:37,100 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:37,100 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(10)), (np.int64(8), np.int64(14)))
2025-04-11 18:58:37,108 [INFO] Final candidates: []
2025-04-11 18:58:37,108 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:37,112 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:37,112 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:37,112 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:37,112 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:37,112 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:37,112 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:37,112 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:37,112 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:37,113 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:37,115 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:37,115 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:37,115 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:37,115 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:37,248 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:37,248 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:37,248 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(18)), (np.int64(6), np.int64(10)))
2025-04-11 18:58:37,257 [INFO] Final candidates: []
2025-04-11 18:58:37,257 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:37,262 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:37,262 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:37,262 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:37,262 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:37,262 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:37,262 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:37,262 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:37,262 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:37,263 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:37,265 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:37,265 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:37,265 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:37,265 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:37,603 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:37,603 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:37,603 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(12)), (np.int64(9), np.int64(6)))
2025-04-11 18:58:37,610 [INFO] Final candidates: []
2025-04-11 18:58:37,610 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:37,614 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:37,614 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:37,614 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:37,614 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:37,615 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:37,615 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:37,615 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:37,615 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:37,615 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:37,617 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:37,617 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:37,617 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:37,617 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:37,681 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:37,681 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:37,681 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(7)), (np.int64(8), np.int64(5)))
2025-04-11 18:58:37,688 [INFO] Final candidates: []
2025-04-11 18:58:37,688 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:37,692 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:37,692 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:37,692 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:37,692 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:37,693 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:37,693 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:37,693 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:37,693 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:37,694 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:37,695 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:37,695 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:37,695 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:37,695 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:37,753 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:58:37,753 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:37,753 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(10)), (np.int64(16), np.int64(14)))
2025-04-11 18:58:37,760 [INFO] Final candidates: []
2025-04-11 18:58:37,760 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:37,764 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:37,764 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:37,764 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:37,765 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:37,765 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:37,765 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:37,765 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:37,765 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:37,766 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:37,768 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:37,768 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:37,768 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:37,768 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:37,950 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:37,950 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:37,950 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(13)), (np.int64(13), np.int64(13)))
2025-04-11 18:58:37,957 [INFO] Final candidates: []
2025-04-11 18:58:37,957 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:37,962 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:37,962 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:37,962 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:37,962 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:37,962 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:37,962 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:37,962 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:37,962 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:37,963 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:37,965 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:37,965 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:37,965 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:37,965 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:37,974 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:37,974 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:37,974 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(10)), (np.int64(10), np.int64(7)))
2025-04-11 18:58:37,981 [INFO] Final candidates: []
2025-04-11 18:58:37,981 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:37,985 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:37,985 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:37,985 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:37,986 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:37,986 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:37,986 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:37,986 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:37,986 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:37,987 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:37,988 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:37,988 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:37,988 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:37,989 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:38,252 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:38,252 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:38,252 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(16)), (np.int64(12), np.int64(16)))
2025-04-11 18:58:38,257 [DEBUG] board coords: [(9, 13), (10, 14), (11, 15), (12, 16), (13, 17), (14, 18)]
2025-04-11 18:58:38,257 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 18:58:38,257 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (11, 15)]
2025-04-11 18:58:38,257 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 0 1 1 1] with coords [(9, 13), (10, 14), (11, 15), (12, 16), (13, 17), (14, 18)] triggers candidate.
2025-04-11 18:58:38,259 [INFO] Final candidates: [(11, 15), (9, 13)]
2025-04-11 18:58:38,259 [INFO] Phase win: Collected 1unique candidate(s):[((11, 15), (9, 13))]
2025-04-11 18:58:38,259 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 18:58:38,265 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:38,265 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:38,265 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:38,265 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:38,265 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:38,265 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:38,265 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:38,265 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:38,266 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:38,268 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:38,268 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:38,268 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:38,268 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:38,522 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:38,522 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:38,522 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(16)), (np.int64(10), np.int64(12)))
2025-04-11 18:58:38,529 [INFO] Final candidates: []
2025-04-11 18:58:38,529 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:38,533 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:38,533 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:38,533 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:38,533 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:38,534 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:38,534 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:38,534 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:38,534 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:38,535 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:38,536 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:38,536 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:38,536 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:38,537 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:38,537 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:38,537 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:38,537 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(15)), (np.int64(15), np.int64(8)))
2025-04-11 18:58:38,544 [INFO] Final candidates: []
2025-04-11 18:58:38,544 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:38,548 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:38,549 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:38,549 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:38,549 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:38,550 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:38,552 [INFO] Final candidates: [(7, 6), (13, 12)]
2025-04-11 18:58:38,552 [INFO] Phase defense: Collected 1unique candidate(s):[((7, 6), (13, 12))]
2025-04-11 18:58:38,552 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:58:38,552 [DEBUG] MCTS iteration 50: reached a node with 0 visits.
2025-04-11 18:58:38,552 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:38,555 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:38,556 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:38,556 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(11)), (np.int64(15), np.int64(13)))
2025-04-11 18:58:38,563 [INFO] Final candidates: []
2025-04-11 18:58:38,563 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:38,567 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:38,567 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:38,567 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:38,567 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:38,567 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:38,567 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:38,567 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:38,567 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:38,568 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:38,570 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:38,570 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:38,570 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:38,570 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:38,619 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:38,620 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:38,620 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(7)), (np.int64(16), np.int64(9)))
2025-04-11 18:58:38,627 [INFO] Final candidates: []
2025-04-11 18:58:38,627 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:38,631 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:38,631 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:38,631 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:38,631 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:38,631 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:38,631 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:38,631 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:38,632 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:38,632 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:38,634 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:38,634 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:38,634 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:38,634 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:38,712 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:38,712 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:38,712 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(14)), (np.int64(6), np.int64(7)))
2025-04-11 18:58:38,719 [INFO] Final candidates: []
2025-04-11 18:58:38,719 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:38,729 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:38,729 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:38,730 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:38,730 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:38,731 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:38,731 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:38,731 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:38,731 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:38,732 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:38,737 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:38,737 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:38,737 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:38,737 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:38,739 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:38,740 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:38,740 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(12)), (np.int64(15), np.int64(12)))
2025-04-11 18:58:38,757 [INFO] Final candidates: []
2025-04-11 18:58:38,757 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:38,763 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:38,763 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:38,763 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:38,763 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:38,766 [INFO] Final candidates: [(7, 6)]
2025-04-11 18:58:38,766 [INFO] Phase defense: Found only one candidate: (7, 6)
2025-04-11 18:58:38,766 [INFO] Phase defense: Collected 11unique candidate(s):[((7, 6), (np.int64(6), np.int64(5))), ((7, 6), (np.int64(9), np.int64(6))), ((7, 6), (np.int64(7), np.int64(8))), ((7, 6), (np.int64(8), np.int64(5))), ((7, 6), (np.int64(6), np.int64(6))), ((7, 6), (np.int64(7), np.int64(5))), ((7, 6), (np.int64(7), np.int64(7))), ((7, 6), (np.int64(7), np.int64(4))), ((7, 6), (np.int64(5), np.int64(6))), ((7, 6), (np.int64(6), np.int64(7))), ((7, 6), (np.int64(8), np.int64(6)))]
2025-04-11 18:58:38,766 [INFO] Phase 2 (defense): 11 candidate(s) found.
2025-04-11 18:58:38,766 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:38,931 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:38,931 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:38,931 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(16)), (np.int64(8), np.int64(6)))
2025-04-11 18:58:38,938 [INFO] Final candidates: []
2025-04-11 18:58:38,938 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:38,943 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:38,943 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:38,943 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:38,943 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:38,943 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:38,943 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:38,943 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:38,943 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:38,944 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:38,946 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:38,946 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:38,946 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:38,946 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:39,011 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:39,011 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:39,011 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(8)), (np.int64(15), np.int64(12)))
2025-04-11 18:58:39,018 [INFO] Final candidates: []
2025-04-11 18:58:39,018 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:39,022 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:39,022 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:39,022 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:39,022 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:39,023 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:39,023 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:39,023 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:39,023 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:39,023 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:39,025 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:39,025 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:39,025 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:39,026 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:39,096 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:39,096 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:39,096 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(10)), (np.int64(16), np.int64(15)))
2025-04-11 18:58:39,103 [INFO] Final candidates: []
2025-04-11 18:58:39,103 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:39,107 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:39,107 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:39,107 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:39,107 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:39,108 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:39,110 [INFO] Final candidates: [(7, 6), (13, 12)]
2025-04-11 18:58:39,110 [INFO] Phase defense: Collected 1unique candidate(s):[((7, 6), (13, 12))]
2025-04-11 18:58:39,110 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:58:39,110 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:39,114 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:39,115 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:39,115 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(15)), (np.int64(14), np.int64(12)))
2025-04-11 18:58:39,121 [INFO] Final candidates: []
2025-04-11 18:58:39,121 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:39,126 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:39,126 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:39,126 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:39,126 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:39,127 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:39,129 [INFO] Final candidates: [(7, 6), (13, 12)]
2025-04-11 18:58:39,129 [INFO] Phase defense: Collected 1unique candidate(s):[((7, 6), (13, 12))]
2025-04-11 18:58:39,129 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:58:39,129 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:39,352 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:39,353 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:39,353 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(12)), (np.int64(9), np.int64(13)))
2025-04-11 18:58:39,360 [DEBUG] board coords: [(9, 13), (10, 14), (11, 15), (12, 16), (13, 17), (14, 18)]
2025-04-11 18:58:39,360 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(0), np.int64(0), np.int64(1), np.int64(1)]
2025-04-11 18:58:39,360 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 15), (12, 16)]
2025-04-11 18:58:39,361 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 0 0 1 1] with coords [(9, 13), (10, 14), (11, 15), (12, 16), (13, 17), (14, 18)] triggers candidate.
2025-04-11 18:58:39,363 [INFO] Final candidates: [(12, 16), (11, 15)]
2025-04-11 18:58:39,363 [INFO] Phase win: Collected 1unique candidate(s):[((12, 16), (11, 15))]
2025-04-11 18:58:39,363 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 18:58:39,368 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:39,368 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:39,368 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:39,368 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:39,368 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:39,368 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:39,368 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:39,368 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:39,369 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:39,371 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:39,371 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:39,371 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:39,371 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:39,401 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:39,401 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:39,402 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(16)), (np.int64(5), np.int64(8)))
2025-04-11 18:58:39,410 [INFO] Final candidates: []
2025-04-11 18:58:39,410 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:39,414 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:39,414 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:39,414 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:39,414 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:39,415 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:39,415 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:39,415 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:39,415 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:39,415 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:39,417 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:39,417 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:39,417 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:39,417 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:39,423 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:39,423 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:39,423 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(8)), (np.int64(13), np.int64(13)))
2025-04-11 18:58:39,430 [INFO] Final candidates: []
2025-04-11 18:58:39,430 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:39,434 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:39,434 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:39,434 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:39,434 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:39,434 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:39,434 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:39,434 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:39,434 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:39,435 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:39,437 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:39,437 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:39,437 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:39,437 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:39,442 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:39,442 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:39,442 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(14)), (np.int64(16), np.int64(14)))
2025-04-11 18:58:39,449 [INFO] Final candidates: []
2025-04-11 18:58:39,449 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:39,454 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:39,454 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:39,454 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:39,454 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:39,454 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:39,454 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:39,454 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:39,454 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:39,455 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:39,457 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:39,457 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:39,457 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:39,457 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:39,548 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:39,548 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:39,548 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(13)), (np.int64(12), np.int64(10)))
2025-04-11 18:58:39,555 [INFO] Final candidates: []
2025-04-11 18:58:39,555 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:39,559 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:39,559 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:39,559 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:39,560 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:39,560 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:39,560 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:39,560 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:39,560 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:39,561 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:39,563 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:39,563 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:39,563 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:39,563 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:39,600 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:39,600 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:39,600 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(16)), (np.int64(16), np.int64(9)))
2025-04-11 18:58:39,607 [INFO] Final candidates: []
2025-04-11 18:58:39,607 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:39,611 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:39,612 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:39,612 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:39,612 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:39,612 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:39,612 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:39,612 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:39,612 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:39,613 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:39,615 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:39,615 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:39,615 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:39,615 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:39,623 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:39,623 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:39,623 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(6)), (np.int64(15), np.int64(8)))
2025-04-11 18:58:39,630 [INFO] Final candidates: []
2025-04-11 18:58:39,630 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:39,634 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:39,634 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:39,634 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:39,634 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:39,635 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:39,635 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:39,635 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:39,635 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:39,635 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:39,637 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:39,637 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:39,637 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:39,637 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:39,694 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:39,695 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:39,695 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(10)), (np.int64(15), np.int64(9)))
2025-04-11 18:58:39,702 [INFO] Final candidates: []
2025-04-11 18:58:39,702 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:39,706 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:39,706 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:39,706 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:39,706 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:39,707 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:39,707 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:39,707 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:39,707 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:39,708 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:39,710 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:39,710 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:39,710 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:39,710 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:39,793 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:39,794 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:39,794 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(7)), (np.int64(13), np.int64(18)))
2025-04-11 18:58:39,801 [INFO] Final candidates: []
2025-04-11 18:58:39,801 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:39,806 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:39,806 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:39,806 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:39,806 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:39,806 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:39,806 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:39,806 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:39,806 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:39,807 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:39,810 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:39,810 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:39,810 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:39,810 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:39,871 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:39,871 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:39,871 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(14)), (np.int64(14), np.int64(12)))
2025-04-11 18:58:39,878 [INFO] Final candidates: []
2025-04-11 18:58:39,878 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:39,885 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:39,885 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:39,885 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:39,885 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:39,886 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:39,886 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:39,886 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:39,886 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:39,887 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:39,892 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:39,892 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:39,892 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:39,892 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:39,938 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:58:39,939 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:39,939 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(4), np.int64(9)), (np.int64(5), np.int64(8)))
2025-04-11 18:58:39,946 [INFO] Final candidates: []
2025-04-11 18:58:39,946 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:39,950 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:39,950 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:39,950 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:39,950 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:39,951 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:39,951 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:39,951 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:39,951 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:39,951 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:39,953 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:39,953 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:39,953 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:39,953 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:40,145 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:40,146 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:40,146 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(17), np.int64(14)), (np.int64(6), np.int64(10)))
2025-04-11 18:58:40,155 [INFO] Final candidates: []
2025-04-11 18:58:40,155 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:40,159 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:40,159 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:40,159 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:40,159 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:40,160 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:40,160 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:40,160 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:40,160 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:40,160 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:40,162 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:40,163 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:40,163 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:40,163 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:40,170 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:40,171 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:40,171 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(10)), (np.int64(13), np.int64(11)))
2025-04-11 18:58:40,177 [INFO] Final candidates: []
2025-04-11 18:58:40,177 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:40,182 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:40,182 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:40,182 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:40,182 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:40,182 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:40,182 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:40,182 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:40,182 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:40,183 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:40,185 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:40,185 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:40,185 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:40,185 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:40,403 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:40,403 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:40,403 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(10)), (np.int64(11), np.int64(8)))
2025-04-11 18:58:40,410 [INFO] Final candidates: []
2025-04-11 18:58:40,410 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:40,415 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:40,415 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:40,415 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:40,415 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:40,415 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:40,415 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:40,415 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:40,415 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:40,416 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:40,418 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:40,418 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:40,418 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:40,418 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:40,459 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:40,459 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:40,460 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(9)), (np.int64(8), np.int64(14)))
2025-04-11 18:58:40,466 [INFO] Final candidates: []
2025-04-11 18:58:40,466 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:40,471 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:40,471 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:40,471 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:40,471 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:40,471 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:40,471 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:40,471 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:40,471 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:40,472 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:40,474 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:40,474 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:40,474 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:40,474 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:40,525 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:58:40,525 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:40,525 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(14)), (np.int64(9), np.int64(6)))
2025-04-11 18:58:40,532 [INFO] Final candidates: []
2025-04-11 18:58:40,532 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:40,536 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:40,537 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:40,537 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:40,537 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:40,537 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:40,537 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:40,537 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:40,537 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:40,538 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:40,540 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:40,540 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:40,540 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:40,540 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:40,692 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:40,692 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:40,692 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(17), np.int64(14)), (np.int64(11), np.int64(8)))
2025-04-11 18:58:40,699 [INFO] Final candidates: []
2025-04-11 18:58:40,699 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:40,709 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:40,709 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:40,709 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:40,709 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:40,710 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:40,710 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:40,710 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:40,710 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:40,711 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:40,717 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:40,717 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:40,717 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:40,717 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:40,725 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:40,725 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:40,725 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(11)), (np.int64(16), np.int64(18)))
2025-04-11 18:58:40,736 [INFO] Final candidates: []
2025-04-11 18:58:40,736 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:40,741 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:40,741 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:40,741 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:40,741 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:40,741 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:40,741 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:40,741 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:40,741 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:40,742 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:40,744 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:40,744 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:40,744 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:40,744 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:40,835 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:40,835 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:40,835 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(10)), (np.int64(10), np.int64(16)))
2025-04-11 18:58:40,842 [INFO] Final candidates: []
2025-04-11 18:58:40,842 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:40,847 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:40,847 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:40,847 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:40,847 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:40,847 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:40,847 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:40,847 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:40,847 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:40,848 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:40,850 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:40,850 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:40,850 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:40,850 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:40,855 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:40,855 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:40,855 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(15)), (np.int64(9), np.int64(6)))
2025-04-11 18:58:40,862 [INFO] Final candidates: []
2025-04-11 18:58:40,863 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:40,867 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:40,867 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:40,867 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:40,867 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:40,867 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:40,867 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:40,867 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:40,867 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:40,868 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:40,870 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:40,870 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:40,870 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:40,870 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:40,942 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:40,942 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:40,942 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(11)), (np.int64(6), np.int64(10)))
2025-04-11 18:58:40,949 [INFO] Final candidates: []
2025-04-11 18:58:40,949 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:40,954 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:40,954 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:40,954 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:40,954 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:40,956 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:40,956 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:40,956 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:40,956 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:40,957 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:40,959 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:40,959 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:40,959 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:40,959 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:40,988 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:40,988 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:40,988 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(14)), (np.int64(12), np.int64(7)))
2025-04-11 18:58:40,995 [INFO] Final candidates: []
2025-04-11 18:58:40,995 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:41,000 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:41,000 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:41,000 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:41,000 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:41,000 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:41,000 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:41,000 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:41,000 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:41,001 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:41,003 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:41,003 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:41,003 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:41,003 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:41,205 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:41,205 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:41,205 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(4), np.int64(9)), (np.int64(6), np.int64(8)))
2025-04-11 18:58:41,212 [INFO] Final candidates: []
2025-04-11 18:58:41,212 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:41,216 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:41,216 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:41,216 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:41,216 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:41,217 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:41,217 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:41,217 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:41,217 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:41,217 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:41,219 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:41,219 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:41,219 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:41,219 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:41,274 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:58:41,274 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:41,274 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(13)), (np.int64(9), np.int64(6)))
2025-04-11 18:58:41,281 [INFO] Final candidates: []
2025-04-11 18:58:41,282 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:41,286 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:41,286 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:41,286 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:41,286 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:41,286 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:41,286 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:41,286 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:41,286 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:41,287 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:41,289 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:41,289 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:41,289 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:41,289 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:41,442 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:41,442 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:41,442 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(4), np.int64(9)), (np.int64(14), np.int64(8)))
2025-04-11 18:58:41,449 [INFO] Final candidates: []
2025-04-11 18:58:41,449 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:41,453 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:41,453 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:41,453 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:41,453 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:41,454 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:41,454 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:41,454 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:41,454 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:41,454 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:41,456 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:41,456 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:41,456 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:41,456 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:41,457 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:41,457 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:41,457 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(9)), (np.int64(12), np.int64(16)))
2025-04-11 18:58:41,461 [DEBUG] board coords: [(9, 13), (10, 14), (11, 15), (12, 16), (13, 17), (14, 18)]
2025-04-11 18:58:41,461 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 18:58:41,461 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (11, 15)]
2025-04-11 18:58:41,462 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 0 1 1 1] with coords [(9, 13), (10, 14), (11, 15), (12, 16), (13, 17), (14, 18)] triggers candidate.
2025-04-11 18:58:41,464 [INFO] Final candidates: [(11, 15), (9, 13)]
2025-04-11 18:58:41,464 [INFO] Phase win: Collected 1unique candidate(s):[((11, 15), (9, 13))]
2025-04-11 18:58:41,464 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 18:58:41,468 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:41,469 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:41,469 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:41,469 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:41,469 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:41,469 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:41,469 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:41,469 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:41,470 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:41,472 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:41,472 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:41,472 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:41,472 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:41,549 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:58:41,549 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:41,550 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(9)), (np.int64(15), np.int64(15)))
2025-04-11 18:58:41,557 [INFO] Final candidates: []
2025-04-11 18:58:41,557 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:41,561 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:41,561 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:41,562 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:41,562 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:41,562 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:41,562 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:41,562 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:41,562 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:41,563 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:41,565 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:41,565 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:41,565 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:41,565 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:41,627 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:41,627 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:41,627 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(10)), (np.int64(7), np.int64(8)))
2025-04-11 18:58:41,634 [INFO] Final candidates: []
2025-04-11 18:58:41,634 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:41,639 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:41,639 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:41,639 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:41,639 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:41,639 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:41,639 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:41,639 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:41,639 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:41,640 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:41,642 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:41,642 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:41,642 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:41,642 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:41,647 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:41,647 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:41,647 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(15)), (np.int64(9), np.int64(6)))
2025-04-11 18:58:41,654 [INFO] Final candidates: []
2025-04-11 18:58:41,654 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:41,659 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:41,659 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:41,659 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:41,659 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:41,660 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:41,662 [INFO] Final candidates: [(7, 6), (13, 12)]
2025-04-11 18:58:41,662 [INFO] Phase defense: Collected 1unique candidate(s):[((7, 6), (13, 12))]
2025-04-11 18:58:41,662 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:58:41,662 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:41,662 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:41,663 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:41,663 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(8)), (np.int64(13), np.int64(13)))
2025-04-11 18:58:41,669 [INFO] Final candidates: []
2025-04-11 18:58:41,669 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:41,674 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:41,674 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:41,674 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:41,674 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:41,674 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:41,674 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:41,674 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:41,674 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:41,675 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:41,677 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:41,677 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:41,677 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:41,677 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:41,693 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:41,693 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:41,693 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(14)), (np.int64(15), np.int64(12)))
2025-04-11 18:58:41,700 [INFO] Final candidates: []
2025-04-11 18:58:41,700 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:41,705 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:41,706 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:41,706 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:41,706 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:41,706 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:41,706 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:41,706 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:41,706 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:41,707 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:41,709 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:41,709 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:41,709 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:41,709 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:41,916 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:41,916 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:41,916 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(18)), (np.int64(8), np.int64(14)))
2025-04-11 18:58:41,923 [INFO] Final candidates: []
2025-04-11 18:58:41,923 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:41,927 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:41,927 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:41,927 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:41,927 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:41,928 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:41,928 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:41,928 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:41,928 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:41,928 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:41,930 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:41,930 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:41,930 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:41,930 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:41,977 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:41,977 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:41,977 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(18)), (np.int64(16), np.int64(9)))
2025-04-11 18:58:41,984 [INFO] Final candidates: []
2025-04-11 18:58:41,984 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:41,989 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:41,989 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:41,989 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:41,989 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:41,989 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:41,989 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:41,989 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:41,989 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:41,990 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:41,992 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:41,992 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:41,992 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:41,992 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:42,016 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:42,016 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:42,016 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(10)), (np.int64(11), np.int64(17)))
2025-04-11 18:58:42,023 [INFO] Final candidates: []
2025-04-11 18:58:42,023 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:42,027 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:42,027 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:42,027 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:42,027 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:42,028 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:42,028 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:42,028 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:42,028 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:42,028 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:42,030 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:42,030 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:42,030 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:42,030 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:42,123 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:42,123 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:42,123 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(12)), (np.int64(13), np.int64(16)))
2025-04-11 18:58:42,130 [INFO] Final candidates: []
2025-04-11 18:58:42,131 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:42,135 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:42,135 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:42,135 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:42,135 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:42,135 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:42,135 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:42,135 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:42,135 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:42,136 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:42,138 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:42,138 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:42,138 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:42,138 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:42,162 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:42,162 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:42,162 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(14)), (np.int64(5), np.int64(9)))
2025-04-11 18:58:42,169 [INFO] Final candidates: []
2025-04-11 18:58:42,169 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:42,173 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:42,173 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:42,173 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:42,173 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:42,174 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:42,174 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:42,174 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:42,174 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:42,174 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:42,176 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:42,176 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:42,176 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:42,176 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:42,276 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:42,276 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:42,277 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(11)), (np.int64(7), np.int64(6)))
2025-04-11 18:58:42,283 [INFO] Final candidates: []
2025-04-11 18:58:42,283 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:42,288 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:42,288 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:42,288 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:42,288 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:42,291 [INFO] Final candidates: [(16, 15), (13, 12)]
2025-04-11 18:58:42,291 [INFO] Phase defense: Collected 1unique candidate(s):[((16, 15), (13, 12))]
2025-04-11 18:58:42,291 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:58:42,291 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:42,350 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:42,351 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:42,351 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(18)), (np.int64(11), np.int64(12)))
2025-04-11 18:58:42,358 [INFO] Final candidates: []
2025-04-11 18:58:42,358 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:42,362 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:42,362 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:42,362 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:42,362 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:42,363 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:42,363 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:42,363 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:42,363 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:42,363 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:42,365 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:42,365 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:42,365 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:42,365 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:42,403 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:42,403 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:42,403 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(10)), (np.int64(8), np.int64(5)))
2025-04-11 18:58:42,410 [INFO] Final candidates: []
2025-04-11 18:58:42,410 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:42,414 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:42,414 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:42,414 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:42,414 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:42,414 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:42,415 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:42,415 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:42,415 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:42,415 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:42,417 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:42,417 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:42,417 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:42,417 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:42,467 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:42,467 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:42,467 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(10)), (np.int64(14), np.int64(11)))
2025-04-11 18:58:42,474 [INFO] Final candidates: []
2025-04-11 18:58:42,474 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:42,478 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:42,478 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:42,478 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:42,478 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:42,478 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:42,478 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:42,478 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:42,479 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:42,479 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:42,481 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:42,481 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:42,481 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:42,481 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:42,563 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:58:42,563 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:58:42,564 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(18)), (np.int64(12), np.int64(6)))
2025-04-11 18:58:42,570 [INFO] Final candidates: []
2025-04-11 18:58:42,571 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:58:42,575 [DEBUG] board coords: [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)]
2025-04-11 18:58:42,575 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:58:42,575 [DEBUG] check_window_intermediate_custom: empty_cells=[(6, 5), (7, 6)]
2025-04-11 18:58:42,575 [DEBUG] check_window_intermediate_custom (only one inserted(7, 6)): For L=6, window [0 0 2 2 2 2] with coords [(6, 5), (7, 6), (8, 7), (9, 8), (10, 9), (11, 10)] triggers candidate.
2025-04-11 18:58:42,575 [DEBUG] board coords: [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)]
2025-04-11 18:58:42,575 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:58:42,575 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 12), (16, 15)]
2025-04-11 18:58:42,575 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 10), (12, 11), (13, 12), (14, 13), (15, 14), (16, 15)] triggers candidate.
2025-04-11 18:58:42,576 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(7, 6), (8, 7), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)] triggers candidate.
2025-04-11 18:58:42,578 [INFO] Final candidates: [(16, 15), (7, 6), (13, 12)]
2025-04-11 18:58:42,578 [INFO] Phase defense: Collected 3unique candidate(s):[((7, 6), (13, 12)), ((16, 15), (7, 6)), ((16, 15), (13, 12))]
2025-04-11 18:58:42,578 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:58:42,578 [INFO] Default policy: Starting random playout.
2025-04-11 18:58:42,579 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:58:42,579 [INFO] MCTS: Search finished. Best move selected with 1 visits.
2025-04-11 18:58:42,579 [INFO] Phase 2 (defense): MCTS selected move: ((8, 7), (13, 12))
2025-04-11 18:58:42,579 [INFO] Phase 2 (defense): MCTS selected move string : H9,N14
2025-04-11 18:58:42,579 [INFO] MCTS (defense candidates) selected move: H9,N14
2025-04-11 18:59:27,364 [INFO] Starting pre-MCTS candidate collection.
2025-04-11 18:59:27,371 [INFO] Final candidates: []
2025-04-11 18:59:27,371 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:27,378 [INFO] Final candidates: []
2025-04-11 18:59:27,378 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:27,378 [INFO] No candidate found in Phase 1 or 2; using full legal moves for MCTS.
2025-04-11 18:59:27,379 [INFO] MCTS: Starting search for 100 iterations.
2025-04-11 18:59:27,379 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(15)), (np.int64(11), np.int64(17)))
2025-04-11 18:59:27,386 [INFO] Final candidates: []
2025-04-11 18:59:27,386 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:27,393 [INFO] Final candidates: []
2025-04-11 18:59:27,393 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:27,394 [DEBUG] MCTS iteration 0: reached a node with 0 visits.
2025-04-11 18:59:27,394 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:27,607 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:59:27,607 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(8)), (np.int64(15), np.int64(17)))
2025-04-11 18:59:27,617 [INFO] Final candidates: []
2025-04-11 18:59:27,617 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:27,624 [INFO] Final candidates: []
2025-04-11 18:59:27,624 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:27,625 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:27,707 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:59:27,707 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(6)), (np.int64(12), np.int64(12)))
2025-04-11 18:59:27,714 [INFO] Final candidates: []
2025-04-11 18:59:27,714 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:27,721 [INFO] Final candidates: []
2025-04-11 18:59:27,721 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:27,722 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:27,906 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:59:27,907 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(11)), (np.int64(5), np.int64(8)))
2025-04-11 18:59:27,914 [INFO] Final candidates: []
2025-04-11 18:59:27,914 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:27,921 [INFO] Final candidates: []
2025-04-11 18:59:27,922 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:27,922 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:27,995 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:59:27,995 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(17)), (np.int64(8), np.int64(11)))
2025-04-11 18:59:28,004 [INFO] Final candidates: []
2025-04-11 18:59:28,004 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:28,012 [INFO] Final candidates: []
2025-04-11 18:59:28,012 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:28,013 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:28,275 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:28,276 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(7)), (np.int64(11), np.int64(8)))
2025-04-11 18:59:28,285 [INFO] Final candidates: []
2025-04-11 18:59:28,285 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:28,294 [INFO] Final candidates: []
2025-04-11 18:59:28,294 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:28,294 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:28,390 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:28,390 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(13)), (np.int64(8), np.int64(16)))
2025-04-11 18:59:28,397 [INFO] Final candidates: []
2025-04-11 18:59:28,397 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:28,405 [INFO] Final candidates: []
2025-04-11 18:59:28,405 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:28,405 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:28,642 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:59:28,642 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(9)), (np.int64(7), np.int64(6)))
2025-04-11 18:59:28,649 [INFO] Final candidates: []
2025-04-11 18:59:28,649 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:28,656 [INFO] Final candidates: []
2025-04-11 18:59:28,656 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:28,657 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:28,798 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:28,798 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(14)), (np.int64(9), np.int64(13)))
2025-04-11 18:59:28,802 [DEBUG] board coords: [(9, 13), (10, 14), (11, 15), (12, 16), (13, 17), (14, 18)]
2025-04-11 18:59:28,802 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(0), np.int64(0), np.int64(1), np.int64(1)]
2025-04-11 18:59:28,802 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 15), (12, 16)]
2025-04-11 18:59:28,803 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 0 0 1 1] with coords [(9, 13), (10, 14), (11, 15), (12, 16), (13, 17), (14, 18)] triggers candidate.
2025-04-11 18:59:28,805 [INFO] Final candidates: [(12, 16), (11, 15)]
2025-04-11 18:59:28,805 [INFO] Phase win: Collected 1unique candidate(s):[((12, 16), (11, 15))]
2025-04-11 18:59:28,805 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 18:59:28,812 [INFO] Final candidates: []
2025-04-11 18:59:28,812 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:28,812 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:29,004 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:29,004 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(8)), (np.int64(8), np.int64(14)))
2025-04-11 18:59:29,012 [INFO] Final candidates: []
2025-04-11 18:59:29,012 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:29,019 [INFO] Final candidates: []
2025-04-11 18:59:29,019 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:29,019 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:29,145 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:29,145 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(14)), (np.int64(10), np.int64(11)))
2025-04-11 18:59:29,152 [INFO] Final candidates: []
2025-04-11 18:59:29,152 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:29,159 [INFO] Final candidates: []
2025-04-11 18:59:29,159 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:29,160 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:29,193 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:29,194 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(13)), (np.int64(7), np.int64(15)))
2025-04-11 18:59:29,201 [INFO] Final candidates: []
2025-04-11 18:59:29,201 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:29,210 [INFO] Final candidates: []
2025-04-11 18:59:29,210 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:29,211 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:29,312 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:29,312 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(7)), (np.int64(12), np.int64(7)))
2025-04-11 18:59:29,319 [INFO] Final candidates: []
2025-04-11 18:59:29,319 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:29,326 [INFO] Final candidates: []
2025-04-11 18:59:29,326 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:29,326 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:29,456 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:29,457 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(8)), (np.int64(8), np.int64(16)))
2025-04-11 18:59:29,464 [INFO] Final candidates: []
2025-04-11 18:59:29,464 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:29,471 [INFO] Final candidates: []
2025-04-11 18:59:29,471 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:29,471 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:29,501 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:29,501 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(14)), (np.int64(10), np.int64(16)))
2025-04-11 18:59:29,508 [INFO] Final candidates: []
2025-04-11 18:59:29,508 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:29,515 [INFO] Final candidates: []
2025-04-11 18:59:29,515 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:29,515 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:29,529 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:29,529 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(16)), (np.int64(15), np.int64(10)))
2025-04-11 18:59:29,536 [INFO] Final candidates: []
2025-04-11 18:59:29,536 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:29,543 [INFO] Final candidates: []
2025-04-11 18:59:29,543 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:29,544 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:29,594 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:59:29,595 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(11)), (np.int64(7), np.int64(8)))
2025-04-11 18:59:29,602 [INFO] Final candidates: []
2025-04-11 18:59:29,602 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:29,608 [INFO] Final candidates: []
2025-04-11 18:59:29,609 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:29,609 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:29,686 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:29,687 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(8)), (np.int64(13), np.int64(10)))
2025-04-11 18:59:29,694 [INFO] Final candidates: []
2025-04-11 18:59:29,694 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:29,701 [INFO] Final candidates: []
2025-04-11 18:59:29,701 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:29,701 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:29,983 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:59:29,983 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(11)), (np.int64(15), np.int64(12)))
2025-04-11 18:59:29,991 [INFO] Final candidates: []
2025-04-11 18:59:29,992 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:30,003 [INFO] Final candidates: []
2025-04-11 18:59:30,003 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:30,004 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:30,146 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:59:30,146 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(12)), (np.int64(14), np.int64(11)))
2025-04-11 18:59:30,153 [INFO] Final candidates: []
2025-04-11 18:59:30,153 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:30,160 [INFO] Final candidates: []
2025-04-11 18:59:30,160 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:30,160 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:30,204 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:30,205 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(7)), (np.int64(10), np.int64(11)))
2025-04-11 18:59:30,211 [INFO] Final candidates: []
2025-04-11 18:59:30,212 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:30,218 [INFO] Final candidates: []
2025-04-11 18:59:30,220 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:30,221 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:30,264 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:30,265 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(13)), (np.int64(11), np.int64(8)))
2025-04-11 18:59:30,272 [INFO] Final candidates: []
2025-04-11 18:59:30,272 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:30,279 [INFO] Final candidates: []
2025-04-11 18:59:30,279 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:30,279 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:30,319 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:30,319 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(14)), (np.int64(13), np.int64(13)))
2025-04-11 18:59:30,327 [INFO] Final candidates: []
2025-04-11 18:59:30,327 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:30,335 [INFO] Final candidates: []
2025-04-11 18:59:30,335 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:30,335 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:30,396 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:30,396 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(8)), (np.int64(10), np.int64(12)))
2025-04-11 18:59:30,403 [INFO] Final candidates: []
2025-04-11 18:59:30,403 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:30,410 [INFO] Final candidates: []
2025-04-11 18:59:30,410 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:30,411 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:30,574 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:59:30,574 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(10)), (np.int64(14), np.int64(15)))
2025-04-11 18:59:30,582 [INFO] Final candidates: []
2025-04-11 18:59:30,582 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:30,590 [INFO] Final candidates: []
2025-04-11 18:59:30,590 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:30,591 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:30,656 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:59:30,657 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(17)), (np.int64(11), np.int64(15)))
2025-04-11 18:59:30,661 [DEBUG] board coords: [(9, 13), (10, 14), (11, 15), (12, 16), (13, 17), (14, 18)]
2025-04-11 18:59:30,661 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1)]
2025-04-11 18:59:30,661 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (12, 16)]
2025-04-11 18:59:30,661 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 1 0 1 1] with coords [(9, 13), (10, 14), (11, 15), (12, 16), (13, 17), (14, 18)] triggers candidate.
2025-04-11 18:59:30,664 [INFO] Final candidates: [(12, 16), (9, 13)]
2025-04-11 18:59:30,664 [INFO] Phase win: Collected 1unique candidate(s):[((12, 16), (9, 13))]
2025-04-11 18:59:30,664 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 18:59:30,671 [INFO] Final candidates: []
2025-04-11 18:59:30,671 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:30,672 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:30,855 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:30,855 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(10)), (np.int64(12), np.int64(12)))
2025-04-11 18:59:30,862 [INFO] Final candidates: []
2025-04-11 18:59:30,862 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:30,869 [INFO] Final candidates: []
2025-04-11 18:59:30,869 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:30,869 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:31,041 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:31,041 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(15)), (np.int64(12), np.int64(6)))
2025-04-11 18:59:31,048 [INFO] Final candidates: []
2025-04-11 18:59:31,048 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:31,055 [INFO] Final candidates: []
2025-04-11 18:59:31,055 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:31,055 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:31,171 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:31,171 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(15)), (np.int64(5), np.int64(8)))
2025-04-11 18:59:31,178 [INFO] Final candidates: []
2025-04-11 18:59:31,178 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:31,185 [INFO] Final candidates: []
2025-04-11 18:59:31,185 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:31,186 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:31,320 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:31,320 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(12)), (np.int64(15), np.int64(17)))
2025-04-11 18:59:31,327 [INFO] Final candidates: []
2025-04-11 18:59:31,327 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:31,334 [INFO] Final candidates: []
2025-04-11 18:59:31,334 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:31,335 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:31,453 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:31,453 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(16)), (np.int64(6), np.int64(8)))
2025-04-11 18:59:31,460 [INFO] Final candidates: []
2025-04-11 18:59:31,460 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:31,467 [INFO] Final candidates: []
2025-04-11 18:59:31,467 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:31,467 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:31,620 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:31,620 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(9)), (np.int64(9), np.int64(6)))
2025-04-11 18:59:31,627 [INFO] Final candidates: []
2025-04-11 18:59:31,627 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:31,634 [INFO] Final candidates: []
2025-04-11 18:59:31,634 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:31,634 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:31,715 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:31,715 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(11)), (np.int64(13), np.int64(16)))
2025-04-11 18:59:31,722 [INFO] Final candidates: []
2025-04-11 18:59:31,722 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:31,728 [INFO] Final candidates: []
2025-04-11 18:59:31,729 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:31,729 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:31,882 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:59:31,882 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(11)), (np.int64(15), np.int64(17)))
2025-04-11 18:59:31,889 [INFO] Final candidates: []
2025-04-11 18:59:31,889 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:31,897 [INFO] Final candidates: []
2025-04-11 18:59:31,897 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:31,899 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:32,144 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:59:32,144 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(7)), (np.int64(5), np.int64(8)))
2025-04-11 18:59:32,151 [INFO] Final candidates: []
2025-04-11 18:59:32,151 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:32,158 [INFO] Final candidates: []
2025-04-11 18:59:32,158 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:32,158 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:32,275 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:59:32,275 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(17)), (np.int64(14), np.int64(15)))
2025-04-11 18:59:32,282 [INFO] Final candidates: []
2025-04-11 18:59:32,282 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:32,292 [INFO] Final candidates: []
2025-04-11 18:59:32,292 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:32,292 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:32,349 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:32,349 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(6)), (np.int64(8), np.int64(14)))
2025-04-11 18:59:32,356 [INFO] Final candidates: []
2025-04-11 18:59:32,356 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:32,362 [INFO] Final candidates: []
2025-04-11 18:59:32,362 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:32,363 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:32,480 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:59:32,480 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(7)), (np.int64(13), np.int64(18)))
2025-04-11 18:59:32,488 [INFO] Final candidates: []
2025-04-11 18:59:32,488 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:32,495 [INFO] Final candidates: []
2025-04-11 18:59:32,495 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:32,495 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:32,773 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:32,774 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(9)), (np.int64(16), np.int64(17)))
2025-04-11 18:59:32,781 [INFO] Final candidates: []
2025-04-11 18:59:32,781 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:32,790 [INFO] Final candidates: []
2025-04-11 18:59:32,790 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:32,791 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:32,846 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:59:32,846 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(17)), (np.int64(15), np.int64(16)))
2025-04-11 18:59:32,853 [INFO] Final candidates: []
2025-04-11 18:59:32,853 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:32,860 [INFO] Final candidates: []
2025-04-11 18:59:32,860 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:32,861 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:32,960 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:32,960 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(10)), (np.int64(11), np.int64(14)))
2025-04-11 18:59:32,967 [INFO] Final candidates: []
2025-04-11 18:59:32,967 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:32,974 [INFO] Final candidates: []
2025-04-11 18:59:32,975 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:32,975 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:33,020 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:59:33,020 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(14)), (np.int64(12), np.int64(6)))
2025-04-11 18:59:33,027 [INFO] Final candidates: []
2025-04-11 18:59:33,027 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:33,034 [INFO] Final candidates: []
2025-04-11 18:59:33,034 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:33,035 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:33,126 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:59:33,126 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(13)), (np.int64(6), np.int64(7)))
2025-04-11 18:59:33,133 [INFO] Final candidates: []
2025-04-11 18:59:33,133 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:33,140 [INFO] Final candidates: []
2025-04-11 18:59:33,140 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:33,141 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:33,308 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:59:33,308 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(16)), (np.int64(12), np.int64(14)))
2025-04-11 18:59:33,316 [INFO] Final candidates: []
2025-04-11 18:59:33,316 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:33,322 [INFO] Final candidates: []
2025-04-11 18:59:33,322 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:33,323 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:33,418 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:59:33,418 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(18)), (np.int64(16), np.int64(18)))
2025-04-11 18:59:33,426 [INFO] Final candidates: []
2025-04-11 18:59:33,426 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:33,433 [INFO] Final candidates: []
2025-04-11 18:59:33,433 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:33,434 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:33,502 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:33,503 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(18)), (np.int64(7), np.int64(8)))
2025-04-11 18:59:33,510 [INFO] Final candidates: []
2025-04-11 18:59:33,510 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:33,516 [INFO] Final candidates: []
2025-04-11 18:59:33,516 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:33,517 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:33,606 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:33,606 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(7)), (np.int64(13), np.int64(10)))
2025-04-11 18:59:33,613 [INFO] Final candidates: []
2025-04-11 18:59:33,613 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:33,620 [INFO] Final candidates: []
2025-04-11 18:59:33,620 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:33,620 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:33,703 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:59:33,703 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(17)), (np.int64(8), np.int64(16)))
2025-04-11 18:59:33,711 [INFO] Final candidates: []
2025-04-11 18:59:33,711 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:33,718 [INFO] Final candidates: []
2025-04-11 18:59:33,719 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:33,719 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:33,797 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:59:33,798 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(9)), (np.int64(15), np.int64(18)))
2025-04-11 18:59:33,805 [INFO] Final candidates: []
2025-04-11 18:59:33,805 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:33,813 [INFO] Final candidates: []
2025-04-11 18:59:33,813 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:33,815 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:33,899 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:59:33,900 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(13)), (np.int64(8), np.int64(16)))
2025-04-11 18:59:33,907 [INFO] Final candidates: []
2025-04-11 18:59:33,907 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:33,914 [INFO] Final candidates: []
2025-04-11 18:59:33,914 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:33,914 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:34,052 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:34,052 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(9)), (np.int64(16), np.int64(9)))
2025-04-11 18:59:34,059 [INFO] Final candidates: []
2025-04-11 18:59:34,059 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:34,066 [INFO] Final candidates: []
2025-04-11 18:59:34,066 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:34,067 [DEBUG] MCTS iteration 50: reached a node with 0 visits.
2025-04-11 18:59:34,067 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:34,221 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:59:34,221 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(8)), (np.int64(12), np.int64(13)))
2025-04-11 18:59:34,232 [INFO] Final candidates: []
2025-04-11 18:59:34,232 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:34,239 [INFO] Final candidates: []
2025-04-11 18:59:34,239 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:34,240 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:34,334 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:59:34,334 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(15)), (np.int64(10), np.int64(12)))
2025-04-11 18:59:34,341 [INFO] Final candidates: []
2025-04-11 18:59:34,341 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:34,348 [INFO] Final candidates: []
2025-04-11 18:59:34,348 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:34,349 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:34,529 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:59:34,529 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(14)), (np.int64(16), np.int64(18)))
2025-04-11 18:59:34,536 [INFO] Final candidates: []
2025-04-11 18:59:34,536 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:34,543 [INFO] Final candidates: []
2025-04-11 18:59:34,543 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:34,544 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:34,621 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:34,621 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(7)), (np.int64(10), np.int64(12)))
2025-04-11 18:59:34,628 [INFO] Final candidates: []
2025-04-11 18:59:34,628 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:34,635 [INFO] Final candidates: []
2025-04-11 18:59:34,635 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:34,636 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:34,924 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:59:34,925 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(14)), (np.int64(7), np.int64(11)))
2025-04-11 18:59:34,932 [INFO] Final candidates: []
2025-04-11 18:59:34,932 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:34,938 [INFO] Final candidates: []
2025-04-11 18:59:34,939 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:34,939 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:35,055 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:35,055 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(13)), (np.int64(8), np.int64(14)))
2025-04-11 18:59:35,062 [INFO] Final candidates: []
2025-04-11 18:59:35,062 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:35,069 [INFO] Final candidates: []
2025-04-11 18:59:35,069 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:35,070 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:35,225 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:35,226 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(14)), (np.int64(12), np.int64(12)))
2025-04-11 18:59:35,233 [INFO] Final candidates: []
2025-04-11 18:59:35,233 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:35,240 [INFO] Final candidates: []
2025-04-11 18:59:35,240 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:35,240 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:35,444 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:35,444 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(10)), (np.int64(10), np.int64(8)))
2025-04-11 18:59:35,451 [INFO] Final candidates: []
2025-04-11 18:59:35,451 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:35,458 [INFO] Final candidates: []
2025-04-11 18:59:35,458 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:35,459 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:35,615 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:35,615 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(16)), (np.int64(12), np.int64(12)))
2025-04-11 18:59:35,622 [INFO] Final candidates: []
2025-04-11 18:59:35,622 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:35,630 [INFO] Final candidates: []
2025-04-11 18:59:35,630 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:35,630 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:35,814 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:35,814 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(14)), (np.int64(10), np.int64(15)))
2025-04-11 18:59:35,821 [INFO] Final candidates: []
2025-04-11 18:59:35,821 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:35,829 [INFO] Final candidates: []
2025-04-11 18:59:35,830 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:35,830 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:35,892 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:35,892 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(11)), (np.int64(11), np.int64(15)))
2025-04-11 18:59:35,897 [DEBUG] board coords: [(9, 13), (10, 14), (11, 15), (12, 16), (13, 17), (14, 18)]
2025-04-11 18:59:35,897 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1)]
2025-04-11 18:59:35,897 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (12, 16)]
2025-04-11 18:59:35,897 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 1 0 1 1] with coords [(9, 13), (10, 14), (11, 15), (12, 16), (13, 17), (14, 18)] triggers candidate.
2025-04-11 18:59:35,899 [INFO] Final candidates: [(12, 16), (9, 13)]
2025-04-11 18:59:35,899 [INFO] Phase win: Collected 1unique candidate(s):[((12, 16), (9, 13))]
2025-04-11 18:59:35,899 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 18:59:35,909 [INFO] Final candidates: []
2025-04-11 18:59:35,909 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:35,909 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:35,982 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:35,982 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(10)), (np.int64(12), np.int64(17)))
2025-04-11 18:59:35,989 [INFO] Final candidates: []
2025-04-11 18:59:35,989 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:35,996 [INFO] Final candidates: []
2025-04-11 18:59:35,996 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:35,997 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:36,118 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:59:36,118 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(11)), (np.int64(11), np.int64(12)))
2025-04-11 18:59:36,125 [INFO] Final candidates: []
2025-04-11 18:59:36,125 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:36,132 [INFO] Final candidates: []
2025-04-11 18:59:36,132 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:36,132 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:36,357 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:59:36,357 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(18)), (np.int64(14), np.int64(7)))
2025-04-11 18:59:36,364 [INFO] Final candidates: []
2025-04-11 18:59:36,364 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:36,371 [INFO] Final candidates: []
2025-04-11 18:59:36,371 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:36,372 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:36,405 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:36,406 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(10)), (np.int64(15), np.int64(18)))
2025-04-11 18:59:36,413 [INFO] Final candidates: []
2025-04-11 18:59:36,413 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:36,424 [INFO] Final candidates: []
2025-04-11 18:59:36,424 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:36,425 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:36,472 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:59:36,472 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(16)), (np.int64(9), np.int64(13)))
2025-04-11 18:59:36,476 [DEBUG] board coords: [(8, 12), (9, 13), (10, 14), (11, 15), (12, 16), (13, 17)]
2025-04-11 18:59:36,477 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1)]
2025-04-11 18:59:36,477 [DEBUG] check_window_intermediate_custom: empty_cells=[(8, 12), (11, 15)]
2025-04-11 18:59:36,477 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 1 0 1 1] with coords [(8, 12), (9, 13), (10, 14), (11, 15), (12, 16), (13, 17)] triggers candidate.
2025-04-11 18:59:36,479 [INFO] Final candidates: [(11, 15), (8, 12)]
2025-04-11 18:59:36,479 [INFO] Phase win: Collected 1unique candidate(s):[((11, 15), (8, 12))]
2025-04-11 18:59:36,479 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 18:59:36,486 [INFO] Final candidates: []
2025-04-11 18:59:36,486 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:36,487 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:36,502 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:59:36,502 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(11)), (np.int64(11), np.int64(12)))
2025-04-11 18:59:36,509 [INFO] Final candidates: []
2025-04-11 18:59:36,509 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:36,517 [INFO] Final candidates: []
2025-04-11 18:59:36,517 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:36,517 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:36,859 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:36,859 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(6)), (np.int64(7), np.int64(6)))
2025-04-11 18:59:36,867 [INFO] Final candidates: []
2025-04-11 18:59:36,867 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:36,881 [INFO] Final candidates: []
2025-04-11 18:59:36,881 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:36,882 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:36,960 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:59:36,960 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(8)), (np.int64(11), np.int64(17)))
2025-04-11 18:59:36,968 [INFO] Final candidates: []
2025-04-11 18:59:36,968 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:36,976 [INFO] Final candidates: []
2025-04-11 18:59:36,976 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:36,977 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:37,043 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:59:37,044 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(15)), (np.int64(6), np.int64(8)))
2025-04-11 18:59:37,051 [INFO] Final candidates: []
2025-04-11 18:59:37,051 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:37,057 [INFO] Final candidates: []
2025-04-11 18:59:37,057 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:37,058 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:37,151 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:59:37,151 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(14)), (np.int64(9), np.int64(16)))
2025-04-11 18:59:37,159 [INFO] Final candidates: []
2025-04-11 18:59:37,159 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:37,166 [INFO] Final candidates: []
2025-04-11 18:59:37,166 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:37,167 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:37,383 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:59:37,383 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(8)), (np.int64(9), np.int64(11)))
2025-04-11 18:59:37,390 [INFO] Final candidates: []
2025-04-11 18:59:37,390 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:37,397 [INFO] Final candidates: []
2025-04-11 18:59:37,397 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:37,397 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:37,496 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:59:37,497 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(14)), (np.int64(7), np.int64(6)))
2025-04-11 18:59:37,504 [INFO] Final candidates: []
2025-04-11 18:59:37,504 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:37,510 [INFO] Final candidates: []
2025-04-11 18:59:37,510 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:37,511 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:37,571 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:37,571 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(7)), (np.int64(7), np.int64(8)))
2025-04-11 18:59:37,578 [INFO] Final candidates: []
2025-04-11 18:59:37,578 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:37,585 [INFO] Final candidates: []
2025-04-11 18:59:37,585 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:37,586 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:37,652 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:37,652 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(8)), (np.int64(9), np.int64(11)))
2025-04-11 18:59:37,659 [INFO] Final candidates: []
2025-04-11 18:59:37,659 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:37,666 [INFO] Final candidates: []
2025-04-11 18:59:37,666 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:37,666 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:37,764 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:37,764 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(9)), (np.int64(12), np.int64(7)))
2025-04-11 18:59:37,772 [INFO] Final candidates: []
2025-04-11 18:59:37,772 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:37,779 [INFO] Final candidates: []
2025-04-11 18:59:37,779 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:37,780 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:37,939 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:59:37,939 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(11)), (np.int64(9), np.int64(13)))
2025-04-11 18:59:37,943 [DEBUG] board coords: [(9, 13), (10, 14), (11, 15), (12, 16), (13, 17), (14, 18)]
2025-04-11 18:59:37,943 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(0), np.int64(0), np.int64(1), np.int64(1)]
2025-04-11 18:59:37,943 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 15), (12, 16)]
2025-04-11 18:59:37,944 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 0 0 1 1] with coords [(9, 13), (10, 14), (11, 15), (12, 16), (13, 17), (14, 18)] triggers candidate.
2025-04-11 18:59:37,946 [INFO] Final candidates: [(12, 16), (11, 15)]
2025-04-11 18:59:37,946 [INFO] Phase win: Collected 1unique candidate(s):[((12, 16), (11, 15))]
2025-04-11 18:59:37,946 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 18:59:37,953 [INFO] Final candidates: []
2025-04-11 18:59:37,953 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:37,953 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:38,085 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:38,085 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(8)), (np.int64(6), np.int64(7)))
2025-04-11 18:59:38,092 [INFO] Final candidates: []
2025-04-11 18:59:38,092 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:38,099 [INFO] Final candidates: []
2025-04-11 18:59:38,099 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:38,099 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:38,278 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:38,278 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(16)), (np.int64(8), np.int64(16)))
2025-04-11 18:59:38,283 [DEBUG] board coords: [(9, 13), (10, 14), (11, 15), (12, 16), (13, 17), (14, 18)]
2025-04-11 18:59:38,283 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 18:59:38,283 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (11, 15)]
2025-04-11 18:59:38,283 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 0 1 1 1] with coords [(9, 13), (10, 14), (11, 15), (12, 16), (13, 17), (14, 18)] triggers candidate.
2025-04-11 18:59:38,286 [INFO] Final candidates: [(11, 15), (9, 13)]
2025-04-11 18:59:38,286 [INFO] Phase win: Collected 1unique candidate(s):[((11, 15), (9, 13))]
2025-04-11 18:59:38,286 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 18:59:38,295 [INFO] Final candidates: []
2025-04-11 18:59:38,295 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:38,296 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:38,436 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:59:38,436 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(17)), (np.int64(7), np.int64(8)))
2025-04-11 18:59:38,452 [INFO] Final candidates: []
2025-04-11 18:59:38,452 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:38,460 [INFO] Final candidates: []
2025-04-11 18:59:38,460 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:38,461 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:38,603 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:59:38,603 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(12)), (np.int64(12), np.int64(16)))
2025-04-11 18:59:38,607 [DEBUG] board coords: [(9, 13), (10, 14), (11, 15), (12, 16), (13, 17), (14, 18)]
2025-04-11 18:59:38,607 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 18:59:38,607 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (11, 15)]
2025-04-11 18:59:38,608 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 0 1 1 1] with coords [(9, 13), (10, 14), (11, 15), (12, 16), (13, 17), (14, 18)] triggers candidate.
2025-04-11 18:59:38,611 [INFO] Final candidates: [(11, 15), (9, 13)]
2025-04-11 18:59:38,611 [INFO] Phase win: Collected 1unique candidate(s):[((11, 15), (9, 13))]
2025-04-11 18:59:38,611 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 18:59:38,618 [INFO] Final candidates: []
2025-04-11 18:59:38,618 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:38,619 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:38,702 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:38,703 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(14)), (np.int64(15), np.int64(10)))
2025-04-11 18:59:38,710 [INFO] Final candidates: []
2025-04-11 18:59:38,710 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:38,716 [INFO] Final candidates: []
2025-04-11 18:59:38,716 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:38,717 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:38,979 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:38,979 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(9)), (np.int64(15), np.int64(9)))
2025-04-11 18:59:38,986 [INFO] Final candidates: []
2025-04-11 18:59:38,986 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:38,993 [INFO] Final candidates: []
2025-04-11 18:59:38,993 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:38,994 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:39,174 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:39,174 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(16)), (np.int64(7), np.int64(6)))
2025-04-11 18:59:39,182 [INFO] Final candidates: []
2025-04-11 18:59:39,182 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:39,188 [INFO] Final candidates: []
2025-04-11 18:59:39,188 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:39,189 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:39,208 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:39,208 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(14)), (np.int64(11), np.int64(13)))
2025-04-11 18:59:39,215 [INFO] Final candidates: []
2025-04-11 18:59:39,215 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:39,222 [INFO] Final candidates: []
2025-04-11 18:59:39,222 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:39,222 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:39,457 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:59:39,457 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(10)), (np.int64(15), np.int64(12)))
2025-04-11 18:59:39,467 [INFO] Final candidates: []
2025-04-11 18:59:39,467 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:39,474 [INFO] Final candidates: []
2025-04-11 18:59:39,474 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:39,475 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:39,514 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:39,515 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(7)), (np.int64(10), np.int64(11)))
2025-04-11 18:59:39,522 [INFO] Final candidates: []
2025-04-11 18:59:39,522 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:39,528 [INFO] Final candidates: []
2025-04-11 18:59:39,528 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:39,529 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:39,599 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:39,599 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(10)), (np.int64(14), np.int64(7)))
2025-04-11 18:59:39,608 [INFO] Final candidates: []
2025-04-11 18:59:39,608 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:39,616 [INFO] Final candidates: []
2025-04-11 18:59:39,616 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:39,617 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:39,653 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:39,653 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(16), np.int64(13)), (np.int64(8), np.int64(6)))
2025-04-11 18:59:39,660 [INFO] Final candidates: []
2025-04-11 18:59:39,660 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:39,667 [INFO] Final candidates: []
2025-04-11 18:59:39,667 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:39,668 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:39,774 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:59:39,775 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(9)), (np.int64(12), np.int64(12)))
2025-04-11 18:59:39,784 [INFO] Final candidates: []
2025-04-11 18:59:39,784 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:39,791 [INFO] Final candidates: []
2025-04-11 18:59:39,791 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:39,792 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:39,940 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:39,940 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(14)), (np.int64(13), np.int64(11)))
2025-04-11 18:59:39,947 [INFO] Final candidates: []
2025-04-11 18:59:39,947 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:39,954 [INFO] Final candidates: []
2025-04-11 18:59:39,954 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:39,954 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:40,006 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:40,007 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(17)), (np.int64(7), np.int64(11)))
2025-04-11 18:59:40,017 [INFO] Final candidates: []
2025-04-11 18:59:40,017 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:40,023 [INFO] Final candidates: []
2025-04-11 18:59:40,024 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:40,024 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:40,221 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:40,221 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(12)), (np.int64(6), np.int64(8)))
2025-04-11 18:59:40,228 [INFO] Final candidates: []
2025-04-11 18:59:40,228 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:40,235 [INFO] Final candidates: []
2025-04-11 18:59:40,235 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:40,236 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:40,332 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:59:40,332 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(18)), (np.int64(12), np.int64(6)))
2025-04-11 18:59:40,339 [INFO] Final candidates: []
2025-04-11 18:59:40,339 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:40,346 [INFO] Final candidates: []
2025-04-11 18:59:40,346 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:40,347 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:40,412 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:40,412 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(7)), (np.int64(11), np.int64(12)))
2025-04-11 18:59:40,419 [INFO] Final candidates: []
2025-04-11 18:59:40,419 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:40,426 [INFO] Final candidates: []
2025-04-11 18:59:40,426 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:40,426 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:40,468 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:40,468 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(11)), (np.int64(16), np.int64(18)))
2025-04-11 18:59:40,475 [INFO] Final candidates: []
2025-04-11 18:59:40,475 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:40,482 [INFO] Final candidates: []
2025-04-11 18:59:40,482 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:40,483 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:40,572 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:40,572 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(9)), (np.int64(6), np.int64(11)))
2025-04-11 18:59:40,579 [INFO] Final candidates: []
2025-04-11 18:59:40,579 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:40,586 [INFO] Final candidates: []
2025-04-11 18:59:40,586 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:40,587 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:40,693 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:40,693 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(16)), (np.int64(7), np.int64(7)))
2025-04-11 18:59:40,700 [INFO] Final candidates: []
2025-04-11 18:59:40,700 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:40,707 [INFO] Final candidates: []
2025-04-11 18:59:40,707 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:40,708 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:40,817 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:40,817 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(14)), (np.int64(10), np.int64(13)))
2025-04-11 18:59:40,824 [INFO] Final candidates: []
2025-04-11 18:59:40,824 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:40,831 [INFO] Final candidates: []
2025-04-11 18:59:40,831 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:40,832 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:40,952 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:59:40,953 [INFO] MCTS: Search finished. Best move selected with 1 visits.
2025-04-11 18:59:40,953 [INFO] MCTS selected move: Q15,S12
2025-04-11 18:59:40,953 [INFO] ===============NEW MOVE================
2025-04-11 18:59:45,003 [INFO] Starting pre-MCTS candidate collection.
2025-04-11 18:59:45,013 [INFO] Final candidates: []
2025-04-11 18:59:45,013 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:45,014 [DEBUG] board coords: [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12)]
2025-04-11 18:59:45,014 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:45,014 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 7), (11, 8)]
2025-04-11 18:59:45,014 [DEBUG] check_window_intermediate_custom (only one inserted(11, 8)): For L=6, window [0 0 2 2 2 2] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12)] triggers candidate.
2025-04-11 18:59:45,014 [DEBUG] check_window_margin_custom: For L=6, window [0 2 2 2 2 0] with coords [(11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:45,014 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 18:59:45,014 [DEBUG] board coords: [(11, 10), (11, 11), (11, 12), (11, 13), (11, 14), (11, 15)]
2025-04-11 18:59:45,014 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(0)]
2025-04-11 18:59:45,014 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 15)]
2025-04-11 18:59:45,014 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 0 2 0] with coords [(11, 10), (11, 11), (11, 12), (11, 13), (11, 14), (11, 15)] triggers candidate.
2025-04-11 18:59:45,023 [INFO] Final candidates: [(11, 13), (11, 8), (11, 15)]
2025-04-11 18:59:45,023 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 13), (11, 15)), ((11, 8), (11, 15)), ((11, 13), (11, 8))]
2025-04-11 18:59:45,023 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:45,023 [INFO] MCTS: Starting search for 100 iterations.
2025-04-11 18:59:45,024 [DEBUG] Tree_policy iteration 1: Expanding move ((11, 8), (11, 15))
2025-04-11 18:59:45,024 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:45,024 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:45,024 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:45,024 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:45,025 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:45,025 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:45,025 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:45,025 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:45,026 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:45,032 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:45,032 [INFO] Phase win: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:45,032 [INFO] Phase 1 (immediate win): 3 candidate(s) found.
2025-04-11 18:59:45,040 [INFO] Final candidates: []
2025-04-11 18:59:45,040 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:45,041 [DEBUG] MCTS iteration 0: reached a node with 0 visits.
2025-04-11 18:59:45,041 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:45,114 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:45,114 [DEBUG] Tree_policy iteration 1: Expanding move ((11, 13), (11, 8))
2025-04-11 18:59:45,115 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:45,115 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:45,115 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:45,115 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:45,115 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:45,115 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(0)]
2025-04-11 18:59:45,115 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 15), (11, 16)]
2025-04-11 18:59:45,115 [DEBUG] check_window_intermediate_custom (only one inserted(11, 15)): For L=6, window [2 2 2 2 0 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:45,121 [INFO] Final candidates: [(11, 7), (11, 15)]
2025-04-11 18:59:45,122 [INFO] Phase win: Collected 1unique candidate(s):[((11, 7), (11, 15))]
2025-04-11 18:59:45,122 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 18:59:45,131 [INFO] Final candidates: []
2025-04-11 18:59:45,131 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:45,132 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:45,132 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:45,132 [DEBUG] Tree_policy iteration 1: Expanding move ((11, 13), (11, 15))
2025-04-11 18:59:45,133 [DEBUG] board coords: [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12)]
2025-04-11 18:59:45,133 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:45,133 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 7), (11, 8)]
2025-04-11 18:59:45,133 [DEBUG] check_window_intermediate_custom (only one inserted(11, 8)): For L=6, window [0 0 2 2 2 2] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12)] triggers candidate.
2025-04-11 18:59:45,139 [INFO] Final candidates: [(11, 8), (11, 16)]
2025-04-11 18:59:45,139 [INFO] Phase win: Collected 1unique candidate(s):[((11, 8), (11, 16))]
2025-04-11 18:59:45,139 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 18:59:45,146 [INFO] Final candidates: []
2025-04-11 18:59:45,146 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 18:59:45,146 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:45,147 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:45,147 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:45,147 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(10)), (np.int64(7), np.int64(11)))
2025-04-11 18:59:45,153 [INFO] Final candidates: []
2025-04-11 18:59:45,153 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:45,154 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:45,154 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:45,154 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:45,154 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:45,154 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:45,154 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:45,154 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:45,154 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:45,155 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:45,161 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:45,161 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:45,161 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:45,161 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:45,273 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:45,273 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:45,273 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(15)), (np.int64(16), np.int64(18)))
2025-04-11 18:59:45,280 [INFO] Final candidates: []
2025-04-11 18:59:45,280 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:45,280 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:45,280 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:45,280 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:45,281 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:45,281 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:45,281 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:45,281 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:45,281 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:45,282 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:45,287 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:45,287 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:45,287 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:45,287 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:45,291 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:45,291 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:45,291 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(18)), (np.int64(7), np.int64(8)))
2025-04-11 18:59:45,298 [INFO] Final candidates: []
2025-04-11 18:59:45,298 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:45,299 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:45,299 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:45,299 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:45,299 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:45,299 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:45,299 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:45,299 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:45,299 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:45,300 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:45,305 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:45,305 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:45,305 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:45,305 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:45,407 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:45,407 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:45,407 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(10)), (np.int64(7), np.int64(15)))
2025-04-11 18:59:45,414 [INFO] Final candidates: []
2025-04-11 18:59:45,414 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:45,415 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:45,415 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:45,415 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:45,415 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:45,415 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:45,415 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:45,415 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:45,415 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:45,416 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:45,421 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:45,421 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:45,421 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:45,421 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:45,522 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:45,522 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:45,522 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(10)), (np.int64(13), np.int64(7)))
2025-04-11 18:59:45,529 [INFO] Final candidates: []
2025-04-11 18:59:45,529 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:45,530 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:45,530 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:45,530 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:45,530 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:45,530 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:45,530 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:45,530 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:45,530 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:45,531 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:45,539 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:45,539 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:45,539 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:45,539 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:45,853 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:59:45,854 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:45,854 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(11)), (np.int64(10), np.int64(11)))
2025-04-11 18:59:45,861 [INFO] Final candidates: []
2025-04-11 18:59:45,861 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:45,861 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:45,861 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:45,861 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:45,861 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:45,861 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:45,862 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:45,862 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:45,862 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:45,862 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:45,868 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:45,868 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:45,868 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:45,868 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:45,884 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:45,884 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:45,885 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(16)), (np.int64(9), np.int64(11)))
2025-04-11 18:59:45,891 [INFO] Final candidates: []
2025-04-11 18:59:45,891 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:45,892 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:45,892 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:45,892 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:45,892 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:45,892 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:45,892 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:45,892 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:45,892 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:45,893 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:45,898 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:45,898 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:45,899 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:45,899 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:45,911 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:45,911 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:45,911 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(7)), (np.int64(8), np.int64(8)))
2025-04-11 18:59:45,920 [INFO] Final candidates: []
2025-04-11 18:59:45,920 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:45,921 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:45,921 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:45,921 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:45,921 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:45,921 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:45,921 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:45,921 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:45,921 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:45,922 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:45,928 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:45,928 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:45,928 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:45,928 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:45,932 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:45,932 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:45,932 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(13)), (np.int64(15), np.int64(18)))
2025-04-11 18:59:45,939 [INFO] Final candidates: []
2025-04-11 18:59:45,939 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:45,940 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:45,940 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:45,940 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:45,940 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:45,940 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:45,940 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:45,940 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:45,940 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:45,941 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:45,946 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:45,946 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:45,946 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:45,946 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:46,064 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:46,064 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:46,064 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(10)), (np.int64(6), np.int64(7)))
2025-04-11 18:59:46,073 [INFO] Final candidates: []
2025-04-11 18:59:46,073 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:46,074 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:46,074 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:46,074 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:46,074 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:46,074 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:46,074 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:46,074 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:46,074 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:46,075 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:46,083 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:46,083 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:46,083 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:46,083 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:46,097 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:46,097 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:46,098 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(10)), (np.int64(10), np.int64(8)))
2025-04-11 18:59:46,108 [INFO] Final candidates: []
2025-04-11 18:59:46,108 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:46,108 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:46,108 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:46,108 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:46,109 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:46,109 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:46,109 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:46,109 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:46,109 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:46,111 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:46,121 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:46,121 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:46,121 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:46,121 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:46,293 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:59:46,293 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:46,293 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(7)), (np.int64(16), np.int64(18)))
2025-04-11 18:59:46,300 [INFO] Final candidates: []
2025-04-11 18:59:46,300 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:46,301 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:46,301 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:46,301 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:46,301 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:46,301 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:46,301 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:46,301 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:46,301 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:46,302 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:46,307 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:46,308 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:46,308 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:46,308 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:46,326 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:46,326 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:46,326 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(7)), (np.int64(6), np.int64(7)))
2025-04-11 18:59:46,333 [INFO] Final candidates: []
2025-04-11 18:59:46,333 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:46,334 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:46,334 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:46,334 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:46,334 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:46,334 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:46,334 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:46,334 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:46,334 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:46,335 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:46,342 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:46,342 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:46,342 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:46,342 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:46,419 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:59:46,420 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:46,420 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(8)), (np.int64(7), np.int64(15)))
2025-04-11 18:59:46,426 [INFO] Final candidates: []
2025-04-11 18:59:46,426 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:46,427 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:46,427 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:46,427 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:46,427 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:46,427 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:46,427 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:46,427 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:46,427 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:46,428 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:46,434 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:46,434 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:46,434 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:46,434 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:46,436 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:46,436 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:46,436 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(7)), (np.int64(12), np.int64(12)))
2025-04-11 18:59:46,443 [INFO] Final candidates: []
2025-04-11 18:59:46,443 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:46,444 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:46,444 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:46,444 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:46,444 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:46,444 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:46,445 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:46,445 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:46,445 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:46,446 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:46,451 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:46,451 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:46,451 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:46,451 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:46,457 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:46,457 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:46,457 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(8)), (np.int64(9), np.int64(11)))
2025-04-11 18:59:46,464 [INFO] Final candidates: []
2025-04-11 18:59:46,464 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:46,465 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:46,465 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:46,465 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:46,465 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:46,465 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:46,465 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:46,465 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:46,465 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:46,466 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:46,471 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:46,471 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:46,471 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:46,471 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:46,498 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:46,499 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:46,499 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(14)), (np.int64(5), np.int64(8)))
2025-04-11 18:59:46,506 [INFO] Final candidates: []
2025-04-11 18:59:46,506 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:46,506 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:46,506 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:46,506 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:46,507 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:46,507 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:46,507 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:46,507 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:46,507 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:46,508 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:46,513 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:46,513 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:46,513 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:46,513 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:46,517 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:46,517 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:46,518 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(14)), (np.int64(9), np.int64(11)))
2025-04-11 18:59:46,524 [INFO] Final candidates: []
2025-04-11 18:59:46,524 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:46,525 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:46,525 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:46,525 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:46,525 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:46,525 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:46,525 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:46,525 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:46,525 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:46,526 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:46,531 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:46,531 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:46,531 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:46,531 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:46,610 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:46,611 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:46,611 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(16)), (np.int64(14), np.int64(14)))
2025-04-11 18:59:46,617 [INFO] Final candidates: []
2025-04-11 18:59:46,618 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:46,618 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:46,618 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:46,618 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:46,618 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:46,618 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:46,618 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:46,618 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:46,619 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:46,619 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:46,625 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:46,625 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:46,625 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:46,625 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:46,627 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:46,628 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:46,628 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(12)), (np.int64(6), np.int64(7)))
2025-04-11 18:59:46,634 [INFO] Final candidates: []
2025-04-11 18:59:46,635 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:46,635 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:46,635 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:46,635 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:46,635 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:46,635 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:46,635 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:46,635 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:46,635 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:46,636 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:46,642 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:46,642 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:46,642 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:46,642 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:46,708 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:46,708 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:46,708 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(13)), (np.int64(15), np.int64(15)))
2025-04-11 18:59:46,715 [INFO] Final candidates: []
2025-04-11 18:59:46,715 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:46,716 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:46,716 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:46,716 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:46,716 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:46,716 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:46,716 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:46,716 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:46,716 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:46,717 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:46,722 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:46,722 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:46,722 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:46,722 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:46,933 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:46,934 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:46,934 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(17)), (np.int64(13), np.int64(15)))
2025-04-11 18:59:46,937 [DEBUG] board coords: [(10, 17), (11, 17), (12, 17), (13, 17), (14, 17), (15, 17)]
2025-04-11 18:59:46,937 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 18:59:46,937 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 17), (12, 17)]
2025-04-11 18:59:46,937 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 0 1 1 1] with coords [(10, 17), (11, 17), (12, 17), (13, 17), (14, 17), (15, 17)] triggers candidate.
2025-04-11 18:59:46,937 [DEBUG] board coords: [(11, 17), (12, 17), (13, 17), (14, 17), (15, 17), (16, 17)]
2025-04-11 18:59:46,937 [DEBUG] board values[np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 18:59:46,937 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 17), (16, 17)]
2025-04-11 18:59:46,937 [DEBUG] check_window_intermediate_custom: For L=6, window [1 0 1 1 1 0] with coords [(11, 17), (12, 17), (13, 17), (14, 17), (15, 17), (16, 17)] triggers candidate.
2025-04-11 18:59:46,941 [INFO] Final candidates: [(12, 17), (10, 17), (16, 17)]
2025-04-11 18:59:46,941 [INFO] Phase win: Collected 3unique candidate(s):[((10, 17), (16, 17)), ((12, 17), (16, 17)), ((12, 17), (10, 17))]
2025-04-11 18:59:46,941 [INFO] Phase 1 (immediate win): 3 candidate(s) found.
2025-04-11 18:59:46,941 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:46,941 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:46,941 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:46,941 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:46,941 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:46,941 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:46,942 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:46,942 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:46,942 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:46,948 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:46,948 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:46,948 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:46,948 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:47,021 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:47,021 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:47,021 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(16)), (np.int64(14), np.int64(8)))
2025-04-11 18:59:47,028 [INFO] Final candidates: []
2025-04-11 18:59:47,028 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:47,029 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:47,029 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:47,029 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:47,029 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:47,030 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:47,035 [INFO] Final candidates: [(11, 13), (11, 7)]
2025-04-11 18:59:47,035 [INFO] Phase defense: Collected 1unique candidate(s):[((11, 13), (11, 7))]
2025-04-11 18:59:47,035 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:59:47,035 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:47,089 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:47,089 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:47,089 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(16)), (np.int64(12), np.int64(17)))
2025-04-11 18:59:47,092 [DEBUG] board coords: [(9, 17), (10, 17), (11, 17), (12, 17), (13, 17), (14, 17)]
2025-04-11 18:59:47,092 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 18:59:47,092 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 17), (10, 17)]
2025-04-11 18:59:47,092 [DEBUG] check_window_intermediate_custom (only one inserted(10, 17)): For L=6, window [0 0 1 1 1 1] with coords [(9, 17), (10, 17), (11, 17), (12, 17), (13, 17), (14, 17)] triggers candidate.
2025-04-11 18:59:47,092 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(10, 17), (11, 17), (12, 17), (13, 17), (14, 17), (15, 17)] triggers candidate.
2025-04-11 18:59:47,092 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 18:59:47,092 [DEBUG] board coords: [(11, 17), (12, 17), (13, 17), (14, 17), (15, 17), (16, 17)]
2025-04-11 18:59:47,092 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 18:59:47,092 [DEBUG] check_window_intermediate_custom: empty_cells=[(15, 17), (16, 17)]
2025-04-11 18:59:47,093 [DEBUG] check_window_intermediate_custom (only one inserted(15, 17)): For L=6, window [1 1 1 1 0 0] with coords [(11, 17), (12, 17), (13, 17), (14, 17), (15, 17), (16, 17)] triggers candidate.
2025-04-11 18:59:47,096 [INFO] Final candidates: [(15, 17), (10, 17)]
2025-04-11 18:59:47,096 [INFO] Phase win: Collected 1unique candidate(s):[((15, 17), (10, 17))]
2025-04-11 18:59:47,096 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 18:59:47,097 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:47,097 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:47,097 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:47,097 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:47,097 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:47,097 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:47,097 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:47,097 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:47,098 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:47,103 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:47,103 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:47,103 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:47,103 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:47,115 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:47,116 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:47,116 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(11)), (np.int64(7), np.int64(11)))
2025-04-11 18:59:47,122 [INFO] Final candidates: []
2025-04-11 18:59:47,122 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:47,123 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:47,123 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:47,123 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:47,123 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:47,123 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:47,123 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:47,123 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:47,123 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:47,124 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:47,129 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:47,129 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:47,129 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:47,129 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:47,210 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:47,210 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:47,210 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(17)), (np.int64(10), np.int64(16)))
2025-04-11 18:59:47,213 [DEBUG] board coords: [(9, 17), (10, 17), (11, 17), (12, 17), (13, 17), (14, 17)]
2025-04-11 18:59:47,213 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1)]
2025-04-11 18:59:47,213 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 17), (12, 17)]
2025-04-11 18:59:47,213 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 1 0 1 1] with coords [(9, 17), (10, 17), (11, 17), (12, 17), (13, 17), (14, 17)] triggers candidate.
2025-04-11 18:59:47,213 [DEBUG] board coords: [(10, 17), (11, 17), (12, 17), (13, 17), (14, 17), (15, 17)]
2025-04-11 18:59:47,213 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 18:59:47,213 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 17), (15, 17)]
2025-04-11 18:59:47,214 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 0 1 1 0] with coords [(10, 17), (11, 17), (12, 17), (13, 17), (14, 17), (15, 17)] triggers candidate.
2025-04-11 18:59:47,217 [INFO] Final candidates: [(15, 17), (9, 17), (12, 17)]
2025-04-11 18:59:47,217 [INFO] Phase win: Collected 3unique candidate(s):[((15, 17), (9, 17)), ((15, 17), (12, 17)), ((9, 17), (12, 17))]
2025-04-11 18:59:47,217 [INFO] Phase 1 (immediate win): 3 candidate(s) found.
2025-04-11 18:59:47,218 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:47,218 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:47,218 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:47,218 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:47,218 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:47,218 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:47,218 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:47,219 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:47,219 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:47,226 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:47,226 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:47,226 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:47,226 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:47,258 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:47,258 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:47,259 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(15)), (np.int64(9), np.int64(16)))
2025-04-11 18:59:47,265 [INFO] Final candidates: []
2025-04-11 18:59:47,265 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:47,266 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:47,266 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:47,266 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:47,266 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:47,266 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:47,266 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:47,266 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:47,266 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:47,267 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:47,272 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:47,272 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:47,272 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:47,272 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:47,381 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:47,381 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:47,382 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(14)), (np.int64(10), np.int64(8)))
2025-04-11 18:59:47,388 [INFO] Final candidates: []
2025-04-11 18:59:47,388 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:47,389 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:47,389 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:47,389 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:47,389 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:47,389 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:47,389 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:47,389 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:47,389 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:47,390 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:47,397 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:47,397 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:47,397 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:47,397 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:47,405 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:47,405 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:47,405 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(18)), (np.int64(11), np.int64(18)))
2025-04-11 18:59:47,412 [INFO] Final candidates: []
2025-04-11 18:59:47,412 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:47,413 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:47,413 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:47,413 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:47,413 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:47,413 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:47,413 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:47,413 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:47,413 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:47,414 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:47,419 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:47,419 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:47,419 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:47,419 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:47,420 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:47,420 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:47,420 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(17)), (np.int64(15), np.int64(8)))
2025-04-11 18:59:47,423 [DEBUG] board coords: [(9, 17), (10, 17), (11, 17), (12, 17), (13, 17), (14, 17)]
2025-04-11 18:59:47,423 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 18:59:47,423 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 17), (10, 17)]
2025-04-11 18:59:47,423 [DEBUG] check_window_intermediate_custom (only one inserted(10, 17)): For L=6, window [0 0 1 1 1 1] with coords [(9, 17), (10, 17), (11, 17), (12, 17), (13, 17), (14, 17)] triggers candidate.
2025-04-11 18:59:47,423 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(10, 17), (11, 17), (12, 17), (13, 17), (14, 17), (15, 17)] triggers candidate.
2025-04-11 18:59:47,423 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 18:59:47,423 [DEBUG] board coords: [(11, 17), (12, 17), (13, 17), (14, 17), (15, 17), (16, 17)]
2025-04-11 18:59:47,423 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 18:59:47,423 [DEBUG] check_window_intermediate_custom: empty_cells=[(15, 17), (16, 17)]
2025-04-11 18:59:47,423 [DEBUG] check_window_intermediate_custom (only one inserted(15, 17)): For L=6, window [1 1 1 1 0 0] with coords [(11, 17), (12, 17), (13, 17), (14, 17), (15, 17), (16, 17)] triggers candidate.
2025-04-11 18:59:47,427 [INFO] Final candidates: [(15, 17), (10, 17)]
2025-04-11 18:59:47,427 [INFO] Phase win: Collected 1unique candidate(s):[((15, 17), (10, 17))]
2025-04-11 18:59:47,427 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 18:59:47,428 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:47,428 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:47,428 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:47,428 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:47,428 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:47,428 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:47,428 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:47,428 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:47,429 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:47,434 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:47,434 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:47,434 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:47,434 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:47,472 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:47,472 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:47,472 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(17)), (np.int64(13), np.int64(11)))
2025-04-11 18:59:47,475 [DEBUG] board coords: [(9, 17), (10, 17), (11, 17), (12, 17), (13, 17), (14, 17)]
2025-04-11 18:59:47,475 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 18:59:47,475 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 17), (10, 17)]
2025-04-11 18:59:47,475 [DEBUG] check_window_intermediate_custom (only one inserted(10, 17)): For L=6, window [0 0 1 1 1 1] with coords [(9, 17), (10, 17), (11, 17), (12, 17), (13, 17), (14, 17)] triggers candidate.
2025-04-11 18:59:47,475 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(10, 17), (11, 17), (12, 17), (13, 17), (14, 17), (15, 17)] triggers candidate.
2025-04-11 18:59:47,475 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 18:59:47,475 [DEBUG] board coords: [(11, 17), (12, 17), (13, 17), (14, 17), (15, 17), (16, 17)]
2025-04-11 18:59:47,475 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 18:59:47,475 [DEBUG] check_window_intermediate_custom: empty_cells=[(15, 17), (16, 17)]
2025-04-11 18:59:47,475 [DEBUG] check_window_intermediate_custom (only one inserted(15, 17)): For L=6, window [1 1 1 1 0 0] with coords [(11, 17), (12, 17), (13, 17), (14, 17), (15, 17), (16, 17)] triggers candidate.
2025-04-11 18:59:47,479 [INFO] Final candidates: [(15, 17), (10, 17)]
2025-04-11 18:59:47,479 [INFO] Phase win: Collected 1unique candidate(s):[((15, 17), (10, 17))]
2025-04-11 18:59:47,479 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 18:59:47,480 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:47,480 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:47,480 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:47,480 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:47,480 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:47,480 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:47,480 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:47,480 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:47,481 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:47,487 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:47,487 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:47,487 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:47,487 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:47,716 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:47,716 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:47,716 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(7)), (np.int64(13), np.int64(11)))
2025-04-11 18:59:47,723 [INFO] Final candidates: []
2025-04-11 18:59:47,723 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:47,724 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:47,724 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:47,724 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:47,724 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:47,724 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:47,724 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:47,724 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:47,724 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:47,725 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:47,730 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:47,730 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:47,730 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:47,730 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:47,738 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:47,738 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:47,738 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(15)), (np.int64(9), np.int64(16)))
2025-04-11 18:59:47,745 [INFO] Final candidates: []
2025-04-11 18:59:47,745 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:47,745 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:47,745 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:47,745 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:47,746 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:47,746 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:47,746 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:47,746 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:47,746 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:47,747 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:47,752 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:47,752 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:47,752 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:47,752 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:47,867 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:59:47,867 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:47,867 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(18)), (np.int64(13), np.int64(15)))
2025-04-11 18:59:47,875 [INFO] Final candidates: []
2025-04-11 18:59:47,875 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:47,877 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:47,877 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:47,877 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:47,877 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:47,878 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:47,878 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:47,878 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:47,878 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:47,880 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:47,890 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:47,890 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:47,890 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:47,890 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:48,150 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:48,150 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:48,150 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(17)), (np.int64(16), np.int64(13)))
2025-04-11 18:59:48,153 [DEBUG] board coords: [(9, 17), (10, 17), (11, 17), (12, 17), (13, 17), (14, 17)]
2025-04-11 18:59:48,153 [DEBUG] board values[np.int64(1), np.int64(0), np.int64(1), np.int64(0), np.int64(1), np.int64(1)]
2025-04-11 18:59:48,153 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 17), (12, 17)]
2025-04-11 18:59:48,154 [DEBUG] check_window_intermediate_custom: For L=6, window [1 0 1 0 1 1] with coords [(9, 17), (10, 17), (11, 17), (12, 17), (13, 17), (14, 17)] triggers candidate.
2025-04-11 18:59:48,157 [INFO] Final candidates: [(12, 17), (10, 17)]
2025-04-11 18:59:48,157 [INFO] Phase win: Collected 1unique candidate(s):[((12, 17), (10, 17))]
2025-04-11 18:59:48,157 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 18:59:48,158 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:48,158 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:48,158 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:48,158 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:48,158 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:48,158 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:48,158 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:48,158 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:48,159 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:48,164 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:48,164 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:48,164 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:48,165 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:48,174 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:48,174 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:48,174 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(10)), (np.int64(7), np.int64(6)))
2025-04-11 18:59:48,181 [INFO] Final candidates: []
2025-04-11 18:59:48,181 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:48,182 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:48,182 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:48,182 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:48,182 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:48,182 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:48,182 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:48,182 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:48,182 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:48,183 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:48,192 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:48,192 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:48,192 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:48,192 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:48,302 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:48,303 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:48,303 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(14)), (np.int64(13), np.int64(18)))
2025-04-11 18:59:48,310 [INFO] Final candidates: []
2025-04-11 18:59:48,310 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:48,310 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:48,310 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:48,310 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:48,310 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:48,311 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:48,311 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:48,311 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:48,311 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:48,312 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:48,317 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:48,317 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:48,317 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:48,317 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:48,321 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:48,321 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:48,321 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(13)), (np.int64(9), np.int64(14)))
2025-04-11 18:59:48,328 [INFO] Final candidates: []
2025-04-11 18:59:48,328 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:48,329 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:48,329 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:48,329 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:48,329 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:48,329 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:48,329 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:48,329 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:48,329 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:48,330 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:48,335 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:48,335 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:48,335 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:48,335 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:48,342 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:48,342 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:48,342 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(11)), (np.int64(7), np.int64(15)))
2025-04-11 18:59:48,348 [INFO] Final candidates: []
2025-04-11 18:59:48,348 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:48,349 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:48,349 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:48,349 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:48,349 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:48,349 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:48,349 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:48,349 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:48,349 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:48,350 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:48,357 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:48,357 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:48,357 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:48,357 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:48,456 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:59:48,456 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:48,456 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(9)), (np.int64(9), np.int64(11)))
2025-04-11 18:59:48,463 [INFO] Final candidates: []
2025-04-11 18:59:48,463 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:48,464 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:48,464 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:48,464 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:48,464 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:48,464 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:48,464 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:48,464 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:48,464 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:48,465 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:48,470 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:48,470 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:48,470 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:48,470 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:48,478 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:48,478 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:48,478 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(10)), (np.int64(10), np.int64(7)))
2025-04-11 18:59:48,485 [INFO] Final candidates: []
2025-04-11 18:59:48,485 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:48,486 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:48,486 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:48,486 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:48,486 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:48,486 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:48,486 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:48,486 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:48,486 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:48,487 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:48,492 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:48,492 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:48,492 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:48,492 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:48,493 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:48,493 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:48,493 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(6)), (np.int64(8), np.int64(14)))
2025-04-11 18:59:48,500 [INFO] Final candidates: []
2025-04-11 18:59:48,500 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:48,500 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:48,500 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:48,500 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:48,500 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:48,501 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:48,506 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:48,507 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:48,507 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:48,507 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:48,515 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:48,515 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:48,515 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(10)), (np.int64(16), np.int64(18)))
2025-04-11 18:59:48,523 [INFO] Final candidates: []
2025-04-11 18:59:48,523 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:48,525 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:48,525 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:48,525 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:48,525 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:48,525 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:48,525 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:48,525 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:48,525 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:48,526 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:48,531 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:48,531 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:48,531 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:48,531 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:48,706 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:59:48,707 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:48,707 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(4), np.int64(9)), (np.int64(7), np.int64(6)))
2025-04-11 18:59:48,713 [INFO] Final candidates: []
2025-04-11 18:59:48,713 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:48,714 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:48,714 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:48,714 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:48,714 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:48,714 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:48,714 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:48,714 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:48,714 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:48,715 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:48,720 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:48,720 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:48,720 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:48,720 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:48,789 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:59:48,789 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:48,789 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(6)), (np.int64(8), np.int64(14)))
2025-04-11 18:59:48,801 [INFO] Final candidates: []
2025-04-11 18:59:48,801 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:48,803 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:48,803 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:48,803 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:48,803 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:48,803 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:48,803 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:48,803 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:48,803 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:48,805 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:48,813 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:48,813 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:48,813 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:48,814 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:48,847 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:48,847 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:48,847 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(16)), (np.int64(13), np.int64(15)))
2025-04-11 18:59:48,858 [INFO] Final candidates: []
2025-04-11 18:59:48,858 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:48,858 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:48,858 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:48,858 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:48,858 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:48,859 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:48,859 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:48,859 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:48,859 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:48,859 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:48,865 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:48,865 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:48,865 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:48,865 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:48,916 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:59:48,916 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:48,916 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(13)), (np.int64(5), np.int64(8)))
2025-04-11 18:59:48,923 [INFO] Final candidates: []
2025-04-11 18:59:48,923 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:48,923 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:48,923 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:48,923 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:48,923 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:48,923 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:48,924 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:48,924 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:48,924 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:48,924 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:48,930 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:48,930 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:48,930 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:48,930 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:49,052 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:49,052 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:49,052 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(12)), (np.int64(12), np.int64(13)))
2025-04-11 18:59:49,059 [INFO] Final candidates: []
2025-04-11 18:59:49,059 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:49,060 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:49,060 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:49,060 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:49,060 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:49,060 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:49,060 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:49,060 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:49,060 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:49,062 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:49,067 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:49,067 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:49,067 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:49,067 [DEBUG] MCTS iteration 50: reached a node with 0 visits.
2025-04-11 18:59:49,067 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:49,124 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:59:49,124 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:49,124 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(14)), (np.int64(15), np.int64(12)))
2025-04-11 18:59:49,131 [INFO] Final candidates: []
2025-04-11 18:59:49,131 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:49,131 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:49,131 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:49,131 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:49,132 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:49,132 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:49,132 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:49,132 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:49,132 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:49,133 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:49,138 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:49,138 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:49,138 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:49,138 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:49,261 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:49,262 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:49,262 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(10)), (np.int64(14), np.int64(11)))
2025-04-11 18:59:49,268 [INFO] Final candidates: []
2025-04-11 18:59:49,268 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:49,269 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:49,269 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:49,269 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:49,269 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:49,269 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:49,269 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:49,269 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:49,269 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:49,270 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:49,275 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:49,275 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:49,275 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:49,276 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:49,320 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:49,320 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:49,320 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(12)), (np.int64(12), np.int64(6)))
2025-04-11 18:59:49,327 [INFO] Final candidates: []
2025-04-11 18:59:49,327 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:49,328 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:49,328 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:49,328 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:49,328 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:49,328 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:49,328 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:49,328 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:49,328 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:49,329 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:49,334 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:49,334 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:49,334 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:49,334 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:49,342 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:49,343 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:49,343 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(13)), (np.int64(14), np.int64(10)))
2025-04-11 18:59:49,349 [INFO] Final candidates: []
2025-04-11 18:59:49,349 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:49,350 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:49,350 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:49,350 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:49,350 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:49,350 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:49,350 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:49,350 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:49,350 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:49,351 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:49,357 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:49,357 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:49,357 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:49,357 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:49,552 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:49,553 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:49,554 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(11)), (np.int64(13), np.int64(13)))
2025-04-11 18:59:49,561 [INFO] Final candidates: []
2025-04-11 18:59:49,561 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:49,561 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:49,562 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:49,562 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:49,562 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:49,562 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:49,562 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:49,562 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:49,562 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:49,563 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:49,568 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:49,568 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:49,568 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:49,568 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:49,616 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:49,616 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:49,617 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(8)), (np.int64(16), np.int64(15)))
2025-04-11 18:59:49,623 [INFO] Final candidates: []
2025-04-11 18:59:49,623 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:49,624 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:49,624 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:49,624 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:49,624 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:49,624 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:49,624 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:49,624 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:49,624 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:49,625 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:49,630 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:49,630 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:49,630 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:49,630 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:49,678 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:49,678 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:49,678 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(8)), (np.int64(15), np.int64(8)))
2025-04-11 18:59:49,685 [INFO] Final candidates: []
2025-04-11 18:59:49,685 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:49,686 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:49,686 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:49,686 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:49,686 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:49,686 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:49,686 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:49,686 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:49,686 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:49,687 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:49,692 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:49,692 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:49,692 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:49,692 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:49,720 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:49,720 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:49,720 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(10)), (np.int64(13), np.int64(10)))
2025-04-11 18:59:49,727 [INFO] Final candidates: []
2025-04-11 18:59:49,727 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:49,728 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:49,728 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:49,728 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:49,728 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:49,728 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:49,728 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:49,728 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:49,728 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:49,729 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:49,734 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:49,734 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:49,734 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:49,735 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:49,819 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:59:49,819 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:49,819 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(7)), (np.int64(10), np.int64(11)))
2025-04-11 18:59:49,827 [INFO] Final candidates: []
2025-04-11 18:59:49,827 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:49,828 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:49,828 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:49,828 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:49,828 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:49,834 [INFO] Final candidates: [(11, 13), (11, 16)]
2025-04-11 18:59:49,834 [INFO] Phase defense: Collected 1unique candidate(s):[((11, 13), (11, 16))]
2025-04-11 18:59:49,834 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:59:49,834 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:49,939 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:49,939 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:49,939 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(15)), (np.int64(9), np.int64(7)))
2025-04-11 18:59:49,946 [INFO] Final candidates: []
2025-04-11 18:59:49,946 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:49,947 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:49,947 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:49,947 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:49,947 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:49,947 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:49,947 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:49,947 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:49,947 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:49,948 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:49,953 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:49,953 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:49,953 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:49,953 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:50,099 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:59:50,099 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:50,100 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(16)), (np.int64(6), np.int64(8)))
2025-04-11 18:59:50,106 [INFO] Final candidates: []
2025-04-11 18:59:50,106 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:50,107 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:50,107 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:50,107 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:50,107 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:50,107 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:50,107 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:50,107 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:50,107 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:50,108 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:50,113 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:50,113 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:50,114 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:50,114 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:50,117 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:50,118 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:50,118 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(16)), (np.int64(14), np.int64(12)))
2025-04-11 18:59:50,128 [INFO] Final candidates: []
2025-04-11 18:59:50,128 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:50,129 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:50,129 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:50,129 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:50,129 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:50,129 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:50,129 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:50,129 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:50,129 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:50,130 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:50,136 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:50,136 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:50,136 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:50,136 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:50,172 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:50,172 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:50,172 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(13)), (np.int64(7), np.int64(15)))
2025-04-11 18:59:50,182 [INFO] Final candidates: []
2025-04-11 18:59:50,182 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:50,183 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:50,183 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:50,183 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:50,183 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:50,189 [INFO] Final candidates: [(11, 7)]
2025-04-11 18:59:50,189 [INFO] Phase defense: Found only one candidate: (11, 7)
2025-04-11 18:59:50,189 [INFO] Phase defense: Collected 9unique candidate(s):[((11, 7), (np.int64(13), np.int64(7))), ((11, 7), (np.int64(11), np.int64(5))), ((11, 7), (np.int64(10), np.int64(6))), ((11, 7), (np.int64(11), np.int64(6))), ((11, 7), (np.int64(12), np.int64(6))), ((11, 7), (np.int64(10), np.int64(8))), ((11, 7), (np.int64(10), np.int64(7))), ((11, 7), (np.int64(9), np.int64(7))), ((11, 7), (np.int64(12), np.int64(7)))]
2025-04-11 18:59:50,189 [INFO] Phase 2 (defense): 9 candidate(s) found.
2025-04-11 18:59:50,189 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:50,398 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:59:50,399 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:50,399 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(10)), (np.int64(15), np.int64(17)))
2025-04-11 18:59:50,402 [DEBUG] board coords: [(10, 17), (11, 17), (12, 17), (13, 17), (14, 17), (15, 17)]
2025-04-11 18:59:50,402 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 18:59:50,402 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 17), (12, 17)]
2025-04-11 18:59:50,402 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 0 1 1 1] with coords [(10, 17), (11, 17), (12, 17), (13, 17), (14, 17), (15, 17)] triggers candidate.
2025-04-11 18:59:50,402 [DEBUG] board coords: [(11, 17), (12, 17), (13, 17), (14, 17), (15, 17), (16, 17)]
2025-04-11 18:59:50,402 [DEBUG] board values[np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(0)]
2025-04-11 18:59:50,402 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 17), (16, 17)]
2025-04-11 18:59:50,402 [DEBUG] check_window_intermediate_custom: For L=6, window [1 0 1 1 1 0] with coords [(11, 17), (12, 17), (13, 17), (14, 17), (15, 17), (16, 17)] triggers candidate.
2025-04-11 18:59:50,406 [INFO] Final candidates: [(12, 17), (10, 17), (16, 17)]
2025-04-11 18:59:50,406 [INFO] Phase win: Collected 3unique candidate(s):[((10, 17), (16, 17)), ((12, 17), (16, 17)), ((12, 17), (10, 17))]
2025-04-11 18:59:50,406 [INFO] Phase 1 (immediate win): 3 candidate(s) found.
2025-04-11 18:59:50,406 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:50,406 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:50,406 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:50,406 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:50,406 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:50,407 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:50,407 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:50,407 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:50,407 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:50,413 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:50,413 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:50,413 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:50,413 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:50,420 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:50,420 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:50,420 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(5)), (np.int64(9), np.int64(6)))
2025-04-11 18:59:50,427 [INFO] Final candidates: []
2025-04-11 18:59:50,427 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:50,428 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:50,428 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:50,428 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:50,428 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:50,428 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:50,428 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:50,428 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:50,428 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:50,429 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:50,434 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:50,434 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:50,434 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:50,434 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:50,507 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:59:50,507 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:50,507 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(8)), (np.int64(15), np.int64(8)))
2025-04-11 18:59:50,514 [INFO] Final candidates: []
2025-04-11 18:59:50,514 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:50,514 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:50,514 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:50,514 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:50,515 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:50,515 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:50,515 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:50,515 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:50,515 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:50,516 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:50,521 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:50,521 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:50,521 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:50,521 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:50,540 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:50,540 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:50,540 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(10)), (np.int64(10), np.int64(13)))
2025-04-11 18:59:50,547 [INFO] Final candidates: []
2025-04-11 18:59:50,547 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:50,548 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:50,548 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:50,548 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:50,548 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:50,548 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:50,548 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:50,548 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:50,548 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:50,549 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:50,554 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:50,554 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:50,554 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:50,554 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:50,611 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:50,611 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:50,611 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(14)), (np.int64(14), np.int64(11)))
2025-04-11 18:59:50,619 [INFO] Final candidates: []
2025-04-11 18:59:50,619 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:50,620 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:50,620 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:50,620 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:50,620 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:50,620 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:50,620 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:50,620 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:50,620 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:50,621 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:50,627 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:50,627 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:50,627 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:50,627 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:50,754 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:50,755 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:50,755 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(5)), (np.int64(9), np.int64(13)))
2025-04-11 18:59:50,762 [INFO] Final candidates: []
2025-04-11 18:59:50,762 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:50,762 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:50,762 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:50,762 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:50,762 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:50,762 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:50,762 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:50,762 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:50,763 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:50,763 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:50,768 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:50,768 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:50,768 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:50,769 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:50,773 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:50,773 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:50,773 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(17)), (np.int64(8), np.int64(8)))
2025-04-11 18:59:50,776 [DEBUG] board coords: [(11, 17), (12, 17), (13, 17), (14, 17), (15, 17), (16, 17)]
2025-04-11 18:59:50,776 [DEBUG] board values[np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(0), np.int64(1)]
2025-04-11 18:59:50,776 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 17), (15, 17)]
2025-04-11 18:59:50,776 [DEBUG] check_window_intermediate_custom: For L=6, window [1 0 1 1 0 1] with coords [(11, 17), (12, 17), (13, 17), (14, 17), (15, 17), (16, 17)] triggers candidate.
2025-04-11 18:59:50,780 [INFO] Final candidates: [(15, 17), (12, 17)]
2025-04-11 18:59:50,780 [INFO] Phase win: Collected 1unique candidate(s):[((15, 17), (12, 17))]
2025-04-11 18:59:50,780 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 18:59:50,781 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:50,781 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:50,781 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:50,781 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:50,781 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:50,781 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:50,781 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:50,781 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:50,782 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:50,787 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:50,787 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:50,787 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:50,787 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:50,820 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:50,820 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:50,820 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(12)), (np.int64(14), np.int64(16)))
2025-04-11 18:59:50,827 [INFO] Final candidates: []
2025-04-11 18:59:50,827 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:50,827 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:50,827 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:50,827 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:50,827 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:50,827 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:50,827 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:50,827 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:50,827 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:50,828 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:50,834 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:50,834 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:50,834 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:50,834 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:50,941 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:50,941 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:50,942 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(16), np.int64(17)), (np.int64(9), np.int64(6)))
2025-04-11 18:59:50,945 [DEBUG] board coords: [(11, 17), (12, 17), (13, 17), (14, 17), (15, 17), (16, 17)]
2025-04-11 18:59:50,945 [DEBUG] board values[np.int64(1), np.int64(0), np.int64(1), np.int64(1), np.int64(0), np.int64(1)]
2025-04-11 18:59:50,945 [DEBUG] check_window_intermediate_custom: empty_cells=[(12, 17), (15, 17)]
2025-04-11 18:59:50,945 [DEBUG] check_window_intermediate_custom: For L=6, window [1 0 1 1 0 1] with coords [(11, 17), (12, 17), (13, 17), (14, 17), (15, 17), (16, 17)] triggers candidate.
2025-04-11 18:59:50,950 [INFO] Final candidates: [(15, 17), (12, 17)]
2025-04-11 18:59:50,950 [INFO] Phase win: Collected 1unique candidate(s):[((15, 17), (12, 17))]
2025-04-11 18:59:50,950 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 18:59:50,951 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:50,951 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:50,951 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:50,951 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:50,951 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:50,951 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:50,951 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:50,951 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:50,952 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:50,957 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:50,957 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:50,957 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:50,957 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:50,959 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:50,959 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:50,959 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(8)), (np.int64(12), np.int64(7)))
2025-04-11 18:59:50,966 [INFO] Final candidates: []
2025-04-11 18:59:50,966 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:50,967 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:50,967 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:50,967 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:50,967 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:50,967 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:50,967 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:50,967 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:50,967 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:50,968 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:50,973 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:50,973 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:50,973 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:50,973 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:51,064 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:51,064 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:51,064 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(15)), (np.int64(12), np.int64(12)))
2025-04-11 18:59:51,071 [INFO] Final candidates: []
2025-04-11 18:59:51,071 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:51,072 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:51,072 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:51,072 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:51,072 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:51,072 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:51,072 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:51,072 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:51,072 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:51,073 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:51,078 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:51,078 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:51,078 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:51,078 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:51,187 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:59:51,187 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:51,187 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(7)), (np.int64(15), np.int64(12)))
2025-04-11 18:59:51,194 [INFO] Final candidates: []
2025-04-11 18:59:51,194 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:51,195 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:51,195 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:51,195 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:51,195 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:51,195 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:51,195 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:51,195 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:51,195 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:51,196 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:51,201 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:51,201 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:51,201 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:51,201 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:51,218 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:51,218 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:51,218 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(14)), (np.int64(13), np.int64(11)))
2025-04-11 18:59:51,225 [INFO] Final candidates: []
2025-04-11 18:59:51,225 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:51,226 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:51,226 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:51,226 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:51,226 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:51,226 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:51,226 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:51,226 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:51,226 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:51,227 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:51,233 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:51,234 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:51,234 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:51,234 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:51,427 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:59:51,427 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:51,427 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(12)), (np.int64(13), np.int64(15)))
2025-04-11 18:59:51,434 [INFO] Final candidates: []
2025-04-11 18:59:51,434 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:51,435 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:51,435 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:51,435 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:51,435 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:51,435 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:51,435 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:51,435 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:51,435 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:51,436 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:51,441 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:51,441 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:51,441 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:51,441 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:51,713 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:51,713 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:51,714 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(16)), (np.int64(11), np.int64(6)))
2025-04-11 18:59:51,720 [INFO] Final candidates: []
2025-04-11 18:59:51,720 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:51,721 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:51,721 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:51,721 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:51,721 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:51,722 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:51,727 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:51,727 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:51,727 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:51,727 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:51,771 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:59:51,771 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:51,771 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(10)), (np.int64(9), np.int64(7)))
2025-04-11 18:59:51,777 [INFO] Final candidates: []
2025-04-11 18:59:51,778 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:51,778 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:51,778 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:51,778 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:51,778 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:51,778 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:51,778 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:51,778 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:51,778 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:51,779 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:51,785 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:51,785 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:51,785 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:51,785 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:51,817 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:51,817 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:51,817 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(18)), (np.int64(15), np.int64(15)))
2025-04-11 18:59:51,824 [INFO] Final candidates: []
2025-04-11 18:59:51,824 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:51,825 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:51,825 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:51,825 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:51,825 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:51,825 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:51,825 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:51,825 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:51,825 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:51,826 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:51,831 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:51,831 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:51,831 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:51,831 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:51,869 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:51,869 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:51,869 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(18)), (np.int64(15), np.int64(8)))
2025-04-11 18:59:51,876 [INFO] Final candidates: []
2025-04-11 18:59:51,876 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:51,877 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:51,877 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:51,877 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:51,877 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:51,877 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:51,877 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:51,877 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:51,877 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:51,878 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:51,883 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:51,883 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:51,883 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:51,883 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:51,884 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:51,884 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:51,884 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(11)), (np.int64(16), np.int64(9)))
2025-04-11 18:59:51,893 [INFO] Final candidates: []
2025-04-11 18:59:51,893 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:51,894 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:51,894 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:51,894 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:51,894 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:51,894 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:51,894 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:51,894 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:51,894 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:51,895 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:51,901 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:51,901 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:51,901 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:51,901 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:51,971 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:51,971 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:51,971 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(12)), (np.int64(10), np.int64(18)))
2025-04-11 18:59:51,978 [INFO] Final candidates: []
2025-04-11 18:59:51,978 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:51,979 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:51,979 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:51,979 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:51,979 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:51,979 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:51,979 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:51,979 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:51,979 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:51,980 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:51,985 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:51,985 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:51,985 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:51,985 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:52,063 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:52,064 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:52,064 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(14)), (np.int64(15), np.int64(10)))
2025-04-11 18:59:52,071 [INFO] Final candidates: []
2025-04-11 18:59:52,071 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:52,071 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:52,071 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:52,071 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:52,072 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:52,072 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:52,072 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:52,072 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:52,072 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:52,073 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:52,081 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:52,081 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:52,081 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:52,081 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:52,159 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:52,159 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:52,160 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(12)), (np.int64(10), np.int64(7)))
2025-04-11 18:59:52,166 [INFO] Final candidates: []
2025-04-11 18:59:52,166 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:52,167 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:52,167 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:52,167 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:52,167 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:52,167 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:52,167 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:52,167 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:52,167 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:52,168 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:52,173 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:52,173 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:52,173 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:52,173 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:52,183 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:52,183 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:52,183 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(7)), (np.int64(8), np.int64(16)))
2025-04-11 18:59:52,190 [INFO] Final candidates: []
2025-04-11 18:59:52,190 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:52,191 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:52,191 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:52,191 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:52,191 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:52,191 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:52,191 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:52,191 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:52,191 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:52,192 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:52,197 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:52,197 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:52,197 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:52,197 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:52,217 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:52,217 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:52,217 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(7)), (np.int64(12), np.int64(16)))
2025-04-11 18:59:52,224 [INFO] Final candidates: []
2025-04-11 18:59:52,224 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:52,224 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:52,225 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:52,225 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:52,225 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:52,225 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:52,225 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:52,225 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:52,225 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:52,226 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:52,231 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:52,231 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:52,231 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:52,231 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:52,275 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:52,276 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:52,276 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(10)), (np.int64(16), np.int64(15)))
2025-04-11 18:59:52,282 [INFO] Final candidates: []
2025-04-11 18:59:52,282 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:52,283 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:52,283 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:52,283 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:52,283 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:52,283 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:52,283 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:52,283 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:52,283 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:52,284 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:52,289 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:52,289 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:52,289 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:52,289 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:52,406 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:59:52,407 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:52,407 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(17)), (np.int64(14), np.int64(14)))
2025-04-11 18:59:52,410 [DEBUG] board coords: [(9, 17), (10, 17), (11, 17), (12, 17), (13, 17), (14, 17)]
2025-04-11 18:59:52,410 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 18:59:52,410 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 17), (10, 17)]
2025-04-11 18:59:52,410 [DEBUG] check_window_intermediate_custom (only one inserted(10, 17)): For L=6, window [0 0 1 1 1 1] with coords [(9, 17), (10, 17), (11, 17), (12, 17), (13, 17), (14, 17)] triggers candidate.
2025-04-11 18:59:52,410 [DEBUG] check_window_margin_custom: For L=6, window [0 1 1 1 1 0] with coords [(10, 17), (11, 17), (12, 17), (13, 17), (14, 17), (15, 17)] triggers candidate.
2025-04-11 18:59:52,410 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 18:59:52,410 [DEBUG] board coords: [(11, 17), (12, 17), (13, 17), (14, 17), (15, 17), (16, 17)]
2025-04-11 18:59:52,410 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 18:59:52,410 [DEBUG] check_window_intermediate_custom: empty_cells=[(15, 17), (16, 17)]
2025-04-11 18:59:52,410 [DEBUG] check_window_intermediate_custom (only one inserted(15, 17)): For L=6, window [1 1 1 1 0 0] with coords [(11, 17), (12, 17), (13, 17), (14, 17), (15, 17), (16, 17)] triggers candidate.
2025-04-11 18:59:52,414 [INFO] Final candidates: [(15, 17), (10, 17)]
2025-04-11 18:59:52,414 [INFO] Phase win: Collected 1unique candidate(s):[((15, 17), (10, 17))]
2025-04-11 18:59:52,414 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 18:59:52,415 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:52,415 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:52,415 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:52,415 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:52,415 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:52,415 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:52,415 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:52,415 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:52,416 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:52,421 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:52,421 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:52,421 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:52,421 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:52,428 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:52,428 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:52,428 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(17)), (np.int64(13), np.int64(15)))
2025-04-11 18:59:52,431 [DEBUG] board coords: [(9, 17), (10, 17), (11, 17), (12, 17), (13, 17), (14, 17)]
2025-04-11 18:59:52,431 [DEBUG] board values[np.int64(1), np.int64(0), np.int64(1), np.int64(0), np.int64(1), np.int64(1)]
2025-04-11 18:59:52,431 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 17), (12, 17)]
2025-04-11 18:59:52,431 [DEBUG] check_window_intermediate_custom: For L=6, window [1 0 1 0 1 1] with coords [(9, 17), (10, 17), (11, 17), (12, 17), (13, 17), (14, 17)] triggers candidate.
2025-04-11 18:59:52,435 [INFO] Final candidates: [(12, 17), (10, 17)]
2025-04-11 18:59:52,435 [INFO] Phase win: Collected 1unique candidate(s):[((12, 17), (10, 17))]
2025-04-11 18:59:52,435 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 18:59:52,436 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:52,436 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:52,436 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:52,436 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:52,436 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:52,436 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:52,436 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:52,436 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:52,437 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:52,443 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:52,443 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:52,443 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:52,443 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:52,555 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:59:52,556 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:52,556 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(18)), (np.int64(7), np.int64(6)))
2025-04-11 18:59:52,562 [INFO] Final candidates: []
2025-04-11 18:59:52,562 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:52,563 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:52,563 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:52,563 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:52,563 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:52,563 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:52,563 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:52,563 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:52,563 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:52,564 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:52,569 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:52,569 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:52,569 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:52,569 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:52,581 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:52,582 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:52,582 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(13)), (np.int64(13), np.int64(7)))
2025-04-11 18:59:52,588 [INFO] Final candidates: []
2025-04-11 18:59:52,588 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:52,589 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:52,589 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:52,589 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:52,589 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:52,589 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:52,589 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:52,589 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:52,589 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:52,590 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:52,595 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:52,595 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:52,595 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:52,595 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:52,596 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:52,596 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:52,596 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(15), np.int64(18)), (np.int64(6), np.int64(7)))
2025-04-11 18:59:52,603 [INFO] Final candidates: []
2025-04-11 18:59:52,603 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:52,604 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:52,604 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:52,604 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:52,604 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:52,604 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:52,604 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:52,604 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:52,604 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:52,605 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:52,610 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:52,610 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:52,610 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:52,610 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:52,702 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:52,702 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:52,702 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(14), np.int64(7)), (np.int64(13), np.int64(15)))
2025-04-11 18:59:52,709 [INFO] Final candidates: []
2025-04-11 18:59:52,709 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:52,709 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:52,709 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:52,709 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:52,709 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:52,710 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:52,710 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:52,710 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:52,710 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:52,711 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:52,716 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:52,716 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:52,716 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:52,716 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:52,739 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:59:52,739 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:52,739 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(10)), (np.int64(16), np.int64(15)))
2025-04-11 18:59:52,746 [INFO] Final candidates: []
2025-04-11 18:59:52,746 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:52,747 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:52,747 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:52,747 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:52,747 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:52,747 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:52,747 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:52,747 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:52,747 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:52,748 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:52,753 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:52,753 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:52,753 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:52,753 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:52,759 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:52,759 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:52,759 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(10)), (np.int64(16), np.int64(18)))
2025-04-11 18:59:52,766 [INFO] Final candidates: []
2025-04-11 18:59:52,766 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:52,767 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:52,767 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:52,767 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:52,767 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:52,767 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:52,767 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:52,767 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:52,767 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:52,768 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:52,774 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:52,774 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:52,774 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:52,774 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:52,965 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 18:59:52,966 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:52,966 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(16)), (np.int64(13), np.int64(15)))
2025-04-11 18:59:52,972 [INFO] Final candidates: []
2025-04-11 18:59:52,972 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:52,973 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:52,973 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:52,973 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:52,973 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:52,973 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:52,973 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:52,973 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:52,973 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:52,974 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:52,979 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:52,979 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:52,979 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:52,980 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:53,002 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:53,002 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:53,003 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(11)), (np.int64(10), np.int64(7)))
2025-04-11 18:59:53,012 [INFO] Final candidates: []
2025-04-11 18:59:53,012 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:53,013 [DEBUG] board coords: [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)]
2025-04-11 18:59:53,013 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 18:59:53,013 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 6), (11, 7)]
2025-04-11 18:59:53,013 [DEBUG] check_window_intermediate_custom (only one inserted(11, 7)): For L=6, window [0 0 2 2 2 2] with coords [(11, 6), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11)] triggers candidate.
2025-04-11 18:59:53,013 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:53,013 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:53,013 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:53,013 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:53,014 [DEBUG] check_window_margin_custom: For L=7, window [0 2 2 2 2 2 0] with coords [(11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13)] triggers candidate.
2025-04-11 18:59:53,020 [INFO] Final candidates: [(11, 13), (11, 7), (11, 16)]
2025-04-11 18:59:53,020 [INFO] Phase defense: Collected 3unique candidate(s):[((11, 7), (11, 16)), ((11, 13), (11, 16)), ((11, 13), (11, 7))]
2025-04-11 18:59:53,020 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-11 18:59:53,020 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:53,088 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:53,088 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-11 18:59:53,088 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(7)), (np.int64(10), np.int64(12)))
2025-04-11 18:59:53,095 [INFO] Final candidates: []
2025-04-11 18:59:53,095 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 18:59:53,096 [DEBUG] board coords: [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)]
2025-04-11 18:59:53,096 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(2), np.int64(0)]
2025-04-11 18:59:53,096 [DEBUG] check_window_intermediate_custom: empty_cells=[(11, 13), (11, 16)]
2025-04-11 18:59:53,096 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 0 2 2 0] with coords [(11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16)] triggers candidate.
2025-04-11 18:59:53,102 [INFO] Final candidates: [(11, 13), (11, 16)]
2025-04-11 18:59:53,102 [INFO] Phase defense: Collected 1unique candidate(s):[((11, 13), (11, 16))]
2025-04-11 18:59:53,102 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-11 18:59:53,102 [INFO] Default policy: Starting random playout.
2025-04-11 18:59:53,151 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 18:59:53,152 [INFO] MCTS: Search finished. Best move selected with 1 visits.
2025-04-11 18:59:53,152 [INFO] Phase 2 (defense): MCTS selected move: ((11, 8), (11, 15))
2025-04-11 18:59:53,152 [INFO] Phase 2 (defense): MCTS selected move string : J12,Q12
2025-04-11 18:59:53,152 [INFO] MCTS (defense candidates) selected move: J12,Q12
2025-04-11 19:00:16,842 [INFO] Starting pre-MCTS candidate collection.
2025-04-11 19:00:16,846 [DEBUG] board coords: [(9, 13), (10, 14), (11, 15), (12, 16), (13, 17), (14, 18)]
2025-04-11 19:00:16,846 [DEBUG] board values[np.int64(0), np.int64(1), np.int64(1), np.int64(0), np.int64(1), np.int64(1)]
2025-04-11 19:00:16,846 [DEBUG] check_window_intermediate_custom: empty_cells=[(9, 13), (12, 16)]
2025-04-11 19:00:16,847 [DEBUG] check_window_intermediate_custom: For L=6, window [0 1 1 0 1 1] with coords [(9, 13), (10, 14), (11, 15), (12, 16), (13, 17), (14, 18)] triggers candidate.
2025-04-11 19:00:16,849 [INFO] Final candidates: [(12, 16), (9, 13)]
2025-04-11 19:00:16,849 [INFO] Phase win: Collected 1unique candidate(s):[((12, 16), (9, 13))]
2025-04-11 19:00:16,849 [INFO] Phase 1 (immediate win): 1 candidate(s) found.
2025-04-11 19:00:16,849 [INFO] MCTS: Starting search for 100 iterations.
2025-04-11 19:00:16,849 [DEBUG] Tree_policy iteration 1: Expanding move ((12, 16), (9, 13))
2025-04-11 19:00:16,853 [DEBUG] board coords: [(7, 11), (8, 12), (9, 13), (10, 14), (11, 15), (12, 16)]
2025-04-11 19:00:16,853 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 19:00:16,853 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 11), (8, 12)]
2025-04-11 19:00:16,854 [DEBUG] check_window_intermediate_custom (only one inserted(8, 12)): For L=6, window [0 0 1 1 1 1] with coords [(7, 11), (8, 12), (9, 13), (10, 14), (11, 15), (12, 16)] triggers candidate.
2025-04-11 19:00:16,856 [INFO] Final candidates: [(8, 12)]
2025-04-11 19:00:16,856 [INFO] Phase win: Found only one candidate: (8, 12)
2025-04-11 19:00:16,856 [INFO] Phase win: Collected 11unique candidate(s):[((8, 12), (np.int64(7), np.int64(12))), ((8, 12), (np.int64(8), np.int64(11))), ((8, 12), (np.int64(9), np.int64(12))), ((8, 12), (np.int64(7), np.int64(11))), ((8, 12), (np.int64(7), np.int64(13))), ((8, 12), (np.int64(8), np.int64(13))), ((8, 12), (np.int64(10), np.int64(12))), ((8, 12), (np.int64(6), np.int64(12))), ((8, 12), (np.int64(8), np.int64(10))), ((8, 12), (np.int64(9), np.int64(11))), ((8, 12), (np.int64(8), np.int64(14)))]
2025-04-11 19:00:16,856 [INFO] Phase 1 (immediate win): 11 candidate(s) found.
2025-04-11 19:00:16,860 [DEBUG] board coords: [(7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12)]
2025-04-11 19:00:16,860 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(2), np.int64(2), np.int64(2), np.int64(2)]
2025-04-11 19:00:16,860 [DEBUG] check_window_intermediate_custom: empty_cells=[(7, 7), (8, 8)]
2025-04-11 19:00:16,860 [DEBUG] check_window_intermediate_custom (only one inserted(8, 8)): For L=6, window [0 0 2 2 2 2] with coords [(7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12)] triggers candidate.
2025-04-11 19:00:16,860 [DEBUG] check_window_margin_custom: For L=6, window [0 2 2 2 2 0] with coords [(8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13)] triggers candidate.
2025-04-11 19:00:16,860 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 19:00:16,861 [DEBUG] board coords: [(10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15)]
2025-04-11 19:00:16,861 [DEBUG] board values[np.int64(2), np.int64(2), np.int64(2), np.int64(0), np.int64(2), np.int64(0)]
2025-04-11 19:00:16,861 [DEBUG] check_window_intermediate_custom: empty_cells=[(13, 13), (15, 15)]
2025-04-11 19:00:16,861 [DEBUG] check_window_intermediate_custom: For L=6, window [2 2 2 0 2 0] with coords [(10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15)] triggers candidate.
2025-04-11 19:00:16,863 [INFO] Final candidates: [(8, 8), (11, 13), (15, 15), (13, 13)]
2025-04-11 19:00:16,863 [INFO] Phase defense: Collected 6unique candidate(s):[((8, 8), (15, 15)), ((11, 13), (15, 15)), ((8, 8), (13, 13)), ((11, 13), (13, 13)), ((15, 15), (13, 13)), ((8, 8), (11, 13))]
2025-04-11 19:00:16,863 [INFO] Phase 2 (defense): 6 candidate(s) found.
2025-04-11 19:00:16,863 [DEBUG] MCTS iteration 0: reached a node with 0 visits.
2025-04-11 19:00:16,863 [INFO] Default policy: Starting random playout.
2025-04-11 19:00:16,863 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 19:02:11,087 [INFO] Game terminated.
