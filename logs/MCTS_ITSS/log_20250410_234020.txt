2025-04-10 23:40:31,102 [INFO] Starting pre-MCTS candidate collection.
2025-04-10 23:40:31,110 [INFO] Phase win: Collected 0 candidate(s).
2025-04-10 23:40:31,118 [INFO] Phase defense: Collected 0 candidate(s).
2025-04-10 23:40:31,118 [INFO] No candidate found in Phase 1 or Phase 2; using full legal moves for MCTS.
2025-04-10 23:40:31,119 [INFO] MCTS: Starting search for 50 iterations.
2025-04-10 23:40:31,119 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(11)), (np.int64(7), np.int64(9)))
2025-04-10 23:40:31,119 [DEBUG] MCTS iteration 0: reached a node with 0 visits.
2025-04-10 23:40:31,119 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:31,406 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:40:31,700 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(11)), (np.int64(6), np.int64(9)))
2025-04-10 23:40:31,700 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:32,090 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:40:32,090 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(11)), (np.int64(8), np.int64(10)))
2025-04-10 23:40:32,090 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:32,346 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:40:32,346 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(8)), (np.int64(8), np.int64(11)))
2025-04-10 23:40:32,346 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:32,606 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:40:32,606 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(9)), (np.int64(9), np.int64(11)))
2025-04-10 23:40:32,606 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:32,808 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:40:32,808 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(9)), (np.int64(9), np.int64(10)))
2025-04-10 23:40:32,809 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:32,986 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:40:32,986 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(6)), (np.int64(6), np.int64(9)))
2025-04-10 23:40:32,986 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:33,246 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:40:33,247 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(10)), (np.int64(9), np.int64(10)))
2025-04-10 23:40:33,247 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:33,552 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:40:33,552 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(9)), (np.int64(6), np.int64(9)))
2025-04-10 23:40:33,552 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:33,847 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:40:33,848 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(9)), (np.int64(7), np.int64(8)))
2025-04-10 23:40:33,848 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:34,074 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:40:34,074 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(7)), (np.int64(10), np.int64(10)))
2025-04-10 23:40:34,074 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:34,355 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:40:34,355 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(8)), (np.int64(10), np.int64(8)))
2025-04-10 23:40:34,355 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:34,460 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:40:34,460 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(9)), (np.int64(6), np.int64(9)))
2025-04-10 23:40:34,461 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:34,595 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:40:34,595 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(10)), (np.int64(10), np.int64(10)))
2025-04-10 23:40:34,596 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:34,855 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:40:34,856 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(8)), (np.int64(11), np.int64(9)))
2025-04-10 23:40:34,856 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:35,173 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:40:35,174 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(9)), (np.int64(10), np.int64(7)))
2025-04-10 23:40:35,174 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:35,305 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:40:35,305 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(8)), (np.int64(10), np.int64(10)))
2025-04-10 23:40:35,306 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:35,531 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:40:35,531 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(11)), (np.int64(9), np.int64(7)))
2025-04-10 23:40:35,531 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:35,690 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:40:35,690 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(9)), (np.int64(8), np.int64(7)))
2025-04-10 23:40:35,690 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:35,997 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:40:35,997 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(7)), (np.int64(7), np.int64(8)))
2025-04-10 23:40:35,997 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:36,086 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:40:36,086 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(8)), (np.int64(7), np.int64(9)))
2025-04-10 23:40:36,087 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:36,286 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:40:36,286 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(6)), (np.int64(7), np.int64(8)))
2025-04-10 23:40:36,286 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:36,488 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:40:36,488 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(8)), (np.int64(11), np.int64(9)))
2025-04-10 23:40:36,488 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:36,637 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:40:36,637 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(8)), (np.int64(9), np.int64(6)))
2025-04-10 23:40:36,637 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:36,872 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:40:37,758 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(8)), (np.int64(6), np.int64(9)))
2025-04-10 23:40:37,758 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:37,994 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:40:37,995 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(11)), (np.int64(8), np.int64(8)))
2025-04-10 23:40:37,995 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:38,206 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:40:38,206 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(9)), (np.int64(8), np.int64(7)))
2025-04-10 23:40:38,207 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:38,675 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:40:38,675 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(8)), (np.int64(7), np.int64(9)))
2025-04-10 23:40:38,675 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:39,040 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:40:39,041 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(10)), (np.int64(10), np.int64(10)))
2025-04-10 23:40:39,041 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:39,220 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:40:39,220 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(8)), (np.int64(10), np.int64(10)))
2025-04-10 23:40:39,221 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:39,531 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:40:39,531 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(9)), (np.int64(9), np.int64(6)))
2025-04-10 23:40:39,531 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:39,931 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:40:39,932 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(10)), (np.int64(7), np.int64(8)))
2025-04-10 23:40:39,932 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:40,187 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:40:40,187 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(7)), (np.int64(8), np.int64(8)))
2025-04-10 23:40:40,187 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:40,515 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:40:40,515 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(11)), (np.int64(10), np.int64(10)))
2025-04-10 23:40:40,515 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:40,841 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:40:40,841 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(7)), (np.int64(9), np.int64(6)))
2025-04-10 23:40:40,842 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:41,049 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:40:41,049 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(11)), (np.int64(10), np.int64(11)))
2025-04-10 23:40:41,049 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:41,268 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:40:41,268 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(8)), (np.int64(8), np.int64(8)))
2025-04-10 23:40:41,268 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:41,521 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:40:41,521 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(8)), (np.int64(8), np.int64(7)))
2025-04-10 23:40:41,522 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:41,858 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:40:41,859 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(11)), (np.int64(11), np.int64(10)))
2025-04-10 23:40:41,859 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:42,230 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:40:42,230 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(10)), (np.int64(8), np.int64(7)))
2025-04-10 23:40:42,230 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:42,670 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:40:42,670 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(7)), (np.int64(6), np.int64(9)))
2025-04-10 23:40:42,670 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:42,838 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:40:42,838 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(8)), (np.int64(7), np.int64(9)))
2025-04-10 23:40:42,838 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:43,197 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:40:43,197 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(10)), (np.int64(8), np.int64(10)))
2025-04-10 23:40:43,197 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:43,484 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:40:43,484 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(9)), (np.int64(10), np.int64(11)))
2025-04-10 23:40:43,484 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:43,589 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:40:43,590 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(11)), (np.int64(11), np.int64(10)))
2025-04-10 23:40:43,590 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:43,794 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:40:43,796 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(10)), (np.int64(7), np.int64(8)))
2025-04-10 23:40:43,796 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:44,107 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:40:44,107 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(9)), (np.int64(10), np.int64(10)))
2025-04-10 23:40:44,108 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:44,290 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:40:44,290 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(10)), (np.int64(8), np.int64(11)))
2025-04-10 23:40:44,291 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:44,421 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:40:44,421 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(11)), (np.int64(11), np.int64(9)))
2025-04-10 23:40:44,421 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:44,831 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:40:44,832 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(6)), (np.int64(11), np.int64(9)))
2025-04-10 23:40:44,832 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:45,226 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:40:45,226 [INFO] MCTS: Search finished. Best move selected with 1 visits.
2025-04-10 23:40:45,226 [INFO] MCTS selected move: M10,K8
2025-04-10 23:40:45,397 [INFO] Starting pre-MCTS candidate collection.
2025-04-10 23:40:45,405 [INFO] Phase win: Collected 0 candidate(s).
2025-04-10 23:40:45,413 [INFO] Phase defense: Collected 0 candidate(s).
2025-04-10 23:40:45,413 [INFO] No candidate found in Phase 1 or Phase 2; using full legal moves for MCTS.
2025-04-10 23:40:45,413 [INFO] MCTS: Starting search for 50 iterations.
2025-04-10 23:40:45,413 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(13)), (np.int64(8), np.int64(13)))
2025-04-10 23:40:45,414 [DEBUG] MCTS iteration 0: reached a node with 0 visits.
2025-04-10 23:40:45,414 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:45,811 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:40:45,811 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(9)), (np.int64(9), np.int64(13)))
2025-04-10 23:40:45,811 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:45,929 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:40:45,930 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(10)), (np.int64(10), np.int64(10)))
2025-04-10 23:40:45,930 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:46,215 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:40:46,215 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(11)), (np.int64(10), np.int64(13)))
2025-04-10 23:40:46,216 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:46,598 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:40:46,598 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(12)), (np.int64(8), np.int64(11)))
2025-04-10 23:40:46,598 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:46,956 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:40:46,957 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(12)), (np.int64(9), np.int64(6)))
2025-04-10 23:40:46,957 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:47,352 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:40:47,352 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(9)), (np.int64(9), np.int64(12)))
2025-04-10 23:40:47,353 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:47,600 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:40:47,601 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(7)), (np.int64(7), np.int64(8)))
2025-04-10 23:40:47,601 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:47,802 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:40:47,802 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(8)), (np.int64(9), np.int64(12)))
2025-04-10 23:40:47,802 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:48,017 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:40:48,017 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(12)), (np.int64(6), np.int64(10)))
2025-04-10 23:40:48,018 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:48,321 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:40:48,321 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(12)), (np.int64(9), np.int64(10)))
2025-04-10 23:40:48,321 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:48,674 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:40:48,674 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(9)), (np.int64(11), np.int64(8)))
2025-04-10 23:40:48,675 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:48,984 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:40:48,984 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(9)), (np.int64(7), np.int64(13)))
2025-04-10 23:40:48,984 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:49,276 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:40:49,276 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(7)), (np.int64(11), np.int64(10)))
2025-04-10 23:40:49,277 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:49,613 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:40:49,613 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(10)), (np.int64(7), np.int64(6)))
2025-04-10 23:40:49,613 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:49,835 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:40:49,835 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(12)), (np.int64(10), np.int64(7)))
2025-04-10 23:40:49,835 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:50,187 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:40:50,187 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(10)), (np.int64(10), np.int64(8)))
2025-04-10 23:40:50,188 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:50,542 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:40:50,542 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(7)), (np.int64(9), np.int64(12)))
2025-04-10 23:40:50,543 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:50,857 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:40:50,857 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(9)), (np.int64(7), np.int64(6)))
2025-04-10 23:40:50,857 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:50,955 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:40:50,955 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(10)), (np.int64(10), np.int64(13)))
2025-04-10 23:40:50,955 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:51,215 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:40:51,215 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(12)), (np.int64(5), np.int64(8)))
2025-04-10 23:40:51,216 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:51,341 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:40:51,341 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(10)), (np.int64(9), np.int64(13)))
2025-04-10 23:40:51,342 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:51,547 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:40:51,547 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(12)), (np.int64(8), np.int64(12)))
2025-04-10 23:40:51,547 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:51,668 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:40:51,668 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(10)), (np.int64(5), np.int64(8)))
2025-04-10 23:40:51,669 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:52,018 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:40:52,019 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(12)), (np.int64(9), np.int64(6)))
2025-04-10 23:40:52,019 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:52,309 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:40:52,309 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(10)), (np.int64(7), np.int64(7)))
2025-04-10 23:40:52,309 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:52,650 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:40:52,650 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(7)), (np.int64(10), np.int64(13)))
2025-04-10 23:40:52,650 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:53,037 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:40:53,037 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(10)), (np.int64(8), np.int64(13)))
2025-04-10 23:40:53,038 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:53,209 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:40:53,209 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(8)), (np.int64(9), np.int64(6)))
2025-04-10 23:40:53,210 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:53,509 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:40:53,509 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(11)), (np.int64(9), np.int64(12)))
2025-04-10 23:40:53,509 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:53,800 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:40:53,800 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(7)), (np.int64(6), np.int64(13)))
2025-04-10 23:40:53,800 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:53,915 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:40:53,916 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(12)), (np.int64(8), np.int64(9)))
2025-04-10 23:40:53,916 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:54,199 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:40:54,199 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(13)), (np.int64(7), np.int64(11)))
2025-04-10 23:40:54,199 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:54,458 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:40:54,458 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(8)), (np.int64(4), np.int64(10)))
2025-04-10 23:40:54,459 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:54,713 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:40:54,713 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(10)), (np.int64(12), np.int64(11)))
2025-04-10 23:40:54,714 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:54,826 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:40:54,826 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(14)), (np.int64(4), np.int64(11)))
2025-04-10 23:40:54,827 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:55,022 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:40:55,023 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(12)), (np.int64(11), np.int64(12)))
2025-04-10 23:40:55,023 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:55,171 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:40:55,172 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(11)), (np.int64(6), np.int64(13)))
2025-04-10 23:40:55,172 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:55,522 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:40:55,522 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(8)), (np.int64(3), np.int64(11)))
2025-04-10 23:40:55,522 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:55,788 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:40:55,788 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(11)), (np.int64(10), np.int64(13)))
2025-04-10 23:40:55,788 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:56,026 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:40:56,026 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(11)), (np.int64(9), np.int64(12)))
2025-04-10 23:40:56,026 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:56,261 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:40:56,262 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(10)), (np.int64(3), np.int64(11)))
2025-04-10 23:40:56,262 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:56,367 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:40:56,367 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(13)), (np.int64(6), np.int64(10)))
2025-04-10 23:40:56,367 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:56,616 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:40:56,617 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(13)), (np.int64(11), np.int64(12)))
2025-04-10 23:40:56,617 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:56,861 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:40:56,862 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(10)), (np.int64(11), np.int64(9)))
2025-04-10 23:40:56,862 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:57,204 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:40:57,204 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(14)), (np.int64(10), np.int64(11)))
2025-04-10 23:40:57,205 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:57,446 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:40:57,446 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(11)), (np.int64(11), np.int64(10)))
2025-04-10 23:40:57,446 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:57,712 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:40:57,712 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(12)), (np.int64(7), np.int64(11)))
2025-04-10 23:40:57,712 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:58,016 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:40:58,016 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(12)), (np.int64(11), np.int64(10)))
2025-04-10 23:40:58,017 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:58,283 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:40:58,283 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(10)), (np.int64(5), np.int64(11)))
2025-04-10 23:40:58,284 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:58,610 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:40:58,610 [INFO] MCTS: Search finished. Best move selected with 1 visits.
2025-04-10 23:40:58,610 [INFO] MCTS selected move: O6,O9
2025-04-10 23:40:58,775 [INFO] Starting pre-MCTS candidate collection.
2025-04-10 23:40:58,783 [INFO] Phase win: Collected 0 candidate(s).
2025-04-10 23:40:58,788 [DEBUG] check_window_intermediate_custom: L=6, window [1 1 1 1 0 0], coords [(6, 12), (7, 11), (8, 10), (9, 9), (10, 8), (11, 7)] candidate.
2025-04-10 23:40:58,790 [INFO] Phase defense: Collected 1 candidate(s).
2025-04-10 23:40:58,790 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-10 23:40:58,791 [INFO] MCTS: Starting search for 50 iterations.
2025-04-10 23:40:58,791 [DEBUG] Tree_policy iteration 1: Expanding move ((10, 8), (11, 7))
2025-04-10 23:40:58,791 [DEBUG] MCTS iteration 0: reached a node with 0 visits.
2025-04-10 23:40:58,791 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:59,240 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:40:59,240 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:40:59,240 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(15)), (np.int64(12), np.int64(7)))
2025-04-10 23:40:59,241 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:59,297 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:40:59,297 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:40:59,297 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(14)), (np.int64(12), np.int64(5)))
2025-04-10 23:40:59,298 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:59,476 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:40:59,476 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:40:59,476 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(4), np.int64(9)), (np.int64(11), np.int64(5)))
2025-04-10 23:40:59,477 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:59,657 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:40:59,657 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:40:59,657 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(12)), (np.int64(4), np.int64(12)))
2025-04-10 23:40:59,657 [INFO] Default policy: Starting random playout.
2025-04-10 23:40:59,810 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:40:59,810 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:40:59,810 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(5)), (np.int64(3), np.int64(12)))
2025-04-10 23:40:59,810 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:00,045 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:00,045 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:00,045 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(15)), (np.int64(8), np.int64(15)))
2025-04-10 23:41:00,046 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:00,356 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:41:00,356 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:00,356 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(6)), (np.int64(7), np.int64(14)))
2025-04-10 23:41:00,357 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:00,689 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:00,689 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:00,689 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(4), np.int64(9)), (np.int64(12), np.int64(8)))
2025-04-10 23:41:00,690 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:01,037 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:41:01,037 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:01,038 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(12)), (np.int64(8), np.int64(14)))
2025-04-10 23:41:01,039 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:01,249 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:41:01,249 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:01,249 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(4), np.int64(14)), (np.int64(11), np.int64(10)))
2025-04-10 23:41:01,250 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:01,584 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:01,584 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:01,584 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(14)), (np.int64(7), np.int64(13)))
2025-04-10 23:41:01,585 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:01,894 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:41:01,894 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:01,894 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(4), np.int64(9)), (np.int64(3), np.int64(14)))
2025-04-10 23:41:01,894 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:02,231 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:02,231 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:02,231 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(9)), (np.int64(13), np.int64(8)))
2025-04-10 23:41:02,232 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:02,495 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:02,495 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:02,496 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(9)), (np.int64(10), np.int64(7)))
2025-04-10 23:41:02,496 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:02,759 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:02,759 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:02,759 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(3), np.int64(12)), (np.int64(11), np.int64(6)))
2025-04-10 23:41:02,760 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:03,019 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:41:03,020 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:03,020 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(10)), (np.int64(12), np.int64(11)))
2025-04-10 23:41:03,020 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:03,214 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:41:03,215 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:03,215 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(14)), (np.int64(5), np.int64(8)))
2025-04-10 23:41:03,215 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:03,467 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:41:03,467 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:03,467 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(14)), (np.int64(9), np.int64(6)))
2025-04-10 23:41:03,468 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:03,733 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:41:03,734 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:03,734 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(11)), (np.int64(10), np.int64(13)))
2025-04-10 23:41:03,734 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:03,876 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:03,876 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:03,876 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(5)), (np.int64(7), np.int64(15)))
2025-04-10 23:41:03,876 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:04,176 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:04,176 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:04,176 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(14)), (np.int64(5), np.int64(8)))
2025-04-10 23:41:04,177 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:04,332 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:04,332 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:04,332 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(7)), (np.int64(8), np.int64(8)))
2025-04-10 23:41:04,333 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:04,717 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:04,717 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:04,717 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(11)), (np.int64(4), np.int64(10)))
2025-04-10 23:41:04,718 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:04,972 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:04,973 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:04,973 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(3), np.int64(12)), (np.int64(6), np.int64(10)))
2025-04-10 23:41:04,974 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:05,332 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:41:05,332 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:05,332 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(16)), (np.int64(5), np.int64(8)))
2025-04-10 23:41:05,333 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:05,628 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:41:05,630 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:05,630 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(14)), (np.int64(6), np.int64(9)))
2025-04-10 23:41:05,631 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:05,919 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:41:05,919 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:05,919 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(8)), (np.int64(10), np.int64(12)))
2025-04-10 23:41:05,920 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:06,330 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:06,331 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:06,331 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(11)), (np.int64(6), np.int64(8)))
2025-04-10 23:41:06,331 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:06,618 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:41:06,618 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:06,618 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(10)), (np.int64(5), np.int64(12)))
2025-04-10 23:41:06,619 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:06,978 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:41:06,978 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:06,978 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(15)), (np.int64(13), np.int64(6)))
2025-04-10 23:41:06,979 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:07,357 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:41:07,357 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:07,357 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(11)), (np.int64(13), np.int64(6)))
2025-04-10 23:41:07,358 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:07,621 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:41:07,621 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:07,621 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(3), np.int64(14)), (np.int64(10), np.int64(12)))
2025-04-10 23:41:07,622 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:07,902 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:41:07,902 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:07,902 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(3), np.int64(12)), (np.int64(11), np.int64(10)))
2025-04-10 23:41:07,903 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:08,199 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:08,200 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:08,200 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(7)), (np.int64(6), np.int64(15)))
2025-04-10 23:41:08,200 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:08,346 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:08,347 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:08,347 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(8)), (np.int64(10), np.int64(9)))
2025-04-10 23:41:08,347 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:08,660 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:41:08,660 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:08,660 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(12)), (np.int64(5), np.int64(16)))
2025-04-10 23:41:08,661 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:08,792 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:08,793 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:08,793 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(13)), (np.int64(7), np.int64(8)))
2025-04-10 23:41:08,794 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:08,995 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:41:08,995 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:08,995 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(7)), (np.int64(10), np.int64(13)))
2025-04-10 23:41:08,996 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:09,316 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:41:09,317 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:09,317 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(4), np.int64(11)), (np.int64(10), np.int64(14)))
2025-04-10 23:41:09,317 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:09,719 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:41:09,720 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:09,720 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(2), np.int64(13)), (np.int64(6), np.int64(7)))
2025-04-10 23:41:09,720 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:09,970 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:41:09,970 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:09,971 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(12)), (np.int64(3), np.int64(12)))
2025-04-10 23:41:09,971 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:10,136 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:41:10,136 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:10,136 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(3), np.int64(14)), (np.int64(5), np.int64(11)))
2025-04-10 23:41:10,136 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:10,620 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:41:10,620 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:10,620 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(8)), (np.int64(6), np.int64(9)))
2025-04-10 23:41:10,621 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:10,744 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:10,744 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:10,744 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(14)), (np.int64(7), np.int64(15)))
2025-04-10 23:41:10,745 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:11,163 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:41:11,163 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:11,163 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(4)), (np.int64(7), np.int64(8)))
2025-04-10 23:41:11,164 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:11,505 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:11,505 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:11,505 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(10)), (np.int64(10), np.int64(5)))
2025-04-10 23:41:11,505 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:11,620 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:41:11,621 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:11,621 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(9)), (np.int64(8), np.int64(14)))
2025-04-10 23:41:11,621 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:11,992 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:11,993 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:11,993 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(16)), (np.int64(6), np.int64(15)))
2025-04-10 23:41:11,993 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:12,366 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:41:12,366 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:12,366 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(11)), (np.int64(8), np.int64(16)))
2025-04-10 23:41:12,367 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:12,633 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:41:12,633 [INFO] MCTS: Search finished. Best move selected with 50 visits.
2025-04-10 23:41:12,633 [INFO] MCTS (defense candidates) selected move: J11,H12
2025-04-10 23:41:12,799 [INFO] Starting pre-MCTS candidate collection.
2025-04-10 23:41:12,806 [INFO] Phase win: Collected 0 candidate(s).
2025-04-10 23:41:12,811 [DEBUG] check_window_intermediate_custom: L=6, window [0 0 1 1 1 1], coords [(3, 11), (4, 11), (5, 11), (6, 11), (7, 11), (8, 11)] candidate.
2025-04-10 23:41:12,814 [INFO] Phase defense: Collected 1 candidate(s).
2025-04-10 23:41:12,814 [INFO] Phase 2 (defense): 1 candidate(s) found.
2025-04-10 23:41:12,814 [INFO] MCTS: Starting search for 50 iterations.
2025-04-10 23:41:12,814 [DEBUG] Tree_policy iteration 1: Expanding move ((3, 11), (4, 11))
2025-04-10 23:41:12,815 [DEBUG] MCTS iteration 0: reached a node with 0 visits.
2025-04-10 23:41:12,815 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:12,815 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:12,815 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:12,815 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:41:12,815 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:12,815 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:12,815 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:12,815 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:41:12,815 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:12,815 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:12,815 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:12,815 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:41:12,815 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:12,815 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:12,815 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:12,815 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:41:12,815 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:12,815 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:12,815 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:12,815 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:41:12,815 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:12,815 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:12,815 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:12,815 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:41:12,815 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:12,816 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:12,816 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:12,816 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:41:12,816 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:12,816 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:12,816 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:12,816 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:41:12,816 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:12,816 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:12,816 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:12,816 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:41:12,816 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:12,816 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:12,816 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:12,816 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:41:12,816 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:12,816 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:12,816 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:12,816 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:41:12,816 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:12,816 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:12,816 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:12,816 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:41:12,816 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:12,816 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:12,816 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:12,816 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:41:12,816 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:12,817 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:12,817 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:12,817 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:41:12,817 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:12,817 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:12,817 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:12,817 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:41:12,817 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:12,817 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:12,817 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:12,817 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:41:12,817 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:12,817 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:12,817 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:12,817 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:41:12,817 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:12,817 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:12,817 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:12,817 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:41:12,817 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:12,817 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:12,817 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:12,817 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:41:12,817 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:12,817 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:12,817 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:12,817 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:41:12,817 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:12,818 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:12,818 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:12,818 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:41:12,818 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:12,818 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:12,818 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:12,818 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:41:12,818 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:12,818 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:12,818 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:12,818 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:41:12,818 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:12,818 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:12,818 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:12,818 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:41:12,818 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:12,818 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:12,818 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:12,818 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:41:12,818 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:12,818 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:12,818 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:12,818 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:41:12,818 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:12,818 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:12,818 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:12,818 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:41:12,818 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:12,818 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:12,819 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:12,819 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:41:12,819 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:12,819 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:12,819 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:12,819 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:41:12,819 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:12,819 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:12,819 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:12,819 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:41:12,819 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:12,819 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:12,819 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:12,819 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:41:12,819 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:12,819 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:12,819 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:12,819 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:41:12,819 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:12,819 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:12,819 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:12,819 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:41:12,819 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:12,819 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:12,819 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:12,819 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:41:12,819 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:12,820 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:12,820 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:12,820 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:41:12,820 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:12,820 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:12,820 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:12,820 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:41:12,820 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:12,820 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:12,820 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:12,820 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:41:12,820 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:12,820 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:12,820 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:12,820 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:41:12,820 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:12,820 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:12,820 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:12,820 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:41:12,820 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:12,820 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:12,820 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:12,820 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:41:12,820 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:12,820 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:12,821 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:12,821 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:41:12,821 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:12,821 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:12,821 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:12,821 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:41:12,821 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:12,821 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:12,821 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:12,821 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:41:12,821 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:12,821 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:12,821 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:12,821 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:41:12,821 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:12,821 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:12,821 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:12,821 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:41:12,821 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:12,821 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:12,821 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:12,821 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:41:12,821 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:12,821 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:12,821 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:12,821 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:41:12,821 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:12,821 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:12,822 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:12,822 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:41:12,822 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:12,822 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:12,822 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:12,822 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:41:12,822 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:12,822 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:12,822 [INFO] MCTS: Search finished. Best move selected with 50 visits.
2025-04-10 23:41:12,822 [INFO] MCTS (defense candidates) selected move: M4,M5
2025-04-10 23:41:12,988 [INFO] Starting pre-MCTS candidate collection.
2025-04-10 23:41:12,995 [INFO] Phase win: Collected 0 candidate(s).
2025-04-10 23:41:12,996 [DEBUG] check_window_margin_custom: L=6, window [0 1 1 1 1 0], coords [(6, 8), (6, 9), (6, 10), (6, 11), (6, 12), (6, 13)] candidate.
2025-04-10 23:41:13,000 [DEBUG] check_window_intermediate_custom: L=6, window [0 0 1 1 1 1], coords [(6, 7), (6, 8), (6, 9), (6, 10), (6, 11), (6, 12)] candidate.
2025-04-10 23:41:13,000 [DEBUG] Intermediate condition already covered for window [0 1 1 1 1 0].
2025-04-10 23:41:13,000 [DEBUG] check_window_intermediate_custom: L=6, window [1 1 1 1 0 0], coords [(6, 9), (6, 10), (6, 11), (6, 12), (6, 13), (6, 14)] candidate.
2025-04-10 23:41:13,003 [INFO] Phase defense: Collected 3 candidate(s).
2025-04-10 23:41:13,003 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-10 23:41:13,003 [INFO] MCTS: Starting search for 50 iterations.
2025-04-10 23:41:13,003 [DEBUG] Tree_policy iteration 1: Expanding move ((6, 13), (6, 14))
2025-04-10 23:41:13,004 [DEBUG] MCTS iteration 0: reached a node with 0 visits.
2025-04-10 23:41:13,004 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:13,209 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:13,209 [DEBUG] Tree_policy iteration 1: Expanding move ((6, 8), (6, 13))
2025-04-10 23:41:13,210 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:13,569 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:41:13,569 [DEBUG] Tree_policy iteration 1: Expanding move ((6, 7), (6, 8))
2025-04-10 23:41:13,570 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:13,902 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:41:13,902 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:13,902 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(2), np.int64(13)), (np.int64(7), np.int64(15)))
2025-04-10 23:41:13,903 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:14,245 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:14,245 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:14,245 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(4)), (np.int64(6), np.int64(8)))
2025-04-10 23:41:14,246 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:14,257 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:14,257 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:14,257 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(6)), (np.int64(6), np.int64(5)))
2025-04-10 23:41:14,258 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:14,563 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:41:14,563 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:14,563 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(4)), (np.int64(12), np.int64(8)))
2025-04-10 23:41:14,564 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:14,804 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:14,805 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:14,805 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(14)), (np.int64(7), np.int64(8)))
2025-04-10 23:41:14,805 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:15,149 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:15,149 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:15,149 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(10)), (np.int64(10), np.int64(9)))
2025-04-10 23:41:15,150 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:15,392 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:15,392 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:15,392 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(7)), (np.int64(13), np.int64(6)))
2025-04-10 23:41:15,393 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:15,659 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:15,659 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:15,660 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(2), np.int64(13)), (np.int64(8), np.int64(7)))
2025-04-10 23:41:15,660 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:15,784 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:15,784 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:15,784 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(6)), (np.int64(12), np.int64(5)))
2025-04-10 23:41:15,786 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:16,103 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:41:16,103 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:16,103 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(4), np.int64(15)), (np.int64(9), np.int64(15)))
2025-04-10 23:41:16,104 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:16,437 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:16,437 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:16,437 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(6)), (np.int64(10), np.int64(10)))
2025-04-10 23:41:16,438 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:16,579 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:16,579 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:16,579 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(6)), (np.int64(5), np.int64(15)))
2025-04-10 23:41:16,580 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:16,841 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:41:16,841 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:16,841 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(6)), (np.int64(9), np.int64(6)))
2025-04-10 23:41:16,842 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:16,904 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:16,904 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:16,904 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(14)), (np.int64(8), np.int64(15)))
2025-04-10 23:41:16,905 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:17,321 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:41:17,322 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:17,322 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(14)), (np.int64(7), np.int64(8)))
2025-04-10 23:41:17,322 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:17,583 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:17,583 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:17,583 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(5)), (np.int64(12), np.int64(5)))
2025-04-10 23:41:17,584 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:17,757 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:17,757 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:17,757 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(12), np.int64(9)), (np.int64(12), np.int64(11)))
2025-04-10 23:41:17,758 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:17,801 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:41:17,801 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:17,801 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(5)), (np.int64(9), np.int64(15)))
2025-04-10 23:41:17,802 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:18,109 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:18,109 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:18,109 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(10)), (np.int64(9), np.int64(15)))
2025-04-10 23:41:18,110 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:18,360 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:18,360 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:18,360 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(6), np.int64(15)), (np.int64(8), np.int64(6)))
2025-04-10 23:41:18,361 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:18,714 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:41:18,714 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:18,714 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(10)), (np.int64(5), np.int64(15)))
2025-04-10 23:41:18,715 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:18,841 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:41:18,841 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:18,841 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(2), np.int64(13)), (np.int64(2), np.int64(12)))
2025-04-10 23:41:18,842 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:19,047 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:41:19,048 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:19,048 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(8)), (np.int64(5), np.int64(16)))
2025-04-10 23:41:19,048 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:19,430 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:41:19,430 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:19,430 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(10), np.int64(12)), (np.int64(5), np.int64(8)))
2025-04-10 23:41:19,431 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:19,820 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:19,821 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:19,821 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(1), np.int64(10)), (np.int64(11), np.int64(11)))
2025-04-10 23:41:19,821 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:20,118 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:41:20,118 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:20,118 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(8), np.int64(15)), (np.int64(4), np.int64(10)))
2025-04-10 23:41:20,119 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:20,356 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:20,356 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:20,356 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(10)), (np.int64(10), np.int64(13)))
2025-04-10 23:41:20,357 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:20,603 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:41:20,603 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:20,603 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(10)), (np.int64(8), np.int64(16)))
2025-04-10 23:41:20,604 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:20,754 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:41:20,754 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:20,754 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(9), np.int64(14)), (np.int64(13), np.int64(7)))
2025-04-10 23:41:20,755 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:20,833 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:20,834 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:20,834 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(13)), (np.int64(2), np.int64(12)))
2025-04-10 23:41:20,835 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:20,936 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:41:20,937 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:20,937 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(5), np.int64(10)), (np.int64(7), np.int64(13)))
2025-04-10 23:41:20,938 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:21,135 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:41:21,135 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:21,135 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(13)), (np.int64(4), np.int64(7)))
2025-04-10 23:41:21,136 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:21,594 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:21,594 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:21,594 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(3), np.int64(13)), (np.int64(3), np.int64(12)))
2025-04-10 23:41:21,595 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:21,919 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:41:21,919 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:21,919 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(4), np.int64(13)), (np.int64(9), np.int64(13)))
2025-04-10 23:41:21,920 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:21,930 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:21,930 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:21,930 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(12)), (np.int64(4), np.int64(15)))
2025-04-10 23:41:21,931 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:22,126 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:41:22,126 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:22,127 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(8)), (np.int64(7), np.int64(14)))
2025-04-10 23:41:22,127 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:22,414 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:41:22,414 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:22,415 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(1), np.int64(12)), (np.int64(2), np.int64(12)))
2025-04-10 23:41:22,415 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:22,721 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:22,721 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:22,722 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(13), np.int64(7)), (np.int64(9), np.int64(6)))
2025-04-10 23:41:22,722 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:22,885 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:41:22,885 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:22,885 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(2), np.int64(13)), (np.int64(11), np.int64(13)))
2025-04-10 23:41:22,886 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:23,141 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:23,141 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:23,141 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(4)), (np.int64(11), np.int64(12)))
2025-04-10 23:41:23,142 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:23,433 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:23,433 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:23,433 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(6)), (np.int64(5), np.int64(15)))
2025-04-10 23:41:23,434 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:23,570 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:41:23,570 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:23,570 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(7), np.int64(14)), (np.int64(4), np.int64(12)))
2025-04-10 23:41:23,571 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:23,879 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:41:23,879 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:23,879 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(6)), (np.int64(9), np.int64(13)))
2025-04-10 23:41:23,880 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:24,230 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:41:24,230 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:24,231 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(11), np.int64(6)), (np.int64(8), np.int64(14)))
2025-04-10 23:41:24,231 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:24,522 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:41:24,522 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:24,522 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(4), np.int64(9)), (np.int64(8), np.int64(14)))
2025-04-10 23:41:24,523 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:24,682 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:41:24,682 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:24,682 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(2), np.int64(11)), (np.int64(6), np.int64(6)))
2025-04-10 23:41:24,683 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:24,945 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:24,946 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:41:24,946 [DEBUG] Tree_policy iteration 2: Expanding move ((np.int64(3), np.int64(12)), (np.int64(10), np.int64(11)))
2025-04-10 23:41:24,946 [INFO] Default policy: Starting random playout.
2025-04-10 23:41:25,201 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:41:25,201 [INFO] MCTS: Search finished. Best move selected with 21 visits.
2025-04-10 23:41:25,201 [INFO] MCTS (defense candidates) selected move: O7,P7
2025-04-10 23:45:00,457 [INFO] Starting pre-MCTS candidate collection.
2025-04-10 23:45:00,465 [INFO] Phase win: Collected 0 candidate(s).
2025-04-10 23:45:00,473 [INFO] Phase defense: Collected 0 candidate(s).
2025-04-10 23:45:00,473 [INFO] No candidate found in Phase 1 or Phase 2; using full legal moves for MCTS.
2025-04-10 23:45:00,473 [INFO] MCTS: Starting search for 50 iterations.
2025-04-10 23:45:00,473 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(8)), (np.int64(11), np.int64(9)))
2025-04-10 23:45:00,474 [DEBUG] MCTS iteration 0: reached a node with 0 visits.
2025-04-10 23:45:00,474 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:00,609 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:00,609 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(11)), (np.int64(9), np.int64(6)))
2025-04-10 23:45:00,609 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:00,931 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:00,932 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(10)), (np.int64(6), np.int64(9)))
2025-04-10 23:45:00,932 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:01,220 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:45:01,220 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(7)), (np.int64(6), np.int64(9)))
2025-04-10 23:45:01,220 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:01,396 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:01,396 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(6)), (np.int64(9), np.int64(12)))
2025-04-10 23:45:01,396 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:01,779 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:01,779 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(8)), (np.int64(6), np.int64(9)))
2025-04-10 23:45:01,779 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:02,189 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:02,189 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(10)), (np.int64(10), np.int64(10)))
2025-04-10 23:45:02,189 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:02,240 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:02,241 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(11)), (np.int64(7), np.int64(8)))
2025-04-10 23:45:02,241 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:02,637 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:45:02,638 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(11)), (np.int64(7), np.int64(9)))
2025-04-10 23:45:02,638 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:02,820 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:02,820 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(11)), (np.int64(9), np.int64(6)))
2025-04-10 23:45:02,820 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:03,046 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:03,046 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(9)), (np.int64(7), np.int64(8)))
2025-04-10 23:45:03,047 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:03,369 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:45:03,369 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(9)), (np.int64(10), np.int64(8)))
2025-04-10 23:45:03,369 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:03,452 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:45:03,452 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(10)), (np.int64(9), np.int64(12)))
2025-04-10 23:45:03,453 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:03,648 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:45:03,649 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(11)), (np.int64(10), np.int64(10)))
2025-04-10 23:45:03,649 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:03,853 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:45:03,853 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(10)), (np.int64(8), np.int64(7)))
2025-04-10 23:45:03,853 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:04,263 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:04,263 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(9)), (np.int64(8), np.int64(10)))
2025-04-10 23:45:04,264 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:04,379 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:04,380 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(8)), (np.int64(7), np.int64(8)))
2025-04-10 23:45:04,380 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:04,698 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:45:04,699 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(7)), (np.int64(8), np.int64(11)))
2025-04-10 23:45:04,699 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:04,893 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:45:04,893 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(9)), (np.int64(7), np.int64(9)))
2025-04-10 23:45:04,894 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:05,105 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:05,105 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(11)), (np.int64(10), np.int64(7)))
2025-04-10 23:45:05,105 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:05,141 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:05,141 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(8)), (np.int64(10), np.int64(10)))
2025-04-10 23:45:05,141 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:05,327 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:05,327 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(7)), (np.int64(10), np.int64(11)))
2025-04-10 23:45:05,327 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:05,633 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:05,633 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(8)), (np.int64(7), np.int64(9)))
2025-04-10 23:45:05,634 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:05,900 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:05,900 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(7)), (np.int64(8), np.int64(7)))
2025-04-10 23:45:05,900 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:06,335 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:45:06,335 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(11)), (np.int64(10), np.int64(7)))
2025-04-10 23:45:06,335 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:06,479 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:06,479 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(8)), (np.int64(10), np.int64(8)))
2025-04-10 23:45:06,479 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:06,786 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:06,786 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(10)), (np.int64(10), np.int64(8)))
2025-04-10 23:45:06,786 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:07,189 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:07,190 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(10)), (np.int64(8), np.int64(7)))
2025-04-10 23:45:07,190 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:07,337 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:07,337 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(9)), (np.int64(10), np.int64(7)))
2025-04-10 23:45:07,337 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:07,725 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:45:07,725 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(9)), (np.int64(9), np.int64(7)))
2025-04-10 23:45:07,725 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:07,972 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:07,972 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(7)), (np.int64(6), np.int64(9)))
2025-04-10 23:45:07,972 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:08,083 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:45:08,083 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(9)), (np.int64(10), np.int64(7)))
2025-04-10 23:45:08,084 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:08,332 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:08,332 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(10)), (np.int64(8), np.int64(10)))
2025-04-10 23:45:08,333 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:08,487 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:45:08,487 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(7)), (np.int64(9), np.int64(10)))
2025-04-10 23:45:08,487 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:08,781 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:08,782 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(9)), (np.int64(9), np.int64(7)))
2025-04-10 23:45:08,782 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:08,847 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:45:08,847 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(9)), (np.int64(10), np.int64(10)))
2025-04-10 23:45:08,847 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:08,876 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:45:08,876 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(9)), (np.int64(8), np.int64(11)))
2025-04-10 23:45:08,877 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:09,233 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:09,233 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(10)), (np.int64(6), np.int64(9)))
2025-04-10 23:45:09,233 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:09,546 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:09,546 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(10)), (np.int64(8), np.int64(11)))
2025-04-10 23:45:09,546 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:09,846 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:45:09,846 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(10)), (np.int64(8), np.int64(10)))
2025-04-10 23:45:09,847 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:10,193 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:45:10,193 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(11)), (np.int64(8), np.int64(11)))
2025-04-10 23:45:10,194 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:10,357 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:10,358 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(9)), (np.int64(9), np.int64(8)))
2025-04-10 23:45:10,358 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:10,754 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:45:10,754 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(9)), (np.int64(10), np.int64(9)))
2025-04-10 23:45:10,754 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:11,060 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:11,060 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(9)), (np.int64(10), np.int64(10)))
2025-04-10 23:45:11,060 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:11,466 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:45:11,466 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(10)), (np.int64(7), np.int64(8)))
2025-04-10 23:45:11,467 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:11,827 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:11,827 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(9)), (np.int64(11), np.int64(10)))
2025-04-10 23:45:11,827 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:12,011 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:45:12,011 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(9)), (np.int64(11), np.int64(8)))
2025-04-10 23:45:12,011 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:12,251 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:12,252 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(9)), (np.int64(9), np.int64(10)))
2025-04-10 23:45:12,252 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:12,558 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:45:12,558 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(11)), (np.int64(8), np.int64(8)))
2025-04-10 23:45:12,559 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:12,822 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:12,822 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(9)), (np.int64(7), np.int64(8)))
2025-04-10 23:45:12,823 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:13,164 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:45:13,164 [INFO] MCTS: Search finished. Best move selected with 1 visits.
2025-04-10 23:45:13,164 [INFO] MCTS selected move: J11,K12
2025-04-10 23:45:13,322 [INFO] Starting pre-MCTS candidate collection.
2025-04-10 23:45:13,329 [INFO] Phase win: Collected 0 candidate(s).
2025-04-10 23:45:13,337 [INFO] Phase defense: Collected 0 candidate(s).
2025-04-10 23:45:13,337 [INFO] No candidate found in Phase 1 or Phase 2; using full legal moves for MCTS.
2025-04-10 23:45:13,338 [INFO] MCTS: Starting search for 50 iterations.
2025-04-10 23:45:13,338 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(15)), (np.int64(9), np.int64(12)))
2025-04-10 23:45:13,338 [DEBUG] MCTS iteration 0: reached a node with 0 visits.
2025-04-10 23:45:13,338 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:13,719 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:13,720 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(9)), (np.int64(6), np.int64(7)))
2025-04-10 23:45:13,720 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:14,052 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:14,052 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(6)), (np.int64(10), np.int64(7)))
2025-04-10 23:45:14,052 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:14,309 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:14,309 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(14)), (np.int64(10), np.int64(11)))
2025-04-10 23:45:14,310 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:14,522 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:45:14,522 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(14)), (np.int64(2), np.int64(13)))
2025-04-10 23:45:14,523 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:14,846 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:14,846 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(15)), (np.int64(2), np.int64(17)))
2025-04-10 23:45:14,846 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:15,078 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:45:15,079 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(7)), (np.int64(3), np.int64(12)))
2025-04-10 23:45:15,079 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:15,387 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:15,387 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(14)), (np.int64(10), np.int64(7)))
2025-04-10 23:45:15,388 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:15,710 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:15,710 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(6)), (np.int64(3), np.int64(17)))
2025-04-10 23:45:15,710 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:16,008 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:45:16,009 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(9)), (np.int64(3), np.int64(18)))
2025-04-10 23:45:16,009 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:16,397 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:16,398 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(10)), (np.int64(13), np.int64(10)))
2025-04-10 23:45:16,398 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:16,763 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:16,763 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(7)), (np.int64(11), np.int64(6)))
2025-04-10 23:45:16,764 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:17,037 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:17,038 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(11)), (np.int64(11), np.int64(7)))
2025-04-10 23:45:17,038 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:17,346 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:45:17,346 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(5)), (np.int64(9), np.int64(12)))
2025-04-10 23:45:17,346 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:17,697 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:45:17,697 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(3), np.int64(13)), (np.int64(7), np.int64(9)))
2025-04-10 23:45:17,698 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:17,757 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:17,757 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(2), np.int64(14)), (np.int64(8), np.int64(8)))
2025-04-10 23:45:17,757 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:18,070 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:45:18,071 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(10)), (np.int64(11), np.int64(12)))
2025-04-10 23:45:18,071 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:18,400 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:18,400 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(5)), (np.int64(4), np.int64(16)))
2025-04-10 23:45:18,400 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:18,620 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:18,620 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(15)), (np.int64(3), np.int64(17)))
2025-04-10 23:45:18,620 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:19,015 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:45:19,016 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(7)), (np.int64(7), np.int64(8)))
2025-04-10 23:45:19,016 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:19,313 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:45:19,314 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(7)), (np.int64(13), np.int64(8)))
2025-04-10 23:45:19,314 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:19,690 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:19,690 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(10)), (np.int64(6), np.int64(7)))
2025-04-10 23:45:19,691 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:20,044 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:20,044 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(5)), (np.int64(2), np.int64(17)))
2025-04-10 23:45:20,045 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:20,157 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:45:20,157 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(6)), (np.int64(13), np.int64(9)))
2025-04-10 23:45:20,158 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:20,274 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:20,275 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(11)), (np.int64(3), np.int64(17)))
2025-04-10 23:45:20,275 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:20,540 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:45:20,540 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(10)), (np.int64(4), np.int64(14)))
2025-04-10 23:45:20,540 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:20,892 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:20,892 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(16)), (np.int64(9), np.int64(6)))
2025-04-10 23:45:20,892 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:21,228 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:21,229 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(7)), (np.int64(0), np.int64(15)))
2025-04-10 23:45:21,229 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:21,442 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:45:21,443 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(3), np.int64(13)), (np.int64(5), np.int64(15)))
2025-04-10 23:45:21,443 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:21,758 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:45:21,759 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(16)), (np.int64(10), np.int64(9)))
2025-04-10 23:45:21,759 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:21,957 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:21,957 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(8)), (np.int64(7), np.int64(9)))
2025-04-10 23:45:21,958 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:22,241 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:45:22,241 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(10)), (np.int64(12), np.int64(8)))
2025-04-10 23:45:22,242 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:22,389 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:22,389 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(9)), (np.int64(7), np.int64(8)))
2025-04-10 23:45:22,389 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:22,708 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:22,708 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(15)), (np.int64(3), np.int64(14)))
2025-04-10 23:45:22,708 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:22,961 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:45:22,961 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(16)), (np.int64(11), np.int64(10)))
2025-04-10 23:45:22,962 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:23,192 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:45:23,193 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(3), np.int64(12)), (np.int64(8), np.int64(5)))
2025-04-10 23:45:23,193 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:23,666 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:23,666 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(9)), (np.int64(4), np.int64(14)))
2025-04-10 23:45:23,666 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:24,119 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:45:24,120 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(8)), (np.int64(3), np.int64(18)))
2025-04-10 23:45:24,120 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:24,418 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:45:24,418 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(9)), (np.int64(8), np.int64(7)))
2025-04-10 23:45:24,419 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:24,628 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:24,628 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(14)), (np.int64(5), np.int64(14)))
2025-04-10 23:45:24,628 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:25,037 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:45:25,037 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(11)), (np.int64(11), np.int64(12)))
2025-04-10 23:45:25,038 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:25,368 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:45:25,368 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(16)), (np.int64(7), np.int64(8)))
2025-04-10 23:45:25,369 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:25,708 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:25,708 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(14)), (np.int64(1), np.int64(14)))
2025-04-10 23:45:25,709 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:26,009 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:26,010 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(8)), (np.int64(5), np.int64(14)))
2025-04-10 23:45:26,010 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:26,357 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:26,358 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(10)), (np.int64(4), np.int64(13)))
2025-04-10 23:45:26,358 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:26,640 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:26,640 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(2), np.int64(17)), (np.int64(1), np.int64(14)))
2025-04-10 23:45:26,640 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:26,936 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:45:26,937 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(9)), (np.int64(3), np.int64(14)))
2025-04-10 23:45:26,937 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:27,246 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:45:27,247 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(8)), (np.int64(1), np.int64(15)))
2025-04-10 23:45:27,247 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:27,431 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:27,431 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(17)), (np.int64(7), np.int64(8)))
2025-04-10 23:45:27,431 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:27,732 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:45:27,732 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(9)), (np.int64(13), np.int64(9)))
2025-04-10 23:45:27,732 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:28,067 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:45:28,067 [INFO] MCTS: Search finished. Best move selected with 1 visits.
2025-04-10 23:45:28,067 [INFO] MCTS selected move: Q6,N10
2025-04-10 23:45:28,228 [INFO] Starting pre-MCTS candidate collection.
2025-04-10 23:45:28,235 [INFO] Phase win: Collected 0 candidate(s).
2025-04-10 23:45:28,243 [INFO] Phase defense: Collected 0 candidate(s).
2025-04-10 23:45:28,243 [INFO] No candidate found in Phase 1 or Phase 2; using full legal moves for MCTS.
2025-04-10 23:45:28,244 [INFO] MCTS: Starting search for 50 iterations.
2025-04-10 23:45:28,244 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(6)), (np.int64(5), np.int64(13)))
2025-04-10 23:45:28,244 [DEBUG] MCTS iteration 0: reached a node with 0 visits.
2025-04-10 23:45:28,244 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:28,640 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:28,640 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(13)), (np.int64(11), np.int64(10)))
2025-04-10 23:45:28,641 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:28,822 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:45:28,823 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(1), np.int64(14)), (np.int64(2), np.int64(16)))
2025-04-10 23:45:28,823 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:29,084 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:29,085 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(15)), (np.int64(9), np.int64(6)))
2025-04-10 23:45:29,085 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:29,406 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:29,406 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(9)), (np.int64(7), np.int64(13)))
2025-04-10 23:45:29,406 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:29,535 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:45:29,535 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(14)), (np.int64(10), np.int64(15)))
2025-04-10 23:45:29,536 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:29,889 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:45:29,889 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(7)), (np.int64(5), np.int64(17)))
2025-04-10 23:45:29,890 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:30,083 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:45:30,083 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(13)), (np.int64(8), np.int64(12)))
2025-04-10 23:45:30,084 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:30,343 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:45:30,343 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(3), np.int64(13)), (np.int64(10), np.int64(15)))
2025-04-10 23:45:30,344 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:30,638 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:30,638 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(2), np.int64(17)), (np.int64(6), np.int64(8)))
2025-04-10 23:45:30,639 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:30,988 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:45:30,989 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(16)), (np.int64(10), np.int64(12)))
2025-04-10 23:45:30,989 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:31,149 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:31,150 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(9)), (np.int64(8), np.int64(5)))
2025-04-10 23:45:31,150 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:31,476 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:45:31,476 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(3), np.int64(13)), (np.int64(6), np.int64(8)))
2025-04-10 23:45:31,477 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:31,736 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:45:31,736 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(17)), (np.int64(6), np.int64(16)))
2025-04-10 23:45:31,737 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:32,082 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:45:32,082 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(7)), (np.int64(11), np.int64(8)))
2025-04-10 23:45:32,083 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:32,259 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:45:32,259 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(11)), (np.int64(11), np.int64(12)))
2025-04-10 23:45:32,260 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:32,556 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:45:32,556 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(15)), (np.int64(0), np.int64(15)))
2025-04-10 23:45:32,557 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:32,800 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:32,801 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(16)), (np.int64(13), np.int64(12)))
2025-04-10 23:45:32,801 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:32,985 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:32,985 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(3), np.int64(14)), (np.int64(2), np.int64(17)))
2025-04-10 23:45:32,986 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:33,375 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:33,375 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(5)), (np.int64(7), np.int64(6)))
2025-04-10 23:45:33,376 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:33,864 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:33,864 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(16)), (np.int64(9), np.int64(15)))
2025-04-10 23:45:33,865 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:34,148 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:34,149 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(18)), (np.int64(11), np.int64(15)))
2025-04-10 23:45:34,149 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:34,455 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:45:34,455 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(7), np.int64(14)), (np.int64(6), np.int64(17)))
2025-04-10 23:45:34,456 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:34,594 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:45:34,594 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(15)), (np.int64(11), np.int64(12)))
2025-04-10 23:45:34,595 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:34,873 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:34,874 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(14), np.int64(16)), (np.int64(10), np.int64(12)))
2025-04-10 23:45:34,875 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:35,197 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:45:35,197 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(13), np.int64(8)), (np.int64(2), np.int64(14)))
2025-04-10 23:45:35,198 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:35,387 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:35,388 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(17)), (np.int64(9), np.int64(11)))
2025-04-10 23:45:35,388 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:35,633 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:45:35,633 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(8)), (np.int64(11), np.int64(12)))
2025-04-10 23:45:35,634 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:35,840 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:35,840 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(11)), (np.int64(9), np.int64(15)))
2025-04-10 23:45:35,841 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:36,183 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:36,183 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(9)), (np.int64(4), np.int64(16)))
2025-04-10 23:45:36,184 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:36,474 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:36,474 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(4), np.int64(13)), (np.int64(8), np.int64(5)))
2025-04-10 23:45:36,475 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:36,947 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:45:36,947 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(2), np.int64(17)), (np.int64(4), np.int64(17)))
2025-04-10 23:45:36,948 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:37,415 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:37,415 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(3), np.int64(17)), (np.int64(6), np.int64(7)))
2025-04-10 23:45:37,416 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:37,661 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:45:37,661 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(14)), (np.int64(12), np.int64(7)))
2025-04-10 23:45:37,662 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:37,952 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:45:37,952 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(16)), (np.int64(9), np.int64(13)))
2025-04-10 23:45:37,953 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:38,252 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:45:38,252 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(9)), (np.int64(4), np.int64(15)))
2025-04-10 23:45:38,253 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:38,401 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:38,402 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(3), np.int64(13)), (np.int64(9), np.int64(15)))
2025-04-10 23:45:38,402 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:38,676 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:45:38,676 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(3), np.int64(17)), (np.int64(12), np.int64(12)))
2025-04-10 23:45:38,676 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:39,067 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:45:39,067 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(5), np.int64(12)), (np.int64(8), np.int64(7)))
2025-04-10 23:45:39,068 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:39,326 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:39,327 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(10)), (np.int64(5), np.int64(17)))
2025-04-10 23:45:39,327 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:39,457 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:45:39,457 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(14)), (np.int64(4), np.int64(16)))
2025-04-10 23:45:39,458 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:39,553 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:45:39,553 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(9)), (np.int64(8), np.int64(14)))
2025-04-10 23:45:39,554 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:39,664 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:45:39,664 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(9)), (np.int64(8), np.int64(7)))
2025-04-10 23:45:39,665 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:40,007 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:45:40,008 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(15)), (np.int64(4), np.int64(14)))
2025-04-10 23:45:40,008 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:40,378 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:40,425 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(9)), (np.int64(7), np.int64(11)))
2025-04-10 23:45:40,425 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:40,703 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:40,703 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(8)), (np.int64(10), np.int64(11)))
2025-04-10 23:45:40,704 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:40,994 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:40,994 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(11), np.int64(16)), (np.int64(8), np.int64(13)))
2025-04-10 23:45:40,995 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:41,231 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:41,231 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(6), np.int64(17)), (np.int64(10), np.int64(11)))
2025-04-10 23:45:41,232 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:41,459 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:45:41,459 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(15), np.int64(14)), (np.int64(13), np.int64(14)))
2025-04-10 23:45:41,460 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:41,887 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:45:41,887 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(13)), (np.int64(7), np.int64(6)))
2025-04-10 23:45:41,888 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:42,241 [INFO] Default policy: Playout finished with winner: 2
2025-04-10 23:45:42,241 [INFO] MCTS: Search finished. Best move selected with 1 visits.
2025-04-10 23:45:42,241 [INFO] MCTS selected move: G11,O6
2025-04-10 23:45:42,445 [INFO] Starting pre-MCTS candidate collection.
2025-04-10 23:45:42,453 [INFO] Phase win: Collected 0 candidate(s).
2025-04-10 23:45:42,453 [DEBUG] check_window_margin_custom: L=6, window [0 1 1 1 1 0], coords [(9, 5), (9, 6), (9, 7), (9, 8), (9, 9), (9, 10)] candidate.
2025-04-10 23:45:42,457 [DEBUG] check_window_intermediate_custom: L=6, window [0 0 1 1 1 1], coords [(9, 4), (9, 5), (9, 6), (9, 7), (9, 8), (9, 9)] candidate.
2025-04-10 23:45:42,457 [DEBUG] Intermediate condition already covered for window [0 1 1 1 1 0].
2025-04-10 23:45:42,457 [DEBUG] check_window_intermediate_custom: L=6, window [1 1 1 1 0 0], coords [(9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (9, 11)] candidate.
2025-04-10 23:45:42,460 [INFO] Phase defense: Collected 3 candidate(s).
2025-04-10 23:45:42,460 [INFO] Phase 2 (defense): 3 candidate(s) found.
2025-04-10 23:45:42,460 [INFO] MCTS: Starting search for 50 iterations.
2025-04-10 23:45:42,461 [DEBUG] Tree_policy iteration 1: Expanding move ((9, 10), (9, 11))
2025-04-10 23:45:42,462 [DEBUG] MCTS iteration 0: reached a node with 0 visits.
2025-04-10 23:45:42,462 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:42,462 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:42,462 [DEBUG] Tree_policy iteration 1: Expanding move ((9, 5), (9, 10))
2025-04-10 23:45:42,463 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:42,463 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:42,463 [DEBUG] Tree_policy iteration 1: Expanding move ((9, 4), (9, 5))
2025-04-10 23:45:42,464 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:42,464 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:42,464 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:45:42,464 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:45:42,464 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:42,464 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:42,464 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:45:42,464 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:45:42,464 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:42,464 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:42,464 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:45:42,464 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:45:42,464 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:42,464 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:42,464 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:45:42,465 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:45:42,465 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:42,465 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:42,465 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:45:42,465 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:45:42,465 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:42,465 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:42,465 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:45:42,465 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:45:42,465 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:42,465 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:42,465 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:45:42,465 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:45:42,465 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:42,465 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:42,465 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:45:42,465 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:45:42,465 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:42,465 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:42,465 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:45:42,465 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:45:42,465 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:42,466 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:42,466 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:45:42,466 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:45:42,466 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:42,466 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:42,466 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:45:42,466 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:45:42,466 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:42,466 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:42,466 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:45:42,466 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:45:42,466 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:42,466 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:42,466 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:45:42,466 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:45:42,466 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:42,466 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:42,466 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:45:42,466 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:45:42,466 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:42,466 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:42,466 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:45:42,467 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:45:42,467 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:42,467 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:42,467 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:45:42,467 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:45:42,467 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:42,467 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:42,467 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:45:42,467 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:45:42,467 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:42,467 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:42,467 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:45:42,467 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:45:42,467 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:42,467 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:42,467 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:45:42,467 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:45:42,467 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:42,467 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:42,467 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:45:42,467 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:45:42,467 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:42,468 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:42,468 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:45:42,468 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:45:42,468 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:42,468 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:42,468 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:45:42,468 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:45:42,468 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:42,468 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:42,468 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:45:42,468 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:45:42,468 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:42,468 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:42,468 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:45:42,468 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:45:42,468 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:42,468 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:42,468 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:45:42,468 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:45:42,468 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:42,468 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:42,468 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:45:42,469 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:45:42,469 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:42,469 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:42,469 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:45:42,469 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:45:42,469 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:42,469 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:42,469 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:45:42,469 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:45:42,469 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:42,469 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:42,469 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:45:42,469 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:45:42,469 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:42,469 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:42,469 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:45:42,469 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:45:42,469 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:42,469 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:42,469 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:45:42,469 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:45:42,469 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:42,470 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:42,470 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:45:42,470 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:45:42,470 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:42,470 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:42,470 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:45:42,470 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:45:42,470 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:42,470 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:42,470 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:45:42,470 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:45:42,470 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:42,470 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:42,470 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:45:42,470 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:45:42,470 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:42,470 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:42,470 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:45:42,470 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:45:42,470 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:42,470 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:42,471 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:45:42,471 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:45:42,471 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:42,471 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:42,471 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:45:42,471 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:45:42,471 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:42,471 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:42,471 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:45:42,471 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:45:42,471 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:42,471 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:42,471 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:45:42,471 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:45:42,471 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:42,471 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:42,471 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:45:42,471 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:45:42,471 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:42,471 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:42,471 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:45:42,471 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:45:42,472 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:42,472 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:42,472 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:45:42,472 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:45:42,472 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:42,472 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:42,472 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:45:42,472 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:45:42,472 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:42,472 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:42,472 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:45:42,472 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:45:42,472 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:42,472 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:42,472 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:45:42,472 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:45:42,472 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:42,472 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:42,472 [DEBUG] Best_child: Chosen child with highest UCB1 weight.
2025-04-10 23:45:42,472 [DEBUG] Tree_policy: Terminal node reached.
2025-04-10 23:45:42,472 [INFO] Default policy: Starting random playout.
2025-04-10 23:45:42,472 [INFO] Default policy: Playout finished with winner: 1
2025-04-10 23:45:42,472 [INFO] MCTS: Search finished. Best move selected with 17 visits.
2025-04-10 23:45:42,473 [INFO] MCTS (defense candidates) selected move: L10,M10
2025-04-11 00:22:28,721 [INFO] Game terminated.
