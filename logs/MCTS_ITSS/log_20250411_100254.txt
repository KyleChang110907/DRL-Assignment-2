2025-04-11 10:03:06,174 [INFO] Starting pre-MCTS candidate collection.
2025-04-11 10:03:06,174 [INFO] candidates: []
2025-04-11 10:03:06,174 [INFO] phase: win
2025-04-11 10:03:06,176 [INFO] candidates after extend: []
2025-04-11 10:03:06,196 [INFO] Final candidates: []
2025-04-11 10:03:06,196 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 10:03:06,196 [INFO] candidates: []
2025-04-11 10:03:06,196 [INFO] phase: defense
2025-04-11 10:03:06,197 [INFO] candidates after extend: []
2025-04-11 10:03:06,217 [INFO] Final candidates: []
2025-04-11 10:03:06,217 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 10:03:06,217 [INFO] No candidate found in Phase 1 or 2; using full legal moves for MCTS.
2025-04-11 10:03:06,219 [INFO] MCTS: Starting search for 5 iterations.
2025-04-11 10:03:06,220 [INFO] candidates: []
2025-04-11 10:03:06,220 [INFO] phase: win
2025-04-11 10:03:06,221 [INFO] candidates after extend: []
2025-04-11 10:03:06,238 [INFO] Final candidates: []
2025-04-11 10:03:06,238 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 10:03:06,238 [INFO] candidates: []
2025-04-11 10:03:06,238 [INFO] phase: defense
2025-04-11 10:03:06,239 [INFO] candidates after extend: []
2025-04-11 10:03:06,246 [INFO] Final candidates: []
2025-04-11 10:03:06,246 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 10:03:06,247 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(7)), (np.int64(11), np.int64(9)))
2025-04-11 10:03:06,247 [DEBUG] MCTS iteration 0: reached a node with 0 visits.
2025-04-11 10:03:06,247 [INFO] Default policy: Starting random playout.
2025-04-11 10:03:06,481 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 10:03:06,481 [INFO] candidates: []
2025-04-11 10:03:06,481 [INFO] phase: win
2025-04-11 10:03:06,482 [INFO] candidates after extend: []
2025-04-11 10:03:06,489 [INFO] Final candidates: []
2025-04-11 10:03:06,489 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 10:03:06,489 [INFO] candidates: []
2025-04-11 10:03:06,489 [INFO] phase: defense
2025-04-11 10:03:06,490 [INFO] candidates after extend: []
2025-04-11 10:03:06,497 [INFO] Final candidates: []
2025-04-11 10:03:06,497 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 10:03:06,497 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(11)), (np.int64(8), np.int64(8)))
2025-04-11 10:03:06,498 [INFO] Default policy: Starting random playout.
2025-04-11 10:03:06,582 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 10:03:06,582 [INFO] candidates: []
2025-04-11 10:03:06,582 [INFO] phase: win
2025-04-11 10:03:06,583 [INFO] candidates after extend: []
2025-04-11 10:03:06,590 [INFO] Final candidates: []
2025-04-11 10:03:06,590 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 10:03:06,590 [INFO] candidates: []
2025-04-11 10:03:06,590 [INFO] phase: defense
2025-04-11 10:03:06,591 [INFO] candidates after extend: []
2025-04-11 10:03:06,598 [INFO] Final candidates: []
2025-04-11 10:03:06,598 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 10:03:06,598 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(9)), (np.int64(8), np.int64(10)))
2025-04-11 10:03:06,599 [INFO] Default policy: Starting random playout.
2025-04-11 10:03:06,828 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 10:03:06,828 [INFO] candidates: []
2025-04-11 10:03:06,828 [INFO] phase: win
2025-04-11 10:03:06,829 [INFO] candidates after extend: []
2025-04-11 10:03:06,837 [INFO] Final candidates: []
2025-04-11 10:03:06,837 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 10:03:06,837 [INFO] candidates: []
2025-04-11 10:03:06,837 [INFO] phase: defense
2025-04-11 10:03:06,837 [INFO] candidates after extend: []
2025-04-11 10:03:06,845 [INFO] Final candidates: []
2025-04-11 10:03:06,845 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 10:03:06,845 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(10), np.int64(7)), (np.int64(11), np.int64(9)))
2025-04-11 10:03:06,846 [INFO] Default policy: Starting random playout.
2025-04-11 10:03:07,161 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 10:03:07,161 [INFO] candidates: []
2025-04-11 10:03:07,161 [INFO] phase: win
2025-04-11 10:03:07,162 [INFO] candidates after extend: []
2025-04-11 10:03:07,170 [INFO] Final candidates: []
2025-04-11 10:03:07,170 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 10:03:07,170 [INFO] candidates: []
2025-04-11 10:03:07,170 [INFO] phase: defense
2025-04-11 10:03:07,171 [INFO] candidates after extend: []
2025-04-11 10:03:07,178 [INFO] Final candidates: []
2025-04-11 10:03:07,178 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 10:03:07,178 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(10)), (np.int64(7), np.int64(9)))
2025-04-11 10:03:07,178 [INFO] Default policy: Starting random playout.
2025-04-11 10:03:07,339 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 10:03:07,339 [INFO] MCTS: Search finished. Best move selected with 1 visits.
2025-04-11 10:03:07,339 [INFO] MCTS selected move: H9,K12
2025-04-11 10:03:07,520 [INFO] Starting pre-MCTS candidate collection.
2025-04-11 10:03:07,520 [INFO] candidates: []
2025-04-11 10:03:07,520 [INFO] phase: win
2025-04-11 10:03:07,521 [INFO] candidates after extend: []
2025-04-11 10:03:07,528 [INFO] Final candidates: []
2025-04-11 10:03:07,528 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 10:03:07,528 [INFO] candidates: []
2025-04-11 10:03:07,528 [INFO] phase: defense
2025-04-11 10:03:07,529 [INFO] candidates after extend: []
2025-04-11 10:03:07,536 [INFO] Final candidates: []
2025-04-11 10:03:07,536 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 10:03:07,536 [INFO] No candidate found in Phase 1 or 2; using full legal moves for MCTS.
2025-04-11 10:03:07,536 [INFO] MCTS: Starting search for 5 iterations.
2025-04-11 10:03:07,536 [INFO] candidates: []
2025-04-11 10:03:07,536 [INFO] phase: win
2025-04-11 10:03:07,537 [INFO] candidates after extend: []
2025-04-11 10:03:07,544 [INFO] Final candidates: []
2025-04-11 10:03:07,544 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 10:03:07,544 [INFO] candidates: []
2025-04-11 10:03:07,544 [INFO] phase: defense
2025-04-11 10:03:07,545 [INFO] candidates after extend: []
2025-04-11 10:03:07,552 [INFO] Final candidates: []
2025-04-11 10:03:07,552 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 10:03:07,552 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(8), np.int64(6)), (np.int64(10), np.int64(7)))
2025-04-11 10:03:07,552 [DEBUG] MCTS iteration 0: reached a node with 0 visits.
2025-04-11 10:03:07,552 [INFO] Default policy: Starting random playout.
2025-04-11 10:03:07,666 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 10:03:07,667 [INFO] candidates: []
2025-04-11 10:03:07,667 [INFO] phase: win
2025-04-11 10:03:07,667 [INFO] candidates after extend: []
2025-04-11 10:03:07,676 [INFO] Final candidates: []
2025-04-11 10:03:07,676 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 10:03:07,676 [INFO] candidates: []
2025-04-11 10:03:07,676 [INFO] phase: defense
2025-04-11 10:03:07,677 [INFO] candidates after extend: []
2025-04-11 10:03:07,684 [INFO] Final candidates: []
2025-04-11 10:03:07,684 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 10:03:07,684 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(11)), (np.int64(8), np.int64(4)))
2025-04-11 10:03:07,684 [INFO] Default policy: Starting random playout.
2025-04-11 10:03:07,876 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 10:03:07,877 [INFO] candidates: []
2025-04-11 10:03:07,877 [INFO] phase: win
2025-04-11 10:03:07,877 [INFO] candidates after extend: []
2025-04-11 10:03:07,885 [INFO] Final candidates: []
2025-04-11 10:03:07,885 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 10:03:07,885 [INFO] candidates: []
2025-04-11 10:03:07,885 [INFO] phase: defense
2025-04-11 10:03:07,885 [INFO] candidates after extend: []
2025-04-11 10:03:07,892 [INFO] Final candidates: []
2025-04-11 10:03:07,892 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 10:03:07,892 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(9), np.int64(8)), (np.int64(10), np.int64(9)))
2025-04-11 10:03:07,893 [INFO] Default policy: Starting random playout.
2025-04-11 10:03:08,180 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 10:03:08,180 [INFO] candidates: []
2025-04-11 10:03:08,180 [INFO] phase: win
2025-04-11 10:03:08,180 [INFO] candidates after extend: []
2025-04-11 10:03:08,188 [INFO] Final candidates: []
2025-04-11 10:03:08,188 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 10:03:08,188 [INFO] candidates: []
2025-04-11 10:03:08,188 [INFO] phase: defense
2025-04-11 10:03:08,189 [INFO] candidates after extend: []
2025-04-11 10:03:08,196 [INFO] Final candidates: []
2025-04-11 10:03:08,196 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 10:03:08,196 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(7)), (np.int64(11), np.int64(8)))
2025-04-11 10:03:08,197 [INFO] Default policy: Starting random playout.
2025-04-11 10:03:08,535 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 10:03:08,535 [INFO] candidates: []
2025-04-11 10:03:08,535 [INFO] phase: win
2025-04-11 10:03:08,535 [INFO] candidates after extend: []
2025-04-11 10:03:08,543 [INFO] Final candidates: []
2025-04-11 10:03:08,543 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 10:03:08,543 [INFO] candidates: []
2025-04-11 10:03:08,543 [INFO] phase: defense
2025-04-11 10:03:08,543 [INFO] candidates after extend: []
2025-04-11 10:03:08,551 [INFO] Final candidates: []
2025-04-11 10:03:08,551 [INFO] Phase defense: Collected 0unique candidate(s):[]
2025-04-11 10:03:08,551 [DEBUG] Tree_policy iteration 1: Expanding move ((np.int64(12), np.int64(11)), (np.int64(6), np.int64(9)))
2025-04-11 10:03:08,551 [INFO] Default policy: Starting random playout.
2025-04-11 10:03:08,912 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 10:03:08,912 [INFO] MCTS: Search finished. Best move selected with 1 visits.
2025-04-11 10:03:08,912 [INFO] MCTS selected move: G9,H11
2025-04-11 10:03:09,090 [INFO] Starting pre-MCTS candidate collection.
2025-04-11 10:03:09,090 [INFO] candidates: []
2025-04-11 10:03:09,090 [INFO] phase: win
2025-04-11 10:03:09,090 [INFO] candidates after extend: []
2025-04-11 10:03:09,097 [INFO] Final candidates: []
2025-04-11 10:03:09,097 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 10:03:09,097 [INFO] candidates: []
2025-04-11 10:03:09,097 [INFO] phase: defense
2025-04-11 10:03:09,098 [INFO] candidates after extend: []
2025-04-11 10:03:09,100 [DEBUG] check_window_margin_custom: For L=7, window [0 1 1 1 1 1 0] with coords [(4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10)] triggers candidate.
2025-04-11 10:03:09,103 [DEBUG] board coords: [(3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8)]
2025-04-11 10:03:09,103 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 10:03:09,103 [DEBUG] check_window_intermediate_custom: empty_cells=[(3, 3), (4, 4)]
2025-04-11 10:03:09,103 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 1 1 1 1] with coords [(3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8)] triggers candidate.
2025-04-11 10:03:09,104 [DEBUG] board coords: [(6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)]
2025-04-11 10:03:09,104 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 10:03:09,104 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 10), (11, 11)]
2025-04-11 10:03:09,104 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 1 1 0 0] with coords [(6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)] triggers candidate.
2025-04-11 10:03:09,104 [DEBUG] board coords: [(3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9)]
2025-04-11 10:03:09,104 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 10:03:09,104 [DEBUG] check_window_intermediate_custom: empty_cells=[(3, 3), (4, 4)]
2025-04-11 10:03:09,104 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 1 1 1 1 1] with coords [(3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9)] triggers candidate.
2025-04-11 10:03:09,104 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 10:03:09,104 [DEBUG] board coords: [(5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)]
2025-04-11 10:03:09,104 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 10:03:09,104 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 10), (11, 11)]
2025-04-11 10:03:09,104 [DEBUG] check_window_intermediate_custom: For L=7, window [1 1 1 1 1 0 0] with coords [(5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)] triggers candidate.
2025-04-11 10:03:09,106 [INFO] Final candidates: [(4, 4), (10, 10), (3, 3), (4, 4), (10, 10), (11, 11), (3, 3), (4, 4), (10, 10), (11, 11)]
2025-04-11 10:03:09,106 [INFO] Phase defense: Collected 16unique candidate(s):[((11, 11), (3, 3)), ((4, 4), (4, 4)), ((4, 4), (10, 10)), ((11, 11), (4, 4)), ((11, 11), (10, 10)), ((4, 4), (3, 3)), ((3, 3), (4, 4)), ((10, 10), (3, 3)), ((3, 3), (10, 10)), ((3, 3), (11, 11)), ((10, 10), (4, 4)), ((4, 4), (11, 11)), ((10, 10), (10, 10)), ((10, 10), (11, 11)), ((3, 3), (3, 3)), ((11, 11), (11, 11))]
2025-04-11 10:03:09,106 [INFO] Phase 2 (defense): 16 candidate(s) found.
2025-04-11 10:03:09,106 [INFO] MCTS: Starting search for 5 iterations.
2025-04-11 10:03:09,106 [INFO] candidates: []
2025-04-11 10:03:09,106 [INFO] phase: win
2025-04-11 10:03:09,106 [INFO] candidates after extend: []
2025-04-11 10:03:09,113 [INFO] Final candidates: []
2025-04-11 10:03:09,113 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 10:03:09,113 [INFO] candidates: []
2025-04-11 10:03:09,113 [INFO] phase: defense
2025-04-11 10:03:09,114 [INFO] candidates after extend: []
2025-04-11 10:03:09,116 [DEBUG] check_window_margin_custom: For L=7, window [0 1 1 1 1 1 0] with coords [(4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10)] triggers candidate.
2025-04-11 10:03:09,119 [DEBUG] board coords: [(3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8)]
2025-04-11 10:03:09,119 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 10:03:09,119 [DEBUG] check_window_intermediate_custom: empty_cells=[(3, 3), (4, 4)]
2025-04-11 10:03:09,119 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 1 1 1 1] with coords [(3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8)] triggers candidate.
2025-04-11 10:03:09,119 [DEBUG] board coords: [(6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)]
2025-04-11 10:03:09,119 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 10:03:09,119 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 10), (11, 11)]
2025-04-11 10:03:09,119 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 1 1 0 0] with coords [(6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)] triggers candidate.
2025-04-11 10:03:09,120 [DEBUG] board coords: [(3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9)]
2025-04-11 10:03:09,120 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 10:03:09,120 [DEBUG] check_window_intermediate_custom: empty_cells=[(3, 3), (4, 4)]
2025-04-11 10:03:09,120 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 1 1 1 1 1] with coords [(3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9)] triggers candidate.
2025-04-11 10:03:09,120 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 10:03:09,120 [DEBUG] board coords: [(5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)]
2025-04-11 10:03:09,120 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 10:03:09,120 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 10), (11, 11)]
2025-04-11 10:03:09,120 [DEBUG] check_window_intermediate_custom: For L=7, window [1 1 1 1 1 0 0] with coords [(5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)] triggers candidate.
2025-04-11 10:03:09,121 [INFO] Final candidates: [(4, 4), (10, 10), (3, 3), (4, 4), (10, 10), (11, 11), (3, 3), (4, 4), (10, 10), (11, 11)]
2025-04-11 10:03:09,121 [INFO] Phase defense: Collected 16unique candidate(s):[((11, 11), (3, 3)), ((4, 4), (4, 4)), ((4, 4), (10, 10)), ((11, 11), (4, 4)), ((11, 11), (10, 10)), ((4, 4), (3, 3)), ((3, 3), (4, 4)), ((10, 10), (3, 3)), ((3, 3), (10, 10)), ((3, 3), (11, 11)), ((10, 10), (4, 4)), ((4, 4), (11, 11)), ((10, 10), (10, 10)), ((10, 10), (11, 11)), ((3, 3), (3, 3)), ((11, 11), (11, 11))]
2025-04-11 10:03:09,121 [DEBUG] Tree_policy iteration 1: Expanding move ((3, 3), (11, 11))
2025-04-11 10:03:09,122 [DEBUG] MCTS iteration 0: reached a node with 0 visits.
2025-04-11 10:03:09,122 [INFO] Default policy: Starting random playout.
2025-04-11 10:03:09,437 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 10:03:09,437 [INFO] candidates: []
2025-04-11 10:03:09,437 [INFO] phase: win
2025-04-11 10:03:09,438 [INFO] candidates after extend: []
2025-04-11 10:03:09,445 [INFO] Final candidates: []
2025-04-11 10:03:09,445 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 10:03:09,445 [INFO] candidates: []
2025-04-11 10:03:09,445 [INFO] phase: defense
2025-04-11 10:03:09,446 [INFO] candidates after extend: []
2025-04-11 10:03:09,448 [DEBUG] check_window_margin_custom: For L=7, window [0 1 1 1 1 1 0] with coords [(4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10)] triggers candidate.
2025-04-11 10:03:09,451 [DEBUG] board coords: [(3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8)]
2025-04-11 10:03:09,451 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 10:03:09,451 [DEBUG] check_window_intermediate_custom: empty_cells=[(3, 3), (4, 4)]
2025-04-11 10:03:09,451 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 1 1 1 1] with coords [(3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8)] triggers candidate.
2025-04-11 10:03:09,451 [DEBUG] board coords: [(6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)]
2025-04-11 10:03:09,451 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 10:03:09,451 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 10), (11, 11)]
2025-04-11 10:03:09,451 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 1 1 0 0] with coords [(6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)] triggers candidate.
2025-04-11 10:03:09,452 [DEBUG] board coords: [(3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9)]
2025-04-11 10:03:09,452 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 10:03:09,452 [DEBUG] check_window_intermediate_custom: empty_cells=[(3, 3), (4, 4)]
2025-04-11 10:03:09,452 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 1 1 1 1 1] with coords [(3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9)] triggers candidate.
2025-04-11 10:03:09,452 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 10:03:09,452 [DEBUG] board coords: [(5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)]
2025-04-11 10:03:09,452 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 10:03:09,452 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 10), (11, 11)]
2025-04-11 10:03:09,452 [DEBUG] check_window_intermediate_custom: For L=7, window [1 1 1 1 1 0 0] with coords [(5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)] triggers candidate.
2025-04-11 10:03:09,453 [INFO] Final candidates: [(4, 4), (10, 10), (3, 3), (4, 4), (10, 10), (11, 11), (3, 3), (4, 4), (10, 10), (11, 11)]
2025-04-11 10:03:09,453 [INFO] Phase defense: Collected 16unique candidate(s):[((11, 11), (3, 3)), ((4, 4), (4, 4)), ((4, 4), (10, 10)), ((11, 11), (4, 4)), ((11, 11), (10, 10)), ((4, 4), (3, 3)), ((3, 3), (4, 4)), ((10, 10), (3, 3)), ((3, 3), (10, 10)), ((3, 3), (11, 11)), ((10, 10), (4, 4)), ((4, 4), (11, 11)), ((10, 10), (10, 10)), ((10, 10), (11, 11)), ((3, 3), (3, 3)), ((11, 11), (11, 11))]
2025-04-11 10:03:09,453 [DEBUG] Tree_policy iteration 1: Expanding move ((11, 11), (11, 11))
2025-04-11 10:03:09,454 [INFO] Default policy: Starting random playout.
2025-04-11 10:03:09,846 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 10:03:09,846 [INFO] candidates: []
2025-04-11 10:03:09,846 [INFO] phase: win
2025-04-11 10:03:09,846 [INFO] candidates after extend: []
2025-04-11 10:03:09,855 [INFO] Final candidates: []
2025-04-11 10:03:09,856 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 10:03:09,856 [INFO] candidates: []
2025-04-11 10:03:09,856 [INFO] phase: defense
2025-04-11 10:03:09,857 [INFO] candidates after extend: []
2025-04-11 10:03:09,861 [DEBUG] check_window_margin_custom: For L=7, window [0 1 1 1 1 1 0] with coords [(4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10)] triggers candidate.
2025-04-11 10:03:09,867 [DEBUG] board coords: [(3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8)]
2025-04-11 10:03:09,867 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 10:03:09,867 [DEBUG] check_window_intermediate_custom: empty_cells=[(3, 3), (4, 4)]
2025-04-11 10:03:09,868 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 1 1 1 1] with coords [(3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8)] triggers candidate.
2025-04-11 10:03:09,868 [DEBUG] board coords: [(6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)]
2025-04-11 10:03:09,868 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 10:03:09,868 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 10), (11, 11)]
2025-04-11 10:03:09,868 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 1 1 0 0] with coords [(6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)] triggers candidate.
2025-04-11 10:03:09,869 [DEBUG] board coords: [(3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9)]
2025-04-11 10:03:09,869 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 10:03:09,869 [DEBUG] check_window_intermediate_custom: empty_cells=[(3, 3), (4, 4)]
2025-04-11 10:03:09,869 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 1 1 1 1 1] with coords [(3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9)] triggers candidate.
2025-04-11 10:03:09,869 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 10:03:09,869 [DEBUG] board coords: [(5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)]
2025-04-11 10:03:09,869 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 10:03:09,869 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 10), (11, 11)]
2025-04-11 10:03:09,869 [DEBUG] check_window_intermediate_custom: For L=7, window [1 1 1 1 1 0 0] with coords [(5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)] triggers candidate.
2025-04-11 10:03:09,870 [INFO] Final candidates: [(4, 4), (10, 10), (3, 3), (4, 4), (10, 10), (11, 11), (3, 3), (4, 4), (10, 10), (11, 11)]
2025-04-11 10:03:09,870 [INFO] Phase defense: Collected 16unique candidate(s):[((11, 11), (3, 3)), ((4, 4), (4, 4)), ((4, 4), (10, 10)), ((11, 11), (4, 4)), ((11, 11), (10, 10)), ((4, 4), (3, 3)), ((3, 3), (4, 4)), ((10, 10), (3, 3)), ((3, 3), (10, 10)), ((3, 3), (11, 11)), ((10, 10), (4, 4)), ((4, 4), (11, 11)), ((10, 10), (10, 10)), ((10, 10), (11, 11)), ((3, 3), (3, 3)), ((11, 11), (11, 11))]
2025-04-11 10:03:09,870 [DEBUG] Tree_policy iteration 1: Expanding move ((4, 4), (4, 4))
2025-04-11 10:03:09,871 [INFO] Default policy: Starting random playout.
2025-04-11 10:03:10,117 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 10:03:10,118 [INFO] candidates: []
2025-04-11 10:03:10,118 [INFO] phase: win
2025-04-11 10:03:10,118 [INFO] candidates after extend: []
2025-04-11 10:03:10,125 [INFO] Final candidates: []
2025-04-11 10:03:10,125 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 10:03:10,125 [INFO] candidates: []
2025-04-11 10:03:10,125 [INFO] phase: defense
2025-04-11 10:03:10,126 [INFO] candidates after extend: []
2025-04-11 10:03:10,128 [DEBUG] check_window_margin_custom: For L=7, window [0 1 1 1 1 1 0] with coords [(4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10)] triggers candidate.
2025-04-11 10:03:10,132 [DEBUG] board coords: [(3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8)]
2025-04-11 10:03:10,132 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 10:03:10,132 [DEBUG] check_window_intermediate_custom: empty_cells=[(3, 3), (4, 4)]
2025-04-11 10:03:10,132 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 1 1 1 1] with coords [(3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8)] triggers candidate.
2025-04-11 10:03:10,132 [DEBUG] board coords: [(6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)]
2025-04-11 10:03:10,132 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 10:03:10,132 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 10), (11, 11)]
2025-04-11 10:03:10,132 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 1 1 0 0] with coords [(6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)] triggers candidate.
2025-04-11 10:03:10,132 [DEBUG] board coords: [(3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9)]
2025-04-11 10:03:10,132 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 10:03:10,132 [DEBUG] check_window_intermediate_custom: empty_cells=[(3, 3), (4, 4)]
2025-04-11 10:03:10,132 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 1 1 1 1 1] with coords [(3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9)] triggers candidate.
2025-04-11 10:03:10,132 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 10:03:10,132 [DEBUG] board coords: [(5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)]
2025-04-11 10:03:10,132 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 10:03:10,133 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 10), (11, 11)]
2025-04-11 10:03:10,133 [DEBUG] check_window_intermediate_custom: For L=7, window [1 1 1 1 1 0 0] with coords [(5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)] triggers candidate.
2025-04-11 10:03:10,134 [INFO] Final candidates: [(4, 4), (10, 10), (3, 3), (4, 4), (10, 10), (11, 11), (3, 3), (4, 4), (10, 10), (11, 11)]
2025-04-11 10:03:10,134 [INFO] Phase defense: Collected 16unique candidate(s):[((11, 11), (3, 3)), ((4, 4), (4, 4)), ((4, 4), (10, 10)), ((11, 11), (4, 4)), ((11, 11), (10, 10)), ((4, 4), (3, 3)), ((3, 3), (4, 4)), ((10, 10), (3, 3)), ((3, 3), (10, 10)), ((3, 3), (11, 11)), ((10, 10), (4, 4)), ((4, 4), (11, 11)), ((10, 10), (10, 10)), ((10, 10), (11, 11)), ((3, 3), (3, 3)), ((11, 11), (11, 11))]
2025-04-11 10:03:10,134 [DEBUG] Tree_policy iteration 1: Expanding move ((3, 3), (4, 4))
2025-04-11 10:03:10,134 [INFO] Default policy: Starting random playout.
2025-04-11 10:03:10,323 [INFO] Default policy: Playout finished with winner: 2
2025-04-11 10:03:10,323 [INFO] candidates: []
2025-04-11 10:03:10,323 [INFO] phase: win
2025-04-11 10:03:10,324 [INFO] candidates after extend: []
2025-04-11 10:03:10,331 [INFO] Final candidates: []
2025-04-11 10:03:10,331 [INFO] Phase win: Collected 0unique candidate(s):[]
2025-04-11 10:03:10,331 [INFO] candidates: []
2025-04-11 10:03:10,331 [INFO] phase: defense
2025-04-11 10:03:10,331 [INFO] candidates after extend: []
2025-04-11 10:03:10,333 [DEBUG] check_window_margin_custom: For L=7, window [0 1 1 1 1 1 0] with coords [(4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10)] triggers candidate.
2025-04-11 10:03:10,337 [DEBUG] board coords: [(3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8)]
2025-04-11 10:03:10,337 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 10:03:10,337 [DEBUG] check_window_intermediate_custom: empty_cells=[(3, 3), (4, 4)]
2025-04-11 10:03:10,337 [DEBUG] check_window_intermediate_custom: For L=6, window [0 0 1 1 1 1] with coords [(3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8)] triggers candidate.
2025-04-11 10:03:10,337 [DEBUG] board coords: [(6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)]
2025-04-11 10:03:10,337 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 10:03:10,337 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 10), (11, 11)]
2025-04-11 10:03:10,337 [DEBUG] check_window_intermediate_custom: For L=6, window [1 1 1 1 0 0] with coords [(6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)] triggers candidate.
2025-04-11 10:03:10,338 [DEBUG] board coords: [(3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9)]
2025-04-11 10:03:10,338 [DEBUG] board values[np.int64(0), np.int64(0), np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(1)]
2025-04-11 10:03:10,338 [DEBUG] check_window_intermediate_custom: empty_cells=[(3, 3), (4, 4)]
2025-04-11 10:03:10,338 [DEBUG] check_window_intermediate_custom: For L=7, window [0 0 1 1 1 1 1] with coords [(3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9)] triggers candidate.
2025-04-11 10:03:10,338 [DEBUG] The consecutive condition should be found in the former check_window_margin_custom.
2025-04-11 10:03:10,338 [DEBUG] board coords: [(5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)]
2025-04-11 10:03:10,338 [DEBUG] board values[np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(1), np.int64(0), np.int64(0)]
2025-04-11 10:03:10,338 [DEBUG] check_window_intermediate_custom: empty_cells=[(10, 10), (11, 11)]
2025-04-11 10:03:10,338 [DEBUG] check_window_intermediate_custom: For L=7, window [1 1 1 1 1 0 0] with coords [(5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)] triggers candidate.
2025-04-11 10:03:10,339 [INFO] Final candidates: [(4, 4), (10, 10), (3, 3), (4, 4), (10, 10), (11, 11), (3, 3), (4, 4), (10, 10), (11, 11)]
2025-04-11 10:03:10,339 [INFO] Phase defense: Collected 16unique candidate(s):[((11, 11), (3, 3)), ((4, 4), (4, 4)), ((4, 4), (10, 10)), ((11, 11), (4, 4)), ((11, 11), (10, 10)), ((4, 4), (3, 3)), ((3, 3), (4, 4)), ((10, 10), (3, 3)), ((3, 3), (10, 10)), ((3, 3), (11, 11)), ((10, 10), (4, 4)), ((4, 4), (11, 11)), ((10, 10), (10, 10)), ((10, 10), (11, 11)), ((3, 3), (3, 3)), ((11, 11), (11, 11))]
2025-04-11 10:03:10,339 [DEBUG] Tree_policy iteration 1: Expanding move ((3, 3), (10, 10))
2025-04-11 10:03:10,340 [INFO] Default policy: Starting random playout.
2025-04-11 10:03:10,383 [INFO] Default policy: Playout finished with winner: 1
2025-04-11 10:03:10,383 [INFO] MCTS: Search finished. Best move selected with 1 visits.
2025-04-11 10:03:10,383 [INFO] MCTS (defense candidates) selected move: D4,M12
2025-04-11 10:04:04,187 [INFO] Game terminated.
